(define (domain DOORS)
    (:predicates
    (FOO)
    (c)
    (g)
    (h)
    (j)
    (k)
    (l)
    (m)
    (q)
    (r)
    (t)
    (u)
    (v)
    (x)
    (y)
    (z)
    (bb)
    (cb)
    (gb)
    (hb)
    (jb)
    (kb)
    (lb)
    (mb)
    (qb)
    (rb)
    (tb)
    (ub)
    (vb)
    (xb)
    (yb)
    (zb)
    (bc)
    (cc)
    (gc)
    (hc)
    (jc)
    (kc)
    (lc)
    (mc)
    (qc)
    (rc)
    (tc)
    (uc)
    (vc)
    (xc)
    (yc)
    (zc)
    (bd)
    (cd)
    (gd)
    (hd)
    (jd)
    (kd)
    (ld)
    (md)
    (qd)
    (rd)
    (td)
    (ud)
    (vd)
    (xd)
    (yd)
    (zd)
    (be)
    (ce)
    (ge)
    (he)
    (je)
    (ke)
    (le)
    (me)
    (qe)
    (re)
    (te)
    (ue)
    (ve)
    (xe)
    (ye)
    (ze)
    (bf)
    (cf)
    (gf)
    (hf)
    (jf)
    (kf)
    (lf)
    (mf)
    (qf)
    (rf)
    (tf)
    (uf)
    (vf)
    (xf)
    (yf)
    (zf)
    (bg)
    (cg)
    (gg)
    (hg)
    (jg)
    (kg)
    (lg)
    (mg)
    (qg)
    (rg)
    (tg)
    (ug)
    (vg)
    (xg)
    (yg)
    (zg)
    (bh)
    (ch)
    (gh)
    (hh)
    (jh)
    (kh)
    (lh)
    (mh)
    (qh)
    (rh)
    (th)
    (uh)
    (vh)
    (xh)
    (yh)
    (zh)
    (bi)
    (ci)
    (gi)
    (hi)
    (ji)
    (ki)
    (li)
    (mi)
    (qi)
    (ri)
    (ti)
    (ui)
    (vi)
    (xi)
    (yi)
    (zi)
    (bj)
    (cj)
    (gj)
    (hj)
    (jj)
    (kj)
    (lj)
    (mj)
    (qj)
    (rj)
    (tj)
    (uj)
    (vj)
    (xj)
    (yj)
    (zj)
    (bk)
    (ck)
    (gk)
    (hk)
    (jk)
    (kk)
    (lk)
    (mk)
    (qk)
    (rk)
    (tk)
    (uk)
    (vk)
    (xk)
    (yk)
    (zk)
    (bl)
    (cl)
    (gl)
    (hl)
    (jl)
    (kl)
    (ll)
    (ml)
    (ql)
    (rl)
    (tl)
    (ul)
    (vl)
    (xl)
    (yl)
    (zl)
    (bm)
    (cm)
    (gm)
    (hm)
    (jm)
    (km)
    (lm)
    (mm)
    (qm)
    (rm)
    (tm)
    (um)
    (vm)
    (xm)
    (ym)
    (zm)
    (bn)
    (cn)
    (gn)
    (hn)
    (jn)
    (kn)
    (ln)
    (mn)
    (qn)
    (rn)
    (tn)
    (un)
    (vn)
    (xn)
    (yn)
    (zn)
    (bo)
    (co)
    (go)
    (ho)
    (jo)
    (ko)
    (lo)
    (mo)
    (qo)
    (ro)
    (to)
    (uo)
    (vo)
    (xo)
    (yo)
    (zo)
    (bp)
    (cp)
    (gp)
    (hp)
    (jp)
    (kp)
    (lp)
    (mp)
    (qp)
    (rp)
    (tp)
    (up)
    (vp)
    (xp)
    (yp)
    (zp)
    (bq)
    (cq)
    (gq)
    (hq)
    (jq)
    (kq)
    (lq)
    (mq)
    (qq)
    (rq)
    (tq)
    (uq)
    (vq)
    (xq)
    (yq)
    (zq)
    (bs)
    (cs)
    (gs)
    (hs)
    (js)
    (ks)
    (ls)
    (ms)
    (qs)
    (rs)
    (ts)
    (us)
    (vs)
    (xs)
    (ys)
    (zs)
    (br)
    (cr)
    (gr)
    (hr)
    (jr)
    (kr)
    (lr)
    (mr)
    (qr)
    (rr)
    (tr)
    (ur)
    (vr)
    (xr)
    (yr)
    (zr)
    (bt)
    (ct)
    (gt)
    (ht)
    (jt)
    (kt)
    (lt)
    (mt)
    (qt)
    (rt)
    (tt)
    (ut)
    (vt)
    (xt)
    (yt)
    (zt)
    (bu)
    (cu)
    (gu)
    (hu)
    (ju)
    (ku)
    (lu)
    (mu)
    (qu)
    (ru)
    (tu)
    (uu)
    (vu)
    (xu)
    (yu)
    (zu)
    (bv)
    (cv)
    (gv)
    (hv)
    (jv)
    (kv)
    (lv)
    (mv)
    (qv)
    (rv)
    (tv)
    (uv)
    (vv)
    (xv)
    (yv)
    (zv)
    (bw)
    (cw)
    (gw)
    (hw)
    (jw)
    (kw)
    (lw)
    (mw)
    (qw)
    (rw)
    (tw)
    (uw)
    (vw)
    (xw)
    (yw)
    (zw)
    (bx)
    (cx)
    (gx)
    (hx)
    (jx)
    (kx)
    (lx)
    (mx)
    (qx)
    (rx)
    (tx)
    (ux)
    (vx)
    (xx)
    (yx)
    (zx)
    (by)
    (cy)
    (gy)
    (hy)
    (jy)
    (ky)
    (ly)
    (my)
    (qy)
    (ry)
    (ty)
    (uy)
    (vy)
    (xy)
    (yy)
    (zy)
    (bz)
    (cz)
    (gz)
    (hz)
    (jz)
    (kz)
    (lz)
    (mz)
    (qz)
    (rz)
    (tz)
    (uz)
    (vz)
    (xz)
    (yz)
    (zz)
    (b1)
    (c1)
    (g1)
    (h1)
    (j1)
    (k1)
    (l1)
    (m1)
    (q1)
    (r1)
    (t1)
    (u1)
    (v1)
    (x1)
    (y1)
    (z1)
    (b2)
    (c2)
    (g2)
    (h2)
    (j2)
    (k2)
    (l2)
    (m2)
    (q2)
    (r2)
    (t2)
    (u2)
    (v2)
    (x2)
    (y2)
    (z2)
    (b3)
    (c3)
    (g3)
    (h3)
    (j3)
    (k3)
    (l3)
    (m3)
    (q3)
    (r3)
    (t3)
    (u3)
    (v3)
    (x3)
    (y3)
    (z3)
    (b4)
    (c4)
    (g4)
    (h4)
    (j4)
    (k4)
    (l4)
    (m4)
    (q4)
    (r4)
    (t4)
    (u4)
    (v4)
    (x4)
    (y4)
    (z4)
    (b5)
    (c5)
    (g5)
    (h5)
    (j5)
    (k5)
    (l5)
    (m5)
    (q5)
    (r5)
    (t5)
    (u5)
    (v5)
    (x5)
    (y5)
    (z5)
    (b6)
    (c6)
    (g6)
    (h6)
    (j6)
    (k6)
    (l6)
    (m6)
    (q6)
    (r6)
    (t6)
    (u6)
    (v6)
    (x6)
    (y6)
    (z6)
    (b7)
    (c7)
    (g7)
    (h7)
    (j7)
    (k7)
    (l7)
    (m7)
    (q7)
    (r7)
    (t7)
    (u7)
    (v7)
    (x7)
    (y7)
    (z7)
    (b8)
    (c8)
    (g8)
    (h8)
    (j8)
    (k8)
    (l8)
    (m8)
    (q8)
    (r8)
    (t8)
    (u8)
    (v8)
    (x8)
    (y8)
    
    (b9)
    (c9)
    (g9)
    (h9)
    (j9)
    (k9)
    (l9)
    (m9)
    (q9)
    (r9)
    (t9)
    (u9)
    (v9)
    (x9)
    (y9)
    (z9)
    (b0)
    (c0)
    (g0)
    (h0)
    (j0)
    (k0)
    (l0)
    (m0)
    (q0)
    (r0)
    (t0)
    (u0)
    (v0)
    (x0)
    (y0)
    (z0)
    (bab)
    (cab)
    (gab)
    (hab)
    (jab)
    (kab)
    (lab)
    (mab)
    (qab)
    (rab)
    (tab)
    (uab)
    (vab)
    (xab)
    (yab)
    (zab)
    (bbb)
    (cbb)
    (gbb)
    (hbb)
    (jbb)
    (kbb)
    (lbb)
    (mbb)
    (qbb)
    (rbb)
    (tbb)
    (ubb)
    (vbb)
    (xbb)
    (ybb)
    (zbb)
    (bcb)
    (ccb)
    (gcb)
    (hcb)
    (jcb)
    (kcb)
    (lcb)
    (mcb)
    (qcb)
    (rcb)
    (tcb)
    (ucb)
    (vcb)
    (xcb)
    (ycb)
    (zcb)
    (bdb)
    (cdb)
    (gdb)
    (hdb)
    (jdb)
    (kdb)
    (ldb)
    (mdb)
    (qdb)
    (rdb)
    (tdb)
    (udb)
    (vdb)
    (xdb)
    (ydb)
    (zdb)
    (beb)
    (ceb)
    (geb)
    (heb)
    (jeb)
    (keb)
    (leb)
    (meb)
    (qeb)
    (reb)
    (teb)
    (ueb)
    (veb)
    (xeb)
    (yeb)
    (zeb)
    (bfb)
    (cfb)
    (gfb)
    (hfb)
    (jfb)
    (kfb)
    (lfb)
    (mfb)
    (qfb)
    (rfb)
    (tfb)
    (ufb)
    (vfb)
    (xfb)
    (yfb)
    (zfb)
    (bgb)
    (cgb)
    (ggb)
    (hgb)
    (jgb)
    (kgb)
    (lgb)
    (mgb)
    (qgb)
    (rgb)
    (tgb)
    (ugb)
    (vgb)
    (xgb)
    (ygb)
    (zgb)
    (bhb)
    (chb)
    (ghb)
    (hhb)
    (jhb)
    (khb)
    (lhb)
    (mhb)
    (qhb)
    (rhb)
    (thb)
    (uhb)
    (vhb)
    (xhb)
    (yhb)
    (zhb)
    (bib)
    (cib)
    (gib)
    (hib)
    (jib)
    (kib)
    (lib)
    (mib)
    (qib)
    (rib)
    (tib)
    (uib)
    (vib)
    (xib)
    (yib)
    (zib)
    (bjb)
    (cjb)
    (gjb)
    (hjb)
    (jjb)
    (kjb)
    (ljb)
    (mjb)
    (qjb)
    (rjb)
    (tjb)
    (ujb)
    (vjb)
    (xjb)
    (yjb)
    (zjb)
    (bkb)
    (ckb)
    (gkb)
    (hkb)
    (jkb)
    (kkb)
    (lkb)
    (mkb)
    (qkb)
    (rkb)
    (tkb)
    (ukb)
    (vkb)
    (xkb)
    (ykb)
    (zkb)
    (blb)
    (clb)
    (glb)
    (hlb)
    (jlb)
    (klb)
    (llb)
    (mlb)
    (qlb)
    (rlb)
    (tlb)
    (ulb)
    (vlb)
    (xlb)
    (ylb)
    (zlb)
    (bmb)
    (cmb)
    (gmb)
    (hmb)
    (jmb)
    (kmb)
    (lmb)
    (mmb)
    (qmb)
    (rmb)
    (tmb)
    (umb)
    (vmb)
    (xmb)
    (ymb)
    (zmb)
    (bnb)
    (cnb)
    (gnb)
    (hnb)
    (jnb)
    (knb)
    (lnb)
    (mnb)
    (qnb)
    (rnb)
    (tnb)
    (unb)
    (vnb)
    (xnb)
    (ynb)
    (znb)
    (bob)
    (cob)
    (gob)
    (hob)
    (job)
    (kob)
    (lob)
    (mob)
    (qob)
    (rob)
    (tob)
    (uob)
    (vob)
    (xob)
    (yob)
    (zob)
    (bpb)
    (cpb)
    (gpb)
    (hpb)
    (jpb)
    (kpb)
    (lpb)
    (mpb)
    (qpb)
    (rpb)
    (tpb)
    (upb)
    (vpb)
    (xpb)
    (ypb)
    (zpb)
    (bqb)
    (cqb)
    (gqb)
    (hqb)
    (jqb)
    (kqb)
    (lqb)
    (mqb)
    (qqb)
    (rqb)
    (tqb)
    (uqb)
    (vqb)
    (xqb)
    (yqb)
    (zqb)
    (bsb)
    (csb)
    (gsb)
    (hsb)
    (jsb)
    (ksb)
    (lsb)
    (msb)
    (qsb)
    (rsb)
    (tsb)
    (usb)
    (vsb)
    (xsb)
    (ysb)
    (zsb)
    (brb)
    (crb)
    (grb)
    (hrb)
    (jrb)
    (krb)
    (lrb)
    (mrb)
    (qrb)
    (rrb)
    (trb)
    (urb)
    (vrb)
    (xrb)
    (yrb)
    (zrb)
    (btb)
    (ctb)
    (gtb)
    (htb)
    (jtb)
    (ktb)
    (ltb)
    (mtb)
    (qtb)
    (rtb)
    (ttb)
    (utb)
    (vtb)
    (xtb)
    (ytb)
    (ztb)
    (bub)
    (cub)
    (gub)
    (hub)
    (jub)
    (kub)
    (lub)
    (mub)
    (qub)
    (rub)
    (tub)
    (uub)
    (vub)
    (xub)
    (yub)
    (zub)
    (bvb)
    (cvb)
    (gvb)
    (hvb)
    (jvb)
    (kvb)
    (lvb)
    (mvb)
    (qvb)
    (rvb)
    (tvb)
    (uvb)
    (vvb)
    (xvb)
    (yvb)
    (zvb)
    (bwb)
    (cwb)
    (gwb)
    (hwb)
    (jwb)
    (kwb)
    (lwb)
    (mwb)
    (qwb)
    (rwb)
    (twb)
    (uwb)
    (vwb)
    (xwb)
    (ywb)
    (zwb)
    (bxb)
    (cxb)
    (gxb)
    (hxb)
    (jxb)
    (kxb)
    (lxb)
    (mxb)
    (qxb)
    (rxb)
    (txb)
    (uxb)
    (vxb)
    (xxb)
    (yxb)
    (zxb)
    (byb)
    (cyb)
    (gyb)
    (hyb)
    (jyb)
    (kyb)
    (lyb)
    (myb)
    (qyb)
    (ryb)
    (tyb)
    (uyb)
    (vyb)
    (xyb)
    (yyb)
    (zyb)
    (bzb)
    (czb)
    (gzb)
    (hzb)
    (jzb)
    (kzb)
    (lzb)
    (mzb)
    (qzb)
    (rzb)
    (tzb)
    (uzb)
    (vzb)
    (xzb)
    (yzb)
    (zzb)
    (b1b)
    (c1b)
    (g1b)
    (h1b)
    (j1b)
    (k1b)
    (l1b)
    (m1b)
    (q1b)
    (r1b)
    (t1b)
    (u1b)
    (v1b)
    (x1b)
    (y1b)
    (z1b)
    (b2b)
    (c2b)
    (g2b)
    (h2b)
    (j2b)
    (k2b)
    (l2b)
    (m2b)
    (q2b)
    (r2b)
    (t2b)
    (u2b)
    (v2b)
    (x2b)
    (y2b)
    (z2b)
    (b3b)
    (c3b)
    (g3b)
    (h3b)
    (j3b)
    (k3b)
    (l3b)
    (m3b)
    (q3b)
    (r3b)
    (t3b)
    (u3b)
    (v3b)
    (x3b)
    (y3b)
    (z3b)
    (b4b)
    (c4b)
    (g4b)
    (h4b)
    (j4b)
    (k4b)
    (l4b)
    (m4b)
    (q4b)
    (r4b)
    (t4b)
    (u4b)
    (v4b)
    (x4b)
    (y4b)
    (z4b)
    (b5b)
    (c5b)
    (g5b)
    (h5b)
    (j5b)
    (k5b)
    (l5b)
    (m5b)
    (q5b)
    (r5b)
    (t5b)
    (u5b)
    (v5b)
    (x5b)
    (y5b)
    (z5b)
    (b6b)
    (c6b)
    (g6b)
    (h6b)
    (j6b)
    (k6b)
    (l6b)
    (m6b)
    (q6b)
    (r6b)
    (t6b)
    (u6b)
    (v6b)
    (x6b)
    
    (z6b)
    (b7b)
    (c7b)
    (g7b)
    (h7b)
    (j7b)
    (k7b)
    (l7b)
    (m7b)
    (q7b)
    (r7b)
    (t7b)
    (u7b)
    (v7b)
    (x7b)
    (y7b)
    (z7b)
    (b8b)
    (c8b)
    (g8b)
    (h8b)
    (j8b)
    (k8b)
    (l8b)
    (m8b)
    (q8b)
    (r8b)
    (t8b)
    (u8b)
    (v8b)
    (x8b)
    (y8b)
    (z8b)
    (b9b)
    (c9b)
    (g9b)
    (h9b)
    (j9b)
    (k9b)
    (l9b)
    (m9b)
    (q9b)
    (r9b)
    (t9b)
    (u9b)
    (v9b)
    (x9b)
    (y9b)
    (z9b)
    (b0b)
    (c0b)
    (g0b)
    (h0b)
    (j0b)
    (k0b)
    (l0b)
    (m0b)
    (q0b)
    (r0b)
    (t0b)
    (u0b)
    (v0b)
    (x0b)
    (y0b)
    (z0b)
    (bac)
    (cac)
    (gac)
    (hac)
    (jac)
    (kac)
    (lac)
    (mac)
    (qac)
    (rac)
    (tac)
    (uac)
    (vac)
    (xac)
    (yac)
    (zac)
    (bbc)
    (cbc)
    (gbc)
    (hbc)
    (jbc)
    (kbc)
    (lbc)
    (mbc)
    (qbc)
    (rbc)
    (tbc)
    (ubc)
    (vbc)
    (xbc)
    (ybc)
    (zbc)
    (bcc)
    (ccc)
    (gcc)
    (hcc)
    (jcc)
    (kcc)
    (lcc)
    (mcc)
    (qcc)
    (rcc)
    (tcc)
    (ucc)
    (vcc)
    (xcc)
    (ycc)
    (zcc)
    (bdc)
    (cdc)
    (gdc)
    (hdc)
    (jdc)
    (kdc)
    (ldc)
    (mdc)
    (qdc)
    (rdc)
    (tdc)
    (udc)
    (vdc)
    (xdc)
    (ydc)
    (zdc)
    (bec)
    (cec)
    (gec)
    (hec)
    (jec)
    (kec)
    (lec)
    (mec)
    (qec)
    (rec)
    (tec)
    (uec)
    (vec)
    (xec)
    (yec)
    (zec)
    (bfc)
    (cfc)
    (gfc)
    (hfc)
    (jfc)
    (kfc)
    (lfc)
    (mfc)
    (qfc)
    (rfc)
    (tfc)
    (ufc)
    (vfc)
    (xfc)
    (yfc)
    (zfc)
    (bgc)
    (cgc)
    (ggc)
    (hgc)
    (jgc)
    (kgc)
    (lgc)
    (mgc)
    (qgc)
    (rgc)
    (tgc)
    (ugc)
    (vgc)
    (xgc)
    (ygc)
    (zgc)
    (bhc)
    (chc)
    (ghc)
    (hhc)
    (jhc)
    (khc)
    (lhc)
    (mhc)
    (qhc)
    (rhc)
    (thc)
    (uhc)
    (vhc)
    (xhc)
    (yhc)
    (zhc)
    (bic)
    (cic)
    (gic)
    (hic)
    (jic)
    (kic)
    (lic)
    (mic)
    (qic)
    (ric)
    (tic)
    (uic)
    (vic)
    (xic)
    (yic)
    (zic)
    (bjc)
    (cjc)
    (gjc)
    (hjc)
    (jjc)
    (kjc)
    (ljc)
    (mjc)
    (qjc)
    (rjc)
    (tjc)
    (ujc)
    (vjc)
    (xjc)
    (yjc)
    (zjc)
    (bkc)
    (ckc)
    (gkc)
    (hkc)
    (jkc)
    (kkc)
    (lkc)
    (mkc)
    (qkc)
    (rkc)
    (tkc)
    (ukc)
    (vkc)
    (xkc)
    (ykc)
    (zkc)
    (blc)
    (clc)
    (glc)
    (hlc)
    (jlc)
    (klc)
    (llc)
    (mlc)
    (qlc)
    (rlc)
    (tlc)
    (ulc)
    (vlc)
    (xlc)
    (ylc)
    (zlc)
    (bmc)
    (cmc)
    (gmc)
    (hmc)
    (jmc)
    (kmc)
    (lmc)
    (mmc)
    (qmc)
    (rmc)
    (tmc)
    (umc)
    (vmc)
    (xmc)
    (ymc)
    (zmc)
    (bnc)
    (cnc)
    (gnc)
    (hnc)
    (jnc)
    (knc)
    (lnc)
    (mnc)
    (qnc)
    (rnc)
    (tnc)
    (unc)
    (vnc)
    (xnc)
    (ync)
    (znc)
    (boc)
    (coc)
    (goc)
    (hoc)
    (joc)
    (koc)
    (loc)
    (moc)
    (qoc)
    (roc)
    (toc)
    (uoc)
    (voc)
    (xoc)
    (yoc)
    (zoc)
    (bpc)
    (cpc)
    (gpc)
    (hpc)
    (jpc)
    (kpc)
    (lpc)
    (mpc)
    (qpc)
    (rpc)
    (tpc)
    (upc)
    (vpc)
    (xpc)
    (ypc)
    (zpc)
    (bqc)
    (cqc)
    (gqc)
    (hqc)
    (jqc)
    (kqc)
    (lqc)
    (mqc)
    (qqc)
    (rqc)
    (tqc)
    (uqc)
    (vqc)
    (xqc)
    (yqc)
    (zqc)
    (bsc)
    (csc)
    (gsc)
    (hsc)
    (jsc)
    (ksc)
    (lsc)
    (msc)
    (qsc)
    (rsc)
    (tsc)
    (usc)
    (vsc)
    (xsc)
    (ysc)
    (zsc)
    (brc)
    (crc)
    (grc)
    (hrc)
    (jrc)
    (krc)
    (lrc)
    (mrc)
    (qrc)
    (rrc)
    (trc)
    (urc)
    (vrc)
    (xrc)
    (yrc)
    (zrc)
    (btc)
    (ctc)
    (gtc)
    (htc)
    (jtc)
    (ktc)
    (ltc)
    (mtc)
    (qtc)
    (rtc)
    (ttc)
    (utc)
    (vtc)
    (xtc)
    (ytc)
    (ztc)
    (buc)
    (cuc)
    (guc)
    (huc)
    (juc)
    (kuc)
    (luc)
    (muc)
    (quc)
    (ruc)
    (tuc)
    (uuc)
    (vuc)
    (xuc)
    (yuc)
    (zuc)
    (bvc)
    (cvc)
    (gvc)
    (hvc)
    (jvc)
    (kvc)
    (lvc)
    (mvc)
    (qvc)
    (rvc)
    (tvc)
    (uvc)
    (vvc)
    (xvc)
    (yvc)
    (zvc)
    (bwc)
    (cwc)
    (gwc)
    (hwc)
    (jwc)
    (kwc)
    (lwc)
    (mwc)
    (qwc)
    (rwc)
    (twc)
    (uwc)
    (vwc)
    (xwc)
    (ywc)
    (zwc)
    (bxc)
    (cxc)
    (gxc)
    (hxc)
    (jxc)
    (kxc)
    (lxc)
    (mxc)
    (qxc)
    (rxc)
    (txc)
    (uxc)
    (vxc)
    (xxc)
    (yxc)
    (zxc)
    (byc)
    (cyc)
    (gyc)
    (hyc)
    (jyc)
    (kyc)
    (lyc)
    (myc)
    (qyc)
    (ryc)
    (tyc)
    (uyc)
    (vyc)
    (xyc)
    (yyc)
    (zyc)
    (bzc)
    (czc)
    (gzc)
    (hzc)
    (jzc)
    (kzc)
    (lzc)
    (mzc)
    (qzc)
    (rzc)
    (tzc)
    (uzc)
    (vzc)
    (xzc)
    (yzc)
    (zzc)
    (b1c)
    (c1c)
    (g1c)
    (h1c)
    (j1c)
    (k1c)
    (l1c)
    (m1c)
    (q1c)
    (r1c)
    (t1c)
    (u1c)
    (v1c)
    (x1c)
    (y1c)
    (z1c)
    (b2c)
    (c2c)
    (g2c)
    (h2c)
    (j2c)
    (k2c)
    (l2c)
    (m2c)
    (q2c)
    (r2c)
    (t2c)
    (u2c)
    (v2c)
    (x2c)
    (y2c)
    (z2c)
    (b3c)
    (c3c)
    (g3c)
    (h3c)
    (j3c)
    (k3c)
    (l3c)
    (m3c)
    (q3c)
    (r3c)
    (t3c)
    (u3c)
    (v3c)
    (x3c)
    (y3c)
    (z3c)
    (b4c)
    (c4c)
    (g4c)
    (h4c)
    (j4c)
    (k4c)
    (l4c)
    (m4c)
    (q4c)
    (r4c)
    (t4c)
    (u4c)
    (v4c)
    
    (y4c)
    (z4c)
    (b5c)
    (c5c)
    (g5c)
    (h5c)
    (j5c)
    (k5c)
    (l5c)
    (m5c)
    (q5c)
    (r5c)
    (t5c)
    (u5c)
    (v5c)
    (x5c)
    (y5c)
    (z5c)
    (b6c)
    (c6c)
    (g6c)
    (h6c)
    (j6c)
    (k6c)
    (l6c)
    (m6c)
    (q6c)
    (r6c)
    (t6c)
    (u6c)
    (v6c)
    (x6c)
    (y6c)
    (z6c)
    (b7c)
    (c7c)
    (g7c)
    (h7c)
    (j7c)
    (k7c)
    (l7c)
    (m7c)
    (q7c)
    (r7c)
    (t7c)
    (u7c)
    (v7c)
    (x7c)
    (y7c)
    (z7c)
    (b8c)
    (c8c)
    (g8c)
    (h8c)
    (j8c)
    (k8c)
    (l8c)
    (m8c)
    (q8c)
    (r8c)
    (t8c)
    (u8c)
    (v8c)
    (x8c)
    (y8c)
    (z8c)
    (b9c)
    (c9c)
    (g9c)
    (h9c)
    (j9c)
    (k9c)
    (l9c)
    (m9c)
    (q9c)
    (r9c)
    (t9c)
    (u9c)
    (v9c)
    (x9c)
    (y9c)
    (z9c)
    (b0c)
    (c0c)
    (g0c)
    (h0c)
    (j0c)
    (k0c)
    (l0c)
    (m0c)
    (q0c)
    (r0c)
    (t0c)
    (u0c)
    (v0c)
    (x0c)
    (y0c)
    (z0c)
    (bad)
    (cad)
    (gad)
    (had)
    (jad)
    (kad)
    (lad)
    (mad)
    (qad)
    (rad)
    (tad)
    (uad)
    (vad)
    (xad)
    (yad)
    (zad)
    (bbd)
    (cbd)
    (gbd)
    (hbd)
    (jbd)
    (kbd)
    (lbd)
    (mbd)
    (qbd)
    (rbd)
    (tbd)
    (ubd)
    (vbd)
    (xbd)
    (ybd)
    (zbd)
    (bcd)
    (ccd)
    (gcd)
    (hcd)
    (jcd)
    (kcd)
    (lcd)
    (mcd)
    (qcd)
    (rcd)
    (tcd)
    (ucd)
    (vcd)
    (xcd)
    (ycd)
    (zcd)
    (bdd)
    (cdd)
    (gdd)
    (hdd)
    (jdd)
    (kdd)
    (ldd)
    (mdd)
    (qdd)
    (rdd)
    (tdd)
    (udd)
    (vdd)
    (xdd)
    (ydd)
    (zdd)
    (bed)
    (ced)
    (ged)
    (hed)
    (jed)
    (ked)
    (led)
    (med)
    (qed)
    (red)
    (ted)
    (ued)
    (ved)
    (xed)
    (yed)
    (zed)
    (bfd)
    (cfd)
    (gfd)
    (hfd)
    (jfd)
    (kfd)
    (lfd)
    (mfd)
    (qfd)
    (rfd)
    (tfd)
    (ufd)
    (vfd)
    (xfd)
    (yfd)
    (zfd)
    (bgd)
    (cgd)
    (ggd)
    (hgd)
    (jgd)
    (kgd)
    (lgd)
    (mgd)
    (qgd)
    (rgd)
    (tgd)
    (ugd)
    (vgd)
    (xgd)
    (ygd)
    (zgd)
    (bhd)
    (chd)
    (ghd)
    (hhd)
    (jhd)
    (khd)
    (lhd)
    (mhd)
    (qhd)
    (rhd)
    (thd)
    (uhd)
    (vhd)
    (xhd)
    (yhd)
    (zhd)
    (bid)
    (cid)
    (gid)
    (hid)
    (jid)
    (kid)
    (lid)
    (mid)
    (qid)
    (rid)
    (tid)
    (uid)
    (vid)
    (xid)
    (yid)
    (zid)
    (bjd)
    (cjd)
    (gjd)
    (hjd)
    (jjd)
    (kjd)
    (ljd)
    (mjd)
    (qjd)
    (rjd)
    (tjd)
    (ujd)
    (vjd)
    (xjd)
    (yjd)
    (zjd)
    (bkd)
    (ckd)
    (gkd)
    (hkd)
    (jkd)
    (kkd)
    (lkd)
    (mkd)
    (qkd)
    (rkd)
    (tkd)
    (ukd)
    (vkd)
    (xkd)
    (ykd)
    (zkd)
    (bld)
    (cld)
    (gld)
    (hld)
    (jld)
    (kld)
    (lld)
    (mld)
    (qld)
    (rld)
    (tld)
    (uld)
    (vld)
    (xld)
    (yld)
    (zld)
    (bmd)
    (cmd)
    (gmd)
    (hmd)
    (jmd)
    (kmd)
    (lmd)
    (mmd)
    (qmd)
    (rmd)
    (tmd)
    (umd)
    (vmd)
    (xmd)
    (ymd)
    (zmd)
    (bnd)
    (cnd)
    (gnd)
    (hnd)
    (jnd)
    (knd)
    (lnd)
    (mnd)
    (qnd)
    (rnd)
    (tnd)
    (und)
    (vnd)
    (xnd)
    (ynd)
    (znd)
    (bod)
    (cod)
    (god)
    (hod)
    (jod)
    (kod)
    (lod)
    (mod)
    (qod)
    (rod)
    (tod)
    (uod)
    (vod)
    (xod)
    (yod)
    (zod)
    (bpd)
    (cpd)
    (gpd)
    (hpd)
    (jpd)
    (kpd)
    (lpd)
    (mpd)
    (qpd)
    (rpd)
    (tpd)
    (upd)
    (vpd)
    (xpd)
    (ypd)
    (zpd)
    (bqd)
    (cqd)
    (gqd)
    (hqd)
    (jqd)
    (kqd)
    (lqd)
    (mqd)
    (qqd)
    (rqd)
    (tqd)
    (uqd)
    (vqd)
    (xqd)
    (yqd)
    (zqd)
    (bsd)
    (csd)
    (gsd)
    (hsd)
    (jsd)
    (ksd)
    (lsd)
    (msd)
    (qsd)
    (rsd)
    (tsd)
    (usd)
    (vsd)
    (xsd)
    (ysd)
    (zsd)
    (brd)
    (crd)
    (grd)
    (hrd)
    (jrd)
    (krd)
    (lrd)
    (mrd)
    (qrd)
    (rrd)
    (trd)
    (urd)
    (vrd)
    (xrd)
    (yrd)
    (zrd)
    (btd)
    (ctd)
    (gtd)
    (htd)
    (jtd)
    (ktd)
    (ltd)
    (mtd)
    (qtd)
    (rtd)
    (ttd)
    (utd)
    (vtd)
    (xtd)
    (ytd)
    (ztd)
    (bud)
    (cud)
    (gud)
    (hud)
    (jud)
    (kud)
    (lud)
    (mud)
    (qud)
    (rud)
    (tud)
    (uud)
    (vud)
    (xud)
    (yud)
    (zud)
    (bvd)
    (cvd)
    (gvd)
    (hvd)
    (jvd)
    (kvd)
    (lvd)
    (mvd)
    (qvd)
    (rvd)
    (tvd)
    (uvd)
    (vvd)
    (xvd)
    (yvd)
    (zvd)
    (bwd)
    (cwd)
    (gwd)
    (hwd)
    (jwd)
    (kwd)
    (lwd)
    (mwd)
    (qwd)
    (rwd)
    (twd)
    (uwd)
    (vwd)
    (xwd)
    (ywd)
    (zwd)
    (bxd)
    (cxd)
    (gxd)
    (hxd)
    (jxd)
    (kxd)
    (lxd)
    (mxd)
    (qxd)
    (rxd)
    (txd)
    (uxd)
    (vxd)
    (xxd)
    (yxd)
    (zxd)
    (byd)
    (cyd)
    (gyd)
    (hyd)
    (jyd)
    (kyd)
    (lyd)
    (myd)
    (qyd)
    (ryd)
    (tyd)
    (uyd)
    (vyd)
    (xyd)
    (yyd)
    (zyd)
    (bzd)
    (czd)
    (gzd)
    (hzd)
    (jzd)
    (kzd)
    (lzd)
    (mzd)
    (qzd)
    (rzd)
    (tzd)
    (uzd)
    (vzd)
    (xzd)
    (yzd)
    (zzd)
    (b1d)
    (c1d)
    (g1d)
    (h1d)
    (j1d)
    (k1d)
    (l1d)
    (m1d)
    (q1d)
    (r1d)
    (t1d)
    (u1d)
    (v1d)
    (x1d)
    (y1d)
    (z1d)
    (b2d)
    (c2d)
    (g2d)
    (h2d)
    (j2d)
    (k2d)
    (l2d)
    (m2d)
    (q2d)
    (r2d)
    (t2d)
    (u2d)
    (v2d)
    (x2d)
    (y2d)
    (z2d)
    (b3d)
    (c3d)
    (g3d)
    (h3d)
    (j3d)
    (k3d)
    (l3d)
    (m3d)
    (q3d)
    (r3d)
    (t3d)
    (u3d)
    (v3d)
    (x3d)
    (y3d)
    (z3d)
    (b4d)
    (c4d)
    (g4d)
    (h4d)
    (j4d)
    (k4d)
    (l4d)
    (m4d)
    (q4d)
    (r4d)
    (t4d)
    (u4d)
    (v4d)
    (x4d)
    (y4d)
    (z4d)
    (b5d)
    (c5d)
    (g5d)
    (h5d)
    (j5d)
    (k5d)
    (l5d)
    (m5d)
    (q5d)
    (r5d)
    (t5d)
    (u5d)
    (v5d)
    (x5d)
    (y5d)
    (z5d)
    (b6d)
    (c6d)
    (g6d)
    (h6d)
    (j6d)
    (k6d)
    (l6d)
    (m6d)
    (q6d)
    (r6d)
    (t6d)
    (u6d)
    (v6d)
    (x6d)
    (y6d)
    (z6d)
    (b7d)
    (c7d)
    (g7d)
    (h7d)
    (j7d)
    (k7d)
    (l7d)
    (m7d)
    (q7d)
    (r7d)
    (t7d)
    (u7d)
    (v7d)
    (x7d)
    (y7d)
    (z7d)
    (b8d)
    (c8d)
    (g8d)
    (h8d)
    (j8d)
    (k8d)
    (l8d)
    (m8d)
    (q8d)
    (r8d)
    (t8d)
    (u8d)
    (v8d)
    (x8d)
    (y8d)
    (z8d)
    (b9d)
    (c9d)
    (g9d)
    (h9d)
    (j9d)
    (k9d)
    (l9d)
    (m9d)
    (q9d)
    (r9d)
    (t9d)
    (u9d)
    (v9d)
    (x9d)
    (y9d)
    (z9d)
    (b0d)
    (c0d)
    (g0d)
    (h0d)
    (j0d)
    (k0d)
    (l0d)
    (m0d)
    (q0d)
    (r0d)
    (t0d)
    (u0d)
    (v0d)
    (x0d)
    (y0d)
    (z0d)
    (bae)
    (cae)
    (gae)
    (hae)
    (jae)
    (kae)
    (lae)
    (mae)
    (qae)
    (rae)
    (tae)
    (uae)
    (vae)
    (xae)
    (yae)
    (zae)
    (bbe)
    (cbe)
    (gbe)
    (hbe)
    (jbe)
    (kbe)
    (lbe)
    (mbe)
    (qbe)
    (rbe)
    (tbe)
    (ube)
    (vbe)
    (xbe)
    (ybe)
    (zbe)
    (bce)
    (cce)
    (gce)
    (hce)
    (jce)
    (kce)
    (lce)
    (mce)
    (qce)
    (rce)
    (tce)
    (uce)
    (vce)
    (xce)
    (yce)
    (zce)
    (bde)
    (cde)
    (gde)
    (hde)
    (jde)
    (kde)
    (lde)
    (mde)
    (qde)
    (rde)
    (tde)
    (ude)
    (vde)
    (xde)
    (yde)
    (zde)
    (bee)
    (cee)
    (gee)
    (hee)
    (jee)
    (kee)
    (lee)
    (mee)
    (qee)
    (ree)
    (tee)
    (uee)
    (vee)
    (xee)
    (yee)
    (zee)
    (bfe)
    (cfe)
    (gfe)
    (hfe)
    (jfe)
    (kfe)
    (lfe)
    (mfe)
    (qfe)
    (rfe)
    (tfe)
    (ufe)
    (vfe)
    (xfe)
    (yfe)
    (zfe)
    (bge)
    (cge)
    (gge)
    (hge)
    (jge)
    (kge)
    (lge)
    (mge)
    (qge)
    (rge)
    (tge)
    (uge)
    (vge)
    (xge)
    (yge)
    (zge)
    (bhe)
    (che)
    (ghe)
    (hhe)
    (jhe)
    (khe)
    (lhe)
    (mhe)
    (qhe)
    (rhe)
    (the)
    (uhe)
    (vhe)
    (xhe)
    (yhe)
    (zhe)
    (bie)
    (cie)
    (gie)
    (hie)
    (jie)
    (kie)
    (lie)
    (mie)
    (qie)
    (rie)
    (tie)
    (uie)
    (vie)
    (xie)
    (yie)
    (zie)
    (bje)
    (cje)
    (gje)
    (hje)
    (jje)
    (kje)
    (lje)
    (mje)
    (qje)
    (rje)
    (tje)
    (uje)
    (vje)
    (xje)
    (yje)
    (zje)
    (bke)
    (cke)
    (gke)
    (hke)
    (jke)
    (kke)
    (lke)
    (mke)
    (qke)
    (rke)
    (tke)
    (uke)
    (vke)
    (xke)
    (yke)
    (zke)
    (ble)
    (cle)
    (gle)
    (hle)
    (jle)
    (kle)
    (lle)
    (mle)
    (qle)
    (rle)
    (tle)
    (ule)
    (vle)
    (xle)
    (yle)
    (zle)
    (bme)
    (cme)
    (gme)
    (hme)
    (jme)
    (kme)
    (lme)
    (mme)
    (qme)
    (rme)
    (tme)
    (ume)
    (vme)
    (xme)
    (yme)
    (zme)
    (bne)
    (cne)
    (gne)
    (hne)
    (jne)
    (kne)
    (lne)
    (mne)
    (qne)
    (rne)
    (tne)
    (une)
    (vne)
    (xne)
    (yne)
    (zne)
    (boe)
    (coe)
    (goe)
    (hoe)
    (joe)
    (koe)
    (loe)
    (moe)
    (qoe)
    (roe)
    (toe)
    (uoe)
    (voe)
    (xoe)
    (yoe)
    (zoe)
    (bpe)
    (cpe)
    (gpe)
    (hpe)
    (jpe)
    (kpe)
    (lpe)
    (mpe)
    (qpe)
    (rpe)
    (tpe)
    (upe)
    (vpe)
    (xpe)
    (ype)
    (zpe)
    (bqe)
    (cqe)
    (gqe)
    (hqe)
    (jqe)
    (kqe)
    (lqe)
    (mqe)
    (qqe)
    (rqe)
    (tqe)
    (uqe)
    (vqe)
    (xqe)
    (yqe)
    (zqe)
    (bse)
    (cse)
    (gse)
    (hse)
    (jse)
    (kse)
    (lse)
    (mse)
    (qse)
    (rse)
    (tse)
    (use)
    (vse)
    (xse)
    (yse)
    (zse)
    (bre)
    (cre)
    (gre)
    (hre)
    (jre)
    (kre)
    (lre)
    (mre)
    (qre)
    (rre)
    (tre)
    (ure)
    (vre)
    (xre)
    (yre)
    (zre)
    (bte)
    (cte)
    (gte)
    (hte)
    (jte)
    (kte)
    (lte)
    (mte)
    (qte)
    (rte)
    (tte)
    (ute)
    (vte)
    (xte)
    (yte)
    (zte)
    (bue)
    (cue)
    (gue)
    (hue)
    (jue)
    (kue)
    (lue)
    (mue)
    (que)
    (rue)
    (tue)
    (uue)
    (vue)
    (xue)
    (yue)
    (zue)
    (bve)
    (cve)
    (gve)
    (hve)
    (jve)
    (kve)
    (lve)
    (mve)
    (qve)
    (rve)
    (tve)
    (uve)
    (vve)
    (xve)
    (yve)
    (zve)
    (bwe)
    (cwe)
    (gwe)
    (hwe)
    (jwe)
    (kwe)
    (lwe)
    (mwe)
    (qwe)
    (rwe)
    (twe)
    (uwe)
    (vwe)
    (xwe)
    (ywe)
    (zwe)
    (bxe)
    (cxe)
    (gxe)
    (hxe)
    (jxe)
    (kxe)
    (lxe)
    (mxe)
    (qxe)
    (rxe)
    (txe)
    (uxe)
    (vxe)
    (xxe)
    (yxe)
    (zxe)
    (bye)
    (cye)
    (gye)
    (hye)
    (jye)
    (kye)
    (lye)
    (mye)
    (qye)
    (rye)
    (tye)
    (uye)
    (vye)
    (xye)
    (yye)
    (zye)
    (bze)
    (cze)
    (gze)
    (hze)
    (jze)
    (kze)
    (lze)
    (mze)
    (qze)
    (rze)
    (tze)
    (uze)
    (vze)
    (xze)
    (yze)
    (zze)
    (b1e)
    (c1e)
    (g1e)
    (h1e)
    (j1e)
    (k1e)
    (l1e)
    (m1e)
    (q1e)
    (r1e)
    (t1e)
    (u1e)
    (v1e)
    (x1e)
    (y1e)
    (z1e)
    (b2e)
    (c2e)
    (g2e)
    (h2e)
    (j2e)
    (k2e)
    (l2e)
    (m2e)
    (q2e)
    (r2e)
    (t2e)
    (u2e)
    (v2e)
    (x2e)
    (y2e)
    (z2e)
    (b3e)
    (c3e)
    (g3e)
    (h3e)
    (j3e)
    (k3e)
    (l3e)
    (m3e)
    (q3e)
    (r3e)
    (t3e)
    (u3e)
    (v3e)
    (x3e)
    (y3e)
    (z3e)
    (b4e)
    (c4e)
    (g4e)
    (h4e)
    (j4e)
    (k4e)
    (l4e)
    (m4e)
    (q4e)
    (r4e)
    (t4e)
    (u4e)
    (v4e)
    (x4e)
    (y4e)
    (z4e)
    (b5e)
    (c5e)
    (g5e)
    (h5e)
    (j5e)
    (k5e)
    (l5e)
    (m5e)
    (q5e)
    (r5e)
    (t5e)
    (u5e)
    (v5e)
    (x5e)
    (y5e)
    (z5e)
    (b6e)
    (c6e)
    (g6e)
    (h6e)
    (j6e)
    (k6e)
    (l6e)
    (m6e)
    (q6e)
    (r6e)
    (t6e)
    (u6e)
    (v6e)
    (x6e)
    (y6e)
    (z6e)
    (b7e)
    (c7e)
    (g7e)
    (h7e)
    (j7e)
    (k7e)
    (l7e)
    (m7e)
    (q7e)
    (r7e)
    (t7e)
    (u7e)
    (v7e)
    (x7e)
    (y7e)
    (z7e)
    (b8e)
    (c8e)
    (g8e)
    (h8e)
    (j8e)
    (k8e)
    (l8e)
    (m8e)
    (q8e)
    (r8e)
    (t8e)
    (u8e)
    (v8e)
    (x8e)
    (y8e)
    (z8e)
    (b9e)
    (c9e)
    (g9e)
    (h9e)
    (j9e)
    (k9e)
    (l9e)
    (m9e)
    (q9e)
    (r9e)
    (t9e)
    (u9e)
    (v9e)
    (x9e)
    (y9e)
    (z9e)
    (b0e)
    (c0e)
    (g0e)
    (h0e)
    (j0e)
    (k0e)
    (l0e)
    (m0e)
    (q0e)
    (r0e)
    (t0e)
    (u0e)
    (v0e)
    (x0e)
    (y0e)
    (z0e)
    (baf)
    (caf)
    (gaf)
    (haf)
    (jaf)
    (kaf)
    (laf)
    (maf)
    (qaf)
    (raf)
    (taf)
    (uaf)
    (vaf)
    (xaf)
    (yaf)
    (zaf)
    (bbf)
    (cbf)
    (gbf)
    (hbf)
    (jbf)
    (kbf)
    (lbf)
    (mbf)
    (qbf)
    (rbf)
    (tbf)
    (ubf)
    (vbf)
    (xbf)
    (ybf)
    (zbf)
    (bcf)
    (ccf)
    (gcf)
    (hcf)
    (jcf)
    (kcf)
    (lcf)
    (mcf)
    (qcf)
    (rcf)
    (tcf)
    (ucf)
    (vcf)
    (xcf)
    (ycf)
    (zcf)
    (bdf)
    (cdf)
    (gdf)
    (hdf)
    (jdf)
    (kdf)
    (ldf)
    (mdf)
    (qdf)
    (rdf)
    (tdf)
    (udf)
    (vdf)
    (xdf)
    (ydf)
    (zdf)
    (bef)
    (cef)
    (gef)
    (hef)
    (jef)
    (kef)
    (lef)
    (mef)
    (qef)
    (ref)
    (tef)
    (uef)
    (vef)
    (xef)
    (yef)
    (zef)
    (bff)
    (cff)
    (gff)
    (hff)
    (jff)
    (kff)
    (lff)
    (mff)
    (qff)
    (rff)
    (tff)
    (uff)
    (vff)
    (xff)
    (yff)
    (zff)
    (bgf)
    (cgf)
    (ggf)
    (hgf)
    (jgf)
    (kgf)
    (lgf)
    (mgf)
    (qgf)
    (rgf)
    (tgf)
    (ugf)
    (vgf)
    (xgf)
    (ygf)
    (zgf)
    (bhf)
    (chf)
    (ghf)
    (hhf)
    (jhf)
    (khf)
    (lhf)
    (mhf)
    (qhf)
    (rhf)
    (thf)
    (uhf)
    (vhf)
    (xhf)
    (yhf)
    (zhf)
    (bif)
    (cif)
    (gif)
    (hif)
    (jif)
    (kif)
    (lif)
    (mif)
    (qif)
    (rif)
    (tif)
    (uif)
    (vif)
    (xif)
    (yif)
    (zif)
    (bjf)
    (cjf)
    (gjf)
    (hjf)
    (jjf)
    (kjf)
    (ljf)
    (mjf)
    (qjf)
    (rjf)
    (tjf)
    (ujf)
    (vjf)
    (xjf)
    (yjf)
    (zjf)
    (bkf)
    (ckf)
    (gkf)
    (hkf)
    (jkf)
    (kkf)
    (lkf)
    (mkf)
    (qkf)
    (rkf)
    (tkf)
    (ukf)
    (vkf)
    (xkf)
    (ykf)
    (zkf)
    (blf)
    (clf)
    (glf)
    (hlf)
    (jlf)
    (klf)
    (llf)
    (mlf)
    (qlf)
    (rlf)
    (tlf)
    (ulf)
    (vlf)
    (xlf)
    (ylf)
    (zlf)
    (bmf)
    (cmf)
    (gmf)
    (hmf)
    (jmf)
    (kmf)
    (lmf)
    (mmf)
    (qmf)
    (rmf)
    (tmf)
    (umf)
    (vmf)
    (xmf)
    (ymf)
    (zmf)
    (bnf)
    (cnf)
    (gnf)
    (hnf)
    (jnf)
    (knf)
    (lnf)
    (mnf)
    (qnf)
    (rnf)
    (tnf)
    (unf)
    (vnf)
    (xnf)
    (ynf)
    (znf)
    (bof)
    (cof)
    (gof)
    (hof)
    (jof)
    (kof)
    (lof)
    (mof)
    (qof)
    (rof)
    (tof)
    (uof)
    (vof)
    (xof)
    (yof)
    (zof)
    (bpf)
    (cpf)
    (gpf)
    (hpf)
    (jpf)
    (kpf)
    (lpf)
    (mpf)
    (qpf)
    (rpf)
    (tpf)
    (upf)
    (vpf)
    (xpf)
    (ypf)
    (zpf)
    (bqf)
    (cqf)
    (gqf)
    (hqf)
    (jqf)
    (kqf)
    (lqf)
    (mqf)
    (qqf)
    (rqf)
    (tqf)
    (uqf)
    (vqf)
    (xqf)
    (yqf)
    (zqf)
    (bsf)
    (csf)
    (gsf)
    (hsf)
    (jsf)
    (ksf)
    (lsf)
    (msf)
    (qsf)
    (rsf)
    (tsf)
    (usf)
    (vsf)
    (xsf)
    (ysf)
    (zsf)
    (brf)
    (crf)
    (grf)
    (hrf)
    (jrf)
    (krf)
    (lrf)
    (mrf)
    (qrf)
    (rrf)
    (trf)
    (urf)
    (vrf)
    (xrf)
    (yrf)
    (zrf)
    (btf)
    (ctf)
    (gtf)
    (htf)
    (jtf)
    (ktf)
    (ltf)
    (mtf)
    (qtf)
    (rtf)
    (ttf)
    (utf)
    (vtf)
    (xtf)
    (ytf)
    (ztf)
    (buf)
    (cuf)
    (guf)
    (huf)
    (juf)
    (kuf)
    (luf)
    (muf)
    (quf)
    (ruf)
    (tuf)
    (uuf)
    (vuf)
    (xuf)
    (yuf)
    (zuf)
    (bvf)
    (cvf)
    (gvf)
    (hvf)
    (jvf)
    (kvf)
    (lvf)
    (mvf)
    (qvf)
    (rvf)
    (tvf)
    (uvf)
    (vvf)
    (xvf)
    (yvf)
    (zvf)
    (bwf)
    (cwf)
    (gwf)
    (hwf)
    (jwf)
    (kwf)
    (lwf)
    (mwf)
    (qwf)
    (rwf)
    (twf)
    (uwf)
    (vwf)
    (xwf)
    (ywf)
    (zwf)
    (bxf)
    (cxf)
    (gxf)
    (hxf)
    (jxf)
    (kxf)
    (lxf)
    (mxf)
    (qxf)
    (rxf)
    (txf)
    (uxf)
    (vxf)
    (xxf)
    (yxf)
    (zxf)
    (byf)
    (cyf)
    (gyf)
    (hyf)
    (jyf)
    (kyf)
    (lyf)
    (myf)
    (qyf)
    (ryf)
    (tyf)
    (uyf)
    (vyf)
    (xyf)
    (yyf)
    (zyf)
    (bzf)
    (czf)
    (gzf)
    (hzf)
    (jzf)
    (kzf)
    (lzf)
    (mzf)
    (qzf)
    (rzf)
    (tzf)
    (uzf)
    (vzf)
    (xzf)
    (yzf)
    (zzf)
    (b1f)
    (c1f)
    (g1f)
    (h1f)
    (j1f)
    (k1f)
    (l1f)
    (m1f)
    (q1f)
    (r1f)
    (t1f)
    (u1f)
    (v1f)
    (x1f)
    (y1f)
    (z1f)
    (b2f)
    (c2f)
    (g2f)
    (h2f)
    (j2f)
    (k2f)
    (l2f)
    (m2f)
    (q2f)
    (r2f)
    (t2f)
    (u2f)
    (v2f)
    (x2f)
    (y2f)
    (z2f)
    (b3f)
    (c3f)
    (g3f)
    (h3f)
    (j3f)
    (k3f)
    (l3f)
    (m3f)
    (q3f)
    (r3f)
    (t3f)
    (u3f)
    (v3f)
    (x3f)
    (y3f)
    (z3f)
    (b4f)
    (c4f)
    (g4f)
    (h4f)
    (j4f)
    (k4f)
    (l4f)
    (m4f)
    (q4f)
    (r4f)
    (t4f)
    (u4f)
    (v4f)
    (x4f)
    (y4f)
    (z4f)
    (b5f)
    (c5f)
    (g5f)
    (h5f)
    (j5f)
    (k5f)
    (l5f)
    (m5f)
    (q5f)
    (r5f)
    (t5f)
    (u5f)
    (v5f)
    (x5f)
    (y5f)
    (z5f)
    (b6f)
    (c6f)
    (g6f)
    (h6f)
    (j6f)
    (k6f)
    (l6f)
    (m6f)
    (q6f)
    (r6f)
    (t6f)
    (u6f)
    (v6f)
    (x6f)
    (y6f)
    (z6f)
    (b7f)
    (c7f)
    (g7f)
    (h7f)
    (j7f)
    (k7f)
    (l7f)
    (m7f)
    (q7f)
    (r7f)
    (t7f)
    (u7f)
    (v7f)
    (x7f)
    (y7f)
    (z7f)
    (b8f)
    (c8f)
    (g8f)
    (h8f)
    (j8f)
    (k8f)
    (l8f)
    (m8f)
    (q8f)
    (r8f)
    (t8f)
    (u8f)
    (v8f)
    (x8f)
    (y8f)
    (z8f)
    (b9f)
    (c9f)
    (g9f)
    (h9f)
    (j9f)
    (k9f)
    (l9f)
    (m9f)
    (q9f)
    (r9f)
    (t9f)
    (u9f)
    (v9f)
    (x9f)
    (y9f)
    (z9f)
    (b0f)
    (c0f)
    (g0f)
    (h0f)
    (j0f)
    (k0f)
    (l0f)
    (m0f)
    (q0f)
    (r0f)
    (t0f)
    (u0f)
    (v0f)
    (x0f)
    (y0f)
    (z0f)
    (bag)
    (cag)
    (gag)
    (hag)
    (jag)
    (kag)
    (lag)
    (mag)
    (qag)
    (rag)
    (tag)
    (uag)
    (vag)
    (xag)
    (yag)
    (zag)
    (bbg)
    (cbg)
    (gbg)
    (hbg)
    (jbg)
    (kbg)
    (lbg)
    (mbg)
    (qbg)
    (rbg)
    (tbg)
    (ubg)
    (vbg)
    (xbg)
    (ybg)
    (zbg)
    (bcg)
    (ccg)
    (gcg)
    (hcg)
    (jcg)
    (kcg)
    (lcg)
    (mcg)
    (qcg)
    (rcg)
    (tcg)
    (ucg)
    (vcg)
    (xcg)
    (ycg)
    (zcg)
    (bdg)
    (cdg)
    (gdg)
    (hdg)
    (jdg)
    (kdg)
    (ldg)
    (mdg)
    (qdg)
    (rdg)
    (tdg)
    (udg)
    (vdg)
    (xdg)
    (ydg)
    (zdg)
    (beg)
    (ceg)
    (geg)
    (heg)
    (jeg)
    (keg)
    (leg)
    (meg)
    (qeg)
    (reg)
    (teg)
    (ueg)
    (veg)
    (xeg)
    (yeg)
    (zeg)
    (bfg)
    (cfg)
    (gfg)
    (hfg)
    (jfg)
    (kfg)
    (lfg)
    (mfg)
    (qfg)
    (rfg)
    (tfg)
    (ufg)
    (vfg)
    (xfg)
    (yfg)
    (zfg)
    (bgg)
    (cgg)
    (ggg)
    (hgg)
    (jgg)
    (kgg)
    (lgg)
    (mgg)
    (qgg)
    (rgg)
    (tgg)
    (ugg)
    (vgg)
    (xgg)
    (ygg)
    (zgg)
    (bhg)
    (chg)
    (ghg)
    (hhg)
    (jhg)
    (khg)
    (lhg)
    (mhg)
    (qhg)
    (rhg)
    (thg)
    (uhg)
    (vhg)
    (xhg)
    (yhg)
    (zhg)
    (big)
    (cig)
    (gig)
    (hig)
    (jig)
    (kig)
    (lig)
    (mig)
    (qig)
    (rig)
    (tig)
    (uig)
    (vig)
    (xig)
    (yig)
    (zig)
    (bjg)
    (cjg)
    (gjg)
    (hjg)
    (jjg)
    (kjg)
    (ljg)
    (mjg)
    (qjg)
    (rjg)
    (tjg)
    (ujg)
    (vjg)
    (xjg)
    (yjg)
    (zjg)
    (bkg)
    (ckg)
    (gkg)
    (hkg)
    (jkg)
    (kkg)
    (lkg)
    (mkg)
    (qkg)
    (rkg)
    (tkg)
    (ukg)
    (vkg)
    (xkg)
    (ykg)
    (zkg)
    (blg)
    (clg)
    (glg)
    (hlg)
    (jlg)
    (klg)
    (llg)
    (mlg)
    (qlg)
    (rlg)
    (tlg)
    (ulg)
    (vlg)
    (xlg)
    (ylg)
    (zlg)
    (bmg)
    (cmg)
    (gmg)
    (hmg)
    (jmg)
    (kmg)
    (lmg)
    (mmg)
    (qmg)
    (rmg)
    (tmg)
    (umg)
    (vmg)
    (xmg)
    (ymg)
    (zmg)
    (bng)
    (cng)
    (gng)
    (hng)
    (jng)
    (kng)
    (lng)
    (mng)
    (qng)
    (rng)
    (tng)
    (ung)
    (vng)
    (xng)
    (yng)
    (zng)
    (bog)
    (cog)
    (gog)
    (hog)
    (jog)
    (kog)
    (log)
    (mog)
    (qog)
    (rog)
    (tog)
    (uog)
    (vog)
    (xog)
    (yog)
    (zog)
    (bpg)
    (cpg)
    (gpg)
    (hpg)
    (jpg)
    (kpg)
    (lpg)
    (mpg)
    (qpg)
    (rpg)
    (tpg)
    (upg)
    (vpg)
    (xpg)
    (ypg)
    (zpg)
    (bqg)
    (cqg)
    (gqg)
    (hqg)
    (jqg)
    (kqg)
    (lqg)
    (mqg)
    (qqg)
    (rqg)
    (tqg)
    (uqg)
    (vqg)
    (xqg)
    (yqg)
    (zqg)
    (bsg)
    (csg)
    (gsg)
    (hsg)
    (jsg)
    (ksg)
    (lsg)
    (msg)
    (qsg)
    (rsg)
    (tsg)
    (usg)
    (vsg)
    (xsg)
    (ysg)
    (zsg)
    (brg)
    (crg)
    (grg)
    (hrg)
    (jrg)
    (krg)
    (lrg)
    (mrg)
    (qrg)
    (rrg)
    (trg)
    (urg)
    (vrg)
    (xrg)
    (yrg)
    (zrg)
    (btg)
    (ctg)
    (gtg)
    (htg)
    (jtg)
    (ktg)
    (ltg)
    (mtg)
    (qtg)
    (rtg)
    (ttg)
    (utg)
    (vtg)
    (xtg)
    (ytg)
    (ztg)
    (bug)
    (cug)
    (gug)
    (hug)
    (jug)
    (kug)
    (lug)
    (mug)
    (qug)
    (rug)
    (tug)
    (uug)
    (vug)
    (xug)
    (yug)
    (zug)
    (bvg)
    (cvg)
    (gvg)
    (hvg)
    (jvg)
    (kvg)
    (lvg)
    (mvg)
    (qvg)
    (rvg)
    (tvg)
    (uvg)
    (vvg)
    (xvg)
    (yvg)
    (zvg)
    (bwg)
    (cwg)
    (gwg)
    (hwg)
    (jwg)
    (kwg)
    (lwg)
    (mwg)
    (qwg)
    (rwg)
    (twg)
    (uwg)
    (vwg)
    (xwg)
    (ywg)
    (zwg)
    (bxg)
    (cxg)
    (gxg)
    (hxg)
    (jxg)
    (kxg)
    (lxg)
    (mxg)
    (qxg)
    (rxg)
    (txg)
    (uxg)
    (vxg)
    (xxg)
    (yxg)
    (zxg)
    (byg)
    (cyg)
    (gyg)
    (hyg)
    (jyg)
    (kyg)
    (lyg)
    (myg)
    (qyg)
    (ryg)
    (tyg)
    (uyg)
    (vyg)
    (xyg)
    (yyg)
    (zyg)
    (bzg)
    (czg)
    (gzg)
    (hzg)
    (jzg)
    (kzg)
    (lzg)
    (mzg)
    (qzg)
    (rzg)
    (tzg)
    (uzg)
    (vzg)
    (xzg)
    (yzg)
    (zzg)
    (b1g)
    (c1g)
    (g1g)
    (h1g)
    (j1g)
    (k1g)
    (l1g)
    (m1g)
    (q1g)
    (r1g)
    (t1g)
    (u1g)
    (v1g)
    (x1g)
    (y1g)
    (z1g)
    (b2g)
    (c2g)
    (g2g)
    (h2g)
    (j2g)
    (k2g)
    (l2g)
    (m2g)
    (q2g)
    (r2g)
    (t2g)
    (u2g)
    (v2g)
    (x2g)
    (y2g)
    (z2g)
    (b3g)
    (c3g)
    (g3g)
    (h3g)
    (j3g)
    (k3g)
    (l3g)
    (m3g)
    (q3g)
    (r3g)
    (t3g)
    (u3g)
    (v3g)
    (x3g)
    (y3g)
    (z3g)
    (b4g)
    (c4g)
    (g4g)
    (h4g)
    (j4g)
    (k4g)
    (l4g)
    (m4g)
    (q4g)
    (r4g)
    (t4g)
    (u4g)
    (v4g)
    (x4g)
    (y4g)
    (z4g)
    (b5g)
    (c5g)
    (g5g)
    (h5g)
    (j5g)
    (k5g)
    (l5g)
    (m5g)
    (q5g)
    (r5g)
    (t5g)
    (u5g)
    (v5g)
    (x5g)
    (y5g)
    (z5g)
    (b6g)
    (c6g)
    (g6g)
    (h6g)
    (j6g)
    (k6g)
    (l6g)
    (m6g)
    (q6g)
    (r6g)
    (t6g)
    (u6g)
    (v6g)
    (x6g)
    (y6g)
    (z6g)
    (b7g)
    (c7g)
    (g7g)
    (h7g)
    (j7g)
    (k7g)
    (l7g)
    (m7g)
    (q7g)
    (r7g)
    (t7g)
    (u7g)
    (v7g)
    (x7g)
    (y7g)
    (z7g)
    (b8g)
    (c8g)
    (g8g)
    (h8g)
    (j8g)
    (k8g)
    (l8g)
    (m8g)
    (q8g)
    (r8g)
    (t8g)
    (u8g)
    (v8g)
    (x8g)
    (y8g)
    (z8g)
    (b9g)
    (c9g)
    (g9g)
    (h9g)
    (j9g)
    (k9g)
    (l9g)
    (m9g)
    (q9g)
    (r9g)
    (t9g)
    (u9g)
    (v9g)
    (x9g)
    (y9g)
    (z9g)
    (b0g)
    (c0g)
    (g0g)
    (h0g)
    (j0g)
    (k0g)
    (l0g)
    (m0g)
    (q0g)
    (r0g)
    (t0g)
    (u0g)
    (v0g)
    (x0g)
    (y0g)
    (z0g)
    (bah)
    (cah)
    (gah)
    (hah)
    (jah)
    (kah)
    (lah)
    (mah)
    (qah)
    (rah)
    (tah)
    (uah)
    (vah)
    (xah)
    (yah)
    (zah)
    (bbh)
    (cbh)
    (gbh)
    (hbh)
    (jbh)
    (kbh)
    (lbh)
    (mbh)
    (qbh)
    (rbh)
    (tbh)
    (ubh)
    (vbh)
    (xbh)
    (ybh)
    (zbh)
    (bch)
    (cch)
    (gch)
    (hch)
    (jch)
    (kch)
    (lch)
    (mch)
    (qch)
    (rch)
    (tch)
    (uch)
    (vch)
    (xch)
    (ych)
    (zch)
    (bdh)
    (cdh)
    (gdh)
    (hdh)
    (jdh)
    (kdh)
    (ldh)
    (mdh)
    (qdh)
    (rdh)
    (tdh)
    (udh)
    (vdh)
    (xdh)
    (ydh)
    (zdh)
    (beh)
    (ceh)
    (geh)
    (heh)
    (jeh)
    (keh)
    (leh)
    (meh)
    (qeh)
    (reh)
    (teh)
    (ueh)
    (veh)
    (xeh)
    (yeh)
    (zeh)
    (bfh)
    (cfh)
    (gfh)
    (hfh)
    (jfh)
    (kfh)
    (lfh)
    (mfh)
    (qfh)
    (rfh)
    (tfh)
    (ufh)
    (vfh)
    (xfh)
    (yfh)
    (zfh)
    (bgh)
    (cgh)
    (ggh)
    (hgh)
    (jgh)
    (kgh)
    (lgh)
    (mgh)
    (qgh)
    (rgh)
    (tgh)
    (ugh)
    (vgh)
    (xgh)
    (ygh)
    (zgh)
    (bhh)
    (chh)
    (ghh)
    (hhh)
    (jhh)
    (khh)
    (lhh)
    (mhh)
    (qhh)
    (rhh)
    (thh)
    (uhh)
    (vhh)
    (xhh)
    (yhh)
    (zhh)
    (bih)
    (cih)
    (gih)
    (hih)
    (jih)
    (kih)
    (lih)
    (mih)
    (qih)
    (rih)
    (tih)
    (uih)
    (vih)
    (xih)
    (yih)
    (zih)
    (bjh)
    (cjh)
    (gjh)
    (hjh)
    (jjh)
    (kjh)
    (ljh)
    (mjh)
    (qjh)
    (rjh)
    (tjh)
    (ujh)
    (vjh)
    (xjh)
    (yjh)
    (zjh)
    (bkh)
    (ckh)
    (gkh)
    (hkh)
    (jkh)
    (kkh)
    (lkh)
    (mkh)
    (qkh)
    (rkh)
    (tkh)
    (ukh)
    (vkh)
    (xkh)
    (ykh)
    (zkh)
    (blh)
    (clh)
    (glh)
    (hlh)
    (jlh)
    (klh)
    (llh)
    (mlh)
    (qlh)
    (rlh)
    (tlh)
    (ulh)
    (vlh)
    (xlh)
    (ylh)
    (zlh)
    (bmh)
    (cmh)
    (gmh)
    (hmh)
    (jmh)
    (kmh)
    (lmh)
    (mmh)
    (qmh)
    (rmh)
    (tmh)
    (umh)
    (vmh)
    (xmh)
    (ymh)
    (zmh)
    (bnh)
    (cnh)
    (gnh)
    (hnh)
    (jnh)
    (knh)
    (lnh)
    (mnh)
    (qnh)
    (rnh)
    (tnh)
    (unh)
    (vnh)
    (xnh)
    (ynh)
    (znh)
    (boh)
    (coh)
    (goh)
    (hoh)
    (joh)
    (koh)
    (loh)
    (moh)
    (qoh)
    (roh)
    (toh)
    (uoh)
    (voh)
    (xoh)
    (yoh)
    (zoh)
    (bph)
    (cph)
    (gph)
    (hph)
    (jph)
    (kph)
    (lph)
    (mph)
    (qph)
    (rph)
    (tph)
    (uph)
    (vph)
    (xph)
    (yph)
    (zph)
    (bqh)
    (cqh)
    (gqh)
    (hqh)
    (jqh)
    (kqh)
    (lqh)
    (mqh)
    (qqh)
    (rqh)
    (tqh)
    (uqh)
    (vqh)
    (xqh)
    (yqh)
    (zqh)
    (bsh)
    (csh)
    (gsh)
    (hsh)
    (jsh)
    (ksh)
    (lsh)
    (msh)
    (qsh)
    (rsh)
    (tsh)
    (ush)
    (vsh)
    (xsh)
    (ysh)
    (zsh)
    (brh)
    (crh)
    (grh)
    (hrh)
    (jrh)
    (krh)
    (lrh)
    (mrh)
    (qrh)
    (rrh)
    (trh)
    (urh)
    (vrh)
    (xrh)
    (yrh)
    (zrh)
    (bth)
    (cth)
    (gth)
    (hth)
    (jth)
    (kth)
    (lth)
    (mth)
    (qth)
    (rth)
    (tth)
    (uth)
    (vth)
    (xth)
    (yth)
    (zth)
    (buh)
    (cuh)
    (guh)
    (huh)
    (juh)
    (kuh)
    (luh)
    (muh)
    (quh)
    (ruh)
    (tuh)
    (uuh)
    (vuh)
    (xuh)
    (yuh)
    (zuh)
    (bvh)
    (cvh)
    (gvh)
    (hvh)
    (jvh)
    (kvh)
    (lvh)
    (mvh)
    (qvh)
    (rvh)
    (tvh)
    (uvh)
    (vvh)
    (xvh)
    (yvh)
    (zvh)
    (bwh)
    (cwh)
    (gwh)
    (hwh)
    (jwh)
    (kwh)
    (lwh)
    (mwh)
    (qwh)
    (rwh)
    (twh)
    (uwh)
    (vwh)
    (xwh)
    (ywh)
    (zwh)
    (bxh)
    (cxh)
    (gxh)
    (hxh)
    (jxh)
    (kxh)
    (lxh)
    (mxh)
    (qxh)
    (rxh)
    (txh)
    (uxh)
    (vxh)
    (xxh)
    (yxh)
    (zxh)
    (byh)
    (cyh)
    (gyh)
    (hyh)
    (jyh)
    (kyh)
    (lyh)
    (myh)
    (qyh)
    (ryh)
    (tyh)
    (uyh)
    (vyh)
    (xyh)
    (yyh)
    (zyh)
    (bzh)
    (czh)
    (gzh)
    (hzh)
    (jzh)
    (kzh)
    (lzh)
    (mzh)
    (qzh)
    (rzh)
    (tzh)
    (uzh)
    (vzh)
    (xzh)
    (yzh)
    (zzh)
    (b1h)
    (c1h)
    (g1h)
    (h1h)
    (j1h)
    (k1h)
    (l1h)
    (m1h)
    (q1h)
    (r1h)
    (t1h)
    (u1h)
    (v1h)
    (x1h)
    (y1h)
    (z1h)
    (b2h)
    (c2h)
    (g2h)
    (h2h)
    (j2h)
    (k2h)
    (l2h)
    (m2h)
    (q2h)
    (r2h)
    (t2h)
    (u2h)
    (v2h)
    (x2h)
    (y2h)
    (z2h)
    (b3h)
    (c3h)
    (g3h)
    (h3h)
    (j3h)
    (k3h)
    (l3h)
    (m3h)
    (q3h)
    (r3h)
    (t3h)
    (u3h)
    (v3h)
    (x3h)
    (y3h)
    (z3h)
    (b4h)
    (c4h)
    (g4h)
    (h4h)
    (j4h)
    (k4h)
    (l4h)
    (m4h)
    (q4h)
    (r4h)
    (t4h)
    (u4h)
    (v4h)
    (x4h)
    (y4h)
    (z4h)
    (b5h)
    (c5h)
    (g5h)
    (h5h)
    (j5h)
    (k5h)
    (l5h)
    (m5h)
    (q5h)
    (r5h)
    (t5h)
    (u5h)
    (v5h)
    (x5h)
    (y5h)
    (z5h)
    (b6h)
    (c6h)
    (g6h)
    (h6h)
    (j6h)
    (k6h)
    (l6h)
    (m6h)
    (q6h)
    (r6h)
    (t6h)
    (u6h)
    (v6h)
    (x6h)
    (y6h)
    (z6h)
    (b7h)
    (c7h)
    (g7h)
    (h7h)
    (j7h)
    (k7h)
    (l7h)
    (m7h)
    (q7h)
    (r7h)
    (t7h)
    (u7h)
    (v7h)
    (x7h)
    (y7h)
    (z7h)
    (b8h)
    (c8h)
    (g8h)
    (h8h)
    (j8h)
    (k8h)
    (l8h)
    (m8h)
    (q8h)
    (r8h)
    (t8h)
    (u8h)
    (v8h)
    (S_x8h)
    (S_y8h)
    (S_z8h)
    (S_b9h)
    (S_c9h)
    (S_g9h)
    (S_h9h)
    (S_j9h)
    (S_k9h)
    (S_l9h)
    (S_m9h)
    (S_q9h)
    (S_r9h)
    (S_t9h)
    (S_u9h)
    (S_v9h)
    (S_x9h)
    (S_y9h)
    (S_z9h)
    (S_b0h)
    (S_c0h)
    (S_g0h)
    (S_h0h)
    (S_j0h)
    (S_k0h)
    (S_l0h)
    (S_m0h)
    (S_q0h)
    (S_r0h)
    (S_t0h)
    (S_u0h)
    (S_v0h)
    (S_x0h)
    (S_y0h)
    (S_z0h)
    (S_bai)
    (S_cai)
    (S_gai)
    (S_hai)
    (S_jai)
    (S_kai)
    (S_lai)
    (S_mai)
    (S_qai)
    (S_rai)
    (S_tai)
    (S_uai)
    (S_vai)
    (S_xai)
    (S_yai)
    (S_zai)
    (S_bbi)
    (S_cbi)
    (S_gbi)
    (S_hbi)
    (S_jbi)
    (S_kbi)
    (S_lbi)
    (S_mbi)
    (S_qbi)
    (S_rbi)
    (S_tbi)
    (S_ubi)
    (S_vbi)
    (S_xbi)
    (S_ybi)
    (S_zbi)
    (S_bci)
    (S_cci)
    (S_gci)
    (S_hci)
    (S_jci)
    (S_kci)
    (S_lci)
    (S_mci)
    (S_qci)
    (S_rci)
    (S_tci)
    (S_uci)
    (S_vci)
    (S_xci)
    (S_yci)
    (S_zci)
    (S_bdi)
    (S_cdi)
    (S_gdi)
    (S_hdi)
    (S_jdi)
    (S_kdi)
    (S_ldi)
    (S_mdi)
    (S_qdi)
    (S_rdi)
    (S_tdi)
    (S_udi)
    (S_vdi)
    (S_xdi)
    (S_ydi)
    (S_zdi)
    (S_bei)
    (S_cei)
    (S_gei)
    (S_hei)
    (S_jei)
    (S_kei)
    (S_lei)
    (S_mei)
    (S_qei)
    (S_rei)
    (S_tei)
    (S_uei)
    (S_vei)
    (S_xei)
    (S_yei)
    (S_zei)
    (S_bfi)
    (S_cfi)
    (S_gfi)
    (S_hfi)
    (S_jfi)
    (S_kfi)
    (S_lfi)
    (S_mfi)
    (S_qfi)
    (S_rfi)
    (S_tfi)
    (S_ufi)
    (S_vfi)
    (S_xfi)
    (S_yfi)
    (S_zfi)
    (S_bgi)
    (S_cgi)
    (S_ggi)
    (S_hgi)
    (S_jgi)
    (S_kgi)
    (S_lgi)
    (S_mgi)
    (S_qgi)
    (S_rgi)
    (S_tgi)
    (S_ugi)
    (S_vgi)
    (S_xgi)
    (S_ygi)
    (S_zgi)
    (S_bhi)
    (S_chi)
    (S_ghi)
    (S_hhi)
    (S_jhi)
    (S_khi)
    (S_lhi)
    (S_mhi)
    (S_qhi)
    (S_rhi)
    (S_thi)
    (S_uhi)
    (S_vhi)
    (S_xhi)
    (S_yhi)
    (S_zhi)
    (S_bii)
    (S_cii)
    (S_gii)
    (S_hii)
    (S_jii)
    (S_kii)
    (S_lii)
    (S_mii)
    (S_qii)
    (S_rii)
    (S_tii)
    (S_uii)
    (S_vii)
    (S_xii)
    (S_yii)
    (S_zii)
    (S_bji)
    (S_cji)
    (S_gji)
    (S_hji)
    (S_jji)
    (S_kji)
    (S_lji)
    (S_mji)
    (S_qji)
    (S_rji)
    (S_tji)
    (S_uji)
    (S_vji)
    (S_xji)
    (S_yji)
    (S_zji)
    (S_bki)
    (S_cki)
    (S_gki)
    (S_hki)
    (S_jki)
    (S_kki)
    (S_lki)
    (S_mki)
    (S_qki)
    (S_rki)
    (S_tki)
    (S_uki)
    (S_vki)
    (S_xki)
    (S_yki)
    (S_zki)
    (S_bli)
    (S_cli)
    (S_gli)
    (S_hli)
    (S_jli)
    (S_kli)
    (S_lli)
    (S_mli)
    (S_qli)
    (S_rli)
    (S_tli)
    (S_uli)
    (S_vli)
    (S_xli)
    (S_yli)
    (S_zli)
    (S_bmi)
    (S_cmi)
    (S_gmi)
    (S_hmi)
    (S_jmi)
    (S_kmi)
    (S_lmi)
    (S_mmi)
    (S_qmi)
    (S_rmi)
    (S_tmi)
    (S_umi)
    (S_vmi)
    (S_xmi)
    (S_ymi)
    (S_zmi)
    (S_bni)
    (S_cni)
    (S_gni)
    (S_hni)
    (S_jni)
    (S_kni)
    (S_lni)
    (S_mni)
    (S_qni)
    (S_rni)
    (S_tni)
    (S_uni)
    (S_vni)
    (S_xni)
    (S_yni)
    (S_zni)
    (S_boi)
    (S_coi)
    (S_goi)
    (S_hoi)
    (S_joi)
    (S_koi)
    (S_loi)
    (S_moi)
    (S_qoi)
    (S_roi)
    (S_toi)
    (S_uoi)
    (S_voi)
    (S_xoi)
    (S_yoi)
    (S_zoi)
    (S_bpi)
    (S_cpi)
    (S_gpi)
    (S_hpi)
    (S_jpi)
    (S_kpi)
    (S_lpi)
    (S_mpi)
    (S_qpi)
    (S_rpi)
    (S_tpi)
    (S_upi)
    (S_vpi)
    (S_xpi)
    (S_ypi)
    (S_zpi)
    (S_bqi)
    (S_cqi)
    (S_gqi)
    (S_hqi)
    (S_jqi)
    (S_kqi)
    (S_lqi)
    (S_mqi)
    (S_qqi)
    (S_rqi)
    (S_tqi)
    (S_uqi)
    (S_vqi)
    (S_xqi)
    (S_yqi)
    (S_zqi)
    (S_bsi)
    (S_csi)
    (S_gsi)
    (S_hsi)
    (S_jsi)
    (S_ksi)
    (S_lsi)
    (S_msi)
    (S_qsi)
    (S_rsi)
    (S_tsi)
    (S_usi)
    (S_vsi)
    (S_xsi)
    (S_ysi)
    (S_zsi)
    (S_bri)
    (S_cri)
    (S_gri)
    (S_hri)
    (S_jri)
    (S_kri)
    (S_lri)
    (S_mri)
    (S_qri)
    (S_rri)
    (S_tri)
    (S_uri)
    (S_vri)
    (S_xri)
    (S_yri)
    (S_zri)
    (S_bti)
    (S_cti)
    (S_gti)
    (S_hti)
    (S_jti)
    (S_kti)
    (S_lti)
    (S_mti)
    (S_qti)
    (S_rti)
    (S_tti)
    (S_uti)
    (S_vti)
    (S_xti)
    (S_yti)
    (S_zti)
    (S_bui)
    (S_cui)
    (S_gui)
    (S_hui)
    (S_jui)
    (S_kui)
    (S_lui)
    (S_mui)
    (S_qui)
    (S_rui)
    (S_tui)
    (S_uui)
    (S_vui)
    (S_xui)
    (S_yui)
    (S_zui)
    (S_bvi)
    (S_cvi)
    (S_gvi)
    (S_hvi)
    (S_jvi)
    (S_kvi)
    (S_lvi)
    (S_mvi)
    (S_qvi)
    (S_rvi)
    (S_tvi)
    (S_uvi)
    (S_vvi)
    (S_xvi)
    (S_yvi)
    (S_zvi)
    (S_bwi)
    (S_cwi)
    (S_gwi)
    (S_hwi)
    (S_jwi)
    (S_kwi)
    (S_lwi)
    (S_mwi)
    (S_qwi)
    (S_rwi)
    (S_twi)
    (S_uwi)
    (S_vwi)
    (S_xwi)
    (S_ywi)
    (S_zwi)
    (S_bxi)
    (S_cxi)
    (S_gxi)
    (S_hxi)
    (S_jxi)
    (S_kxi)
    (S_lxi)
    (S_mxi)
    (S_qxi)
    (S_rxi)
    (S_txi)
    (S_uxi)
    (S_vxi)
    (S_xxi)
    (S_yxi)
    (S_zxi)
    (S_byi)
    (S_cyi)
    (S_gyi)
    (S_hyi)
    (S_jyi)
    (S_kyi)
    (S_lyi)
    (S_myi)
    (S_qyi)
    (S_ryi)
    (S_tyi)
    (S_uyi)
    (S_vyi)
    (S_xyi)
    (S_yyi)
    (S_zyi)
    (S_bzi)
    (S_czi)
    (S_gzi)
    (S_hzi)
    (S_jzi)
    (S_kzi)
    (S_lzi)
    (S_mzi)
    (S_qzi)
    (S_rzi)
    (S_tzi)
    (S_uzi)
    (S_vzi)
    (S_xzi)
    (S_yzi)
    (S_zzi)
    (S_b1i)
    (S_c1i)
    (S_g1i)
    (S_h1i)
    (S_j1i)
    (S_k1i)
    (S_l1i)
    (S_m1i)
    (S_q1i)
    (S_r1i)
    (S_t1i)
    (S_u1i)
    (S_v1i)
    (S_x1i)
    (S_y1i)
    (S_z1i)
    (S_b2i)
    (S_c2i)
    (S_g2i)
    (S_h2i)
    (S_j2i)
    (S_k2i)
    (S_l2i)
    (S_m2i)
    (S_q2i)
    (S_r2i)
    (S_t2i)
    (S_u2i)
    (S_v2i)
    (S_x2i)
    (S_y2i)
    (S_z2i)
    (S_b3i)
    (S_c3i)
    (S_g3i)
    (S_h3i)
    (S_j3i)
    (S_k3i)
    (S_l3i)
    (S_m3i)
    (S_q3i)
    (S_r3i)
    (S_t3i)
    (S_u3i)
    (S_v3i)
    (S_x3i)
    (S_y3i)
    (S_z3i)
    (S_b4i)
    (S_c4i)
    (S_g4i)
    (S_h4i)
    (S_j4i)
    (S_k4i)
    (S_l4i)
    (S_m4i)
    (S_q4i)
    (S_r4i)
    (S_t4i)
    (S_u4i)
    (S_v4i)
    (S_x4i)
    (S_y4i)
    (S_z4i)
    (S_b5i)
    (S_c5i)
    (S_g5i)
    (S_h5i)
    (S_j5i)
    (S_k5i)
    (S_l5i)
    (S_m5i)
    (S_q5i)
    (S_r5i)
    (S_t5i)
    (S_u5i)
    (S_v5i)
    (S_x5i)
    (S_y5i)
    (S_z5i)
    (S_b6i)
    (S_c6i)
    (S_g6i)
    (S_h6i)
    (S_j6i)
    (S_k6i)
    (S_l6i)
    (S_m6i)
    (S_q6i)
    (S_r6i)
    (S_t6i)
    (S_u6i)
    (S_v6i)
    (S_x6i)
    (S_y6i)
    (S_z6i)
    (S_b7i)
    (S_c7i)
    (S_g7i)
    (S_h7i)
    (S_j7i)
    (S_k7i)
    (S_l7i)
    (S_m7i)
    (S_q7i)
    (S_r7i)
    (S_t7i)
    (S_u7i)
    (S_v7i)
    (S_x7i)
    (S_y7i)
    (S_z7i)
    (S_b8i)
    (S_c8i)
    (S_g8i)
    (S_h8i)
    (S_j8i)
    (S_k8i)
    (S_l8i)
    (S_m8i)
    (S_q8i)
    (S_r8i)
    (S_t8i)
    (S_u8i)
    (S_v8i)
    (S_x8i)
    (S_y8i)
    (S_z8i)
    (S_b9i)
    (S_c9i)
    (S_g9i)
    (S_h9i)
    (S_j9i)
    (S_k9i)
    (S_l9i)
    (S_m9i)
    (S_q9i)
    (S_r9i)
    (S_t9i)
    (S_u9i)
    (S_v9i)
    (S_x9i)
    (S_y9i)
    (S_z9i)
    (S_b0i)
    (S_c0i)
    (S_g0i)
    (S_h0i)
    (S_j0i)
    (S_k0i)
    (S_l0i)
    (S_m0i)
    (S_q0i)
    (S_r0i)
    (S_t0i)
    (S_u0i)
    (S_v0i)
    (S_x0i)
    (S_y0i)
    (S_z0i)
    (S_baj)
    (S_caj)
    (S_gaj)
    (S_haj)
    (S_jaj)
    (S_kaj)
    (S_laj)
    (S_maj)
    (S_qaj)
    (S_raj)
    (S_taj)
    (S_uaj)
    (S_vaj)
    (S_xaj)
    (S_yaj)
    (S_zaj)
    (S_bbj)
    (S_cbj)
    (S_gbj)
    (S_hbj)
    (S_jbj)
    (S_kbj)
    (S_lbj)
    (S_mbj)
    (S_qbj)
    (S_rbj)
    (S_tbj)
    (S_ubj)
    (S_vbj)
    (S_xbj)
    (S_ybj)
    (S_zbj)
    (S_bcj)
    (S_ccj)
    (S_gcj)
    (S_hcj)
    (S_jcj)
    (S_kcj)
    (S_lcj)
    (S_mcj)
    (S_qcj)
    (S_rcj)
    (S_tcj)
    (S_ucj)
    (S_vcj)
    (S_xcj)
    (S_ycj)
    (S_zcj)
    (S_bdj)
    (S_cdj)
    (S_gdj)
    (S_hdj)
    (S_jdj)
    (S_kdj)
    (S_ldj)
    (S_mdj)
    (S_qdj)
    (S_rdj)
    (S_tdj)
    (S_udj)
    (S_vdj)
    (S_xdj)
    (S_ydj)
    (S_zdj)
    (S_bej)
    (S_cej)
    (S_gej)
    (S_hej)
    (S_jej)
    (S_kej)
    (S_lej)
    (S_mej)
    (S_qej)
    (S_rej)
    (S_tej)
    (S_uej)
    (S_vej)
    (S_xej)
    (S_yej)
    (S_zej)
    (S_bfj)
    (S_cfj)
    (S_gfj)
    (S_hfj)
    (S_jfj)
    (S_kfj)
    (S_lfj)
    (S_mfj)
    (S_qfj)
    (S_rfj)
    (S_tfj)
    (S_ufj)
    (S_vfj)
    (S_xfj)
    (S_yfj)
    (S_zfj)
    (S_bgj)
    (S_cgj)
    (S_ggj)
    (S_hgj)
    (S_jgj)
    (S_kgj)
    (S_lgj)
    (S_mgj)
    (S_qgj)
    (S_rgj)
    (S_tgj)
    (S_ugj)
    (S_vgj)
    (S_xgj)
    (S_ygj)
    (S_zgj)
    (S_bhj)
    (S_chj)
    (S_ghj)
    (S_hhj)
    (S_jhj)
    (S_khj)
    (S_lhj)
    (S_mhj)
    (S_qhj)
    (S_rhj)
    (S_thj)
    (S_uhj)
    (S_vhj)
    (S_xhj)
    (S_yhj)
    (S_zhj)
    (S_bij)
    (S_cij)
    (S_gij)
    (S_hij)
    (S_jij)
    (S_kij)
    (S_lij)
    (S_mij)
    (S_qij)
    (S_rij)
    (S_tij)
    (S_uij)
    (S_vij)
    (S_xij)
    (S_yij)
    (S_zij)
    (S_bjj)
    (S_cjj)
    (S_gjj)
    (S_hjj)
    (S_jjj)
    (S_kjj)
    (S_ljj)
    (S_mjj)
    (S_qjj)
    (S_rjj)
    (S_tjj)
    (S_ujj)
    (S_vjj)
    (S_xjj)
    (S_yjj)
    (S_zjj)
    (S_bkj)
    (S_ckj)
    (S_gkj)
    (S_hkj)
    (S_jkj)
    (S_kkj)
    (S_lkj)
    (S_mkj)
    (S_qkj)
    (S_rkj)
    (S_tkj)
    (S_ukj)
    (S_vkj)
    (S_xkj)
    (S_ykj)
    (S_zkj)
    (S_blj)
    (S_clj)
    (S_glj)
    (S_hlj)
    (S_jlj)
    (S_klj)
    (S_llj)
    (S_mlj)
    (S_qlj)
    (S_rlj)
    (S_tlj)
    (S_ulj)
    (S_vlj)
    (S_xlj)
    (S_ylj)
    (S_zlj)
    (S_bmj)
    (S_cmj)
    (S_gmj)
    (S_hmj)
    (S_jmj)
    (S_kmj)
    (S_lmj)
    (S_mmj)
    (S_qmj)
    (S_rmj)
    (S_tmj)
    (S_umj)
    (S_vmj)
    (S_xmj)
    (S_ymj)
    (S_zmj)
    (S_bnj)
    (S_cnj)
    (S_gnj)
    (S_hnj)
    (S_jnj)
    (S_knj)
    (S_lnj)
    (S_mnj)
    (S_qnj)
    (S_rnj)
    (S_tnj)
    (S_unj)
    (S_vnj)
    (S_xnj)
    (S_ynj)
    (S_znj)
    (S_boj)
    (S_coj)
    (S_goj)
    (S_hoj)
    (S_joj)
    (S_koj)
    (S_loj)
    (S_moj)
    (S_qoj)
    (S_roj)
    (S_toj)
    (S_uoj)
    (S_voj)
    (S_xoj)
    (S_yoj)
    (S_zoj)
    (S_bpj)
    (S_cpj)
    (S_gpj)
    (S_hpj)
    (S_jpj)
    (S_kpj)
    (S_lpj)
    (S_mpj)
    (S_qpj)
    (S_rpj)
    (S_tpj)
    (S_upj)
    (S_vpj)
    (S_xpj)
    (S_ypj)
    (S_zpj)
    (S_bqj)
    (S_cqj)
    (S_gqj)
    (S_hqj)
    (S_jqj)
    (S_kqj)
    (S_lqj)
    (S_mqj)
    (S_qqj)
    (S_rqj)
    (S_tqj)
    (S_uqj)
    (S_vqj)
    (S_xqj)
    (S_yqj)
    (S_zqj)
    (S_bsj)
    (S_csj)
    (S_gsj)
    (S_hsj)
    (S_jsj)
    (S_ksj)
    (S_lsj)
    (S_msj)
    (S_qsj)
    (S_rsj)
    (S_tsj)
    (S_usj)
    (S_vsj)
    (S_xsj)
    (S_ysj)
    (S_zsj)
    (S_brj)
    (S_crj)
    (S_grj)
    (S_hrj)
    (S_jrj)
    (S_krj)
    (S_lrj)
    (S_mrj)
    (S_qrj)
    (S_rrj)
    (S_trj)
    (S_urj)
    (S_vrj)
    (S_xrj)
    (S_yrj)
    (S_zrj)
    (S_btj)
    (S_ctj)
    (S_gtj)
    (S_htj)
    (S_jtj)
    (S_ktj)
    (S_ltj)
    (S_mtj)
    (S_qtj)
    (S_rtj)
    (S_ttj)
    (S_utj)
    (S_vtj)
    (S_xtj)
    (S_ytj)
    (S_ztj)
    (S_buj)
    (S_cuj)
    (S_guj)
    (S_huj)
    (S_juj)
    (S_kuj)
    (S_luj)
    (S_muj)
    (S_quj)
    (S_ruj)
    (S_tuj)
    (S_uuj)
    (S_vuj)
    (S_xuj)
    (S_yuj)
    (S_zuj)
    (S_bvj)
    (S_cvj)
    (S_gvj)
    (S_hvj)
    (S_jvj)
    (S_kvj)
    (S_lvj)
    (S_mvj)
    (S_qvj)
    (S_rvj)
    (S_tvj)
    (S_uvj)
    (S_vvj)
    (S_xvj)
    (S_yvj)
    (S_zvj)
    (S_bwj)
    (S_cwj)
    (S_gwj)
    (S_hwj)
    (S_jwj)
    (S_kwj)
    (S_lwj)
    (S_mwj)
    (S_qwj)
    (S_rwj)
    (S_twj)
    (S_uwj)
    (S_vwj)
    (S_xwj)
    (S_ywj)
    (S_zwj)
    (S_bxj)
    (S_cxj)
    (S_gxj)
    (S_hxj)
    (S_jxj)
    (S_kxj)
    (S_lxj)
    (S_mxj)
    (S_qxj)
    (S_rxj)
    (S_txj)
    (S_uxj)
    (S_vxj)
    (S_xxj)
    (S_yxj)
    (S_zxj)
    (S_byj)
    (S_cyj)
    (S_gyj)
    (S_hyj)
    (S_jyj)
    (S_kyj)
    (S_lyj)
    (S_myj)
    (S_qyj)
    (S_ryj)
    (S_tyj)
    (S_uyj)
    (S_vyj)
    (S_xyj)
    (S_yyj)
    (S_zyj)
    (S_bzj)
    (S_czj)
    (S_gzj)
    (S_hzj)
    (S_jzj)
    (S_kzj)
    (S_lzj)
    (S_mzj)
    (S_qzj)
    (S_rzj)
    (S_tzj)
    (S_uzj)
    (S_vzj)
    (S_xzj)
    (S_yzj)
    (S_zzj)
    (S_b1j)
    (S_c1j)
    (S_g1j)
    (S_h1j)
    (S_j1j)
    (S_k1j)
    (S_l1j)
    (S_m1j)
    (S_q1j)
    (S_r1j)
    (S_t1j)
    (S_u1j)
    (S_v1j)
    (S_x1j)
    (S_y1j)
    (S_z1j)
    (S_b2j)
    (S_c2j)
    (S_g2j)
    (S_h2j)
    (S_j2j)
    (S_k2j)
    (S_l2j)
    (S_m2j)
    (S_q2j)
    (S_r2j)
    (S_t2j)
    (S_u2j)
    (S_v2j)
    (S_x2j)
    (S_y2j)
    (S_z2j)
    (S_b3j)
    (S_c3j)
    (S_g3j)
    (S_h3j)
    (S_j3j)
    (S_k3j)
    (S_l3j)
    (S_m3j)
    (S_q3j)
    (S_r3j)
    (S_t3j)
    (S_u3j)
    (S_v3j)
    (S_x3j)
    (S_y3j)
    (S_z3j)
    (S_b4j)
    (S_c4j)
    (S_g4j)
    (S_h4j)
    (S_j4j)
    (S_k4j)
    (S_l4j)
    (S_m4j)
    (S_q4j)
    (S_r4j)
    (S_t4j)
    (S_u4j)
    (S_v4j)
    (S_x4j)
    (S_y4j)
    (S_z4j)
    (S_b5j)
    (S_c5j)
    (S_g5j)
    (S_h5j)
    (S_j5j)
    (S_k5j)
    (S_l5j)
    (S_m5j)
    (S_q5j)
    (S_r5j)
    (S_t5j)
    (S_u5j)
    (S_v5j)
    (S_x5j)
    (S_y5j)
    (S_z5j)
    (S_b6j)
    (S_c6j)
    (S_g6j)
    (S_h6j)
    (S_j6j)
    (S_k6j)
    (S_l6j)
    (S_m6j)
    (S_q6j)
    (S_r6j)
    (S_t6j)
    (S_u6j)
    (S_v6j)
    (S_x6j)
    (S_y6j)
    (S_z6j)
    (S_b7j)
    (S_c7j)
    (S_g7j)
    (S_h7j)
    (S_j7j)
    (S_k7j)
    (S_l7j)
    (S_m7j)
    (S_q7j)
    (S_r7j)
    (S_t7j)
    (S_u7j)
    (S_v7j)
    (S_x7j)
    (S_y7j)
    (S_z7j)
    (S_b8j)
    (S_c8j)
    (S_g8j)
    (S_h8j)
    (S_j8j)
    (S_k8j)
    (S_l8j)
    (S_m8j)
    (S_q8j)
    (S_r8j)
    (S_t8j)
    (S_u8j)
    (S_v8j)
    (S_x8j)
    (S_y8j)
    (S_z8j)
    (S_b9j)
    (S_c9j)
    (S_g9j)
    (S_h9j)
    (S_j9j)
    (S_k9j)
    (S_l9j)
    (S_m9j)
    (S_q9j)
    (S_r9j)
    (S_t9j)
    (S_u9j)
    (S_v9j)
    (S_x9j)
    (S_y9j)
    (S_z9j)
    (S_b0j)
    (S_c0j)
    (S_g0j)
    (S_h0j)
    (S_j0j)
    (T0_FAIL_k0)
  )
  (:action MOVE_P1-4_P1-3
    :precondition  (and 
      (bcc)
      (lxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bcc) (lxc) )
         (and (not (uxc)) (not (lxc)) (kxc) (vxc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z0c) (kvd) )
         (and (not (tvd)) (not (kvd)) (not (uxc)) (not (lxc)) (kxc) (vxc) (jvd) (uvd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jvd)) (not (y0c)) )
         (and (not (tvd)) (not (kvd)) (not (uxc)) (not (lxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (x5d) )
         (and (not (q8d)) (not (x5d)) (y5d) (m8d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (z5d) )
         (and (not (t8d)) (not (z5d)) (b6d) (r8d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (c6d) )
         (and (not (v8d)) (not (c6d)) (g6d) (u8d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (h6d) )
         (and (not (y8d)) (not (h6d)) (j6d) (x8d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (k6d) )
         (and (not (b9d)) (not (k6d)) (l6d) (z8d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (m6d) )
         (and (not (g9d)) (not (m6d)) (q6d) (c9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (r6d) )
         (and (not (j9d)) (not (r6d)) (t6d) (h9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (u6d) )
         (and (not (l9d)) (not (u6d)) (v6d) (k9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (x6d) )
         (and (not (q9d)) (not (x6d)) (y6d) (m9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (z6d) )
         (and (not (t9d)) (not (z6d)) (b7d) (r9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (c7d) )
         (and (not (v9d)) (not (c7d)) (g7d) (u9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (h7d) )
         (and (not (y9d)) (not (h7d)) (j7d) (x9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (k7d) )
         (and (not (b0d)) (not (k7d)) (l7d) (z9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (m7d) )
         (and (not (g0d)) (not (m7d)) (q7d) (c0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (r7d) )
         (and (not (j0d)) (not (r7d)) (t7d) (h0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (u7d) )
         (and (not (l0d)) (not (u7d)) (v7d) (k0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (x7d) )
         (and (not (q0d)) (not (x7d)) (y7d) (m0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (z7d) )
         (and (not (t0d)) (not (z7d)) (b8d) (r0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (c8d) )
         (and (not (v0d)) (not (c8d)) (g8d) (u0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (h8d) )
         (and (not (y0d)) (not (h8d)) (j8d) (x0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (k8d) )
         (and (not (bae)) (not (k8d)) (l8d) (z0d) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5d)) (not (y0c)) )
         (and (not (q8d)) (not (x5d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6d)) (not (y0c)) )
         (and (not (t8d)) (not (z5d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6d)) (not (y0c)) )
         (and (not (v8d)) (not (c6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6d)) (not (y0c)) )
         (and (not (y8d)) (not (h6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6d)) (not (y0c)) )
         (and (not (b9d)) (not (k6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6d)) (not (y0c)) )
         (and (not (g9d)) (not (m6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6d)) (not (y0c)) )
         (and (not (j9d)) (not (r6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6d)) (not (y0c)) )
         (and (not (l9d)) (not (u6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6d)) (not (y0c)) )
         (and (not (q9d)) (not (x6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7d)) (not (y0c)) )
         (and (not (t9d)) (not (z6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7d)) (not (y0c)) )
         (and (not (v9d)) (not (c7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7d)) (not (y0c)) )
         (and (not (y9d)) (not (h7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7d)) (not (y0c)) )
         (and (not (b0d)) (not (k7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7d)) (not (y0c)) )
         (and (not (g0d)) (not (m7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7d)) (not (y0c)) )
         (and (not (j0d)) (not (r7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7d)) (not (y0c)) )
         (and (not (l0d)) (not (u7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7d)) (not (y0c)) )
         (and (not (q0d)) (not (x7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8d)) (not (y0c)) )
         (and (not (t0d)) (not (z7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8d)) (not (y0c)) )
         (and (not (v0d)) (not (c8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8d)) (not (y0c)) )
         (and (not (y0d)) (not (h8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l8d)) (not (y0c)) )
         (and (not (bae)) (not (k8d)) ))

    )
  )
  (:action MOVE_P1-4_P1-5
    :precondition  (and 
      (vbc)
      (lxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (vbc) (lxc) )
         (and (not (xxc)) (not (lxc)) (kxc) (yxc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u0c) (kvd) )
         (and (not (vvd)) (not (kvd)) (not (xxc)) (not (lxc)) (kxc) (yxc) (jvd) (xvd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jvd)) (not (t0c)) )
         (and (not (vvd)) (not (kvd)) (not (xxc)) (not (lxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (x5d) )
         (and (not (gae)) (not (x5d)) (y5d) (cae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (z5d) )
         (and (not (jae)) (not (z5d)) (b6d) (hae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (c6d) )
         (and (not (lae)) (not (c6d)) (g6d) (kae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (h6d) )
         (and (not (qae)) (not (h6d)) (j6d) (mae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (k6d) )
         (and (not (tae)) (not (k6d)) (l6d) (rae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (m6d) )
         (and (not (vae)) (not (m6d)) (q6d) (uae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (r6d) )
         (and (not (yae)) (not (r6d)) (t6d) (xae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (u6d) )
         (and (not (bbe)) (not (u6d)) (v6d) (zae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (x6d) )
         (and (not (gbe)) (not (x6d)) (y6d) (cbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (z6d) )
         (and (not (jbe)) (not (z6d)) (b7d) (hbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (c7d) )
         (and (not (lbe)) (not (c7d)) (g7d) (kbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (h7d) )
         (and (not (qbe)) (not (h7d)) (j7d) (mbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (k7d) )
         (and (not (tbe)) (not (k7d)) (l7d) (rbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (m7d) )
         (and (not (vbe)) (not (m7d)) (q7d) (ube) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (r7d) )
         (and (not (ybe)) (not (r7d)) (t7d) (xbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (u7d) )
         (and (not (bce)) (not (u7d)) (v7d) (zbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (x7d) )
         (and (not (gce)) (not (x7d)) (y7d) (cce) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (z7d) )
         (and (not (jce)) (not (z7d)) (b8d) (hce) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (c8d) )
         (and (not (lce)) (not (c8d)) (g8d) (kce) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (h8d) )
         (and (not (qce)) (not (h8d)) (j8d) (mce) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (k8d) )
         (and (not (tce)) (not (k8d)) (l8d) (rce) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5d)) (not (t0c)) )
         (and (not (gae)) (not (x5d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6d)) (not (t0c)) )
         (and (not (jae)) (not (z5d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6d)) (not (t0c)) )
         (and (not (lae)) (not (c6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6d)) (not (t0c)) )
         (and (not (qae)) (not (h6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6d)) (not (t0c)) )
         (and (not (tae)) (not (k6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6d)) (not (t0c)) )
         (and (not (vae)) (not (m6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6d)) (not (t0c)) )
         (and (not (yae)) (not (r6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6d)) (not (t0c)) )
         (and (not (bbe)) (not (u6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6d)) (not (t0c)) )
         (and (not (gbe)) (not (x6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7d)) (not (t0c)) )
         (and (not (jbe)) (not (z6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7d)) (not (t0c)) )
         (and (not (lbe)) (not (c7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7d)) (not (t0c)) )
         (and (not (qbe)) (not (h7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7d)) (not (t0c)) )
         (and (not (tbe)) (not (k7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7d)) (not (t0c)) )
         (and (not (vbe)) (not (m7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7d)) (not (t0c)) )
         (and (not (ybe)) (not (r7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7d)) (not (t0c)) )
         (and (not (bce)) (not (u7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7d)) (not (t0c)) )
         (and (not (gce)) (not (x7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8d)) (not (t0c)) )
         (and (not (jce)) (not (z7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8d)) (not (t0c)) )
         (and (not (lce)) (not (c8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8d)) (not (t0c)) )
         (and (not (qce)) (not (h8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l8d)) (not (t0c)) )
         (and (not (tce)) (not (k8d)) ))

    )
  )
  (:action MOVE_P1-4_P2-4
    :precondition  (and 
      (bbc)
      (lxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bbc) (lxc) )
         (and (not (ryc)) (not (lxc)) (kxc) (tyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z9c) (kvd) )
         (and (not (qwd)) (not (kvd)) (not (ryc)) (not (lxc)) (kxc) (tyc) (jvd) (rwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jvd)) (not (y9c)) )
         (and (not (qwd)) (not (kvd)) (not (ryc)) (not (lxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (x5d) )
         (and (not (tde)) (not (x5d)) (y5d) (rde) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (z5d) )
         (and (not (vde)) (not (z5d)) (b6d) (ude) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (c6d) )
         (and (not (yde)) (not (c6d)) (g6d) (xde) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (h6d) )
         (and (not (bee)) (not (h6d)) (j6d) (zde) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (k6d) )
         (and (not (gee)) (not (k6d)) (l6d) (cee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (m6d) )
         (and (not (jee)) (not (m6d)) (q6d) (hee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (r6d) )
         (and (not (lee)) (not (r6d)) (t6d) (kee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (u6d) )
         (and (not (qee)) (not (u6d)) (v6d) (mee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (x6d) )
         (and (not (tee)) (not (x6d)) (y6d) (ree) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (z6d) )
         (and (not (vee)) (not (z6d)) (b7d) (uee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (c7d) )
         (and (not (yee)) (not (c7d)) (g7d) (xee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (h7d) )
         (and (not (bfe)) (not (h7d)) (j7d) (zee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (k7d) )
         (and (not (gfe)) (not (k7d)) (l7d) (cfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (m7d) )
         (and (not (jfe)) (not (m7d)) (q7d) (hfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (r7d) )
         (and (not (lfe)) (not (r7d)) (t7d) (kfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (u7d) )
         (and (not (qfe)) (not (u7d)) (v7d) (mfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (x7d) )
         (and (not (tfe)) (not (x7d)) (y7d) (rfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7d) (yce) )
         (and (not (vfe)) (not (z7d)) (b8d) (ufe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (c8d) )
         (and (not (yfe)) (not (c8d)) (g8d) (xfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (h8d) )
         (and (not (bge)) (not (h8d)) (j8d) (zfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (k8d) )
         (and (not (gge)) (not (k8d)) (l8d) (cge) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5d)) (not (y9c)) )
         (and (not (tde)) (not (x5d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6d)) (not (y9c)) )
         (and (not (vde)) (not (z5d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6d)) (not (y9c)) )
         (and (not (yde)) (not (c6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6d)) (not (y9c)) )
         (and (not (bee)) (not (h6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6d)) (not (y9c)) )
         (and (not (gee)) (not (k6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6d)) (not (y9c)) )
         (and (not (jee)) (not (m6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6d)) (not (y9c)) )
         (and (not (lee)) (not (r6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6d)) (not (y9c)) )
         (and (not (qee)) (not (u6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6d)) (not (y9c)) )
         (and (not (tee)) (not (x6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7d)) (not (y9c)) )
         (and (not (vee)) (not (z6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7d)) (not (y9c)) )
         (and (not (yee)) (not (c7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7d)) (not (y9c)) )
         (and (not (bfe)) (not (h7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7d)) (not (y9c)) )
         (and (not (gfe)) (not (k7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7d)) (not (y9c)) )
         (and (not (jfe)) (not (m7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gde)) (not (t7d)) )
         (and (not (lfe)) (not (r7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hde)) (not (v7d)) )
         (and (not (qfe)) (not (u7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jde)) (not (y7d)) )
         (and (not (tfe)) (not (x7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kde)) (not (b8d)) )
         (and (not (vfe)) (not (z7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lde)) (not (g8d)) )
         (and (not (yfe)) (not (c8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mde)) (not (j8d)) )
         (and (not (bge)) (not (h8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qde)) (not (l8d)) )
         (and (not (gge)) (not (k8d)) ))

    )
  )
  (:action MOVE_P1-5_P1-4
    :precondition  (and 
      (ybc)
      (yxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (ybc) (yxc) )
         (and (not (yxc)) (not (kxc)) (lxc) (xxc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x0c) (xvd) )
         (and (not (xvd)) (not (jvd)) (not (yxc)) (not (kxc)) (lxc) (xxc) (kvd) (vvd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vvd)) (not (v0c)) )
         (and (not (xvd)) (not (jvd)) (not (yxc)) (not (kxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (cae) )
         (and (not (cae)) (not (y5d)) (x5d) (gae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (hae) )
         (and (not (hae)) (not (b6d)) (z5d) (jae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (kae) )
         (and (not (kae)) (not (g6d)) (c6d) (lae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (mae) )
         (and (not (mae)) (not (j6d)) (h6d) (qae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (rae) )
         (and (not (rae)) (not (l6d)) (k6d) (tae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (uae) )
         (and (not (uae)) (not (q6d)) (m6d) (vae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (xae) )
         (and (not (xae)) (not (t6d)) (r6d) (yae) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (zae) )
         (and (not (zae)) (not (v6d)) (u6d) (bbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (cbe) )
         (and (not (cbe)) (not (y6d)) (x6d) (gbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (hbe) )
         (and (not (hbe)) (not (b7d)) (z6d) (jbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (kbe) )
         (and (not (kbe)) (not (g7d)) (c7d) (lbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (mbe) )
         (and (not (mbe)) (not (j7d)) (h7d) (qbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (rbe) )
         (and (not (rbe)) (not (l7d)) (k7d) (tbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (ube) )
         (and (not (ube)) (not (q7d)) (m7d) (vbe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (xbe) )
         (and (not (xbe)) (not (t7d)) (r7d) (ybe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (zbe) )
         (and (not (zbe)) (not (v7d)) (u7d) (bce) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (cce) )
         (and (not (cce)) (not (y7d)) (x7d) (gce) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (hce) )
         (and (not (hce)) (not (b8d)) (z7d) (jce) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (kce) )
         (and (not (kce)) (not (g8d)) (c8d) (lce) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (mce) )
         (and (not (mce)) (not (j8d)) (h8d) (qce) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (rce) )
         (and (not (rce)) (not (l8d)) (k8d) (tce) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gae)) (not (v0c)) )
         (and (not (cae)) (not (y5d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jae)) (not (v0c)) )
         (and (not (hae)) (not (b6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lae)) (not (v0c)) )
         (and (not (kae)) (not (g6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qae)) (not (v0c)) )
         (and (not (mae)) (not (j6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tae)) (not (v0c)) )
         (and (not (rae)) (not (l6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vae)) (not (v0c)) )
         (and (not (uae)) (not (q6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yae)) (not (v0c)) )
         (and (not (xae)) (not (t6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bbe)) (not (v0c)) )
         (and (not (zae)) (not (v6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gbe)) (not (v0c)) )
         (and (not (cbe)) (not (y6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jbe)) (not (v0c)) )
         (and (not (hbe)) (not (b7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lbe)) (not (v0c)) )
         (and (not (kbe)) (not (g7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbe)) (not (v0c)) )
         (and (not (mbe)) (not (j7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbe)) (not (v0c)) )
         (and (not (rbe)) (not (l7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbe)) (not (v0c)) )
         (and (not (ube)) (not (q7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybe)) (not (v0c)) )
         (and (not (xbe)) (not (t7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bce)) (not (v0c)) )
         (and (not (zbe)) (not (v7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gce)) (not (v0c)) )
         (and (not (cce)) (not (y7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jce)) (not (v0c)) )
         (and (not (hce)) (not (b8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lce)) (not (v0c)) )
         (and (not (kce)) (not (g8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qce)) (not (v0c)) )
         (and (not (mce)) (not (j8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tce)) (not (v0c)) )
         (and (not (rce)) (not (l8d)) ))

    )
  )
  (:action MOVE_P1-5_P1-6
    :precondition  (and 
      (tbc)
      (yxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (tbc) (yxc) )
         (and (not (zxc)) (not (yxc)) (xxc) (byc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r0c) (xvd) )
         (and (not (yvd)) (not (xvd)) (not (zxc)) (not (yxc)) (xxc) (byc) (vvd) (zvd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vvd)) (not (q0c)) )
         (and (not (yvd)) (not (xvd)) (not (zxc)) (not (yxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (cae) )
         (and (not (jge)) (not (cae)) (gae) (hge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (hae) )
         (and (not (lge)) (not (hae)) (jae) (kge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (kae) )
         (and (not (qge)) (not (kae)) (lae) (mge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (mae) )
         (and (not (tge)) (not (mae)) (qae) (rge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (rae) )
         (and (not (vge)) (not (rae)) (tae) (uge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (uae) )
         (and (not (yge)) (not (uae)) (vae) (xge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (xae) )
         (and (not (bhe)) (not (xae)) (yae) (zge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (zae) )
         (and (not (ghe)) (not (zae)) (bbe) (che) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (cbe) )
         (and (not (jhe)) (not (cbe)) (gbe) (hhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (hbe) )
         (and (not (lhe)) (not (hbe)) (jbe) (khe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (kbe) )
         (and (not (qhe)) (not (kbe)) (lbe) (mhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (mbe) )
         (and (not (the)) (not (mbe)) (qbe) (rhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (rbe) )
         (and (not (vhe)) (not (rbe)) (tbe) (uhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (ube) )
         (and (not (yhe)) (not (ube)) (vbe) (xhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (xbe) )
         (and (not (bie)) (not (xbe)) (ybe) (zhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (zbe) )
         (and (not (gie)) (not (zbe)) (bce) (cie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (cce) )
         (and (not (jie)) (not (cce)) (gce) (hie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (hce) )
         (and (not (lie)) (not (hce)) (jce) (kie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (kce) )
         (and (not (qie)) (not (kce)) (lce) (mie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (mce) )
         (and (not (tie)) (not (mce)) (qce) (rie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (rce) )
         (and (not (vie)) (not (rce)) (tce) (uie) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gae)) (not (q0c)) )
         (and (not (jge)) (not (cae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jae)) (not (q0c)) )
         (and (not (lge)) (not (hae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lae)) (not (q0c)) )
         (and (not (qge)) (not (kae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qae)) (not (q0c)) )
         (and (not (tge)) (not (mae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tae)) (not (q0c)) )
         (and (not (vge)) (not (rae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vae)) (not (q0c)) )
         (and (not (yge)) (not (uae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yae)) (not (q0c)) )
         (and (not (bhe)) (not (xae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bbe)) (not (q0c)) )
         (and (not (ghe)) (not (zae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gbe)) (not (q0c)) )
         (and (not (jhe)) (not (cbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jbe)) (not (q0c)) )
         (and (not (lhe)) (not (hbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lbe)) (not (q0c)) )
         (and (not (qhe)) (not (kbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbe)) (not (q0c)) )
         (and (not (the)) (not (mbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbe)) (not (q0c)) )
         (and (not (vhe)) (not (rbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbe)) (not (q0c)) )
         (and (not (yhe)) (not (ube)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybe)) (not (q0c)) )
         (and (not (bie)) (not (xbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bce)) (not (q0c)) )
         (and (not (gie)) (not (zbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gce)) (not (q0c)) )
         (and (not (jie)) (not (cce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jce)) (not (q0c)) )
         (and (not (lie)) (not (hce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lce)) (not (q0c)) )
         (and (not (qie)) (not (kce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qce)) (not (q0c)) )
         (and (not (tie)) (not (mce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tce)) (not (q0c)) )
         (and (not (vie)) (not (rce)) ))

    )
  )
  (:action MOVE_P1-5_P2-5
    :precondition  (and 
      (yac)
      (yxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (yac) (yxc) )
         (and (not (uyc)) (not (yxc)) (xxc) (vyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x9c) (xvd) )
         (and (not (twd)) (not (xvd)) (not (uyc)) (not (yxc)) (xxc) (vyc) (vvd) (uwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vvd)) (not (v9c)) )
         (and (not (twd)) (not (xvd)) (not (uyc)) (not (yxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (cae) )
         (and (not (vje)) (not (cae)) (gae) (uje) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (hae) )
         (and (not (yje)) (not (hae)) (jae) (xje) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (kae) )
         (and (not (bke)) (not (kae)) (lae) (zje) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (mae) )
         (and (not (gke)) (not (mae)) (qae) (cke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (rae) )
         (and (not (jke)) (not (rae)) (tae) (hke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (uae) )
         (and (not (lke)) (not (uae)) (vae) (kke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (xae) )
         (and (not (qke)) (not (xae)) (yae) (mke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (zae) )
         (and (not (tke)) (not (zae)) (bbe) (rke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (cbe) )
         (and (not (vke)) (not (cbe)) (gbe) (uke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (hbe) )
         (and (not (yke)) (not (hbe)) (jbe) (xke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (kbe) )
         (and (not (ble)) (not (kbe)) (lbe) (zke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (mbe) )
         (and (not (gle)) (not (mbe)) (qbe) (cle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (rbe) )
         (and (not (jle)) (not (rbe)) (tbe) (hle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (ube) )
         (and (not (lle)) (not (ube)) (vbe) (kle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (xbe) )
         (and (not (qle)) (not (xbe)) (ybe) (mle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (zbe) )
         (and (not (tle)) (not (zbe)) (bce) (rle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cce) (zie) )
         (and (not (vle)) (not (cce)) (gce) (ule) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (hce) )
         (and (not (yle)) (not (hce)) (jce) (xle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (kce) )
         (and (not (bme)) (not (kce)) (lce) (zle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (mce) )
         (and (not (gme)) (not (mce)) (qce) (cme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (rce) )
         (and (not (jme)) (not (rce)) (tce) (hme) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gae)) (not (v9c)) )
         (and (not (vje)) (not (cae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jae)) (not (v9c)) )
         (and (not (yje)) (not (hae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lae)) (not (v9c)) )
         (and (not (bke)) (not (kae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qae)) (not (v9c)) )
         (and (not (gke)) (not (mae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tae)) (not (v9c)) )
         (and (not (jke)) (not (rae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vae)) (not (v9c)) )
         (and (not (lke)) (not (uae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yae)) (not (v9c)) )
         (and (not (qke)) (not (xae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bbe)) (not (v9c)) )
         (and (not (tke)) (not (zae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gbe)) (not (v9c)) )
         (and (not (vke)) (not (cbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jbe)) (not (v9c)) )
         (and (not (yke)) (not (hbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lbe)) (not (v9c)) )
         (and (not (ble)) (not (kbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbe)) (not (v9c)) )
         (and (not (gle)) (not (mbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbe)) (not (v9c)) )
         (and (not (jle)) (not (rbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbe)) (not (v9c)) )
         (and (not (lle)) (not (ube)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jje)) (not (ybe)) )
         (and (not (qle)) (not (xbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kje)) (not (bce)) )
         (and (not (tle)) (not (zbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lje)) (not (gce)) )
         (and (not (vle)) (not (cce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mje)) (not (jce)) )
         (and (not (yle)) (not (hce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qje)) (not (lce)) )
         (and (not (bme)) (not (kce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (rje)) (not (qce)) )
         (and (not (gme)) (not (mce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tje)) (not (tce)) )
         (and (not (jme)) (not (rce)) ))

    )
  )
  (:action MOVE_P1-6_P1-5
    :precondition  (and 
      (vbc)
      (byc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (vbc) (byc) )
         (and (not (byc)) (not (xxc)) (yxc) (zxc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u0c) (zvd) )
         (and (not (zvd)) (not (vvd)) (not (byc)) (not (xxc)) (yxc) (zxc) (xvd) (yvd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yvd)) (not (t0c)) )
         (and (not (zvd)) (not (vvd)) (not (byc)) (not (xxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (hge) )
         (and (not (hge)) (not (gae)) (cae) (jge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (kge) )
         (and (not (kge)) (not (jae)) (hae) (lge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (mge) )
         (and (not (mge)) (not (lae)) (kae) (qge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (rge) )
         (and (not (rge)) (not (qae)) (mae) (tge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (uge) )
         (and (not (uge)) (not (tae)) (rae) (vge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (xge) )
         (and (not (xge)) (not (vae)) (uae) (yge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (zge) )
         (and (not (zge)) (not (yae)) (xae) (bhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (che) )
         (and (not (che)) (not (bbe)) (zae) (ghe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (hhe) )
         (and (not (hhe)) (not (gbe)) (cbe) (jhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (khe) )
         (and (not (khe)) (not (jbe)) (hbe) (lhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (mhe) )
         (and (not (mhe)) (not (lbe)) (kbe) (qhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (rhe) )
         (and (not (rhe)) (not (qbe)) (mbe) (the) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (uhe) )
         (and (not (uhe)) (not (tbe)) (rbe) (vhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (xhe) )
         (and (not (xhe)) (not (vbe)) (ube) (yhe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (zhe) )
         (and (not (zhe)) (not (ybe)) (xbe) (bie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (cie) )
         (and (not (cie)) (not (bce)) (zbe) (gie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (hie) )
         (and (not (hie)) (not (gce)) (cce) (jie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (kie) )
         (and (not (kie)) (not (jce)) (hce) (lie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (mie) )
         (and (not (mie)) (not (lce)) (kce) (qie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (rie) )
         (and (not (rie)) (not (qce)) (mce) (tie) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (uie) )
         (and (not (uie)) (not (tce)) (rce) (vie) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jge)) (not (t0c)) )
         (and (not (hge)) (not (gae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lge)) (not (t0c)) )
         (and (not (kge)) (not (jae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qge)) (not (t0c)) )
         (and (not (mge)) (not (lae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tge)) (not (t0c)) )
         (and (not (rge)) (not (qae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vge)) (not (t0c)) )
         (and (not (uge)) (not (tae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yge)) (not (t0c)) )
         (and (not (xge)) (not (vae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhe)) (not (t0c)) )
         (and (not (zge)) (not (yae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghe)) (not (t0c)) )
         (and (not (che)) (not (bbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhe)) (not (t0c)) )
         (and (not (hhe)) (not (gbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhe)) (not (t0c)) )
         (and (not (khe)) (not (jbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhe)) (not (t0c)) )
         (and (not (mhe)) (not (lbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (the)) (not (t0c)) )
         (and (not (rhe)) (not (qbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vhe)) (not (t0c)) )
         (and (not (uhe)) (not (tbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yhe)) (not (t0c)) )
         (and (not (xhe)) (not (vbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bie)) (not (t0c)) )
         (and (not (zhe)) (not (ybe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gie)) (not (t0c)) )
         (and (not (cie)) (not (bce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jie)) (not (t0c)) )
         (and (not (hie)) (not (gce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lie)) (not (t0c)) )
         (and (not (kie)) (not (jce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qie)) (not (t0c)) )
         (and (not (mie)) (not (lce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tie)) (not (t0c)) )
         (and (not (rie)) (not (qce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vie)) (not (t0c)) )
         (and (not (uie)) (not (tce)) ))

    )
  )
  (:action MOVE_P1-6_P1-7
    :precondition  (and 
      (qbc)
      (byc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (qbc) (byc) )
         (and (not (cyc)) (not (byc)) (zxc) (gyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m0c) (zvd) )
         (and (not (bwd)) (not (zvd)) (not (cyc)) (not (byc)) (zxc) (gyc) (yvd) (cwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yvd)) (not (l0c)) )
         (and (not (bwd)) (not (zvd)) (not (cyc)) (not (byc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (hge) )
         (and (not (lme)) (not (hge)) (jge) (kme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (kge) )
         (and (not (qme)) (not (kge)) (lge) (mme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (mge) )
         (and (not (tme)) (not (mge)) (qge) (rme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (rge) )
         (and (not (vme)) (not (rge)) (tge) (ume) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (uge) )
         (and (not (yme)) (not (uge)) (vge) (xme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (xge) )
         (and (not (bne)) (not (xge)) (yge) (zme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (zge) )
         (and (not (gne)) (not (zge)) (bhe) (cne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (che) )
         (and (not (jne)) (not (che)) (ghe) (hne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (hhe) )
         (and (not (lne)) (not (hhe)) (jhe) (kne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (khe) )
         (and (not (qne)) (not (khe)) (lhe) (mne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (mhe) )
         (and (not (tne)) (not (mhe)) (qhe) (rne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (rhe) )
         (and (not (vne)) (not (rhe)) (the) (une) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (uhe) )
         (and (not (yne)) (not (uhe)) (vhe) (xne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (xhe) )
         (and (not (boe)) (not (xhe)) (yhe) (zne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (zhe) )
         (and (not (goe)) (not (zhe)) (bie) (coe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (cie) )
         (and (not (joe)) (not (cie)) (gie) (hoe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (hie) )
         (and (not (loe)) (not (hie)) (jie) (koe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (kie) )
         (and (not (qoe)) (not (kie)) (lie) (moe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (mie) )
         (and (not (toe)) (not (mie)) (qie) (roe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (rie) )
         (and (not (voe)) (not (rie)) (tie) (uoe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (uie) )
         (and (not (yoe)) (not (uie)) (vie) (xoe) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jge)) (not (l0c)) )
         (and (not (lme)) (not (hge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lge)) (not (l0c)) )
         (and (not (qme)) (not (kge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qge)) (not (l0c)) )
         (and (not (tme)) (not (mge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tge)) (not (l0c)) )
         (and (not (vme)) (not (rge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vge)) (not (l0c)) )
         (and (not (yme)) (not (uge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yge)) (not (l0c)) )
         (and (not (bne)) (not (xge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhe)) (not (l0c)) )
         (and (not (gne)) (not (zge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghe)) (not (l0c)) )
         (and (not (jne)) (not (che)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhe)) (not (l0c)) )
         (and (not (lne)) (not (hhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhe)) (not (l0c)) )
         (and (not (qne)) (not (khe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhe)) (not (l0c)) )
         (and (not (tne)) (not (mhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (the)) (not (l0c)) )
         (and (not (vne)) (not (rhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vhe)) (not (l0c)) )
         (and (not (yne)) (not (uhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yhe)) (not (l0c)) )
         (and (not (boe)) (not (xhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bie)) (not (l0c)) )
         (and (not (goe)) (not (zhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gie)) (not (l0c)) )
         (and (not (joe)) (not (cie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jie)) (not (l0c)) )
         (and (not (loe)) (not (hie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lie)) (not (l0c)) )
         (and (not (qoe)) (not (kie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qie)) (not (l0c)) )
         (and (not (toe)) (not (mie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tie)) (not (l0c)) )
         (and (not (voe)) (not (rie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vie)) (not (l0c)) )
         (and (not (yoe)) (not (uie)) ))

    )
  )
  (:action MOVE_P1-6_P2-6
    :precondition  (and 
      (vac)
      (byc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (vac) (byc) )
         (and (not (xyc)) (not (byc)) (zxc) (yyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u9c) (zvd) )
         (and (not (vwd)) (not (zvd)) (not (xyc)) (not (byc)) (zxc) (yyc) (yvd) (xwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yvd)) (not (t9c)) )
         (and (not (vwd)) (not (zvd)) (not (xyc)) (not (byc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (hge) )
         (and (not (ype)) (not (hge)) (jge) (xpe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (kge) )
         (and (not (bqe)) (not (kge)) (lge) (zpe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (mge) )
         (and (not (gqe)) (not (mge)) (qge) (cqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (rge) )
         (and (not (jqe)) (not (rge)) (tge) (hqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (uge) )
         (and (not (lqe)) (not (uge)) (vge) (kqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (xge) )
         (and (not (qqe)) (not (xge)) (yge) (mqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (zge) )
         (and (not (tqe)) (not (zge)) (bhe) (rqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (che) )
         (and (not (vqe)) (not (che)) (ghe) (uqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (hhe) )
         (and (not (yqe)) (not (hhe)) (jhe) (xqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (khe) )
         (and (not (bse)) (not (khe)) (lhe) (zqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (mhe) )
         (and (not (gse)) (not (mhe)) (qhe) (cse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (rhe) )
         (and (not (jse)) (not (rhe)) (the) (hse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (uhe) )
         (and (not (lse)) (not (uhe)) (vhe) (kse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (xhe) )
         (and (not (qse)) (not (xhe)) (yhe) (mse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (zhe) )
         (and (not (tse)) (not (zhe)) (bie) (rse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cie) (bpe) )
         (and (not (vse)) (not (cie)) (gie) (use) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (hie) )
         (and (not (yse)) (not (hie)) (jie) (xse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (kie) )
         (and (not (bre)) (not (kie)) (lie) (zse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (mie) )
         (and (not (gre)) (not (mie)) (qie) (cre) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (rie) )
         (and (not (jre)) (not (rie)) (tie) (hre) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (uie) )
         (and (not (lre)) (not (uie)) (vie) (kre) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jge)) (not (t9c)) )
         (and (not (ype)) (not (hge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lge)) (not (t9c)) )
         (and (not (bqe)) (not (kge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qge)) (not (t9c)) )
         (and (not (gqe)) (not (mge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tge)) (not (t9c)) )
         (and (not (jqe)) (not (rge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vge)) (not (t9c)) )
         (and (not (lqe)) (not (uge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yge)) (not (t9c)) )
         (and (not (qqe)) (not (xge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhe)) (not (t9c)) )
         (and (not (tqe)) (not (zge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghe)) (not (t9c)) )
         (and (not (vqe)) (not (che)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhe)) (not (t9c)) )
         (and (not (yqe)) (not (hhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhe)) (not (t9c)) )
         (and (not (bse)) (not (khe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhe)) (not (t9c)) )
         (and (not (gse)) (not (mhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (the)) (not (t9c)) )
         (and (not (jse)) (not (rhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vhe)) (not (t9c)) )
         (and (not (lse)) (not (uhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yhe)) (not (t9c)) )
         (and (not (qse)) (not (xhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lpe)) (not (bie)) )
         (and (not (tse)) (not (zhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mpe)) (not (gie)) )
         (and (not (vse)) (not (cie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qpe)) (not (jie)) )
         (and (not (yse)) (not (hie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (rpe)) (not (lie)) )
         (and (not (bre)) (not (kie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tpe)) (not (qie)) )
         (and (not (gre)) (not (mie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (upe)) (not (tie)) )
         (and (not (jre)) (not (rie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vpe)) (not (vie)) )
         (and (not (lre)) (not (uie)) ))

    )
  )
  (:action MOVE_P1-7_P1-6
    :precondition  (and 
      (tbc)
      (gyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (tbc) (gyc) )
         (and (not (gyc)) (not (zxc)) (byc) (cyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r0c) (cwd) )
         (and (not (cwd)) (not (yvd)) (not (gyc)) (not (zxc)) (byc) (cyc) (zvd) (bwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (bwd)) (not (q0c)) )
         (and (not (cwd)) (not (yvd)) (not (gyc)) (not (zxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (kme) )
         (and (not (kme)) (not (jge)) (hge) (lme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (mme) )
         (and (not (mme)) (not (lge)) (kge) (qme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (rme) )
         (and (not (rme)) (not (qge)) (mge) (tme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (ume) )
         (and (not (ume)) (not (tge)) (rge) (vme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (xme) )
         (and (not (xme)) (not (vge)) (uge) (yme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (zme) )
         (and (not (zme)) (not (yge)) (xge) (bne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (cne) )
         (and (not (cne)) (not (bhe)) (zge) (gne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (hne) )
         (and (not (hne)) (not (ghe)) (che) (jne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (kne) )
         (and (not (kne)) (not (jhe)) (hhe) (lne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (mne) )
         (and (not (mne)) (not (lhe)) (khe) (qne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (rne) )
         (and (not (rne)) (not (qhe)) (mhe) (tne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (une) )
         (and (not (une)) (not (the)) (rhe) (vne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (xne) )
         (and (not (xne)) (not (vhe)) (uhe) (yne) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (zne) )
         (and (not (zne)) (not (yhe)) (xhe) (boe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (coe) )
         (and (not (coe)) (not (bie)) (zhe) (goe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (hoe) )
         (and (not (hoe)) (not (gie)) (cie) (joe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (koe) )
         (and (not (koe)) (not (jie)) (hie) (loe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (moe) )
         (and (not (moe)) (not (lie)) (kie) (qoe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (roe) )
         (and (not (roe)) (not (qie)) (mie) (toe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (uoe) )
         (and (not (uoe)) (not (tie)) (rie) (voe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (xoe) )
         (and (not (xoe)) (not (vie)) (uie) (yoe) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lme)) (not (q0c)) )
         (and (not (kme)) (not (jge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qme)) (not (q0c)) )
         (and (not (mme)) (not (lge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tme)) (not (q0c)) )
         (and (not (rme)) (not (qge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vme)) (not (q0c)) )
         (and (not (ume)) (not (tge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yme)) (not (q0c)) )
         (and (not (xme)) (not (vge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bne)) (not (q0c)) )
         (and (not (zme)) (not (yge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gne)) (not (q0c)) )
         (and (not (cne)) (not (bhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jne)) (not (q0c)) )
         (and (not (hne)) (not (ghe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lne)) (not (q0c)) )
         (and (not (kne)) (not (jhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qne)) (not (q0c)) )
         (and (not (mne)) (not (lhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tne)) (not (q0c)) )
         (and (not (rne)) (not (qhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vne)) (not (q0c)) )
         (and (not (une)) (not (the)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yne)) (not (q0c)) )
         (and (not (xne)) (not (vhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (boe)) (not (q0c)) )
         (and (not (zne)) (not (yhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (goe)) (not (q0c)) )
         (and (not (coe)) (not (bie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (joe)) (not (q0c)) )
         (and (not (hoe)) (not (gie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (loe)) (not (q0c)) )
         (and (not (koe)) (not (jie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qoe)) (not (q0c)) )
         (and (not (moe)) (not (lie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (toe)) (not (q0c)) )
         (and (not (roe)) (not (qie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (voe)) (not (q0c)) )
         (and (not (uoe)) (not (tie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yoe)) (not (q0c)) )
         (and (not (xoe)) (not (vie)) ))

    )
  )
  (:action MOVE_P1-7_P2-7
    :precondition  (and 
      (tac)
      (gyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (tac) (gyc) )
         (and (not (zyc)) (not (gyc)) (cyc) (bzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r9c) (cwd) )
         (and (not (ywd)) (not (cwd)) (not (zyc)) (not (gyc)) (cyc) (bzc) (bwd) (zwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (bwd)) (not (q9c)) )
         (and (not (ywd)) (not (cwd)) (not (zyc)) (not (gyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (kme) )
         (and (not (lte)) (not (kme)) (lme) (kte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (mme) )
         (and (not (qte)) (not (mme)) (qme) (mte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (rme) )
         (and (not (tte)) (not (rme)) (tme) (rte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (ume) )
         (and (not (vte)) (not (ume)) (vme) (ute) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (xme) )
         (and (not (yte)) (not (xme)) (yme) (xte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (zme) )
         (and (not (bue)) (not (zme)) (bne) (zte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (cne) )
         (and (not (gue)) (not (cne)) (gne) (cue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (hne) )
         (and (not (jue)) (not (hne)) (jne) (hue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (kne) )
         (and (not (lue)) (not (kne)) (lne) (kue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (mne) )
         (and (not (que)) (not (mne)) (qne) (mue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (rne) )
         (and (not (tue)) (not (rne)) (tne) (rue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (une) )
         (and (not (vue)) (not (une)) (vne) (uue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (xne) )
         (and (not (yue)) (not (xne)) (yne) (xue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (zne) )
         (and (not (bve)) (not (zne)) (boe) (zue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (coe) (mre) )
         (and (not (gve)) (not (coe)) (goe) (cve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (hoe) )
         (and (not (jve)) (not (hoe)) (joe) (hve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (koe) )
         (and (not (lve)) (not (koe)) (loe) (kve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (moe) )
         (and (not (qve)) (not (moe)) (qoe) (mve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (roe) )
         (and (not (tve)) (not (roe)) (toe) (rve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (uoe) )
         (and (not (vve)) (not (uoe)) (voe) (uve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (xoe) )
         (and (not (yve)) (not (xoe)) (yoe) (xve) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lme)) (not (q9c)) )
         (and (not (lte)) (not (kme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qme)) (not (q9c)) )
         (and (not (qte)) (not (mme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tme)) (not (q9c)) )
         (and (not (tte)) (not (rme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vme)) (not (q9c)) )
         (and (not (vte)) (not (ume)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yme)) (not (q9c)) )
         (and (not (yte)) (not (xme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bne)) (not (q9c)) )
         (and (not (bue)) (not (zme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gne)) (not (q9c)) )
         (and (not (gue)) (not (cne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jne)) (not (q9c)) )
         (and (not (jue)) (not (hne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lne)) (not (q9c)) )
         (and (not (lue)) (not (kne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qne)) (not (q9c)) )
         (and (not (que)) (not (mne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tne)) (not (q9c)) )
         (and (not (tue)) (not (rne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vne)) (not (q9c)) )
         (and (not (vue)) (not (une)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yne)) (not (q9c)) )
         (and (not (yue)) (not (xne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (boe)) (not (q9c)) )
         (and (not (bve)) (not (zne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yre)) (not (goe)) )
         (and (not (gve)) (not (coe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (zre)) (not (joe)) )
         (and (not (jve)) (not (hoe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bte)) (not (loe)) )
         (and (not (lve)) (not (koe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (cte)) (not (qoe)) )
         (and (not (qve)) (not (moe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gte)) (not (toe)) )
         (and (not (tve)) (not (roe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hte)) (not (voe)) )
         (and (not (vve)) (not (uoe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jte)) (not (yoe)) )
         (and (not (yve)) (not (xoe)) ))

    )
  )
  (:action MOVE_P2-4_P1-4
    :precondition  (and 
      (ybc)
      (tyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (ybc) (tyc) )
         (and (not (tyc)) (not (kxc)) (lxc) (ryc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x0c) (rwd) )
         (and (not (rwd)) (not (jvd)) (not (tyc)) (not (kxc)) (lxc) (ryc) (kvd) (qwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qwd)) (not (v0c)) )
         (and (not (rwd)) (not (jvd)) (not (tyc)) (not (kxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (rde) )
         (and (not (rde)) (not (y5d)) (x5d) (tde) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (ude) )
         (and (not (ude)) (not (b6d)) (z5d) (vde) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (xde) )
         (and (not (xde)) (not (g6d)) (c6d) (yde) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (zde) )
         (and (not (zde)) (not (j6d)) (h6d) (bee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (cee) )
         (and (not (cee)) (not (l6d)) (k6d) (gee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (hee) )
         (and (not (hee)) (not (q6d)) (m6d) (jee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (kee) )
         (and (not (kee)) (not (t6d)) (r6d) (lee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (mee) )
         (and (not (mee)) (not (v6d)) (u6d) (qee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (ree) )
         (and (not (ree)) (not (y6d)) (x6d) (tee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (uee) )
         (and (not (uee)) (not (b7d)) (z6d) (vee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (xee) )
         (and (not (xee)) (not (g7d)) (c7d) (yee) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (zee) )
         (and (not (zee)) (not (j7d)) (h7d) (bfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (cfe) )
         (and (not (cfe)) (not (l7d)) (k7d) (gfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (hfe) )
         (and (not (hfe)) (not (q7d)) (m7d) (jfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (kfe) )
         (and (not (kfe)) (not (t7d)) (r7d) (lfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (mfe) )
         (and (not (mfe)) (not (v7d)) (u7d) (qfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (rfe) )
         (and (not (rfe)) (not (y7d)) (x7d) (tfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (ufe) )
         (and (not (ufe)) (not (b8d)) (z7d) (vfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (xfe) )
         (and (not (xfe)) (not (g8d)) (c8d) (yfe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (zfe) )
         (and (not (zfe)) (not (j8d)) (h8d) (bge) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (cge) )
         (and (not (cge)) (not (l8d)) (k8d) (gge) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tde)) (not (v0c)) )
         (and (not (rde)) (not (y5d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vde)) (not (v0c)) )
         (and (not (ude)) (not (b6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yde)) (not (v0c)) )
         (and (not (xde)) (not (g6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bee)) (not (v0c)) )
         (and (not (zde)) (not (j6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gee)) (not (v0c)) )
         (and (not (cee)) (not (l6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jee)) (not (v0c)) )
         (and (not (hee)) (not (q6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lee)) (not (v0c)) )
         (and (not (kee)) (not (t6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qee)) (not (v0c)) )
         (and (not (mee)) (not (v6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tee)) (not (v0c)) )
         (and (not (ree)) (not (y6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vee)) (not (v0c)) )
         (and (not (uee)) (not (b7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yee)) (not (v0c)) )
         (and (not (xee)) (not (g7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bfe)) (not (v0c)) )
         (and (not (zee)) (not (j7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfe)) (not (v0c)) )
         (and (not (cfe)) (not (l7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfe)) (not (v0c)) )
         (and (not (hfe)) (not (q7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lfe)) (not (v0c)) )
         (and (not (kfe)) (not (t7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qfe)) (not (v0c)) )
         (and (not (mfe)) (not (v7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tfe)) (not (v0c)) )
         (and (not (rfe)) (not (y7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vfe)) (not (v0c)) )
         (and (not (ufe)) (not (b8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yfe)) (not (v0c)) )
         (and (not (xfe)) (not (g8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bge)) (not (v0c)) )
         (and (not (zfe)) (not (j8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gge)) (not (v0c)) )
         (and (not (cge)) (not (l8d)) ))

    )
  )
  (:action MOVE_P2-4_P2-3
    :precondition  (and 
      (gbc)
      (tyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gbc) (tyc) )
         (and (not (tyc)) (not (myc)) (qyc) (ryc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c0c) (rwd) )
         (and (not (rwd)) (not (lwd)) (not (tyc)) (not (myc)) (qyc) (ryc) (mwd) (qwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qwd)) (not (b0c)) )
         (and (not (rwd)) (not (lwd)) (not (tyc)) (not (myc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (rde) )
         (and (not (ywe)) (not (rde)) (tde) (xwe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (ude) )
         (and (not (bxe)) (not (ude)) (vde) (zwe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (xde) )
         (and (not (gxe)) (not (xde)) (yde) (cxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (zde) )
         (and (not (jxe)) (not (zde)) (bee) (hxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (cee) )
         (and (not (lxe)) (not (cee)) (gee) (kxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (hee) )
         (and (not (qxe)) (not (hee)) (jee) (mxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (kee) )
         (and (not (txe)) (not (kee)) (lee) (rxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (mee) )
         (and (not (vxe)) (not (mee)) (qee) (uxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (ree) )
         (and (not (yxe)) (not (ree)) (tee) (xxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (uee) )
         (and (not (bye)) (not (uee)) (vee) (zxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (xee) )
         (and (not (gye)) (not (xee)) (yee) (cye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (zee) )
         (and (not (jye)) (not (zee)) (bfe) (hye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (cfe) )
         (and (not (lye)) (not (cfe)) (gfe) (kye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (hfe) )
         (and (not (qye)) (not (hfe)) (jfe) (mye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (kfe) )
         (and (not (tye)) (not (kfe)) (lfe) (rye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (mfe) )
         (and (not (vye)) (not (mfe)) (qfe) (uye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (rfe) )
         (and (not (yye)) (not (rfe)) (tfe) (xye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (ufe) )
         (and (not (bze)) (not (ufe)) (vfe) (zye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (xfe) (hwe) )
         (and (not (gze)) (not (xfe)) (yfe) (cze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (zfe) )
         (and (not (jze)) (not (zfe)) (bge) (hze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (cge) )
         (and (not (lze)) (not (cge)) (gge) (kze) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tde)) (not (b0c)) )
         (and (not (ywe)) (not (rde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vde)) (not (b0c)) )
         (and (not (bxe)) (not (ude)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yde)) (not (b0c)) )
         (and (not (gxe)) (not (xde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bee)) (not (b0c)) )
         (and (not (jxe)) (not (zde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gee)) (not (b0c)) )
         (and (not (lxe)) (not (cee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jee)) (not (b0c)) )
         (and (not (qxe)) (not (hee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lee)) (not (b0c)) )
         (and (not (txe)) (not (kee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qee)) (not (b0c)) )
         (and (not (vxe)) (not (mee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tee)) (not (b0c)) )
         (and (not (yxe)) (not (ree)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vee)) (not (b0c)) )
         (and (not (bye)) (not (uee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yee)) (not (b0c)) )
         (and (not (gye)) (not (xee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bfe)) (not (b0c)) )
         (and (not (jye)) (not (zee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfe)) (not (b0c)) )
         (and (not (lye)) (not (cfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfe)) (not (b0c)) )
         (and (not (qye)) (not (hfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwe)) (not (lfe)) )
         (and (not (tye)) (not (kfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mwe)) (not (qfe)) )
         (and (not (vye)) (not (mfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwe)) (not (tfe)) )
         (and (not (yye)) (not (rfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (rwe)) (not (vfe)) )
         (and (not (bze)) (not (ufe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twe)) (not (yfe)) )
         (and (not (gze)) (not (xfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (uwe)) (not (bge)) )
         (and (not (jze)) (not (zfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vwe)) (not (gge)) )
         (and (not (lze)) (not (cge)) ))

    )
  )
  (:action MOVE_P2-4_P2-5
    :precondition  (and 
      (yac)
      (tyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (yac) (tyc) )
         (and (not (uyc)) (not (tyc)) (ryc) (vyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x9c) (rwd) )
         (and (not (twd)) (not (rwd)) (not (uyc)) (not (tyc)) (ryc) (vyc) (qwd) (uwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qwd)) (not (v9c)) )
         (and (not (twd)) (not (rwd)) (not (uyc)) (not (tyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (rde) )
         (and (not (vje)) (not (rde)) (tde) (uje) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (ude) )
         (and (not (yje)) (not (ude)) (vde) (xje) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (xde) )
         (and (not (bke)) (not (xde)) (yde) (zje) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (zde) )
         (and (not (gke)) (not (zde)) (bee) (cke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (cee) )
         (and (not (jke)) (not (cee)) (gee) (hke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (hee) )
         (and (not (lke)) (not (hee)) (jee) (kke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (kee) )
         (and (not (qke)) (not (kee)) (lee) (mke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (mee) )
         (and (not (tke)) (not (mee)) (qee) (rke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (ree) )
         (and (not (vke)) (not (ree)) (tee) (uke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (uee) )
         (and (not (yke)) (not (uee)) (vee) (xke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (xee) )
         (and (not (ble)) (not (xee)) (yee) (zke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (zee) )
         (and (not (gle)) (not (zee)) (bfe) (cle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (cfe) )
         (and (not (jle)) (not (cfe)) (gfe) (hle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (hfe) )
         (and (not (lle)) (not (hfe)) (jfe) (kle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (kfe) )
         (and (not (qle)) (not (kfe)) (lfe) (mle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (mfe) )
         (and (not (tle)) (not (mfe)) (qfe) (rle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (rfe) (zie) )
         (and (not (vle)) (not (rfe)) (tfe) (ule) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (ufe) )
         (and (not (yle)) (not (ufe)) (vfe) (xle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (xfe) )
         (and (not (bme)) (not (xfe)) (yfe) (zle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (zfe) )
         (and (not (gme)) (not (zfe)) (bge) (cme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (cge) )
         (and (not (jme)) (not (cge)) (gge) (hme) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tde)) (not (v9c)) )
         (and (not (vje)) (not (rde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vde)) (not (v9c)) )
         (and (not (yje)) (not (ude)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yde)) (not (v9c)) )
         (and (not (bke)) (not (xde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bee)) (not (v9c)) )
         (and (not (gke)) (not (zde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gee)) (not (v9c)) )
         (and (not (jke)) (not (cee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jee)) (not (v9c)) )
         (and (not (lke)) (not (hee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lee)) (not (v9c)) )
         (and (not (qke)) (not (kee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qee)) (not (v9c)) )
         (and (not (tke)) (not (mee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tee)) (not (v9c)) )
         (and (not (vke)) (not (ree)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vee)) (not (v9c)) )
         (and (not (yke)) (not (uee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yee)) (not (v9c)) )
         (and (not (ble)) (not (xee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bfe)) (not (v9c)) )
         (and (not (gle)) (not (zee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfe)) (not (v9c)) )
         (and (not (jle)) (not (cfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfe)) (not (v9c)) )
         (and (not (lle)) (not (hfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jje)) (not (lfe)) )
         (and (not (qle)) (not (kfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kje)) (not (qfe)) )
         (and (not (tle)) (not (mfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lje)) (not (tfe)) )
         (and (not (vle)) (not (rfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mje)) (not (vfe)) )
         (and (not (yle)) (not (ufe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qje)) (not (yfe)) )
         (and (not (bme)) (not (xfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (rje)) (not (bge)) )
         (and (not (gme)) (not (zfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tje)) (not (gge)) )
         (and (not (jme)) (not (cge)) ))

    )
  )
  (:action MOVE_P2-4_P3-4
    :precondition  (and 
      (gac)
      (tyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gac) (tyc) )
         (and (not (mzc)) (not (tyc)) (ryc) (qzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c9c) (rwd) )
         (and (not (lxd)) (not (rwd)) (not (mzc)) (not (tyc)) (ryc) (qzc) (qwd) (mxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qwd)) (not (b9c)) )
         (and (not (lxd)) (not (rwd)) (not (mzc)) (not (tyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (rde) )
         (and (not (qze)) (not (rde)) (tde) (mze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (ude) )
         (and (not (tze)) (not (ude)) (vde) (rze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (xde) )
         (and (not (vze)) (not (xde)) (yde) (uze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (zde) )
         (and (not (yze)) (not (zde)) (bee) (xze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (cee) )
         (and (not (b1e)) (not (cee)) (gee) (zze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (hee) )
         (and (not (g1e)) (not (hee)) (jee) (c1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (kee) )
         (and (not (j1e)) (not (kee)) (lee) (h1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (mee) )
         (and (not (l1e)) (not (mee)) (qee) (k1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (ree) )
         (and (not (q1e)) (not (ree)) (tee) (m1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (uee) )
         (and (not (t1e)) (not (uee)) (vee) (r1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (xee) )
         (and (not (v1e)) (not (xee)) (yee) (u1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (zee) )
         (and (not (y1e)) (not (zee)) (bfe) (x1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (cfe) )
         (and (not (b2e)) (not (cfe)) (gfe) (z1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (hfe) )
         (and (not (g2e)) (not (hfe)) (jfe) (c2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (kfe) )
         (and (not (j2e)) (not (kfe)) (lfe) (h2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (mfe) )
         (and (not (l2e)) (not (mfe)) (qfe) (k2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (rfe) )
         (and (not (q2e)) (not (rfe)) (tfe) (m2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (ufe) )
         (and (not (t2e)) (not (ufe)) (vfe) (r2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (xfe) )
         (and (not (v2e)) (not (xfe)) (yfe) (u2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (zfe) )
         (and (not (y2e)) (not (zfe)) (bge) (x2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (cge) )
         (and (not (b3e)) (not (cge)) (gge) (z2e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tde)) (not (b9c)) )
         (and (not (qze)) (not (rde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vde)) (not (b9c)) )
         (and (not (tze)) (not (ude)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yde)) (not (b9c)) )
         (and (not (vze)) (not (xde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bee)) (not (b9c)) )
         (and (not (yze)) (not (zde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gee)) (not (b9c)) )
         (and (not (b1e)) (not (cee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jee)) (not (b9c)) )
         (and (not (g1e)) (not (hee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lee)) (not (b9c)) )
         (and (not (j1e)) (not (kee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qee)) (not (b9c)) )
         (and (not (l1e)) (not (mee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tee)) (not (b9c)) )
         (and (not (q1e)) (not (ree)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vee)) (not (b9c)) )
         (and (not (t1e)) (not (uee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yee)) (not (b9c)) )
         (and (not (v1e)) (not (xee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bfe)) (not (b9c)) )
         (and (not (y1e)) (not (zee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfe)) (not (b9c)) )
         (and (not (b2e)) (not (cfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfe)) (not (b9c)) )
         (and (not (g2e)) (not (hfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lfe)) (not (b9c)) )
         (and (not (j2e)) (not (kfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qfe)) (not (b9c)) )
         (and (not (l2e)) (not (mfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tfe)) (not (b9c)) )
         (and (not (q2e)) (not (rfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vfe)) (not (b9c)) )
         (and (not (t2e)) (not (ufe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yfe)) (not (b9c)) )
         (and (not (v2e)) (not (xfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bge)) (not (b9c)) )
         (and (not (y2e)) (not (zfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gge)) (not (b9c)) )
         (and (not (b3e)) (not (cge)) ))

    )
  )
  (:action MOVE_P2-5_P1-5
    :precondition  (and 
      (vbc)
      (vyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (vbc) (vyc) )
         (and (not (vyc)) (not (xxc)) (yxc) (uyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u0c) (uwd) )
         (and (not (uwd)) (not (vvd)) (not (vyc)) (not (xxc)) (yxc) (uyc) (xvd) (twd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (twd)) (not (t0c)) )
         (and (not (uwd)) (not (vvd)) (not (vyc)) (not (xxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (uje) )
         (and (not (uje)) (not (gae)) (cae) (vje) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (xje) )
         (and (not (xje)) (not (jae)) (hae) (yje) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (zje) )
         (and (not (zje)) (not (lae)) (kae) (bke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (cke) )
         (and (not (cke)) (not (qae)) (mae) (gke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (hke) )
         (and (not (hke)) (not (tae)) (rae) (jke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (kke) )
         (and (not (kke)) (not (vae)) (uae) (lke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (mke) )
         (and (not (mke)) (not (yae)) (xae) (qke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (rke) )
         (and (not (rke)) (not (bbe)) (zae) (tke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (uke) )
         (and (not (uke)) (not (gbe)) (cbe) (vke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (xke) )
         (and (not (xke)) (not (jbe)) (hbe) (yke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (zke) )
         (and (not (zke)) (not (lbe)) (kbe) (ble) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (cle) )
         (and (not (cle)) (not (qbe)) (mbe) (gle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (hle) )
         (and (not (hle)) (not (tbe)) (rbe) (jle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (kle) )
         (and (not (kle)) (not (vbe)) (ube) (lle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (mle) )
         (and (not (mle)) (not (ybe)) (xbe) (qle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (rle) )
         (and (not (rle)) (not (bce)) (zbe) (tle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (ule) )
         (and (not (ule)) (not (gce)) (cce) (vle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (xle) )
         (and (not (xle)) (not (jce)) (hce) (yle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (zle) )
         (and (not (zle)) (not (lce)) (kce) (bme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (cme) )
         (and (not (cme)) (not (qce)) (mce) (gme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0c) (hme) )
         (and (not (hme)) (not (tce)) (rce) (jme) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vje)) (not (t0c)) )
         (and (not (uje)) (not (gae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yje)) (not (t0c)) )
         (and (not (xje)) (not (jae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bke)) (not (t0c)) )
         (and (not (zje)) (not (lae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gke)) (not (t0c)) )
         (and (not (cke)) (not (qae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jke)) (not (t0c)) )
         (and (not (hke)) (not (tae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lke)) (not (t0c)) )
         (and (not (kke)) (not (vae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qke)) (not (t0c)) )
         (and (not (mke)) (not (yae)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tke)) (not (t0c)) )
         (and (not (rke)) (not (bbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vke)) (not (t0c)) )
         (and (not (uke)) (not (gbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yke)) (not (t0c)) )
         (and (not (xke)) (not (jbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ble)) (not (t0c)) )
         (and (not (zke)) (not (lbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gle)) (not (t0c)) )
         (and (not (cle)) (not (qbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jle)) (not (t0c)) )
         (and (not (hle)) (not (tbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lle)) (not (t0c)) )
         (and (not (kle)) (not (vbe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qle)) (not (t0c)) )
         (and (not (mle)) (not (ybe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tle)) (not (t0c)) )
         (and (not (rle)) (not (bce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vle)) (not (t0c)) )
         (and (not (ule)) (not (gce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yle)) (not (t0c)) )
         (and (not (xle)) (not (jce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bme)) (not (t0c)) )
         (and (not (zle)) (not (lce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gme)) (not (t0c)) )
         (and (not (cme)) (not (qce)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jme)) (not (t0c)) )
         (and (not (hme)) (not (tce)) ))

    )
  )
  (:action MOVE_P2-5_P2-4
    :precondition  (and 
      (bbc)
      (vyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bbc) (vyc) )
         (and (not (vyc)) (not (ryc)) (tyc) (uyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z9c) (uwd) )
         (and (not (uwd)) (not (qwd)) (not (vyc)) (not (ryc)) (tyc) (uyc) (rwd) (twd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (twd)) (not (y9c)) )
         (and (not (uwd)) (not (qwd)) (not (vyc)) (not (ryc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (uje) )
         (and (not (uje)) (not (tde)) (rde) (vje) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (xje) )
         (and (not (xje)) (not (vde)) (ude) (yje) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (zje) )
         (and (not (zje)) (not (yde)) (xde) (bke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (cke) )
         (and (not (cke)) (not (bee)) (zde) (gke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (hke) )
         (and (not (hke)) (not (gee)) (cee) (jke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (kke) )
         (and (not (kke)) (not (jee)) (hee) (lke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (mke) )
         (and (not (mke)) (not (lee)) (kee) (qke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (rke) )
         (and (not (rke)) (not (qee)) (mee) (tke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (uke) )
         (and (not (uke)) (not (tee)) (ree) (vke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (xke) )
         (and (not (xke)) (not (vee)) (uee) (yke) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (zke) )
         (and (not (zke)) (not (yee)) (xee) (ble) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (cle) )
         (and (not (cle)) (not (bfe)) (zee) (gle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (hle) )
         (and (not (hle)) (not (gfe)) (cfe) (jle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (kle) )
         (and (not (kle)) (not (jfe)) (hfe) (lle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (mle) )
         (and (not (mle)) (not (lfe)) (kfe) (qle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (rle) )
         (and (not (rle)) (not (qfe)) (mfe) (tle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (ule) )
         (and (not (ule)) (not (tfe)) (rfe) (vle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (yce) (xle) )
         (and (not (xle)) (not (vfe)) (ufe) (yle) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (zle) )
         (and (not (zle)) (not (yfe)) (xfe) (bme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (cme) )
         (and (not (cme)) (not (bge)) (zfe) (gme) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (hme) )
         (and (not (hme)) (not (gge)) (cge) (jme) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vje)) (not (y9c)) )
         (and (not (uje)) (not (tde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yje)) (not (y9c)) )
         (and (not (xje)) (not (vde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bke)) (not (y9c)) )
         (and (not (zje)) (not (yde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gke)) (not (y9c)) )
         (and (not (cke)) (not (bee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jke)) (not (y9c)) )
         (and (not (hke)) (not (gee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lke)) (not (y9c)) )
         (and (not (kke)) (not (jee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qke)) (not (y9c)) )
         (and (not (mke)) (not (lee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tke)) (not (y9c)) )
         (and (not (rke)) (not (qee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vke)) (not (y9c)) )
         (and (not (uke)) (not (tee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yke)) (not (y9c)) )
         (and (not (xke)) (not (vee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ble)) (not (y9c)) )
         (and (not (zke)) (not (yee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gle)) (not (y9c)) )
         (and (not (cle)) (not (bfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jle)) (not (y9c)) )
         (and (not (hle)) (not (gfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lle)) (not (y9c)) )
         (and (not (kle)) (not (jfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qle)) (not (gde)) )
         (and (not (mle)) (not (lfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tle)) (not (hde)) )
         (and (not (rle)) (not (qfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vle)) (not (jde)) )
         (and (not (ule)) (not (tfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yle)) (not (kde)) )
         (and (not (xle)) (not (vfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bme)) (not (lde)) )
         (and (not (zle)) (not (yfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gme)) (not (mde)) )
         (and (not (cme)) (not (bge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jme)) (not (qde)) )
         (and (not (hme)) (not (gge)) ))

    )
  )
  (:action MOVE_P2-5_P2-6
    :precondition  (and 
      (vac)
      (vyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (vac) (vyc) )
         (and (not (xyc)) (not (vyc)) (uyc) (yyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u9c) (uwd) )
         (and (not (vwd)) (not (uwd)) (not (xyc)) (not (vyc)) (uyc) (yyc) (twd) (xwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (twd)) (not (t9c)) )
         (and (not (vwd)) (not (uwd)) (not (xyc)) (not (vyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (uje) )
         (and (not (ype)) (not (uje)) (vje) (xpe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (xje) )
         (and (not (bqe)) (not (xje)) (yje) (zpe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (zje) )
         (and (not (gqe)) (not (zje)) (bke) (cqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (cke) )
         (and (not (jqe)) (not (cke)) (gke) (hqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (hke) )
         (and (not (lqe)) (not (hke)) (jke) (kqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (kke) )
         (and (not (qqe)) (not (kke)) (lke) (mqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (mke) )
         (and (not (tqe)) (not (mke)) (qke) (rqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (rke) )
         (and (not (vqe)) (not (rke)) (tke) (uqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (uke) )
         (and (not (yqe)) (not (uke)) (vke) (xqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (xke) )
         (and (not (bse)) (not (xke)) (yke) (zqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (zke) )
         (and (not (gse)) (not (zke)) (ble) (cse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (cle) )
         (and (not (jse)) (not (cle)) (gle) (hse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (hle) )
         (and (not (lse)) (not (hle)) (jle) (kse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (kle) )
         (and (not (qse)) (not (kle)) (lle) (mse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (mle) )
         (and (not (tse)) (not (mle)) (qle) (rse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (rle) (bpe) )
         (and (not (vse)) (not (rle)) (tle) (use) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (ule) )
         (and (not (yse)) (not (ule)) (vle) (xse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (xle) )
         (and (not (bre)) (not (xle)) (yle) (zse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (zle) )
         (and (not (gre)) (not (zle)) (bme) (cre) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (cme) )
         (and (not (jre)) (not (cme)) (gme) (hre) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (hme) )
         (and (not (lre)) (not (hme)) (jme) (kre) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vje)) (not (t9c)) )
         (and (not (ype)) (not (uje)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yje)) (not (t9c)) )
         (and (not (bqe)) (not (xje)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bke)) (not (t9c)) )
         (and (not (gqe)) (not (zje)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gke)) (not (t9c)) )
         (and (not (jqe)) (not (cke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jke)) (not (t9c)) )
         (and (not (lqe)) (not (hke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lke)) (not (t9c)) )
         (and (not (qqe)) (not (kke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qke)) (not (t9c)) )
         (and (not (tqe)) (not (mke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tke)) (not (t9c)) )
         (and (not (vqe)) (not (rke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vke)) (not (t9c)) )
         (and (not (yqe)) (not (uke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yke)) (not (t9c)) )
         (and (not (bse)) (not (xke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ble)) (not (t9c)) )
         (and (not (gse)) (not (zke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gle)) (not (t9c)) )
         (and (not (jse)) (not (cle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jle)) (not (t9c)) )
         (and (not (lse)) (not (hle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lle)) (not (t9c)) )
         (and (not (qse)) (not (kle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lpe)) (not (qle)) )
         (and (not (tse)) (not (mle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mpe)) (not (tle)) )
         (and (not (vse)) (not (rle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qpe)) (not (vle)) )
         (and (not (yse)) (not (ule)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (rpe)) (not (yle)) )
         (and (not (bre)) (not (xle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tpe)) (not (bme)) )
         (and (not (gre)) (not (zle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (upe)) (not (gme)) )
         (and (not (jre)) (not (cme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vpe)) (not (jme)) )
         (and (not (lre)) (not (hme)) ))

    )
  )
  (:action MOVE_P2-5_P3-5
    :precondition  (and 
      (bac)
      (vyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bac) (vyc) )
         (and (not (rzc)) (not (vyc)) (uyc) (tzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z8c) (uwd) )
         (and (not (qxd)) (not (uwd)) (not (rzc)) (not (vyc)) (uyc) (tzc) (twd) (rxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (twd)) (not (y8c)) )
         (and (not (qxd)) (not (uwd)) (not (rzc)) (not (vyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (uje) )
         (and (not (g3e)) (not (uje)) (vje) (c3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (xje) )
         (and (not (j3e)) (not (xje)) (yje) (h3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (zje) )
         (and (not (l3e)) (not (zje)) (bke) (k3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (cke) )
         (and (not (q3e)) (not (cke)) (gke) (m3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (hke) )
         (and (not (t3e)) (not (hke)) (jke) (r3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (kke) )
         (and (not (v3e)) (not (kke)) (lke) (u3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (mke) )
         (and (not (y3e)) (not (mke)) (qke) (x3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (rke) )
         (and (not (b4e)) (not (rke)) (tke) (z3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (uke) )
         (and (not (g4e)) (not (uke)) (vke) (c4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (xke) )
         (and (not (j4e)) (not (xke)) (yke) (h4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (zke) )
         (and (not (l4e)) (not (zke)) (ble) (k4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (cle) )
         (and (not (q4e)) (not (cle)) (gle) (m4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (hle) )
         (and (not (t4e)) (not (hle)) (jle) (r4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (kle) )
         (and (not (v4e)) (not (kle)) (lle) (u4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (mle) )
         (and (not (y4e)) (not (mle)) (qle) (x4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (rle) )
         (and (not (b5e)) (not (rle)) (tle) (z4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (ule) )
         (and (not (g5e)) (not (ule)) (vle) (c5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (xle) )
         (and (not (j5e)) (not (xle)) (yle) (h5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (zle) )
         (and (not (l5e)) (not (zle)) (bme) (k5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (cme) )
         (and (not (q5e)) (not (cme)) (gme) (m5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (hme) )
         (and (not (t5e)) (not (hme)) (jme) (r5e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vje)) (not (y8c)) )
         (and (not (g3e)) (not (uje)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yje)) (not (y8c)) )
         (and (not (j3e)) (not (xje)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bke)) (not (y8c)) )
         (and (not (l3e)) (not (zje)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gke)) (not (y8c)) )
         (and (not (q3e)) (not (cke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jke)) (not (y8c)) )
         (and (not (t3e)) (not (hke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lke)) (not (y8c)) )
         (and (not (v3e)) (not (kke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qke)) (not (y8c)) )
         (and (not (y3e)) (not (mke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tke)) (not (y8c)) )
         (and (not (b4e)) (not (rke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vke)) (not (y8c)) )
         (and (not (g4e)) (not (uke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yke)) (not (y8c)) )
         (and (not (j4e)) (not (xke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ble)) (not (y8c)) )
         (and (not (l4e)) (not (zke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gle)) (not (y8c)) )
         (and (not (q4e)) (not (cle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jle)) (not (y8c)) )
         (and (not (t4e)) (not (hle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lle)) (not (y8c)) )
         (and (not (v4e)) (not (kle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qle)) (not (y8c)) )
         (and (not (y4e)) (not (mle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tle)) (not (y8c)) )
         (and (not (b5e)) (not (rle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vle)) (not (y8c)) )
         (and (not (g5e)) (not (ule)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yle)) (not (y8c)) )
         (and (not (j5e)) (not (xle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bme)) (not (y8c)) )
         (and (not (l5e)) (not (zle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gme)) (not (y8c)) )
         (and (not (q5e)) (not (cme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jme)) (not (y8c)) )
         (and (not (t5e)) (not (hme)) ))

    )
  )
  (:action MOVE_P2-6_P1-6
    :precondition  (and 
      (tbc)
      (yyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (tbc) (yyc) )
         (and (not (yyc)) (not (zxc)) (byc) (xyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r0c) (xwd) )
         (and (not (xwd)) (not (yvd)) (not (yyc)) (not (zxc)) (byc) (xyc) (zvd) (vwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vwd)) (not (q0c)) )
         (and (not (xwd)) (not (yvd)) (not (yyc)) (not (zxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (xpe) )
         (and (not (xpe)) (not (jge)) (hge) (ype) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (zpe) )
         (and (not (zpe)) (not (lge)) (kge) (bqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (cqe) )
         (and (not (cqe)) (not (qge)) (mge) (gqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (hqe) )
         (and (not (hqe)) (not (tge)) (rge) (jqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (kqe) )
         (and (not (kqe)) (not (vge)) (uge) (lqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (mqe) )
         (and (not (mqe)) (not (yge)) (xge) (qqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (rqe) )
         (and (not (rqe)) (not (bhe)) (zge) (tqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (uqe) )
         (and (not (uqe)) (not (ghe)) (che) (vqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (xqe) )
         (and (not (xqe)) (not (jhe)) (hhe) (yqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (zqe) )
         (and (not (zqe)) (not (lhe)) (khe) (bse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (cse) )
         (and (not (cse)) (not (qhe)) (mhe) (gse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (hse) )
         (and (not (hse)) (not (the)) (rhe) (jse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (kse) )
         (and (not (kse)) (not (vhe)) (uhe) (lse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (mse) )
         (and (not (mse)) (not (yhe)) (xhe) (qse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (rse) )
         (and (not (rse)) (not (bie)) (zhe) (tse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (use) )
         (and (not (use)) (not (gie)) (cie) (vse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (xse) )
         (and (not (xse)) (not (jie)) (hie) (yse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (zse) )
         (and (not (zse)) (not (lie)) (kie) (bre) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (cre) )
         (and (not (cre)) (not (qie)) (mie) (gre) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (hre) )
         (and (not (hre)) (not (tie)) (rie) (jre) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r0c) (kre) )
         (and (not (kre)) (not (vie)) (uie) (lre) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ype)) (not (q0c)) )
         (and (not (xpe)) (not (jge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqe)) (not (q0c)) )
         (and (not (zpe)) (not (lge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqe)) (not (q0c)) )
         (and (not (cqe)) (not (qge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqe)) (not (q0c)) )
         (and (not (hqe)) (not (tge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqe)) (not (q0c)) )
         (and (not (kqe)) (not (vge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqe)) (not (q0c)) )
         (and (not (mqe)) (not (yge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tqe)) (not (q0c)) )
         (and (not (rqe)) (not (bhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vqe)) (not (q0c)) )
         (and (not (uqe)) (not (ghe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yqe)) (not (q0c)) )
         (and (not (xqe)) (not (jhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bse)) (not (q0c)) )
         (and (not (zqe)) (not (lhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gse)) (not (q0c)) )
         (and (not (cse)) (not (qhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jse)) (not (q0c)) )
         (and (not (hse)) (not (the)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lse)) (not (q0c)) )
         (and (not (kse)) (not (vhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qse)) (not (q0c)) )
         (and (not (mse)) (not (yhe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tse)) (not (q0c)) )
         (and (not (rse)) (not (bie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vse)) (not (q0c)) )
         (and (not (use)) (not (gie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yse)) (not (q0c)) )
         (and (not (xse)) (not (jie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bre)) (not (q0c)) )
         (and (not (zse)) (not (lie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gre)) (not (q0c)) )
         (and (not (cre)) (not (qie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jre)) (not (q0c)) )
         (and (not (hre)) (not (tie)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lre)) (not (q0c)) )
         (and (not (kre)) (not (vie)) ))

    )
  )
  (:action MOVE_P2-6_P2-5
    :precondition  (and 
      (yac)
      (yyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (yac) (yyc) )
         (and (not (yyc)) (not (uyc)) (vyc) (xyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x9c) (xwd) )
         (and (not (xwd)) (not (twd)) (not (yyc)) (not (uyc)) (vyc) (xyc) (uwd) (vwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vwd)) (not (v9c)) )
         (and (not (xwd)) (not (twd)) (not (yyc)) (not (uyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (xpe) )
         (and (not (xpe)) (not (vje)) (uje) (ype) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (zpe) )
         (and (not (zpe)) (not (yje)) (xje) (bqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (cqe) )
         (and (not (cqe)) (not (bke)) (zje) (gqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (hqe) )
         (and (not (hqe)) (not (gke)) (cke) (jqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (kqe) )
         (and (not (kqe)) (not (jke)) (hke) (lqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (mqe) )
         (and (not (mqe)) (not (lke)) (kke) (qqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (rqe) )
         (and (not (rqe)) (not (qke)) (mke) (tqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (uqe) )
         (and (not (uqe)) (not (tke)) (rke) (vqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (xqe) )
         (and (not (xqe)) (not (vke)) (uke) (yqe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (zqe) )
         (and (not (zqe)) (not (yke)) (xke) (bse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (cse) )
         (and (not (cse)) (not (ble)) (zke) (gse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (hse) )
         (and (not (hse)) (not (gle)) (cle) (jse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (kse) )
         (and (not (kse)) (not (jle)) (hle) (lse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (mse) )
         (and (not (mse)) (not (lle)) (kle) (qse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (rse) )
         (and (not (rse)) (not (qle)) (mle) (tse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (use) )
         (and (not (use)) (not (tle)) (rle) (vse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (zie) (xse) )
         (and (not (xse)) (not (vle)) (ule) (yse) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (zse) )
         (and (not (zse)) (not (yle)) (xle) (bre) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (cre) )
         (and (not (cre)) (not (bme)) (zle) (gre) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (hre) )
         (and (not (hre)) (not (gme)) (cme) (jre) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (kre) )
         (and (not (kre)) (not (jme)) (hme) (lre) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ype)) (not (v9c)) )
         (and (not (xpe)) (not (vje)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqe)) (not (v9c)) )
         (and (not (zpe)) (not (yje)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqe)) (not (v9c)) )
         (and (not (cqe)) (not (bke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqe)) (not (v9c)) )
         (and (not (hqe)) (not (gke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqe)) (not (v9c)) )
         (and (not (kqe)) (not (jke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqe)) (not (v9c)) )
         (and (not (mqe)) (not (lke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tqe)) (not (v9c)) )
         (and (not (rqe)) (not (qke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vqe)) (not (v9c)) )
         (and (not (uqe)) (not (tke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yqe)) (not (v9c)) )
         (and (not (xqe)) (not (vke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bse)) (not (v9c)) )
         (and (not (zqe)) (not (yke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gse)) (not (v9c)) )
         (and (not (cse)) (not (ble)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jse)) (not (v9c)) )
         (and (not (hse)) (not (gle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lse)) (not (v9c)) )
         (and (not (kse)) (not (jle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qse)) (not (v9c)) )
         (and (not (mse)) (not (lle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tse)) (not (jje)) )
         (and (not (rse)) (not (qle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vse)) (not (kje)) )
         (and (not (use)) (not (tle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yse)) (not (lje)) )
         (and (not (xse)) (not (vle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bre)) (not (mje)) )
         (and (not (zse)) (not (yle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gre)) (not (qje)) )
         (and (not (cre)) (not (bme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jre)) (not (rje)) )
         (and (not (hre)) (not (gme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lre)) (not (tje)) )
         (and (not (kre)) (not (jme)) ))

    )
  )
  (:action MOVE_P2-6_P2-7
    :precondition  (and 
      (tac)
      (yyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (tac) (yyc) )
         (and (not (zyc)) (not (yyc)) (xyc) (bzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r9c) (xwd) )
         (and (not (ywd)) (not (xwd)) (not (zyc)) (not (yyc)) (xyc) (bzc) (vwd) (zwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vwd)) (not (q9c)) )
         (and (not (ywd)) (not (xwd)) (not (zyc)) (not (yyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (xpe) )
         (and (not (lte)) (not (xpe)) (ype) (kte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (zpe) )
         (and (not (qte)) (not (zpe)) (bqe) (mte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (cqe) )
         (and (not (tte)) (not (cqe)) (gqe) (rte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (hqe) )
         (and (not (vte)) (not (hqe)) (jqe) (ute) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (kqe) )
         (and (not (yte)) (not (kqe)) (lqe) (xte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (mqe) )
         (and (not (bue)) (not (mqe)) (qqe) (zte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (rqe) )
         (and (not (gue)) (not (rqe)) (tqe) (cue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (uqe) )
         (and (not (jue)) (not (uqe)) (vqe) (hue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (xqe) )
         (and (not (lue)) (not (xqe)) (yqe) (kue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (zqe) )
         (and (not (que)) (not (zqe)) (bse) (mue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (cse) )
         (and (not (tue)) (not (cse)) (gse) (rue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (hse) )
         (and (not (vue)) (not (hse)) (jse) (uue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (kse) )
         (and (not (yue)) (not (kse)) (lse) (xue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (mse) )
         (and (not (bve)) (not (mse)) (qse) (zue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (rse) (mre) )
         (and (not (gve)) (not (rse)) (tse) (cve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (use) )
         (and (not (jve)) (not (use)) (vse) (hve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (xse) )
         (and (not (lve)) (not (xse)) (yse) (kve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (zse) )
         (and (not (qve)) (not (zse)) (bre) (mve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (cre) )
         (and (not (tve)) (not (cre)) (gre) (rve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (hre) )
         (and (not (vve)) (not (hre)) (jre) (uve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (kre) )
         (and (not (yve)) (not (kre)) (lre) (xve) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ype)) (not (q9c)) )
         (and (not (lte)) (not (xpe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqe)) (not (q9c)) )
         (and (not (qte)) (not (zpe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqe)) (not (q9c)) )
         (and (not (tte)) (not (cqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqe)) (not (q9c)) )
         (and (not (vte)) (not (hqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqe)) (not (q9c)) )
         (and (not (yte)) (not (kqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqe)) (not (q9c)) )
         (and (not (bue)) (not (mqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tqe)) (not (q9c)) )
         (and (not (gue)) (not (rqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vqe)) (not (q9c)) )
         (and (not (jue)) (not (uqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yqe)) (not (q9c)) )
         (and (not (lue)) (not (xqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bse)) (not (q9c)) )
         (and (not (que)) (not (zqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gse)) (not (q9c)) )
         (and (not (tue)) (not (cse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jse)) (not (q9c)) )
         (and (not (vue)) (not (hse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lse)) (not (q9c)) )
         (and (not (yue)) (not (kse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qse)) (not (q9c)) )
         (and (not (bve)) (not (mse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yre)) (not (tse)) )
         (and (not (gve)) (not (rse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (zre)) (not (vse)) )
         (and (not (jve)) (not (use)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bte)) (not (yse)) )
         (and (not (lve)) (not (xse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (cte)) (not (bre)) )
         (and (not (qve)) (not (zse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gte)) (not (gre)) )
         (and (not (tve)) (not (cre)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hte)) (not (jre)) )
         (and (not (vve)) (not (hre)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jte)) (not (lre)) )
         (and (not (yve)) (not (kre)) ))

    )
  )
  (:action MOVE_P2-6_P3-6
    :precondition  (and 
      (y0b)
      (yyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y0b) (yyc) )
         (and (not (uzc)) (not (yyc)) (xyc) (vzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x8c) (xwd) )
         (and (not (txd)) (not (xwd)) (not (uzc)) (not (yyc)) (xyc) (vzc) (vwd) (uxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vwd)) (not (v8c)) )
         (and (not (txd)) (not (xwd)) (not (uzc)) (not (yyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (xpe) )
         (and (not (v5e)) (not (xpe)) (ype) (u5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (zpe) )
         (and (not (y5e)) (not (zpe)) (bqe) (x5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (cqe) )
         (and (not (b6e)) (not (cqe)) (gqe) (z5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (hqe) )
         (and (not (g6e)) (not (hqe)) (jqe) (c6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (kqe) )
         (and (not (j6e)) (not (kqe)) (lqe) (h6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (mqe) )
         (and (not (l6e)) (not (mqe)) (qqe) (k6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (rqe) )
         (and (not (q6e)) (not (rqe)) (tqe) (m6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (uqe) )
         (and (not (t6e)) (not (uqe)) (vqe) (r6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (xqe) )
         (and (not (v6e)) (not (xqe)) (yqe) (u6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (zqe) )
         (and (not (y6e)) (not (zqe)) (bse) (x6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (cse) )
         (and (not (b7e)) (not (cse)) (gse) (z6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (hse) )
         (and (not (g7e)) (not (hse)) (jse) (c7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (kse) )
         (and (not (j7e)) (not (kse)) (lse) (h7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (mse) )
         (and (not (l7e)) (not (mse)) (qse) (k7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (rse) )
         (and (not (q7e)) (not (rse)) (tse) (m7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (use) )
         (and (not (t7e)) (not (use)) (vse) (r7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (xse) )
         (and (not (v7e)) (not (xse)) (yse) (u7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (zse) )
         (and (not (y7e)) (not (zse)) (bre) (x7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (cre) )
         (and (not (b8e)) (not (cre)) (gre) (z7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (hre) )
         (and (not (g8e)) (not (hre)) (jre) (c8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (kre) )
         (and (not (j8e)) (not (kre)) (lre) (h8e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ype)) (not (v8c)) )
         (and (not (v5e)) (not (xpe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqe)) (not (v8c)) )
         (and (not (y5e)) (not (zpe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqe)) (not (v8c)) )
         (and (not (b6e)) (not (cqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqe)) (not (v8c)) )
         (and (not (g6e)) (not (hqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqe)) (not (v8c)) )
         (and (not (j6e)) (not (kqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqe)) (not (v8c)) )
         (and (not (l6e)) (not (mqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tqe)) (not (v8c)) )
         (and (not (q6e)) (not (rqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vqe)) (not (v8c)) )
         (and (not (t6e)) (not (uqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yqe)) (not (v8c)) )
         (and (not (v6e)) (not (xqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bse)) (not (v8c)) )
         (and (not (y6e)) (not (zqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gse)) (not (v8c)) )
         (and (not (b7e)) (not (cse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jse)) (not (v8c)) )
         (and (not (g7e)) (not (hse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lse)) (not (v8c)) )
         (and (not (j7e)) (not (kse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qse)) (not (v8c)) )
         (and (not (l7e)) (not (mse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tse)) (not (v8c)) )
         (and (not (q7e)) (not (rse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vse)) (not (v8c)) )
         (and (not (t7e)) (not (use)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yse)) (not (v8c)) )
         (and (not (v7e)) (not (xse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bre)) (not (v8c)) )
         (and (not (y7e)) (not (zse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gre)) (not (v8c)) )
         (and (not (b8e)) (not (cre)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jre)) (not (v8c)) )
         (and (not (g8e)) (not (hre)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lre)) (not (v8c)) )
         (and (not (j8e)) (not (kre)) ))

    )
  )
  (:action MOVE_P2-7_P1-7
    :precondition  (and 
      (qbc)
      (bzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (qbc) (bzc) )
         (and (not (bzc)) (not (cyc)) (gyc) (zyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m0c) (zwd) )
         (and (not (zwd)) (not (bwd)) (not (bzc)) (not (cyc)) (gyc) (zyc) (cwd) (ywd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (ywd)) (not (l0c)) )
         (and (not (zwd)) (not (bwd)) (not (bzc)) (not (cyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (kte) )
         (and (not (kte)) (not (lme)) (kme) (lte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (mte) )
         (and (not (mte)) (not (qme)) (mme) (qte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (rte) )
         (and (not (rte)) (not (tme)) (rme) (tte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (ute) )
         (and (not (ute)) (not (vme)) (ume) (vte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (xte) )
         (and (not (xte)) (not (yme)) (xme) (yte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (zte) )
         (and (not (zte)) (not (bne)) (zme) (bue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (cue) )
         (and (not (cue)) (not (gne)) (cne) (gue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (hue) )
         (and (not (hue)) (not (jne)) (hne) (jue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (kue) )
         (and (not (kue)) (not (lne)) (kne) (lue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (mue) )
         (and (not (mue)) (not (qne)) (mne) (que) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (rue) )
         (and (not (rue)) (not (tne)) (rne) (tue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (uue) )
         (and (not (uue)) (not (vne)) (une) (vue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (xue) )
         (and (not (xue)) (not (yne)) (xne) (yue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (zue) )
         (and (not (zue)) (not (boe)) (zne) (bve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (cve) )
         (and (not (cve)) (not (goe)) (coe) (gve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (hve) )
         (and (not (hve)) (not (joe)) (hoe) (jve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (kve) )
         (and (not (kve)) (not (loe)) (koe) (lve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (mve) )
         (and (not (mve)) (not (qoe)) (moe) (qve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (rve) )
         (and (not (rve)) (not (toe)) (roe) (tve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (uve) )
         (and (not (uve)) (not (voe)) (uoe) (vve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0c) (xve) )
         (and (not (xve)) (not (yoe)) (xoe) (yve) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lte)) (not (l0c)) )
         (and (not (kte)) (not (lme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qte)) (not (l0c)) )
         (and (not (mte)) (not (qme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tte)) (not (l0c)) )
         (and (not (rte)) (not (tme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vte)) (not (l0c)) )
         (and (not (ute)) (not (vme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yte)) (not (l0c)) )
         (and (not (xte)) (not (yme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bue)) (not (l0c)) )
         (and (not (zte)) (not (bne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gue)) (not (l0c)) )
         (and (not (cue)) (not (gne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jue)) (not (l0c)) )
         (and (not (hue)) (not (jne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lue)) (not (l0c)) )
         (and (not (kue)) (not (lne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (que)) (not (l0c)) )
         (and (not (mue)) (not (qne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tue)) (not (l0c)) )
         (and (not (rue)) (not (tne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vue)) (not (l0c)) )
         (and (not (uue)) (not (vne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yue)) (not (l0c)) )
         (and (not (xue)) (not (yne)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bve)) (not (l0c)) )
         (and (not (zue)) (not (boe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gve)) (not (l0c)) )
         (and (not (cve)) (not (goe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jve)) (not (l0c)) )
         (and (not (hve)) (not (joe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lve)) (not (l0c)) )
         (and (not (kve)) (not (loe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qve)) (not (l0c)) )
         (and (not (mve)) (not (qoe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tve)) (not (l0c)) )
         (and (not (rve)) (not (toe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vve)) (not (l0c)) )
         (and (not (uve)) (not (voe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yve)) (not (l0c)) )
         (and (not (xve)) (not (yoe)) ))

    )
  )
  (:action MOVE_P2-7_P2-6
    :precondition  (and 
      (vac)
      (bzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (vac) (bzc) )
         (and (not (bzc)) (not (xyc)) (yyc) (zyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u9c) (zwd) )
         (and (not (zwd)) (not (vwd)) (not (bzc)) (not (xyc)) (yyc) (zyc) (xwd) (ywd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (ywd)) (not (t9c)) )
         (and (not (zwd)) (not (vwd)) (not (bzc)) (not (xyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (kte) )
         (and (not (kte)) (not (ype)) (xpe) (lte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (mte) )
         (and (not (mte)) (not (bqe)) (zpe) (qte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (rte) )
         (and (not (rte)) (not (gqe)) (cqe) (tte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (ute) )
         (and (not (ute)) (not (jqe)) (hqe) (vte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (xte) )
         (and (not (xte)) (not (lqe)) (kqe) (yte) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (zte) )
         (and (not (zte)) (not (qqe)) (mqe) (bue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (cue) )
         (and (not (cue)) (not (tqe)) (rqe) (gue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (hue) )
         (and (not (hue)) (not (vqe)) (uqe) (jue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (kue) )
         (and (not (kue)) (not (yqe)) (xqe) (lue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (mue) )
         (and (not (mue)) (not (bse)) (zqe) (que) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (rue) )
         (and (not (rue)) (not (gse)) (cse) (tue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (uue) )
         (and (not (uue)) (not (jse)) (hse) (vue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (xue) )
         (and (not (xue)) (not (lse)) (kse) (yue) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (zue) )
         (and (not (zue)) (not (qse)) (mse) (bve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (cve) )
         (and (not (cve)) (not (tse)) (rse) (gve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (bpe) (hve) )
         (and (not (hve)) (not (vse)) (use) (jve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (kve) )
         (and (not (kve)) (not (yse)) (xse) (lve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (mve) )
         (and (not (mve)) (not (bre)) (zse) (qve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (rve) )
         (and (not (rve)) (not (gre)) (cre) (tve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (uve) )
         (and (not (uve)) (not (jre)) (hre) (vve) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (xve) )
         (and (not (xve)) (not (lre)) (kre) (yve) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lte)) (not (t9c)) )
         (and (not (kte)) (not (ype)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qte)) (not (t9c)) )
         (and (not (mte)) (not (bqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tte)) (not (t9c)) )
         (and (not (rte)) (not (gqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vte)) (not (t9c)) )
         (and (not (ute)) (not (jqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yte)) (not (t9c)) )
         (and (not (xte)) (not (lqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bue)) (not (t9c)) )
         (and (not (zte)) (not (qqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gue)) (not (t9c)) )
         (and (not (cue)) (not (tqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jue)) (not (t9c)) )
         (and (not (hue)) (not (vqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lue)) (not (t9c)) )
         (and (not (kue)) (not (yqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (que)) (not (t9c)) )
         (and (not (mue)) (not (bse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tue)) (not (t9c)) )
         (and (not (rue)) (not (gse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vue)) (not (t9c)) )
         (and (not (uue)) (not (jse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yue)) (not (t9c)) )
         (and (not (xue)) (not (lse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bve)) (not (t9c)) )
         (and (not (zue)) (not (qse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gve)) (not (lpe)) )
         (and (not (cve)) (not (tse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jve)) (not (mpe)) )
         (and (not (hve)) (not (vse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lve)) (not (qpe)) )
         (and (not (kve)) (not (yse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qve)) (not (rpe)) )
         (and (not (mve)) (not (bre)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tve)) (not (tpe)) )
         (and (not (rve)) (not (gre)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vve)) (not (upe)) )
         (and (not (uve)) (not (jre)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yve)) (not (vpe)) )
         (and (not (xve)) (not (lre)) ))

    )
  )
  (:action MOVE_P2-7_P3-7
    :precondition  (and 
      (v0b)
      (bzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v0b) (bzc) )
         (and (not (xzc)) (not (bzc)) (zyc) (yzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u8c) (zwd) )
         (and (not (vxd)) (not (zwd)) (not (xzc)) (not (bzc)) (zyc) (yzc) (ywd) (xxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (ywd)) (not (t8c)) )
         (and (not (vxd)) (not (zwd)) (not (xzc)) (not (bzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (kte) )
         (and (not (l8e)) (not (kte)) (lte) (k8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (mte) )
         (and (not (q8e)) (not (mte)) (qte) (m8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (rte) )
         (and (not (t8e)) (not (rte)) (tte) (r8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (ute) )
         (and (not (v8e)) (not (ute)) (vte) (u8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (xte) )
         (and (not (y8e)) (not (xte)) (yte) (x8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (zte) )
         (and (not (b9e)) (not (zte)) (bue) (z8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (cue) )
         (and (not (g9e)) (not (cue)) (gue) (c9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (hue) )
         (and (not (j9e)) (not (hue)) (jue) (h9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (kue) )
         (and (not (l9e)) (not (kue)) (lue) (k9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (mue) )
         (and (not (q9e)) (not (mue)) (que) (m9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (rue) )
         (and (not (t9e)) (not (rue)) (tue) (r9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (uue) )
         (and (not (v9e)) (not (uue)) (vue) (u9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (xue) )
         (and (not (y9e)) (not (xue)) (yue) (x9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (zue) )
         (and (not (b0e)) (not (zue)) (bve) (z9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (cve) )
         (and (not (g0e)) (not (cve)) (gve) (c0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (hve) )
         (and (not (j0e)) (not (hve)) (jve) (h0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (kve) )
         (and (not (l0e)) (not (kve)) (lve) (k0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (mve) )
         (and (not (q0e)) (not (mve)) (qve) (m0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (rve) )
         (and (not (t0e)) (not (rve)) (tve) (r0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (uve) )
         (and (not (v0e)) (not (uve)) (vve) (u0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (xve) )
         (and (not (y0e)) (not (xve)) (yve) (x0e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lte)) (not (t8c)) )
         (and (not (l8e)) (not (kte)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qte)) (not (t8c)) )
         (and (not (q8e)) (not (mte)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tte)) (not (t8c)) )
         (and (not (t8e)) (not (rte)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vte)) (not (t8c)) )
         (and (not (v8e)) (not (ute)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yte)) (not (t8c)) )
         (and (not (y8e)) (not (xte)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bue)) (not (t8c)) )
         (and (not (b9e)) (not (zte)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gue)) (not (t8c)) )
         (and (not (g9e)) (not (cue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jue)) (not (t8c)) )
         (and (not (j9e)) (not (hue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lue)) (not (t8c)) )
         (and (not (l9e)) (not (kue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (que)) (not (t8c)) )
         (and (not (q9e)) (not (mue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tue)) (not (t8c)) )
         (and (not (t9e)) (not (rue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vue)) (not (t8c)) )
         (and (not (v9e)) (not (uue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yue)) (not (t8c)) )
         (and (not (y9e)) (not (xue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bve)) (not (t8c)) )
         (and (not (b0e)) (not (zue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gve)) (not (t8c)) )
         (and (not (g0e)) (not (cve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jve)) (not (t8c)) )
         (and (not (j0e)) (not (hve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lve)) (not (t8c)) )
         (and (not (l0e)) (not (kve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qve)) (not (t8c)) )
         (and (not (q0e)) (not (mve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tve)) (not (t8c)) )
         (and (not (t0e)) (not (rve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vve)) (not (t8c)) )
         (and (not (v0e)) (not (uve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yve)) (not (t8c)) )
         (and (not (y0e)) (not (xve)) ))

    )
  )
  (:action MOVE_P3-4_P2-4
    :precondition  (and 
      (bbc)
      (qzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bbc) (qzc) )
         (and (not (qzc)) (not (ryc)) (tyc) (mzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z9c) (mxd) )
         (and (not (mxd)) (not (qwd)) (not (qzc)) (not (ryc)) (tyc) (mzc) (rwd) (lxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lxd)) (not (y9c)) )
         (and (not (mxd)) (not (qwd)) (not (qzc)) (not (ryc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (mze) )
         (and (not (mze)) (not (tde)) (rde) (qze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (rze) )
         (and (not (rze)) (not (vde)) (ude) (tze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (uze) )
         (and (not (uze)) (not (yde)) (xde) (vze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (xze) )
         (and (not (xze)) (not (bee)) (zde) (yze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (zze) )
         (and (not (zze)) (not (gee)) (cee) (b1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (c1e) )
         (and (not (c1e)) (not (jee)) (hee) (g1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (h1e) )
         (and (not (h1e)) (not (lee)) (kee) (j1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (k1e) )
         (and (not (k1e)) (not (qee)) (mee) (l1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (m1e) )
         (and (not (m1e)) (not (tee)) (ree) (q1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (r1e) )
         (and (not (r1e)) (not (vee)) (uee) (t1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (u1e) )
         (and (not (u1e)) (not (yee)) (xee) (v1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (x1e) )
         (and (not (x1e)) (not (bfe)) (zee) (y1e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (z1e) )
         (and (not (z1e)) (not (gfe)) (cfe) (b2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (c2e) )
         (and (not (c2e)) (not (jfe)) (hfe) (g2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (h2e) )
         (and (not (h2e)) (not (lfe)) (kfe) (j2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (k2e) )
         (and (not (k2e)) (not (qfe)) (mfe) (l2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (m2e) )
         (and (not (m2e)) (not (tfe)) (rfe) (q2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (yce) (r2e) )
         (and (not (r2e)) (not (vfe)) (ufe) (t2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (u2e) )
         (and (not (u2e)) (not (yfe)) (xfe) (v2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (x2e) )
         (and (not (x2e)) (not (bge)) (zfe) (y2e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (z2e) )
         (and (not (z2e)) (not (gge)) (cge) (b3e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qze)) (not (y9c)) )
         (and (not (mze)) (not (tde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tze)) (not (y9c)) )
         (and (not (rze)) (not (vde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vze)) (not (y9c)) )
         (and (not (uze)) (not (yde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yze)) (not (y9c)) )
         (and (not (xze)) (not (bee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1e)) (not (y9c)) )
         (and (not (zze)) (not (gee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1e)) (not (y9c)) )
         (and (not (c1e)) (not (jee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1e)) (not (y9c)) )
         (and (not (h1e)) (not (lee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1e)) (not (y9c)) )
         (and (not (k1e)) (not (qee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1e)) (not (y9c)) )
         (and (not (m1e)) (not (tee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1e)) (not (y9c)) )
         (and (not (r1e)) (not (vee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1e)) (not (y9c)) )
         (and (not (u1e)) (not (yee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1e)) (not (y9c)) )
         (and (not (x1e)) (not (bfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2e)) (not (y9c)) )
         (and (not (z1e)) (not (gfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2e)) (not (y9c)) )
         (and (not (c2e)) (not (jfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2e)) (not (gde)) )
         (and (not (h2e)) (not (lfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2e)) (not (hde)) )
         (and (not (k2e)) (not (qfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2e)) (not (jde)) )
         (and (not (m2e)) (not (tfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2e)) (not (kde)) )
         (and (not (r2e)) (not (vfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2e)) (not (lde)) )
         (and (not (u2e)) (not (yfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2e)) (not (mde)) )
         (and (not (x2e)) (not (bge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b3e)) (not (qde)) )
         (and (not (z2e)) (not (gge)) ))

    )
  )
  (:action MOVE_P3-4_P3-3
    :precondition  (and 
      (jac)
      (qzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (jac) (qzc) )
         (and (not (qzc)) (not (kzc)) (lzc) (mzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h9c) (mxd) )
         (and (not (mxd)) (not (jxd)) (not (qzc)) (not (kzc)) (lzc) (mzc) (kxd) (lxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lxd)) (not (g9c)) )
         (and (not (mxd)) (not (jxd)) (not (qzc)) (not (kzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (mze) )
         (and (not (baf)) (not (mze)) (qze) (z0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (rze) )
         (and (not (gaf)) (not (rze)) (tze) (caf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (uze) )
         (and (not (jaf)) (not (uze)) (vze) (haf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (xze) )
         (and (not (laf)) (not (xze)) (yze) (kaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (zze) )
         (and (not (qaf)) (not (zze)) (b1e) (maf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (c1e) )
         (and (not (taf)) (not (c1e)) (g1e) (raf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (h1e) )
         (and (not (vaf)) (not (h1e)) (j1e) (uaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (k1e) )
         (and (not (yaf)) (not (k1e)) (l1e) (xaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (m1e) )
         (and (not (bbf)) (not (m1e)) (q1e) (zaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (r1e) )
         (and (not (gbf)) (not (r1e)) (t1e) (cbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (u1e) )
         (and (not (jbf)) (not (u1e)) (v1e) (hbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (x1e) )
         (and (not (lbf)) (not (x1e)) (y1e) (kbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (z1e) )
         (and (not (qbf)) (not (z1e)) (b2e) (mbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (c2e) )
         (and (not (tbf)) (not (c2e)) (g2e) (rbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (h2e) )
         (and (not (vbf)) (not (h2e)) (j2e) (ubf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (k2e) )
         (and (not (ybf)) (not (k2e)) (l2e) (xbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (m2e) )
         (and (not (bcf)) (not (m2e)) (q2e) (zbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (r2e) )
         (and (not (gcf)) (not (r2e)) (t2e) (ccf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (u2e) )
         (and (not (jcf)) (not (u2e)) (v2e) (hcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (x2e) )
         (and (not (lcf)) (not (x2e)) (y2e) (kcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (z2e) )
         (and (not (qcf)) (not (z2e)) (b3e) (mcf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qze)) (not (g9c)) )
         (and (not (baf)) (not (mze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tze)) (not (g9c)) )
         (and (not (gaf)) (not (rze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vze)) (not (g9c)) )
         (and (not (jaf)) (not (uze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yze)) (not (g9c)) )
         (and (not (laf)) (not (xze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1e)) (not (g9c)) )
         (and (not (qaf)) (not (zze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1e)) (not (g9c)) )
         (and (not (taf)) (not (c1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1e)) (not (g9c)) )
         (and (not (vaf)) (not (h1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1e)) (not (g9c)) )
         (and (not (yaf)) (not (k1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1e)) (not (g9c)) )
         (and (not (bbf)) (not (m1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1e)) (not (g9c)) )
         (and (not (gbf)) (not (r1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1e)) (not (g9c)) )
         (and (not (jbf)) (not (u1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1e)) (not (g9c)) )
         (and (not (lbf)) (not (x1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2e)) (not (g9c)) )
         (and (not (qbf)) (not (z1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2e)) (not (g9c)) )
         (and (not (tbf)) (not (c2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2e)) (not (g9c)) )
         (and (not (vbf)) (not (h2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2e)) (not (g9c)) )
         (and (not (ybf)) (not (k2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2e)) (not (g9c)) )
         (and (not (bcf)) (not (m2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2e)) (not (g9c)) )
         (and (not (gcf)) (not (r2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2e)) (not (g9c)) )
         (and (not (jcf)) (not (u2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2e)) (not (g9c)) )
         (and (not (lcf)) (not (x2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b3e)) (not (g9c)) )
         (and (not (qcf)) (not (z2e)) ))

    )
  )
  (:action MOVE_P3-4_P3-5
    :precondition  (and 
      (bac)
      (qzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bac) (qzc) )
         (and (not (rzc)) (not (qzc)) (mzc) (tzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z8c) (mxd) )
         (and (not (qxd)) (not (mxd)) (not (rzc)) (not (qzc)) (mzc) (tzc) (lxd) (rxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lxd)) (not (y8c)) )
         (and (not (qxd)) (not (mxd)) (not (rzc)) (not (qzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (mze) )
         (and (not (g3e)) (not (mze)) (qze) (c3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (rze) )
         (and (not (j3e)) (not (rze)) (tze) (h3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (uze) )
         (and (not (l3e)) (not (uze)) (vze) (k3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (xze) )
         (and (not (q3e)) (not (xze)) (yze) (m3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (zze) )
         (and (not (t3e)) (not (zze)) (b1e) (r3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (c1e) )
         (and (not (v3e)) (not (c1e)) (g1e) (u3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (h1e) )
         (and (not (y3e)) (not (h1e)) (j1e) (x3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (k1e) )
         (and (not (b4e)) (not (k1e)) (l1e) (z3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (m1e) )
         (and (not (g4e)) (not (m1e)) (q1e) (c4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (r1e) )
         (and (not (j4e)) (not (r1e)) (t1e) (h4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (u1e) )
         (and (not (l4e)) (not (u1e)) (v1e) (k4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (x1e) )
         (and (not (q4e)) (not (x1e)) (y1e) (m4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (z1e) )
         (and (not (t4e)) (not (z1e)) (b2e) (r4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (c2e) )
         (and (not (v4e)) (not (c2e)) (g2e) (u4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (h2e) )
         (and (not (y4e)) (not (h2e)) (j2e) (x4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (k2e) )
         (and (not (b5e)) (not (k2e)) (l2e) (z4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (m2e) )
         (and (not (g5e)) (not (m2e)) (q2e) (c5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (r2e) )
         (and (not (j5e)) (not (r2e)) (t2e) (h5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (u2e) )
         (and (not (l5e)) (not (u2e)) (v2e) (k5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (x2e) )
         (and (not (q5e)) (not (x2e)) (y2e) (m5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (z2e) )
         (and (not (t5e)) (not (z2e)) (b3e) (r5e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qze)) (not (y8c)) )
         (and (not (g3e)) (not (mze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tze)) (not (y8c)) )
         (and (not (j3e)) (not (rze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vze)) (not (y8c)) )
         (and (not (l3e)) (not (uze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yze)) (not (y8c)) )
         (and (not (q3e)) (not (xze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1e)) (not (y8c)) )
         (and (not (t3e)) (not (zze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1e)) (not (y8c)) )
         (and (not (v3e)) (not (c1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1e)) (not (y8c)) )
         (and (not (y3e)) (not (h1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1e)) (not (y8c)) )
         (and (not (b4e)) (not (k1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1e)) (not (y8c)) )
         (and (not (g4e)) (not (m1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1e)) (not (y8c)) )
         (and (not (j4e)) (not (r1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1e)) (not (y8c)) )
         (and (not (l4e)) (not (u1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1e)) (not (y8c)) )
         (and (not (q4e)) (not (x1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2e)) (not (y8c)) )
         (and (not (t4e)) (not (z1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2e)) (not (y8c)) )
         (and (not (v4e)) (not (c2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2e)) (not (y8c)) )
         (and (not (y4e)) (not (h2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2e)) (not (y8c)) )
         (and (not (b5e)) (not (k2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2e)) (not (y8c)) )
         (and (not (g5e)) (not (m2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2e)) (not (y8c)) )
         (and (not (j5e)) (not (r2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2e)) (not (y8c)) )
         (and (not (l5e)) (not (u2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2e)) (not (y8c)) )
         (and (not (q5e)) (not (x2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b3e)) (not (y8c)) )
         (and (not (t5e)) (not (z2e)) ))

    )
  )
  (:action MOVE_P3-4_P4-4
    :precondition  (and 
      (j0b)
      (qzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j0b) (qzc) )
         (and (not (k1c)) (not (qzc)) (mzc) (l1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h8c) (mxd) )
         (and (not (jyd)) (not (mxd)) (not (k1c)) (not (qzc)) (mzc) (l1c) (lxd) (kyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lxd)) (not (g8c)) )
         (and (not (jyd)) (not (mxd)) (not (k1c)) (not (qzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (mze) )
         (and (not (qdf)) (not (mze)) (qze) (mdf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (rze) )
         (and (not (tdf)) (not (rze)) (tze) (rdf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (uze) )
         (and (not (vdf)) (not (uze)) (vze) (udf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (xze) )
         (and (not (ydf)) (not (xze)) (yze) (xdf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (zze) )
         (and (not (bef)) (not (zze)) (b1e) (zdf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (c1e) )
         (and (not (gef)) (not (c1e)) (g1e) (cef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (h1e) )
         (and (not (jef)) (not (h1e)) (j1e) (hef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (k1e) )
         (and (not (lef)) (not (k1e)) (l1e) (kef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (m1e) )
         (and (not (qef)) (not (m1e)) (q1e) (mef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (r1e) )
         (and (not (tef)) (not (r1e)) (t1e) (ref) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u1e) (vcf) )
         (and (not (vef)) (not (u1e)) (v1e) (uef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (x1e) )
         (and (not (yef)) (not (x1e)) (y1e) (xef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (z1e) )
         (and (not (bff)) (not (z1e)) (b2e) (zef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (c2e) )
         (and (not (gff)) (not (c2e)) (g2e) (cff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (h2e) )
         (and (not (jff)) (not (h2e)) (j2e) (hff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (k2e) )
         (and (not (lff)) (not (k2e)) (l2e) (kff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (m2e) )
         (and (not (qff)) (not (m2e)) (q2e) (mff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (r2e) )
         (and (not (tff)) (not (r2e)) (t2e) (rff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (u2e) )
         (and (not (vff)) (not (u2e)) (v2e) (uff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (x2e) )
         (and (not (yff)) (not (x2e)) (y2e) (xff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (z2e) )
         (and (not (bgf)) (not (z2e)) (b3e) (zff) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qze)) (not (g8c)) )
         (and (not (qdf)) (not (mze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tze)) (not (g8c)) )
         (and (not (tdf)) (not (rze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vze)) (not (g8c)) )
         (and (not (vdf)) (not (uze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yze)) (not (g8c)) )
         (and (not (ydf)) (not (xze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1e)) (not (g8c)) )
         (and (not (bef)) (not (zze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1e)) (not (g8c)) )
         (and (not (gef)) (not (c1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1e)) (not (g8c)) )
         (and (not (jef)) (not (h1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bdf)) (not (l1e)) )
         (and (not (lef)) (not (k1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (cdf)) (not (q1e)) )
         (and (not (qef)) (not (m1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gdf)) (not (t1e)) )
         (and (not (tef)) (not (r1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hdf)) (not (v1e)) )
         (and (not (vef)) (not (u1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jdf)) (not (y1e)) )
         (and (not (yef)) (not (x1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kdf)) (not (b2e)) )
         (and (not (bff)) (not (z1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ldf)) (not (g2e)) )
         (and (not (gff)) (not (c2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2e)) (not (g8c)) )
         (and (not (jff)) (not (h2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2e)) (not (g8c)) )
         (and (not (lff)) (not (k2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2e)) (not (g8c)) )
         (and (not (qff)) (not (m2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2e)) (not (g8c)) )
         (and (not (tff)) (not (r2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2e)) (not (g8c)) )
         (and (not (vff)) (not (u2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2e)) (not (g8c)) )
         (and (not (yff)) (not (x2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b3e)) (not (g8c)) )
         (and (not (bgf)) (not (z2e)) ))

    )
  )
  (:action MOVE_P3-5_P2-5
    :precondition  (and 
      (yac)
      (tzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (yac) (tzc) )
         (and (not (tzc)) (not (uyc)) (vyc) (rzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x9c) (rxd) )
         (and (not (rxd)) (not (twd)) (not (tzc)) (not (uyc)) (vyc) (rzc) (uwd) (qxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qxd)) (not (v9c)) )
         (and (not (rxd)) (not (twd)) (not (tzc)) (not (uyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (c3e) )
         (and (not (c3e)) (not (vje)) (uje) (g3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (h3e) )
         (and (not (h3e)) (not (yje)) (xje) (j3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (k3e) )
         (and (not (k3e)) (not (bke)) (zje) (l3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (m3e) )
         (and (not (m3e)) (not (gke)) (cke) (q3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (r3e) )
         (and (not (r3e)) (not (jke)) (hke) (t3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (u3e) )
         (and (not (u3e)) (not (lke)) (kke) (v3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (x3e) )
         (and (not (x3e)) (not (qke)) (mke) (y3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (z3e) )
         (and (not (z3e)) (not (tke)) (rke) (b4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (c4e) )
         (and (not (c4e)) (not (vke)) (uke) (g4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (h4e) )
         (and (not (h4e)) (not (yke)) (xke) (j4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (k4e) )
         (and (not (k4e)) (not (ble)) (zke) (l4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (m4e) )
         (and (not (m4e)) (not (gle)) (cle) (q4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (r4e) )
         (and (not (r4e)) (not (jle)) (hle) (t4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (u4e) )
         (and (not (u4e)) (not (lle)) (kle) (v4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (x4e) )
         (and (not (x4e)) (not (qle)) (mle) (y4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (z4e) )
         (and (not (z4e)) (not (tle)) (rle) (b5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (zie) (c5e) )
         (and (not (c5e)) (not (vle)) (ule) (g5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (h5e) )
         (and (not (h5e)) (not (yle)) (xle) (j5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (k5e) )
         (and (not (k5e)) (not (bme)) (zle) (l5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (m5e) )
         (and (not (m5e)) (not (gme)) (cme) (q5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x9c) (r5e) )
         (and (not (r5e)) (not (jme)) (hme) (t5e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3e)) (not (v9c)) )
         (and (not (c3e)) (not (vje)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3e)) (not (v9c)) )
         (and (not (h3e)) (not (yje)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3e)) (not (v9c)) )
         (and (not (k3e)) (not (bke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3e)) (not (v9c)) )
         (and (not (m3e)) (not (gke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3e)) (not (v9c)) )
         (and (not (r3e)) (not (jke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3e)) (not (v9c)) )
         (and (not (u3e)) (not (lke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3e)) (not (v9c)) )
         (and (not (x3e)) (not (qke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4e)) (not (v9c)) )
         (and (not (z3e)) (not (tke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4e)) (not (v9c)) )
         (and (not (c4e)) (not (vke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4e)) (not (v9c)) )
         (and (not (h4e)) (not (yke)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4e)) (not (v9c)) )
         (and (not (k4e)) (not (ble)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4e)) (not (v9c)) )
         (and (not (m4e)) (not (gle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4e)) (not (v9c)) )
         (and (not (r4e)) (not (jle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4e)) (not (v9c)) )
         (and (not (u4e)) (not (lle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4e)) (not (jje)) )
         (and (not (x4e)) (not (qle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5e)) (not (kje)) )
         (and (not (z4e)) (not (tle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5e)) (not (lje)) )
         (and (not (c5e)) (not (vle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5e)) (not (mje)) )
         (and (not (h5e)) (not (yle)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5e)) (not (qje)) )
         (and (not (k5e)) (not (bme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q5e)) (not (rje)) )
         (and (not (m5e)) (not (gme)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t5e)) (not (tje)) )
         (and (not (r5e)) (not (jme)) ))

    )
  )
  (:action MOVE_P3-5_P3-4
    :precondition  (and 
      (gac)
      (tzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gac) (tzc) )
         (and (not (tzc)) (not (mzc)) (qzc) (rzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c9c) (rxd) )
         (and (not (rxd)) (not (lxd)) (not (tzc)) (not (mzc)) (qzc) (rzc) (mxd) (qxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qxd)) (not (b9c)) )
         (and (not (rxd)) (not (lxd)) (not (tzc)) (not (mzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (c3e) )
         (and (not (c3e)) (not (qze)) (mze) (g3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (h3e) )
         (and (not (h3e)) (not (tze)) (rze) (j3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (k3e) )
         (and (not (k3e)) (not (vze)) (uze) (l3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (m3e) )
         (and (not (m3e)) (not (yze)) (xze) (q3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (r3e) )
         (and (not (r3e)) (not (b1e)) (zze) (t3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (u3e) )
         (and (not (u3e)) (not (g1e)) (c1e) (v3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (x3e) )
         (and (not (x3e)) (not (j1e)) (h1e) (y3e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (z3e) )
         (and (not (z3e)) (not (l1e)) (k1e) (b4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (c4e) )
         (and (not (c4e)) (not (q1e)) (m1e) (g4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (h4e) )
         (and (not (h4e)) (not (t1e)) (r1e) (j4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (k4e) )
         (and (not (k4e)) (not (v1e)) (u1e) (l4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (m4e) )
         (and (not (m4e)) (not (y1e)) (x1e) (q4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (r4e) )
         (and (not (r4e)) (not (b2e)) (z1e) (t4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (u4e) )
         (and (not (u4e)) (not (g2e)) (c2e) (v4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (x4e) )
         (and (not (x4e)) (not (j2e)) (h2e) (y4e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (z4e) )
         (and (not (z4e)) (not (l2e)) (k2e) (b5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (c5e) )
         (and (not (c5e)) (not (q2e)) (m2e) (g5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (h5e) )
         (and (not (h5e)) (not (t2e)) (r2e) (j5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (k5e) )
         (and (not (k5e)) (not (v2e)) (u2e) (l5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (m5e) )
         (and (not (m5e)) (not (y2e)) (x2e) (q5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (r5e) )
         (and (not (r5e)) (not (b3e)) (z2e) (t5e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3e)) (not (b9c)) )
         (and (not (c3e)) (not (qze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3e)) (not (b9c)) )
         (and (not (h3e)) (not (tze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3e)) (not (b9c)) )
         (and (not (k3e)) (not (vze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3e)) (not (b9c)) )
         (and (not (m3e)) (not (yze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3e)) (not (b9c)) )
         (and (not (r3e)) (not (b1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3e)) (not (b9c)) )
         (and (not (u3e)) (not (g1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3e)) (not (b9c)) )
         (and (not (x3e)) (not (j1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4e)) (not (b9c)) )
         (and (not (z3e)) (not (l1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4e)) (not (b9c)) )
         (and (not (c4e)) (not (q1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4e)) (not (b9c)) )
         (and (not (h4e)) (not (t1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4e)) (not (b9c)) )
         (and (not (k4e)) (not (v1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4e)) (not (b9c)) )
         (and (not (m4e)) (not (y1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4e)) (not (b9c)) )
         (and (not (r4e)) (not (b2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4e)) (not (b9c)) )
         (and (not (u4e)) (not (g2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4e)) (not (b9c)) )
         (and (not (x4e)) (not (j2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5e)) (not (b9c)) )
         (and (not (z4e)) (not (l2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5e)) (not (b9c)) )
         (and (not (c5e)) (not (q2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5e)) (not (b9c)) )
         (and (not (h5e)) (not (t2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5e)) (not (b9c)) )
         (and (not (k5e)) (not (v2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q5e)) (not (b9c)) )
         (and (not (m5e)) (not (y2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t5e)) (not (b9c)) )
         (and (not (r5e)) (not (b3e)) ))

    )
  )
  (:action MOVE_P3-5_P3-6
    :precondition  (and 
      (y0b)
      (tzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y0b) (tzc) )
         (and (not (uzc)) (not (tzc)) (rzc) (vzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x8c) (rxd) )
         (and (not (txd)) (not (rxd)) (not (uzc)) (not (tzc)) (rzc) (vzc) (qxd) (uxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qxd)) (not (v8c)) )
         (and (not (txd)) (not (rxd)) (not (uzc)) (not (tzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (c3e) )
         (and (not (v5e)) (not (c3e)) (g3e) (u5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (h3e) )
         (and (not (y5e)) (not (h3e)) (j3e) (x5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (k3e) )
         (and (not (b6e)) (not (k3e)) (l3e) (z5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (m3e) )
         (and (not (g6e)) (not (m3e)) (q3e) (c6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (r3e) )
         (and (not (j6e)) (not (r3e)) (t3e) (h6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (u3e) )
         (and (not (l6e)) (not (u3e)) (v3e) (k6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (x3e) )
         (and (not (q6e)) (not (x3e)) (y3e) (m6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (z3e) )
         (and (not (t6e)) (not (z3e)) (b4e) (r6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (c4e) )
         (and (not (v6e)) (not (c4e)) (g4e) (u6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (h4e) )
         (and (not (y6e)) (not (h4e)) (j4e) (x6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (k4e) )
         (and (not (b7e)) (not (k4e)) (l4e) (z6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (m4e) )
         (and (not (g7e)) (not (m4e)) (q4e) (c7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (r4e) )
         (and (not (j7e)) (not (r4e)) (t4e) (h7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (u4e) )
         (and (not (l7e)) (not (u4e)) (v4e) (k7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (x4e) )
         (and (not (q7e)) (not (x4e)) (y4e) (m7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (z4e) )
         (and (not (t7e)) (not (z4e)) (b5e) (r7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (c5e) )
         (and (not (v7e)) (not (c5e)) (g5e) (u7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (h5e) )
         (and (not (y7e)) (not (h5e)) (j5e) (x7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (k5e) )
         (and (not (b8e)) (not (k5e)) (l5e) (z7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (m5e) )
         (and (not (g8e)) (not (m5e)) (q5e) (c8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (r5e) )
         (and (not (j8e)) (not (r5e)) (t5e) (h8e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3e)) (not (v8c)) )
         (and (not (v5e)) (not (c3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3e)) (not (v8c)) )
         (and (not (y5e)) (not (h3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3e)) (not (v8c)) )
         (and (not (b6e)) (not (k3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3e)) (not (v8c)) )
         (and (not (g6e)) (not (m3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3e)) (not (v8c)) )
         (and (not (j6e)) (not (r3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3e)) (not (v8c)) )
         (and (not (l6e)) (not (u3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3e)) (not (v8c)) )
         (and (not (q6e)) (not (x3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4e)) (not (v8c)) )
         (and (not (t6e)) (not (z3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4e)) (not (v8c)) )
         (and (not (v6e)) (not (c4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4e)) (not (v8c)) )
         (and (not (y6e)) (not (h4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4e)) (not (v8c)) )
         (and (not (b7e)) (not (k4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4e)) (not (v8c)) )
         (and (not (g7e)) (not (m4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4e)) (not (v8c)) )
         (and (not (j7e)) (not (r4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4e)) (not (v8c)) )
         (and (not (l7e)) (not (u4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4e)) (not (v8c)) )
         (and (not (q7e)) (not (x4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5e)) (not (v8c)) )
         (and (not (t7e)) (not (z4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5e)) (not (v8c)) )
         (and (not (v7e)) (not (c5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5e)) (not (v8c)) )
         (and (not (y7e)) (not (h5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5e)) (not (v8c)) )
         (and (not (b8e)) (not (k5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q5e)) (not (v8c)) )
         (and (not (g8e)) (not (m5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t5e)) (not (v8c)) )
         (and (not (j8e)) (not (r5e)) ))

    )
  )
  (:action MOVE_P3-5_P4-5
    :precondition  (and 
      (g0b)
      (tzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g0b) (tzc) )
         (and (not (m1c)) (not (tzc)) (rzc) (q1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c8c) (rxd) )
         (and (not (lyd)) (not (rxd)) (not (m1c)) (not (tzc)) (rzc) (q1c) (qxd) (myd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qxd)) (not (b8c)) )
         (and (not (lyd)) (not (rxd)) (not (m1c)) (not (tzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (c3e) )
         (and (not (bhf)) (not (c3e)) (g3e) (zgf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (h3e) )
         (and (not (ghf)) (not (h3e)) (j3e) (chf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (k3e) )
         (and (not (jhf)) (not (k3e)) (l3e) (hhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (m3e) )
         (and (not (lhf)) (not (m3e)) (q3e) (khf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (r3e) )
         (and (not (qhf)) (not (r3e)) (t3e) (mhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (u3e) )
         (and (not (thf)) (not (u3e)) (v3e) (rhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (x3e) )
         (and (not (vhf)) (not (x3e)) (y3e) (uhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (z3e) )
         (and (not (yhf)) (not (z3e)) (b4e) (xhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (c4e) )
         (and (not (bif)) (not (c4e)) (g4e) (zhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h4e) (hgf) )
         (and (not (gif)) (not (h4e)) (j4e) (cif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (k4e) )
         (and (not (jif)) (not (k4e)) (l4e) (hif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (m4e) )
         (and (not (lif)) (not (m4e)) (q4e) (kif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (r4e) )
         (and (not (qif)) (not (r4e)) (t4e) (mif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (u4e) )
         (and (not (tif)) (not (u4e)) (v4e) (rif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (x4e) )
         (and (not (vif)) (not (x4e)) (y4e) (uif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (z4e) )
         (and (not (yif)) (not (z4e)) (b5e) (xif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (c5e) )
         (and (not (bjf)) (not (c5e)) (g5e) (zif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (h5e) )
         (and (not (gjf)) (not (h5e)) (j5e) (cjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (k5e) )
         (and (not (jjf)) (not (k5e)) (l5e) (hjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (m5e) )
         (and (not (ljf)) (not (m5e)) (q5e) (kjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (r5e) )
         (and (not (qjf)) (not (r5e)) (t5e) (mjf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3e)) (not (b8c)) )
         (and (not (bhf)) (not (c3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3e)) (not (b8c)) )
         (and (not (ghf)) (not (h3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3e)) (not (b8c)) )
         (and (not (jhf)) (not (k3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3e)) (not (b8c)) )
         (and (not (lhf)) (not (m3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3e)) (not (b8c)) )
         (and (not (qhf)) (not (r3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3e)) (not (b8c)) )
         (and (not (thf)) (not (u3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3e)) (not (b8c)) )
         (and (not (vhf)) (not (x3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qgf)) (not (b4e)) )
         (and (not (yhf)) (not (z3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (rgf)) (not (g4e)) )
         (and (not (bif)) (not (c4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tgf)) (not (j4e)) )
         (and (not (gif)) (not (h4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ugf)) (not (l4e)) )
         (and (not (jif)) (not (k4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vgf)) (not (q4e)) )
         (and (not (lif)) (not (m4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (xgf)) (not (t4e)) )
         (and (not (qif)) (not (r4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ygf)) (not (v4e)) )
         (and (not (tif)) (not (u4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4e)) (not (b8c)) )
         (and (not (vif)) (not (x4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5e)) (not (b8c)) )
         (and (not (yif)) (not (z4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5e)) (not (b8c)) )
         (and (not (bjf)) (not (c5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5e)) (not (b8c)) )
         (and (not (gjf)) (not (h5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5e)) (not (b8c)) )
         (and (not (jjf)) (not (k5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q5e)) (not (b8c)) )
         (and (not (ljf)) (not (m5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t5e)) (not (b8c)) )
         (and (not (qjf)) (not (r5e)) ))

    )
  )
  (:action MOVE_P3-6_P2-6
    :precondition  (and 
      (vac)
      (vzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (vac) (vzc) )
         (and (not (vzc)) (not (xyc)) (yyc) (uzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u9c) (uxd) )
         (and (not (uxd)) (not (vwd)) (not (vzc)) (not (xyc)) (yyc) (uzc) (xwd) (txd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (txd)) (not (t9c)) )
         (and (not (uxd)) (not (vwd)) (not (vzc)) (not (xyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (u5e) )
         (and (not (u5e)) (not (ype)) (xpe) (v5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (x5e) )
         (and (not (x5e)) (not (bqe)) (zpe) (y5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (z5e) )
         (and (not (z5e)) (not (gqe)) (cqe) (b6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (c6e) )
         (and (not (c6e)) (not (jqe)) (hqe) (g6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (h6e) )
         (and (not (h6e)) (not (lqe)) (kqe) (j6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (k6e) )
         (and (not (k6e)) (not (qqe)) (mqe) (l6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (m6e) )
         (and (not (m6e)) (not (tqe)) (rqe) (q6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (r6e) )
         (and (not (r6e)) (not (vqe)) (uqe) (t6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (u6e) )
         (and (not (u6e)) (not (yqe)) (xqe) (v6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (x6e) )
         (and (not (x6e)) (not (bse)) (zqe) (y6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (z6e) )
         (and (not (z6e)) (not (gse)) (cse) (b7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (c7e) )
         (and (not (c7e)) (not (jse)) (hse) (g7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (h7e) )
         (and (not (h7e)) (not (lse)) (kse) (j7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (k7e) )
         (and (not (k7e)) (not (qse)) (mse) (l7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (m7e) )
         (and (not (m7e)) (not (tse)) (rse) (q7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (bpe) (r7e) )
         (and (not (r7e)) (not (vse)) (use) (t7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (u7e) )
         (and (not (u7e)) (not (yse)) (xse) (v7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (x7e) )
         (and (not (x7e)) (not (bre)) (zse) (y7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (z7e) )
         (and (not (z7e)) (not (gre)) (cre) (b8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (c8e) )
         (and (not (c8e)) (not (jre)) (hre) (g8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u9c) (h8e) )
         (and (not (h8e)) (not (lre)) (kre) (j8e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v5e)) (not (t9c)) )
         (and (not (u5e)) (not (ype)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5e)) (not (t9c)) )
         (and (not (x5e)) (not (bqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6e)) (not (t9c)) )
         (and (not (z5e)) (not (gqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6e)) (not (t9c)) )
         (and (not (c6e)) (not (jqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6e)) (not (t9c)) )
         (and (not (h6e)) (not (lqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6e)) (not (t9c)) )
         (and (not (k6e)) (not (qqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6e)) (not (t9c)) )
         (and (not (m6e)) (not (tqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6e)) (not (t9c)) )
         (and (not (r6e)) (not (vqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6e)) (not (t9c)) )
         (and (not (u6e)) (not (yqe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6e)) (not (t9c)) )
         (and (not (x6e)) (not (bse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7e)) (not (t9c)) )
         (and (not (z6e)) (not (gse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7e)) (not (t9c)) )
         (and (not (c7e)) (not (jse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7e)) (not (t9c)) )
         (and (not (h7e)) (not (lse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7e)) (not (t9c)) )
         (and (not (k7e)) (not (qse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7e)) (not (lpe)) )
         (and (not (m7e)) (not (tse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7e)) (not (mpe)) )
         (and (not (r7e)) (not (vse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7e)) (not (qpe)) )
         (and (not (u7e)) (not (yse)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7e)) (not (rpe)) )
         (and (not (x7e)) (not (bre)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8e)) (not (tpe)) )
         (and (not (z7e)) (not (gre)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8e)) (not (upe)) )
         (and (not (c8e)) (not (jre)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8e)) (not (vpe)) )
         (and (not (h8e)) (not (lre)) ))

    )
  )
  (:action MOVE_P3-6_P3-5
    :precondition  (and 
      (bac)
      (vzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bac) (vzc) )
         (and (not (vzc)) (not (rzc)) (tzc) (uzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z8c) (uxd) )
         (and (not (uxd)) (not (qxd)) (not (vzc)) (not (rzc)) (tzc) (uzc) (rxd) (txd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (txd)) (not (y8c)) )
         (and (not (uxd)) (not (qxd)) (not (vzc)) (not (rzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (u5e) )
         (and (not (u5e)) (not (g3e)) (c3e) (v5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (x5e) )
         (and (not (x5e)) (not (j3e)) (h3e) (y5e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (z5e) )
         (and (not (z5e)) (not (l3e)) (k3e) (b6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (c6e) )
         (and (not (c6e)) (not (q3e)) (m3e) (g6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (h6e) )
         (and (not (h6e)) (not (t3e)) (r3e) (j6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (k6e) )
         (and (not (k6e)) (not (v3e)) (u3e) (l6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (m6e) )
         (and (not (m6e)) (not (y3e)) (x3e) (q6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (r6e) )
         (and (not (r6e)) (not (b4e)) (z3e) (t6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (u6e) )
         (and (not (u6e)) (not (g4e)) (c4e) (v6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (x6e) )
         (and (not (x6e)) (not (j4e)) (h4e) (y6e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (z6e) )
         (and (not (z6e)) (not (l4e)) (k4e) (b7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (c7e) )
         (and (not (c7e)) (not (q4e)) (m4e) (g7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (h7e) )
         (and (not (h7e)) (not (t4e)) (r4e) (j7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (k7e) )
         (and (not (k7e)) (not (v4e)) (u4e) (l7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (m7e) )
         (and (not (m7e)) (not (y4e)) (x4e) (q7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (r7e) )
         (and (not (r7e)) (not (b5e)) (z4e) (t7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (u7e) )
         (and (not (u7e)) (not (g5e)) (c5e) (v7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (x7e) )
         (and (not (x7e)) (not (j5e)) (h5e) (y7e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (z7e) )
         (and (not (z7e)) (not (l5e)) (k5e) (b8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (c8e) )
         (and (not (c8e)) (not (q5e)) (m5e) (g8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (h8e) )
         (and (not (h8e)) (not (t5e)) (r5e) (j8e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v5e)) (not (y8c)) )
         (and (not (u5e)) (not (g3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5e)) (not (y8c)) )
         (and (not (x5e)) (not (j3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6e)) (not (y8c)) )
         (and (not (z5e)) (not (l3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6e)) (not (y8c)) )
         (and (not (c6e)) (not (q3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6e)) (not (y8c)) )
         (and (not (h6e)) (not (t3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6e)) (not (y8c)) )
         (and (not (k6e)) (not (v3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6e)) (not (y8c)) )
         (and (not (m6e)) (not (y3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6e)) (not (y8c)) )
         (and (not (r6e)) (not (b4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6e)) (not (y8c)) )
         (and (not (u6e)) (not (g4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6e)) (not (y8c)) )
         (and (not (x6e)) (not (j4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7e)) (not (y8c)) )
         (and (not (z6e)) (not (l4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7e)) (not (y8c)) )
         (and (not (c7e)) (not (q4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7e)) (not (y8c)) )
         (and (not (h7e)) (not (t4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7e)) (not (y8c)) )
         (and (not (k7e)) (not (v4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7e)) (not (y8c)) )
         (and (not (m7e)) (not (y4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7e)) (not (y8c)) )
         (and (not (r7e)) (not (b5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7e)) (not (y8c)) )
         (and (not (u7e)) (not (g5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7e)) (not (y8c)) )
         (and (not (x7e)) (not (j5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8e)) (not (y8c)) )
         (and (not (z7e)) (not (l5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8e)) (not (y8c)) )
         (and (not (c8e)) (not (q5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8e)) (not (y8c)) )
         (and (not (h8e)) (not (t5e)) ))

    )
  )
  (:action MOVE_P3-6_P3-7
    :precondition  (and 
      (v0b)
      (vzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v0b) (vzc) )
         (and (not (xzc)) (not (vzc)) (uzc) (yzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u8c) (uxd) )
         (and (not (vxd)) (not (uxd)) (not (xzc)) (not (vzc)) (uzc) (yzc) (txd) (xxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (txd)) (not (t8c)) )
         (and (not (vxd)) (not (uxd)) (not (xzc)) (not (vzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (u5e) )
         (and (not (l8e)) (not (u5e)) (v5e) (k8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (x5e) )
         (and (not (q8e)) (not (x5e)) (y5e) (m8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (z5e) )
         (and (not (t8e)) (not (z5e)) (b6e) (r8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (c6e) )
         (and (not (v8e)) (not (c6e)) (g6e) (u8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (h6e) )
         (and (not (y8e)) (not (h6e)) (j6e) (x8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (k6e) )
         (and (not (b9e)) (not (k6e)) (l6e) (z8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (m6e) )
         (and (not (g9e)) (not (m6e)) (q6e) (c9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (r6e) )
         (and (not (j9e)) (not (r6e)) (t6e) (h9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (u6e) )
         (and (not (l9e)) (not (u6e)) (v6e) (k9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (x6e) )
         (and (not (q9e)) (not (x6e)) (y6e) (m9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (z6e) )
         (and (not (t9e)) (not (z6e)) (b7e) (r9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (c7e) )
         (and (not (v9e)) (not (c7e)) (g7e) (u9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (h7e) )
         (and (not (y9e)) (not (h7e)) (j7e) (x9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (k7e) )
         (and (not (b0e)) (not (k7e)) (l7e) (z9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (m7e) )
         (and (not (g0e)) (not (m7e)) (q7e) (c0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (r7e) )
         (and (not (j0e)) (not (r7e)) (t7e) (h0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (u7e) )
         (and (not (l0e)) (not (u7e)) (v7e) (k0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (x7e) )
         (and (not (q0e)) (not (x7e)) (y7e) (m0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (z7e) )
         (and (not (t0e)) (not (z7e)) (b8e) (r0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (c8e) )
         (and (not (v0e)) (not (c8e)) (g8e) (u0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (h8e) )
         (and (not (y0e)) (not (h8e)) (j8e) (x0e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v5e)) (not (t8c)) )
         (and (not (l8e)) (not (u5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5e)) (not (t8c)) )
         (and (not (q8e)) (not (x5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6e)) (not (t8c)) )
         (and (not (t8e)) (not (z5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6e)) (not (t8c)) )
         (and (not (v8e)) (not (c6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6e)) (not (t8c)) )
         (and (not (y8e)) (not (h6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6e)) (not (t8c)) )
         (and (not (b9e)) (not (k6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6e)) (not (t8c)) )
         (and (not (g9e)) (not (m6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6e)) (not (t8c)) )
         (and (not (j9e)) (not (r6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6e)) (not (t8c)) )
         (and (not (l9e)) (not (u6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6e)) (not (t8c)) )
         (and (not (q9e)) (not (x6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7e)) (not (t8c)) )
         (and (not (t9e)) (not (z6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7e)) (not (t8c)) )
         (and (not (v9e)) (not (c7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7e)) (not (t8c)) )
         (and (not (y9e)) (not (h7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7e)) (not (t8c)) )
         (and (not (b0e)) (not (k7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7e)) (not (t8c)) )
         (and (not (g0e)) (not (m7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7e)) (not (t8c)) )
         (and (not (j0e)) (not (r7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7e)) (not (t8c)) )
         (and (not (l0e)) (not (u7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7e)) (not (t8c)) )
         (and (not (q0e)) (not (x7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8e)) (not (t8c)) )
         (and (not (t0e)) (not (z7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8e)) (not (t8c)) )
         (and (not (v0e)) (not (c8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8e)) (not (t8c)) )
         (and (not (y0e)) (not (h8e)) ))

    )
  )
  (:action MOVE_P3-6_P4-6
    :precondition  (and 
      (b0b)
      (vzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (b0b) (vzc) )
         (and (not (r1c)) (not (vzc)) (uzc) (t1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z7c) (uxd) )
         (and (not (qyd)) (not (uxd)) (not (r1c)) (not (vzc)) (uzc) (t1c) (txd) (ryd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (txd)) (not (y7c)) )
         (and (not (qyd)) (not (uxd)) (not (r1c)) (not (vzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (u5e) )
         (and (not (qkf)) (not (u5e)) (v5e) (mkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (x5e) )
         (and (not (tkf)) (not (x5e)) (y5e) (rkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (z5e) )
         (and (not (vkf)) (not (z5e)) (b6e) (ukf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (c6e) )
         (and (not (ykf)) (not (c6e)) (g6e) (xkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (h6e) )
         (and (not (blf)) (not (h6e)) (j6e) (zkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (k6e) )
         (and (not (glf)) (not (k6e)) (l6e) (clf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (m6e) )
         (and (not (jlf)) (not (m6e)) (q6e) (hlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (r6e) )
         (and (not (llf)) (not (r6e)) (t6e) (klf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6e) (tjf) )
         (and (not (qlf)) (not (u6e)) (v6e) (mlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (x6e) )
         (and (not (tlf)) (not (x6e)) (y6e) (rlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (z6e) )
         (and (not (vlf)) (not (z6e)) (b7e) (ulf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (c7e) )
         (and (not (ylf)) (not (c7e)) (g7e) (xlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (h7e) )
         (and (not (bmf)) (not (h7e)) (j7e) (zlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (k7e) )
         (and (not (gmf)) (not (k7e)) (l7e) (cmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (m7e) )
         (and (not (jmf)) (not (m7e)) (q7e) (hmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (r7e) )
         (and (not (lmf)) (not (r7e)) (t7e) (kmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (u7e) )
         (and (not (qmf)) (not (u7e)) (v7e) (mmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (x7e) )
         (and (not (tmf)) (not (x7e)) (y7e) (rmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (z7e) )
         (and (not (vmf)) (not (z7e)) (b8e) (umf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (c8e) )
         (and (not (ymf)) (not (c8e)) (g8e) (xmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (h8e) )
         (and (not (bnf)) (not (h8e)) (j8e) (zmf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v5e)) (not (y7c)) )
         (and (not (qkf)) (not (u5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5e)) (not (y7c)) )
         (and (not (tkf)) (not (x5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6e)) (not (y7c)) )
         (and (not (vkf)) (not (z5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6e)) (not (y7c)) )
         (and (not (ykf)) (not (c6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6e)) (not (y7c)) )
         (and (not (blf)) (not (h6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6e)) (not (y7c)) )
         (and (not (glf)) (not (k6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6e)) (not (y7c)) )
         (and (not (jlf)) (not (m6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bkf)) (not (t6e)) )
         (and (not (llf)) (not (r6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ckf)) (not (v6e)) )
         (and (not (qlf)) (not (u6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gkf)) (not (y6e)) )
         (and (not (tlf)) (not (x6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hkf)) (not (b7e)) )
         (and (not (vlf)) (not (z6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jkf)) (not (g7e)) )
         (and (not (ylf)) (not (c7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kkf)) (not (j7e)) )
         (and (not (bmf)) (not (h7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lkf)) (not (l7e)) )
         (and (not (gmf)) (not (k7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7e)) (not (y7c)) )
         (and (not (jmf)) (not (m7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7e)) (not (y7c)) )
         (and (not (lmf)) (not (r7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7e)) (not (y7c)) )
         (and (not (qmf)) (not (u7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7e)) (not (y7c)) )
         (and (not (tmf)) (not (x7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8e)) (not (y7c)) )
         (and (not (vmf)) (not (z7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8e)) (not (y7c)) )
         (and (not (ymf)) (not (c8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8e)) (not (y7c)) )
         (and (not (bnf)) (not (h8e)) ))

    )
  )
  (:action MOVE_P3-7_P2-7
    :precondition  (and 
      (tac)
      (yzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (tac) (yzc) )
         (and (not (yzc)) (not (zyc)) (bzc) (xzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r9c) (xxd) )
         (and (not (xxd)) (not (ywd)) (not (yzc)) (not (zyc)) (bzc) (xzc) (zwd) (vxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vxd)) (not (q9c)) )
         (and (not (xxd)) (not (ywd)) (not (yzc)) (not (zyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (k8e) )
         (and (not (k8e)) (not (lte)) (kte) (l8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (m8e) )
         (and (not (m8e)) (not (qte)) (mte) (q8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (r8e) )
         (and (not (r8e)) (not (tte)) (rte) (t8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (u8e) )
         (and (not (u8e)) (not (vte)) (ute) (v8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (x8e) )
         (and (not (x8e)) (not (yte)) (xte) (y8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (z8e) )
         (and (not (z8e)) (not (bue)) (zte) (b9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (c9e) )
         (and (not (c9e)) (not (gue)) (cue) (g9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (h9e) )
         (and (not (h9e)) (not (jue)) (hue) (j9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (k9e) )
         (and (not (k9e)) (not (lue)) (kue) (l9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (m9e) )
         (and (not (m9e)) (not (que)) (mue) (q9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (r9e) )
         (and (not (r9e)) (not (tue)) (rue) (t9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (u9e) )
         (and (not (u9e)) (not (vue)) (uue) (v9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (x9e) )
         (and (not (x9e)) (not (yue)) (xue) (y9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (z9e) )
         (and (not (z9e)) (not (bve)) (zue) (b0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (mre) (c0e) )
         (and (not (c0e)) (not (gve)) (cve) (g0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (h0e) )
         (and (not (h0e)) (not (jve)) (hve) (j0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (k0e) )
         (and (not (k0e)) (not (lve)) (kve) (l0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (m0e) )
         (and (not (m0e)) (not (qve)) (mve) (q0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (r0e) )
         (and (not (r0e)) (not (tve)) (rve) (t0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (u0e) )
         (and (not (u0e)) (not (vve)) (uve) (v0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9c) (x0e) )
         (and (not (x0e)) (not (yve)) (xve) (y0e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l8e)) (not (q9c)) )
         (and (not (k8e)) (not (lte)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8e)) (not (q9c)) )
         (and (not (m8e)) (not (qte)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8e)) (not (q9c)) )
         (and (not (r8e)) (not (tte)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8e)) (not (q9c)) )
         (and (not (u8e)) (not (vte)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y8e)) (not (q9c)) )
         (and (not (x8e)) (not (yte)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9e)) (not (q9c)) )
         (and (not (z8e)) (not (bue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9e)) (not (q9c)) )
         (and (not (c9e)) (not (gue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9e)) (not (q9c)) )
         (and (not (h9e)) (not (jue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9e)) (not (q9c)) )
         (and (not (k9e)) (not (lue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9e)) (not (q9c)) )
         (and (not (m9e)) (not (que)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9e)) (not (q9c)) )
         (and (not (r9e)) (not (tue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9e)) (not (q9c)) )
         (and (not (u9e)) (not (vue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y9e)) (not (q9c)) )
         (and (not (x9e)) (not (yue)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0e)) (not (q9c)) )
         (and (not (z9e)) (not (bve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0e)) (not (yre)) )
         (and (not (c0e)) (not (gve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0e)) (not (zre)) )
         (and (not (h0e)) (not (jve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0e)) (not (bte)) )
         (and (not (k0e)) (not (lve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0e)) (not (cte)) )
         (and (not (m0e)) (not (qve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0e)) (not (gte)) )
         (and (not (r0e)) (not (tve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0e)) (not (hte)) )
         (and (not (u0e)) (not (vve)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0e)) (not (jte)) )
         (and (not (x0e)) (not (yve)) ))

    )
  )
  (:action MOVE_P3-7_P3-6
    :precondition  (and 
      (y0b)
      (yzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y0b) (yzc) )
         (and (not (yzc)) (not (uzc)) (vzc) (xzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x8c) (xxd) )
         (and (not (xxd)) (not (txd)) (not (yzc)) (not (uzc)) (vzc) (xzc) (uxd) (vxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vxd)) (not (v8c)) )
         (and (not (xxd)) (not (txd)) (not (yzc)) (not (uzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (k8e) )
         (and (not (k8e)) (not (v5e)) (u5e) (l8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (m8e) )
         (and (not (m8e)) (not (y5e)) (x5e) (q8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (r8e) )
         (and (not (r8e)) (not (b6e)) (z5e) (t8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (u8e) )
         (and (not (u8e)) (not (g6e)) (c6e) (v8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (x8e) )
         (and (not (x8e)) (not (j6e)) (h6e) (y8e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (z8e) )
         (and (not (z8e)) (not (l6e)) (k6e) (b9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (c9e) )
         (and (not (c9e)) (not (q6e)) (m6e) (g9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (h9e) )
         (and (not (h9e)) (not (t6e)) (r6e) (j9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (k9e) )
         (and (not (k9e)) (not (v6e)) (u6e) (l9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (m9e) )
         (and (not (m9e)) (not (y6e)) (x6e) (q9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (r9e) )
         (and (not (r9e)) (not (b7e)) (z6e) (t9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (u9e) )
         (and (not (u9e)) (not (g7e)) (c7e) (v9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (x9e) )
         (and (not (x9e)) (not (j7e)) (h7e) (y9e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (z9e) )
         (and (not (z9e)) (not (l7e)) (k7e) (b0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (c0e) )
         (and (not (c0e)) (not (q7e)) (m7e) (g0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (h0e) )
         (and (not (h0e)) (not (t7e)) (r7e) (j0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (k0e) )
         (and (not (k0e)) (not (v7e)) (u7e) (l0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (m0e) )
         (and (not (m0e)) (not (y7e)) (x7e) (q0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (r0e) )
         (and (not (r0e)) (not (b8e)) (z7e) (t0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (u0e) )
         (and (not (u0e)) (not (g8e)) (c8e) (v0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (x0e) )
         (and (not (x0e)) (not (j8e)) (h8e) (y0e) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l8e)) (not (v8c)) )
         (and (not (k8e)) (not (v5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8e)) (not (v8c)) )
         (and (not (m8e)) (not (y5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8e)) (not (v8c)) )
         (and (not (r8e)) (not (b6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8e)) (not (v8c)) )
         (and (not (u8e)) (not (g6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y8e)) (not (v8c)) )
         (and (not (x8e)) (not (j6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9e)) (not (v8c)) )
         (and (not (z8e)) (not (l6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9e)) (not (v8c)) )
         (and (not (c9e)) (not (q6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9e)) (not (v8c)) )
         (and (not (h9e)) (not (t6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9e)) (not (v8c)) )
         (and (not (k9e)) (not (v6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9e)) (not (v8c)) )
         (and (not (m9e)) (not (y6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9e)) (not (v8c)) )
         (and (not (r9e)) (not (b7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9e)) (not (v8c)) )
         (and (not (u9e)) (not (g7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y9e)) (not (v8c)) )
         (and (not (x9e)) (not (j7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0e)) (not (v8c)) )
         (and (not (z9e)) (not (l7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0e)) (not (v8c)) )
         (and (not (c0e)) (not (q7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0e)) (not (v8c)) )
         (and (not (h0e)) (not (t7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0e)) (not (v8c)) )
         (and (not (k0e)) (not (v7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0e)) (not (v8c)) )
         (and (not (m0e)) (not (y7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0e)) (not (v8c)) )
         (and (not (r0e)) (not (b8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0e)) (not (v8c)) )
         (and (not (u0e)) (not (g8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0e)) (not (v8c)) )
         (and (not (x0e)) (not (j8e)) ))

    )
  )
  (:action MOVE_P3-7_P4-7
    :precondition  (and 
      (y9b)
      (yzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y9b) (yzc) )
         (and (not (u1c)) (not (yzc)) (xzc) (v1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x7c) (xxd) )
         (and (not (tyd)) (not (xxd)) (not (u1c)) (not (yzc)) (xzc) (v1c) (vxd) (uyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vxd)) (not (v7c)) )
         (and (not (tyd)) (not (xxd)) (not (u1c)) (not (yzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (k8e) )
         (and (not (bof)) (not (k8e)) (l8e) (znf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (m8e) )
         (and (not (gof)) (not (m8e)) (q8e) (cof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (r8e) )
         (and (not (jof)) (not (r8e)) (t8e) (hof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (u8e) )
         (and (not (lof)) (not (u8e)) (v8e) (kof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (x8e) )
         (and (not (qof)) (not (x8e)) (y8e) (mof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (z8e) )
         (and (not (tof)) (not (z8e)) (b9e) (rof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (c9e) )
         (and (not (vof)) (not (c9e)) (g9e) (uof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9e) (cnf) )
         (and (not (yof)) (not (h9e)) (j9e) (xof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (k9e) )
         (and (not (bpf)) (not (k9e)) (l9e) (zof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (m9e) )
         (and (not (gpf)) (not (m9e)) (q9e) (cpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (r9e) )
         (and (not (jpf)) (not (r9e)) (t9e) (hpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (u9e) )
         (and (not (lpf)) (not (u9e)) (v9e) (kpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (x9e) )
         (and (not (qpf)) (not (x9e)) (y9e) (mpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (z9e) )
         (and (not (tpf)) (not (z9e)) (b0e) (rpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (c0e) )
         (and (not (vpf)) (not (c0e)) (g0e) (upf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (h0e) )
         (and (not (ypf)) (not (h0e)) (j0e) (xpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (k0e) )
         (and (not (bqf)) (not (k0e)) (l0e) (zpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (m0e) )
         (and (not (gqf)) (not (m0e)) (q0e) (cqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (r0e) )
         (and (not (jqf)) (not (r0e)) (t0e) (hqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (u0e) )
         (and (not (lqf)) (not (u0e)) (v0e) (kqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (x0e) )
         (and (not (qqf)) (not (x0e)) (y0e) (mqf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l8e)) (not (v7c)) )
         (and (not (bof)) (not (k8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8e)) (not (v7c)) )
         (and (not (gof)) (not (m8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8e)) (not (v7c)) )
         (and (not (jof)) (not (r8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8e)) (not (v7c)) )
         (and (not (lof)) (not (u8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y8e)) (not (v7c)) )
         (and (not (qof)) (not (x8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9e)) (not (v7c)) )
         (and (not (tof)) (not (z8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9e)) (not (v7c)) )
         (and (not (vof)) (not (c9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qnf)) (not (j9e)) )
         (and (not (yof)) (not (h9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (rnf)) (not (l9e)) )
         (and (not (bpf)) (not (k9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tnf)) (not (q9e)) )
         (and (not (gpf)) (not (m9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (unf)) (not (t9e)) )
         (and (not (jpf)) (not (r9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vnf)) (not (v9e)) )
         (and (not (lpf)) (not (u9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (xnf)) (not (y9e)) )
         (and (not (qpf)) (not (x9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ynf)) (not (b0e)) )
         (and (not (tpf)) (not (z9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0e)) (not (v7c)) )
         (and (not (vpf)) (not (c0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0e)) (not (v7c)) )
         (and (not (ypf)) (not (h0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0e)) (not (v7c)) )
         (and (not (bqf)) (not (k0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0e)) (not (v7c)) )
         (and (not (gqf)) (not (m0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0e)) (not (v7c)) )
         (and (not (jqf)) (not (r0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0e)) (not (v7c)) )
         (and (not (lqf)) (not (u0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0e)) (not (v7c)) )
         (and (not (qqf)) (not (x0e)) ))

    )
  )
  (:action MOVE_P4-4_P3-4
    :precondition  (and 
      (gac)
      (l1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gac) (l1c) )
         (and (not (l1c)) (not (mzc)) (qzc) (k1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c9c) (kyd) )
         (and (not (kyd)) (not (lxd)) (not (l1c)) (not (mzc)) (qzc) (k1c) (mxd) (jyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jyd)) (not (b9c)) )
         (and (not (kyd)) (not (lxd)) (not (l1c)) (not (mzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (mdf) )
         (and (not (mdf)) (not (qze)) (mze) (qdf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (rdf) )
         (and (not (rdf)) (not (tze)) (rze) (tdf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (udf) )
         (and (not (udf)) (not (vze)) (uze) (vdf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (xdf) )
         (and (not (xdf)) (not (yze)) (xze) (ydf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (zdf) )
         (and (not (zdf)) (not (b1e)) (zze) (bef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (cef) )
         (and (not (cef)) (not (g1e)) (c1e) (gef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (hef) )
         (and (not (hef)) (not (j1e)) (h1e) (jef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (kef) )
         (and (not (kef)) (not (l1e)) (k1e) (lef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (mef) )
         (and (not (mef)) (not (q1e)) (m1e) (qef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (ref) )
         (and (not (ref)) (not (t1e)) (r1e) (tef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (uef) )
         (and (not (uef)) (not (v1e)) (u1e) (vef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (xef) )
         (and (not (xef)) (not (y1e)) (x1e) (yef) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (zef) )
         (and (not (zef)) (not (b2e)) (z1e) (bff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (cff) )
         (and (not (cff)) (not (g2e)) (c2e) (gff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (hff) )
         (and (not (hff)) (not (j2e)) (h2e) (jff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (kff) )
         (and (not (kff)) (not (l2e)) (k2e) (lff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (mff) )
         (and (not (mff)) (not (q2e)) (m2e) (qff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (rff) )
         (and (not (rff)) (not (t2e)) (r2e) (tff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (uff) )
         (and (not (uff)) (not (v2e)) (u2e) (vff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (xff) )
         (and (not (xff)) (not (y2e)) (x2e) (yff) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (zff) )
         (and (not (zff)) (not (b3e)) (z2e) (bgf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdf)) (not (b9c)) )
         (and (not (mdf)) (not (qze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdf)) (not (b9c)) )
         (and (not (rdf)) (not (tze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdf)) (not (b9c)) )
         (and (not (udf)) (not (vze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydf)) (not (b9c)) )
         (and (not (xdf)) (not (yze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bef)) (not (b9c)) )
         (and (not (zdf)) (not (b1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gef)) (not (b9c)) )
         (and (not (cef)) (not (g1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jef)) (not (b9c)) )
         (and (not (hef)) (not (j1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lef)) (not (b9c)) )
         (and (not (kef)) (not (l1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qef)) (not (b9c)) )
         (and (not (mef)) (not (q1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tef)) (not (b9c)) )
         (and (not (ref)) (not (t1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vef)) (not (b9c)) )
         (and (not (uef)) (not (v1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yef)) (not (b9c)) )
         (and (not (xef)) (not (y1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bff)) (not (b9c)) )
         (and (not (zef)) (not (b2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gff)) (not (b9c)) )
         (and (not (cff)) (not (g2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jff)) (not (b9c)) )
         (and (not (hff)) (not (j2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lff)) (not (b9c)) )
         (and (not (kff)) (not (l2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qff)) (not (b9c)) )
         (and (not (mff)) (not (q2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tff)) (not (b9c)) )
         (and (not (rff)) (not (t2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vff)) (not (b9c)) )
         (and (not (uff)) (not (v2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yff)) (not (b9c)) )
         (and (not (xff)) (not (y2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgf)) (not (b9c)) )
         (and (not (zff)) (not (b3e)) ))

    )
  )
  (:action MOVE_P4-4_P4-3
    :precondition  (and 
      (l0b)
      (l1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l0b) (l1c) )
         (and (not (l1c)) (not (h1c)) (j1c) (k1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k8c) (kyd) )
         (and (not (kyd)) (not (gyd)) (not (l1c)) (not (h1c)) (j1c) (k1c) (hyd) (jyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jyd)) (not (j8c)) )
         (and (not (kyd)) (not (gyd)) (not (l1c)) (not (h1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (mdf) )
         (and (not (qsf)) (not (mdf)) (qdf) (msf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (rdf) )
         (and (not (tsf)) (not (rdf)) (tdf) (rsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (udf) )
         (and (not (vsf)) (not (udf)) (vdf) (usf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (xdf) )
         (and (not (ysf)) (not (xdf)) (ydf) (xsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (zdf) )
         (and (not (brf)) (not (zdf)) (bef) (zsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (cef) )
         (and (not (grf)) (not (cef)) (gef) (crf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (hef) )
         (and (not (jrf)) (not (hef)) (jef) (hrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (kef) )
         (and (not (lrf)) (not (kef)) (lef) (krf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (mef) )
         (and (not (qrf)) (not (mef)) (qef) (mrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (ref) )
         (and (not (trf)) (not (ref)) (tef) (rrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (uef) )
         (and (not (vrf)) (not (uef)) (vef) (urf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (xef) (xqf) )
         (and (not (yrf)) (not (xef)) (yef) (xrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (zef) )
         (and (not (btf)) (not (zef)) (bff) (zrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (cff) )
         (and (not (gtf)) (not (cff)) (gff) (ctf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (hff) )
         (and (not (jtf)) (not (hff)) (jff) (htf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (kff) )
         (and (not (ltf)) (not (kff)) (lff) (ktf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (mff) )
         (and (not (qtf)) (not (mff)) (qff) (mtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (rff) )
         (and (not (ttf)) (not (rff)) (tff) (rtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (uff) )
         (and (not (vtf)) (not (uff)) (vff) (utf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (xff) )
         (and (not (ytf)) (not (xff)) (yff) (xtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (zff) )
         (and (not (buf)) (not (zff)) (bgf) (ztf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdf)) (not (j8c)) )
         (and (not (qsf)) (not (mdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdf)) (not (j8c)) )
         (and (not (tsf)) (not (rdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdf)) (not (j8c)) )
         (and (not (vsf)) (not (udf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydf)) (not (j8c)) )
         (and (not (ysf)) (not (xdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bef)) (not (j8c)) )
         (and (not (brf)) (not (zdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gef)) (not (j8c)) )
         (and (not (grf)) (not (cef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jef)) (not (j8c)) )
         (and (not (jrf)) (not (hef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bsf)) (not (lef)) )
         (and (not (lrf)) (not (kef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (csf)) (not (qef)) )
         (and (not (qrf)) (not (mef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gsf)) (not (tef)) )
         (and (not (trf)) (not (ref)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hsf)) (not (vef)) )
         (and (not (vrf)) (not (uef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jsf)) (not (yef)) )
         (and (not (yrf)) (not (xef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ksf)) (not (bff)) )
         (and (not (btf)) (not (zef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lsf)) (not (gff)) )
         (and (not (gtf)) (not (cff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jff)) (not (j8c)) )
         (and (not (jtf)) (not (hff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lff)) (not (j8c)) )
         (and (not (ltf)) (not (kff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qff)) (not (j8c)) )
         (and (not (qtf)) (not (mff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tff)) (not (j8c)) )
         (and (not (ttf)) (not (rff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vff)) (not (j8c)) )
         (and (not (vtf)) (not (uff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yff)) (not (j8c)) )
         (and (not (ytf)) (not (xff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgf)) (not (j8c)) )
         (and (not (buf)) (not (zff)) ))

    )
  )
  (:action MOVE_P4-4_P4-5
    :precondition  (and 
      (g0b)
      (l1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g0b) (l1c) )
         (and (not (m1c)) (not (l1c)) (k1c) (q1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c8c) (kyd) )
         (and (not (lyd)) (not (kyd)) (not (m1c)) (not (l1c)) (k1c) (q1c) (jyd) (myd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jyd)) (not (b8c)) )
         (and (not (lyd)) (not (kyd)) (not (m1c)) (not (l1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (mdf) )
         (and (not (bhf)) (not (mdf)) (qdf) (zgf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (rdf) )
         (and (not (ghf)) (not (rdf)) (tdf) (chf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (udf) )
         (and (not (jhf)) (not (udf)) (vdf) (hhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (xdf) )
         (and (not (lhf)) (not (xdf)) (ydf) (khf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (zdf) )
         (and (not (qhf)) (not (zdf)) (bef) (mhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (cef) )
         (and (not (thf)) (not (cef)) (gef) (rhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (hef) )
         (and (not (vhf)) (not (hef)) (jef) (uhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (kef) )
         (and (not (yhf)) (not (kef)) (lef) (xhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (mef) )
         (and (not (bif)) (not (mef)) (qef) (zhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (ref) (hgf) )
         (and (not (gif)) (not (ref)) (tef) (cif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (uef) )
         (and (not (jif)) (not (uef)) (vef) (hif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (xef) )
         (and (not (lif)) (not (xef)) (yef) (kif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (zef) )
         (and (not (qif)) (not (zef)) (bff) (mif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (cff) )
         (and (not (tif)) (not (cff)) (gff) (rif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (hff) )
         (and (not (vif)) (not (hff)) (jff) (uif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (kff) )
         (and (not (yif)) (not (kff)) (lff) (xif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (mff) )
         (and (not (bjf)) (not (mff)) (qff) (zif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (rff) )
         (and (not (gjf)) (not (rff)) (tff) (cjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (uff) )
         (and (not (jjf)) (not (uff)) (vff) (hjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (xff) )
         (and (not (ljf)) (not (xff)) (yff) (kjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (zff) )
         (and (not (qjf)) (not (zff)) (bgf) (mjf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdf)) (not (b8c)) )
         (and (not (bhf)) (not (mdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdf)) (not (b8c)) )
         (and (not (ghf)) (not (rdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdf)) (not (b8c)) )
         (and (not (jhf)) (not (udf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydf)) (not (b8c)) )
         (and (not (lhf)) (not (xdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bef)) (not (b8c)) )
         (and (not (qhf)) (not (zdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gef)) (not (b8c)) )
         (and (not (thf)) (not (cef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jef)) (not (b8c)) )
         (and (not (vhf)) (not (hef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qgf)) (not (lef)) )
         (and (not (yhf)) (not (kef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (rgf)) (not (qef)) )
         (and (not (bif)) (not (mef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tgf)) (not (tef)) )
         (and (not (gif)) (not (ref)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ugf)) (not (vef)) )
         (and (not (jif)) (not (uef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vgf)) (not (yef)) )
         (and (not (lif)) (not (xef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (xgf)) (not (bff)) )
         (and (not (qif)) (not (zef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ygf)) (not (gff)) )
         (and (not (tif)) (not (cff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jff)) (not (b8c)) )
         (and (not (vif)) (not (hff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lff)) (not (b8c)) )
         (and (not (yif)) (not (kff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qff)) (not (b8c)) )
         (and (not (bjf)) (not (mff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tff)) (not (b8c)) )
         (and (not (gjf)) (not (rff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vff)) (not (b8c)) )
         (and (not (jjf)) (not (uff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yff)) (not (b8c)) )
         (and (not (ljf)) (not (xff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgf)) (not (b8c)) )
         (and (not (qjf)) (not (zff)) ))

    )
  )
  (:action MOVE_P4-4_P5-4
    :precondition  (and 
      (l9b)
      (l1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l9b) (l1c) )
         (and (not (h2c)) (not (l1c)) (k1c) (j2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k7c) (kyd) )
         (and (not (gzd)) (not (kyd)) (not (h2c)) (not (l1c)) (k1c) (j2c) (jyd) (hzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jyd)) (not (j7c)) )
         (and (not (gzd)) (not (kyd)) (not (h2c)) (not (l1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (mdf) )
         (and (not (guf)) (not (mdf)) (qdf) (cuf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (rdf) )
         (and (not (juf)) (not (rdf)) (tdf) (huf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (udf) )
         (and (not (luf)) (not (udf)) (vdf) (kuf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (xdf) )
         (and (not (quf)) (not (xdf)) (ydf) (muf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (zdf) )
         (and (not (tuf)) (not (zdf)) (bef) (ruf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (cef) )
         (and (not (vuf)) (not (cef)) (gef) (uuf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (hef) )
         (and (not (yuf)) (not (hef)) (jef) (xuf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (kef) )
         (and (not (bvf)) (not (kef)) (lef) (zuf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (mef) )
         (and (not (gvf)) (not (mef)) (qef) (cvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (ref) )
         (and (not (jvf)) (not (ref)) (tef) (hvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (uef) )
         (and (not (lvf)) (not (uef)) (vef) (kvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (xef) )
         (and (not (qvf)) (not (xef)) (yef) (mvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (zef) )
         (and (not (tvf)) (not (zef)) (bff) (rvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (cff) )
         (and (not (vvf)) (not (cff)) (gff) (uvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (hff) )
         (and (not (yvf)) (not (hff)) (jff) (xvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (kff) )
         (and (not (bwf)) (not (kff)) (lff) (zvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (mff) )
         (and (not (gwf)) (not (mff)) (qff) (cwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (rff) )
         (and (not (jwf)) (not (rff)) (tff) (hwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (uff) )
         (and (not (lwf)) (not (uff)) (vff) (kwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (xff) )
         (and (not (qwf)) (not (xff)) (yff) (mwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (zff) )
         (and (not (twf)) (not (zff)) (bgf) (rwf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdf)) (not (j7c)) )
         (and (not (guf)) (not (mdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdf)) (not (j7c)) )
         (and (not (juf)) (not (rdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdf)) (not (j7c)) )
         (and (not (luf)) (not (udf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydf)) (not (j7c)) )
         (and (not (quf)) (not (xdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bef)) (not (j7c)) )
         (and (not (tuf)) (not (zdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gef)) (not (j7c)) )
         (and (not (vuf)) (not (cef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jef)) (not (j7c)) )
         (and (not (yuf)) (not (hef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lef)) (not (j7c)) )
         (and (not (bvf)) (not (kef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qef)) (not (j7c)) )
         (and (not (gvf)) (not (mef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tef)) (not (j7c)) )
         (and (not (jvf)) (not (ref)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vef)) (not (j7c)) )
         (and (not (lvf)) (not (uef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yef)) (not (j7c)) )
         (and (not (qvf)) (not (xef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bff)) (not (j7c)) )
         (and (not (tvf)) (not (zef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gff)) (not (j7c)) )
         (and (not (vvf)) (not (cff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jff)) (not (j7c)) )
         (and (not (yvf)) (not (hff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lff)) (not (j7c)) )
         (and (not (bwf)) (not (kff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qff)) (not (j7c)) )
         (and (not (gwf)) (not (mff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tff)) (not (j7c)) )
         (and (not (jwf)) (not (rff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vff)) (not (j7c)) )
         (and (not (lwf)) (not (uff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yff)) (not (j7c)) )
         (and (not (qwf)) (not (xff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgf)) (not (j7c)) )
         (and (not (twf)) (not (zff)) ))

    )
  )
  (:action MOVE_P4-5_P3-5
    :precondition  (and 
      (bac)
      (q1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bac) (q1c) )
         (and (not (q1c)) (not (rzc)) (tzc) (m1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z8c) (myd) )
         (and (not (myd)) (not (qxd)) (not (q1c)) (not (rzc)) (tzc) (m1c) (rxd) (lyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lyd)) (not (y8c)) )
         (and (not (myd)) (not (qxd)) (not (q1c)) (not (rzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (zgf) )
         (and (not (zgf)) (not (g3e)) (c3e) (bhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (chf) )
         (and (not (chf)) (not (j3e)) (h3e) (ghf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (hhf) )
         (and (not (hhf)) (not (l3e)) (k3e) (jhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (khf) )
         (and (not (khf)) (not (q3e)) (m3e) (lhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (mhf) )
         (and (not (mhf)) (not (t3e)) (r3e) (qhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (rhf) )
         (and (not (rhf)) (not (v3e)) (u3e) (thf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (uhf) )
         (and (not (uhf)) (not (y3e)) (x3e) (vhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (xhf) )
         (and (not (xhf)) (not (b4e)) (z3e) (yhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (zhf) )
         (and (not (zhf)) (not (g4e)) (c4e) (bif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (cif) )
         (and (not (cif)) (not (j4e)) (h4e) (gif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (hif) )
         (and (not (hif)) (not (l4e)) (k4e) (jif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (kif) )
         (and (not (kif)) (not (q4e)) (m4e) (lif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (mif) )
         (and (not (mif)) (not (t4e)) (r4e) (qif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (rif) )
         (and (not (rif)) (not (v4e)) (u4e) (tif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (uif) )
         (and (not (uif)) (not (y4e)) (x4e) (vif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (xif) )
         (and (not (xif)) (not (b5e)) (z4e) (yif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (zif) )
         (and (not (zif)) (not (g5e)) (c5e) (bjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (cjf) )
         (and (not (cjf)) (not (j5e)) (h5e) (gjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (hjf) )
         (and (not (hjf)) (not (l5e)) (k5e) (jjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (kjf) )
         (and (not (kjf)) (not (q5e)) (m5e) (ljf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z8c) (mjf) )
         (and (not (mjf)) (not (t5e)) (r5e) (qjf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhf)) (not (y8c)) )
         (and (not (zgf)) (not (g3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghf)) (not (y8c)) )
         (and (not (chf)) (not (j3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhf)) (not (y8c)) )
         (and (not (hhf)) (not (l3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhf)) (not (y8c)) )
         (and (not (khf)) (not (q3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhf)) (not (y8c)) )
         (and (not (mhf)) (not (t3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thf)) (not (y8c)) )
         (and (not (rhf)) (not (v3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vhf)) (not (y8c)) )
         (and (not (uhf)) (not (y3e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yhf)) (not (y8c)) )
         (and (not (xhf)) (not (b4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bif)) (not (y8c)) )
         (and (not (zhf)) (not (g4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gif)) (not (y8c)) )
         (and (not (cif)) (not (j4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jif)) (not (y8c)) )
         (and (not (hif)) (not (l4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lif)) (not (y8c)) )
         (and (not (kif)) (not (q4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qif)) (not (y8c)) )
         (and (not (mif)) (not (t4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tif)) (not (y8c)) )
         (and (not (rif)) (not (v4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vif)) (not (y8c)) )
         (and (not (uif)) (not (y4e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yif)) (not (y8c)) )
         (and (not (xif)) (not (b5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjf)) (not (y8c)) )
         (and (not (zif)) (not (g5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjf)) (not (y8c)) )
         (and (not (cjf)) (not (j5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjf)) (not (y8c)) )
         (and (not (hjf)) (not (l5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljf)) (not (y8c)) )
         (and (not (kjf)) (not (q5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjf)) (not (y8c)) )
         (and (not (mjf)) (not (t5e)) ))

    )
  )
  (:action MOVE_P4-5_P4-4
    :precondition  (and 
      (j0b)
      (q1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j0b) (q1c) )
         (and (not (q1c)) (not (k1c)) (l1c) (m1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h8c) (myd) )
         (and (not (myd)) (not (jyd)) (not (q1c)) (not (k1c)) (l1c) (m1c) (kyd) (lyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lyd)) (not (g8c)) )
         (and (not (myd)) (not (jyd)) (not (q1c)) (not (k1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (zgf) )
         (and (not (zgf)) (not (qdf)) (mdf) (bhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (chf) )
         (and (not (chf)) (not (tdf)) (rdf) (ghf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (hhf) )
         (and (not (hhf)) (not (vdf)) (udf) (jhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (khf) )
         (and (not (khf)) (not (ydf)) (xdf) (lhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (mhf) )
         (and (not (mhf)) (not (bef)) (zdf) (qhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (rhf) )
         (and (not (rhf)) (not (gef)) (cef) (thf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (uhf) )
         (and (not (uhf)) (not (jef)) (hef) (vhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (xhf) )
         (and (not (xhf)) (not (lef)) (kef) (yhf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (zhf) )
         (and (not (zhf)) (not (qef)) (mef) (bif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (cif) )
         (and (not (cif)) (not (tef)) (ref) (gif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (vcf) (hif) )
         (and (not (hif)) (not (vef)) (uef) (jif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (kif) )
         (and (not (kif)) (not (yef)) (xef) (lif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (mif) )
         (and (not (mif)) (not (bff)) (zef) (qif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (rif) )
         (and (not (rif)) (not (gff)) (cff) (tif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (uif) )
         (and (not (uif)) (not (jff)) (hff) (vif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (xif) )
         (and (not (xif)) (not (lff)) (kff) (yif) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (zif) )
         (and (not (zif)) (not (qff)) (mff) (bjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (cjf) )
         (and (not (cjf)) (not (tff)) (rff) (gjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (hjf) )
         (and (not (hjf)) (not (vff)) (uff) (jjf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (kjf) )
         (and (not (kjf)) (not (yff)) (xff) (ljf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (mjf) )
         (and (not (mjf)) (not (bgf)) (zff) (qjf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhf)) (not (g8c)) )
         (and (not (zgf)) (not (qdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghf)) (not (g8c)) )
         (and (not (chf)) (not (tdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhf)) (not (g8c)) )
         (and (not (hhf)) (not (vdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhf)) (not (g8c)) )
         (and (not (khf)) (not (ydf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhf)) (not (g8c)) )
         (and (not (mhf)) (not (bef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thf)) (not (g8c)) )
         (and (not (rhf)) (not (gef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vhf)) (not (g8c)) )
         (and (not (uhf)) (not (jef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yhf)) (not (bdf)) )
         (and (not (xhf)) (not (lef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bif)) (not (cdf)) )
         (and (not (zhf)) (not (qef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gif)) (not (gdf)) )
         (and (not (cif)) (not (tef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jif)) (not (hdf)) )
         (and (not (hif)) (not (vef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lif)) (not (jdf)) )
         (and (not (kif)) (not (yef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qif)) (not (kdf)) )
         (and (not (mif)) (not (bff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tif)) (not (ldf)) )
         (and (not (rif)) (not (gff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vif)) (not (g8c)) )
         (and (not (uif)) (not (jff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yif)) (not (g8c)) )
         (and (not (xif)) (not (lff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjf)) (not (g8c)) )
         (and (not (zif)) (not (qff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjf)) (not (g8c)) )
         (and (not (cjf)) (not (tff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjf)) (not (g8c)) )
         (and (not (hjf)) (not (vff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljf)) (not (g8c)) )
         (and (not (kjf)) (not (yff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjf)) (not (g8c)) )
         (and (not (mjf)) (not (bgf)) ))

    )
  )
  (:action MOVE_P4-5_P4-6
    :precondition  (and 
      (b0b)
      (q1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (b0b) (q1c) )
         (and (not (r1c)) (not (q1c)) (m1c) (t1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z7c) (myd) )
         (and (not (qyd)) (not (myd)) (not (r1c)) (not (q1c)) (m1c) (t1c) (lyd) (ryd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lyd)) (not (y7c)) )
         (and (not (qyd)) (not (myd)) (not (r1c)) (not (q1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (zgf) )
         (and (not (qkf)) (not (zgf)) (bhf) (mkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (chf) )
         (and (not (tkf)) (not (chf)) (ghf) (rkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (hhf) )
         (and (not (vkf)) (not (hhf)) (jhf) (ukf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (khf) )
         (and (not (ykf)) (not (khf)) (lhf) (xkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (mhf) )
         (and (not (blf)) (not (mhf)) (qhf) (zkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (rhf) )
         (and (not (glf)) (not (rhf)) (thf) (clf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (uhf) )
         (and (not (jlf)) (not (uhf)) (vhf) (hlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (xhf) )
         (and (not (llf)) (not (xhf)) (yhf) (klf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (zhf) (tjf) )
         (and (not (qlf)) (not (zhf)) (bif) (mlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (cif) )
         (and (not (tlf)) (not (cif)) (gif) (rlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (hif) )
         (and (not (vlf)) (not (hif)) (jif) (ulf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (kif) )
         (and (not (ylf)) (not (kif)) (lif) (xlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (mif) )
         (and (not (bmf)) (not (mif)) (qif) (zlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (rif) )
         (and (not (gmf)) (not (rif)) (tif) (cmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (uif) )
         (and (not (jmf)) (not (uif)) (vif) (hmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (xif) )
         (and (not (lmf)) (not (xif)) (yif) (kmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (zif) )
         (and (not (qmf)) (not (zif)) (bjf) (mmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (cjf) )
         (and (not (tmf)) (not (cjf)) (gjf) (rmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (hjf) )
         (and (not (vmf)) (not (hjf)) (jjf) (umf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (kjf) )
         (and (not (ymf)) (not (kjf)) (ljf) (xmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (mjf) )
         (and (not (bnf)) (not (mjf)) (qjf) (zmf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhf)) (not (y7c)) )
         (and (not (qkf)) (not (zgf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghf)) (not (y7c)) )
         (and (not (tkf)) (not (chf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhf)) (not (y7c)) )
         (and (not (vkf)) (not (hhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhf)) (not (y7c)) )
         (and (not (ykf)) (not (khf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhf)) (not (y7c)) )
         (and (not (blf)) (not (mhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thf)) (not (y7c)) )
         (and (not (glf)) (not (rhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vhf)) (not (y7c)) )
         (and (not (jlf)) (not (uhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bkf)) (not (yhf)) )
         (and (not (llf)) (not (xhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ckf)) (not (bif)) )
         (and (not (qlf)) (not (zhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gkf)) (not (gif)) )
         (and (not (tlf)) (not (cif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hkf)) (not (jif)) )
         (and (not (vlf)) (not (hif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jkf)) (not (lif)) )
         (and (not (ylf)) (not (kif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kkf)) (not (qif)) )
         (and (not (bmf)) (not (mif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lkf)) (not (tif)) )
         (and (not (gmf)) (not (rif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vif)) (not (y7c)) )
         (and (not (jmf)) (not (uif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yif)) (not (y7c)) )
         (and (not (lmf)) (not (xif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjf)) (not (y7c)) )
         (and (not (qmf)) (not (zif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjf)) (not (y7c)) )
         (and (not (tmf)) (not (cjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjf)) (not (y7c)) )
         (and (not (vmf)) (not (hjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljf)) (not (y7c)) )
         (and (not (ymf)) (not (kjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjf)) (not (y7c)) )
         (and (not (bnf)) (not (mjf)) ))

    )
  )
  (:action MOVE_P4-5_P5-5
    :precondition  (and 
      (j9b)
      (q1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j9b) (q1c) )
         (and (not (k2c)) (not (q1c)) (m1c) (l2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h7c) (myd) )
         (and (not (jzd)) (not (myd)) (not (k2c)) (not (q1c)) (m1c) (l2c) (lyd) (kzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lyd)) (not (g7c)) )
         (and (not (jzd)) (not (myd)) (not (k2c)) (not (q1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (zgf) )
         (and (not (vwf)) (not (zgf)) (bhf) (uwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (chf) )
         (and (not (ywf)) (not (chf)) (ghf) (xwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (hhf) )
         (and (not (bxf)) (not (hhf)) (jhf) (zwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (khf) )
         (and (not (gxf)) (not (khf)) (lhf) (cxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (mhf) )
         (and (not (jxf)) (not (mhf)) (qhf) (hxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (rhf) )
         (and (not (lxf)) (not (rhf)) (thf) (kxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (uhf) )
         (and (not (qxf)) (not (uhf)) (vhf) (mxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (xhf) )
         (and (not (txf)) (not (xhf)) (yhf) (rxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (zhf) )
         (and (not (vxf)) (not (zhf)) (bif) (uxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (cif) )
         (and (not (yxf)) (not (cif)) (gif) (xxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (hif) )
         (and (not (byf)) (not (hif)) (jif) (zxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (kif) )
         (and (not (gyf)) (not (kif)) (lif) (cyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (mif) )
         (and (not (jyf)) (not (mif)) (qif) (hyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (rif) )
         (and (not (lyf)) (not (rif)) (tif) (kyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (uif) )
         (and (not (qyf)) (not (uif)) (vif) (myf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (xif) )
         (and (not (tyf)) (not (xif)) (yif) (ryf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (zif) )
         (and (not (vyf)) (not (zif)) (bjf) (uyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (cjf) )
         (and (not (yyf)) (not (cjf)) (gjf) (xyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (hjf) )
         (and (not (bzf)) (not (hjf)) (jjf) (zyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (kjf) )
         (and (not (gzf)) (not (kjf)) (ljf) (czf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (mjf) )
         (and (not (jzf)) (not (mjf)) (qjf) (hzf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhf)) (not (g7c)) )
         (and (not (vwf)) (not (zgf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghf)) (not (g7c)) )
         (and (not (ywf)) (not (chf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhf)) (not (g7c)) )
         (and (not (bxf)) (not (hhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhf)) (not (g7c)) )
         (and (not (gxf)) (not (khf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhf)) (not (g7c)) )
         (and (not (jxf)) (not (mhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thf)) (not (g7c)) )
         (and (not (lxf)) (not (rhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vhf)) (not (g7c)) )
         (and (not (qxf)) (not (uhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yhf)) (not (g7c)) )
         (and (not (txf)) (not (xhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bif)) (not (g7c)) )
         (and (not (vxf)) (not (zhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gif)) (not (g7c)) )
         (and (not (yxf)) (not (cif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jif)) (not (g7c)) )
         (and (not (byf)) (not (hif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lif)) (not (g7c)) )
         (and (not (gyf)) (not (kif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qif)) (not (g7c)) )
         (and (not (jyf)) (not (mif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tif)) (not (g7c)) )
         (and (not (lyf)) (not (rif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vif)) (not (g7c)) )
         (and (not (qyf)) (not (uif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yif)) (not (g7c)) )
         (and (not (tyf)) (not (xif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjf)) (not (g7c)) )
         (and (not (vyf)) (not (zif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjf)) (not (g7c)) )
         (and (not (yyf)) (not (cjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjf)) (not (g7c)) )
         (and (not (bzf)) (not (hjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljf)) (not (g7c)) )
         (and (not (gzf)) (not (kjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjf)) (not (g7c)) )
         (and (not (jzf)) (not (mjf)) ))

    )
  )
  (:action MOVE_P4-6_P3-6
    :precondition  (and 
      (y0b)
      (t1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y0b) (t1c) )
         (and (not (t1c)) (not (uzc)) (vzc) (r1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x8c) (ryd) )
         (and (not (ryd)) (not (txd)) (not (t1c)) (not (uzc)) (vzc) (r1c) (uxd) (qyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qyd)) (not (v8c)) )
         (and (not (ryd)) (not (txd)) (not (t1c)) (not (uzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (mkf) )
         (and (not (mkf)) (not (v5e)) (u5e) (qkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (rkf) )
         (and (not (rkf)) (not (y5e)) (x5e) (tkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (ukf) )
         (and (not (ukf)) (not (b6e)) (z5e) (vkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (xkf) )
         (and (not (xkf)) (not (g6e)) (c6e) (ykf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (zkf) )
         (and (not (zkf)) (not (j6e)) (h6e) (blf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (clf) )
         (and (not (clf)) (not (l6e)) (k6e) (glf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (hlf) )
         (and (not (hlf)) (not (q6e)) (m6e) (jlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (klf) )
         (and (not (klf)) (not (t6e)) (r6e) (llf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (mlf) )
         (and (not (mlf)) (not (v6e)) (u6e) (qlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (rlf) )
         (and (not (rlf)) (not (y6e)) (x6e) (tlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (ulf) )
         (and (not (ulf)) (not (b7e)) (z6e) (vlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (xlf) )
         (and (not (xlf)) (not (g7e)) (c7e) (ylf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (zlf) )
         (and (not (zlf)) (not (j7e)) (h7e) (bmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (cmf) )
         (and (not (cmf)) (not (l7e)) (k7e) (gmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (hmf) )
         (and (not (hmf)) (not (q7e)) (m7e) (jmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (kmf) )
         (and (not (kmf)) (not (t7e)) (r7e) (lmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (mmf) )
         (and (not (mmf)) (not (v7e)) (u7e) (qmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (rmf) )
         (and (not (rmf)) (not (y7e)) (x7e) (tmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (umf) )
         (and (not (umf)) (not (b8e)) (z7e) (vmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (xmf) )
         (and (not (xmf)) (not (g8e)) (c8e) (ymf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8c) (zmf) )
         (and (not (zmf)) (not (j8e)) (h8e) (bnf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qkf)) (not (v8c)) )
         (and (not (mkf)) (not (v5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tkf)) (not (v8c)) )
         (and (not (rkf)) (not (y5e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vkf)) (not (v8c)) )
         (and (not (ukf)) (not (b6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ykf)) (not (v8c)) )
         (and (not (xkf)) (not (g6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (blf)) (not (v8c)) )
         (and (not (zkf)) (not (j6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (glf)) (not (v8c)) )
         (and (not (clf)) (not (l6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jlf)) (not (v8c)) )
         (and (not (hlf)) (not (q6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (llf)) (not (v8c)) )
         (and (not (klf)) (not (t6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qlf)) (not (v8c)) )
         (and (not (mlf)) (not (v6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tlf)) (not (v8c)) )
         (and (not (rlf)) (not (y6e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vlf)) (not (v8c)) )
         (and (not (ulf)) (not (b7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ylf)) (not (v8c)) )
         (and (not (xlf)) (not (g7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bmf)) (not (v8c)) )
         (and (not (zlf)) (not (j7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gmf)) (not (v8c)) )
         (and (not (cmf)) (not (l7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jmf)) (not (v8c)) )
         (and (not (hmf)) (not (q7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lmf)) (not (v8c)) )
         (and (not (kmf)) (not (t7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qmf)) (not (v8c)) )
         (and (not (mmf)) (not (v7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tmf)) (not (v8c)) )
         (and (not (rmf)) (not (y7e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vmf)) (not (v8c)) )
         (and (not (umf)) (not (b8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ymf)) (not (v8c)) )
         (and (not (xmf)) (not (g8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bnf)) (not (v8c)) )
         (and (not (zmf)) (not (j8e)) ))

    )
  )
  (:action MOVE_P4-6_P4-5
    :precondition  (and 
      (g0b)
      (t1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g0b) (t1c) )
         (and (not (t1c)) (not (m1c)) (q1c) (r1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c8c) (ryd) )
         (and (not (ryd)) (not (lyd)) (not (t1c)) (not (m1c)) (q1c) (r1c) (myd) (qyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qyd)) (not (b8c)) )
         (and (not (ryd)) (not (lyd)) (not (t1c)) (not (m1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (mkf) )
         (and (not (mkf)) (not (bhf)) (zgf) (qkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (rkf) )
         (and (not (rkf)) (not (ghf)) (chf) (tkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (ukf) )
         (and (not (ukf)) (not (jhf)) (hhf) (vkf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (xkf) )
         (and (not (xkf)) (not (lhf)) (khf) (ykf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (zkf) )
         (and (not (zkf)) (not (qhf)) (mhf) (blf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (clf) )
         (and (not (clf)) (not (thf)) (rhf) (glf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (hlf) )
         (and (not (hlf)) (not (vhf)) (uhf) (jlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (klf) )
         (and (not (klf)) (not (yhf)) (xhf) (llf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (mlf) )
         (and (not (mlf)) (not (bif)) (zhf) (qlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (hgf) (rlf) )
         (and (not (rlf)) (not (gif)) (cif) (tlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (ulf) )
         (and (not (ulf)) (not (jif)) (hif) (vlf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (xlf) )
         (and (not (xlf)) (not (lif)) (kif) (ylf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (zlf) )
         (and (not (zlf)) (not (qif)) (mif) (bmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (cmf) )
         (and (not (cmf)) (not (tif)) (rif) (gmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (hmf) )
         (and (not (hmf)) (not (vif)) (uif) (jmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (kmf) )
         (and (not (kmf)) (not (yif)) (xif) (lmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (mmf) )
         (and (not (mmf)) (not (bjf)) (zif) (qmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (rmf) )
         (and (not (rmf)) (not (gjf)) (cjf) (tmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (umf) )
         (and (not (umf)) (not (jjf)) (hjf) (vmf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (xmf) )
         (and (not (xmf)) (not (ljf)) (kjf) (ymf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (zmf) )
         (and (not (zmf)) (not (qjf)) (mjf) (bnf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qkf)) (not (b8c)) )
         (and (not (mkf)) (not (bhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tkf)) (not (b8c)) )
         (and (not (rkf)) (not (ghf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vkf)) (not (b8c)) )
         (and (not (ukf)) (not (jhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ykf)) (not (b8c)) )
         (and (not (xkf)) (not (lhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (blf)) (not (b8c)) )
         (and (not (zkf)) (not (qhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (glf)) (not (b8c)) )
         (and (not (clf)) (not (thf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jlf)) (not (b8c)) )
         (and (not (hlf)) (not (vhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (llf)) (not (qgf)) )
         (and (not (klf)) (not (yhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qlf)) (not (rgf)) )
         (and (not (mlf)) (not (bif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tlf)) (not (tgf)) )
         (and (not (rlf)) (not (gif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vlf)) (not (ugf)) )
         (and (not (ulf)) (not (jif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ylf)) (not (vgf)) )
         (and (not (xlf)) (not (lif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bmf)) (not (xgf)) )
         (and (not (zlf)) (not (qif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gmf)) (not (ygf)) )
         (and (not (cmf)) (not (tif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jmf)) (not (b8c)) )
         (and (not (hmf)) (not (vif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lmf)) (not (b8c)) )
         (and (not (kmf)) (not (yif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qmf)) (not (b8c)) )
         (and (not (mmf)) (not (bjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tmf)) (not (b8c)) )
         (and (not (rmf)) (not (gjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vmf)) (not (b8c)) )
         (and (not (umf)) (not (jjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ymf)) (not (b8c)) )
         (and (not (xmf)) (not (ljf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bnf)) (not (b8c)) )
         (and (not (zmf)) (not (qjf)) ))

    )
  )
  (:action MOVE_P4-6_P4-7
    :precondition  (and 
      (y9b)
      (t1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y9b) (t1c) )
         (and (not (u1c)) (not (t1c)) (r1c) (v1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x7c) (ryd) )
         (and (not (tyd)) (not (ryd)) (not (u1c)) (not (t1c)) (r1c) (v1c) (qyd) (uyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qyd)) (not (v7c)) )
         (and (not (tyd)) (not (ryd)) (not (u1c)) (not (t1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (mkf) )
         (and (not (bof)) (not (mkf)) (qkf) (znf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (rkf) )
         (and (not (gof)) (not (rkf)) (tkf) (cof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (ukf) )
         (and (not (jof)) (not (ukf)) (vkf) (hof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (xkf) )
         (and (not (lof)) (not (xkf)) (ykf) (kof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (zkf) )
         (and (not (qof)) (not (zkf)) (blf) (mof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (clf) )
         (and (not (tof)) (not (clf)) (glf) (rof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (hlf) )
         (and (not (vof)) (not (hlf)) (jlf) (uof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (klf) (cnf) )
         (and (not (yof)) (not (klf)) (llf) (xof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (mlf) )
         (and (not (bpf)) (not (mlf)) (qlf) (zof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (rlf) )
         (and (not (gpf)) (not (rlf)) (tlf) (cpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (ulf) )
         (and (not (jpf)) (not (ulf)) (vlf) (hpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (xlf) )
         (and (not (lpf)) (not (xlf)) (ylf) (kpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (zlf) )
         (and (not (qpf)) (not (zlf)) (bmf) (mpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (cmf) )
         (and (not (tpf)) (not (cmf)) (gmf) (rpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (hmf) )
         (and (not (vpf)) (not (hmf)) (jmf) (upf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (kmf) )
         (and (not (ypf)) (not (kmf)) (lmf) (xpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (mmf) )
         (and (not (bqf)) (not (mmf)) (qmf) (zpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (rmf) )
         (and (not (gqf)) (not (rmf)) (tmf) (cqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (umf) )
         (and (not (jqf)) (not (umf)) (vmf) (hqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (xmf) )
         (and (not (lqf)) (not (xmf)) (ymf) (kqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (zmf) )
         (and (not (qqf)) (not (zmf)) (bnf) (mqf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qkf)) (not (v7c)) )
         (and (not (bof)) (not (mkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tkf)) (not (v7c)) )
         (and (not (gof)) (not (rkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vkf)) (not (v7c)) )
         (and (not (jof)) (not (ukf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ykf)) (not (v7c)) )
         (and (not (lof)) (not (xkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (blf)) (not (v7c)) )
         (and (not (qof)) (not (zkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (glf)) (not (v7c)) )
         (and (not (tof)) (not (clf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jlf)) (not (v7c)) )
         (and (not (vof)) (not (hlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qnf)) (not (llf)) )
         (and (not (yof)) (not (klf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (rnf)) (not (qlf)) )
         (and (not (bpf)) (not (mlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tnf)) (not (tlf)) )
         (and (not (gpf)) (not (rlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (unf)) (not (vlf)) )
         (and (not (jpf)) (not (ulf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vnf)) (not (ylf)) )
         (and (not (lpf)) (not (xlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (xnf)) (not (bmf)) )
         (and (not (qpf)) (not (zlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ynf)) (not (gmf)) )
         (and (not (tpf)) (not (cmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jmf)) (not (v7c)) )
         (and (not (vpf)) (not (hmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lmf)) (not (v7c)) )
         (and (not (ypf)) (not (kmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qmf)) (not (v7c)) )
         (and (not (bqf)) (not (mmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tmf)) (not (v7c)) )
         (and (not (gqf)) (not (rmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vmf)) (not (v7c)) )
         (and (not (jqf)) (not (umf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ymf)) (not (v7c)) )
         (and (not (lqf)) (not (xmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bnf)) (not (v7c)) )
         (and (not (qqf)) (not (zmf)) ))

    )
  )
  (:action MOVE_P4-6_P5-6
    :precondition  (and 
      (g9b)
      (t1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g9b) (t1c) )
         (and (not (m2c)) (not (t1c)) (r1c) (q2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c7c) (ryd) )
         (and (not (lzd)) (not (ryd)) (not (m2c)) (not (t1c)) (r1c) (q2c) (qyd) (mzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qyd)) (not (b7c)) )
         (and (not (lzd)) (not (ryd)) (not (m2c)) (not (t1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (mkf) )
         (and (not (lzf)) (not (mkf)) (qkf) (kzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (rkf) )
         (and (not (qzf)) (not (rkf)) (tkf) (mzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (ukf) )
         (and (not (tzf)) (not (ukf)) (vkf) (rzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (xkf) )
         (and (not (vzf)) (not (xkf)) (ykf) (uzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (zkf) )
         (and (not (yzf)) (not (zkf)) (blf) (xzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (clf) )
         (and (not (b1f)) (not (clf)) (glf) (zzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (hlf) )
         (and (not (g1f)) (not (hlf)) (jlf) (c1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (klf) )
         (and (not (j1f)) (not (klf)) (llf) (h1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (mlf) )
         (and (not (l1f)) (not (mlf)) (qlf) (k1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (rlf) )
         (and (not (q1f)) (not (rlf)) (tlf) (m1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (ulf) )
         (and (not (t1f)) (not (ulf)) (vlf) (r1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (xlf) )
         (and (not (v1f)) (not (xlf)) (ylf) (u1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (zlf) )
         (and (not (y1f)) (not (zlf)) (bmf) (x1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (cmf) )
         (and (not (b2f)) (not (cmf)) (gmf) (z1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (hmf) )
         (and (not (g2f)) (not (hmf)) (jmf) (c2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (kmf) )
         (and (not (j2f)) (not (kmf)) (lmf) (h2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (mmf) )
         (and (not (l2f)) (not (mmf)) (qmf) (k2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (rmf) )
         (and (not (q2f)) (not (rmf)) (tmf) (m2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (umf) )
         (and (not (t2f)) (not (umf)) (vmf) (r2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (xmf) )
         (and (not (v2f)) (not (xmf)) (ymf) (u2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (zmf) )
         (and (not (y2f)) (not (zmf)) (bnf) (x2f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qkf)) (not (b7c)) )
         (and (not (lzf)) (not (mkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tkf)) (not (b7c)) )
         (and (not (qzf)) (not (rkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vkf)) (not (b7c)) )
         (and (not (tzf)) (not (ukf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ykf)) (not (b7c)) )
         (and (not (vzf)) (not (xkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (blf)) (not (b7c)) )
         (and (not (yzf)) (not (zkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (glf)) (not (b7c)) )
         (and (not (b1f)) (not (clf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jlf)) (not (b7c)) )
         (and (not (g1f)) (not (hlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (llf)) (not (b7c)) )
         (and (not (j1f)) (not (klf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qlf)) (not (b7c)) )
         (and (not (l1f)) (not (mlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tlf)) (not (b7c)) )
         (and (not (q1f)) (not (rlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vlf)) (not (b7c)) )
         (and (not (t1f)) (not (ulf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ylf)) (not (b7c)) )
         (and (not (v1f)) (not (xlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bmf)) (not (b7c)) )
         (and (not (y1f)) (not (zlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gmf)) (not (b7c)) )
         (and (not (b2f)) (not (cmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jmf)) (not (b7c)) )
         (and (not (g2f)) (not (hmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lmf)) (not (b7c)) )
         (and (not (j2f)) (not (kmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qmf)) (not (b7c)) )
         (and (not (l2f)) (not (mmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tmf)) (not (b7c)) )
         (and (not (q2f)) (not (rmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vmf)) (not (b7c)) )
         (and (not (t2f)) (not (umf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ymf)) (not (b7c)) )
         (and (not (v2f)) (not (xmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bnf)) (not (b7c)) )
         (and (not (y2f)) (not (zmf)) ))

    )
  )
  (:action MOVE_P4-7_P3-7
    :precondition  (and 
      (v0b)
      (v1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v0b) (v1c) )
         (and (not (v1c)) (not (xzc)) (yzc) (u1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u8c) (uyd) )
         (and (not (uyd)) (not (vxd)) (not (v1c)) (not (xzc)) (yzc) (u1c) (xxd) (tyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (tyd)) (not (t8c)) )
         (and (not (uyd)) (not (vxd)) (not (v1c)) (not (xzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (znf) )
         (and (not (znf)) (not (l8e)) (k8e) (bof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (cof) )
         (and (not (cof)) (not (q8e)) (m8e) (gof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (hof) )
         (and (not (hof)) (not (t8e)) (r8e) (jof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (kof) )
         (and (not (kof)) (not (v8e)) (u8e) (lof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (mof) )
         (and (not (mof)) (not (y8e)) (x8e) (qof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (rof) )
         (and (not (rof)) (not (b9e)) (z8e) (tof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (uof) )
         (and (not (uof)) (not (g9e)) (c9e) (vof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (xof) )
         (and (not (xof)) (not (j9e)) (h9e) (yof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (zof) )
         (and (not (zof)) (not (l9e)) (k9e) (bpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (cpf) )
         (and (not (cpf)) (not (q9e)) (m9e) (gpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (hpf) )
         (and (not (hpf)) (not (t9e)) (r9e) (jpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (kpf) )
         (and (not (kpf)) (not (v9e)) (u9e) (lpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (mpf) )
         (and (not (mpf)) (not (y9e)) (x9e) (qpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (rpf) )
         (and (not (rpf)) (not (b0e)) (z9e) (tpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (upf) )
         (and (not (upf)) (not (g0e)) (c0e) (vpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (xpf) )
         (and (not (xpf)) (not (j0e)) (h0e) (ypf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (zpf) )
         (and (not (zpf)) (not (l0e)) (k0e) (bqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (cqf) )
         (and (not (cqf)) (not (q0e)) (m0e) (gqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (hqf) )
         (and (not (hqf)) (not (t0e)) (r0e) (jqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (kqf) )
         (and (not (kqf)) (not (v0e)) (u0e) (lqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u8c) (mqf) )
         (and (not (mqf)) (not (y0e)) (x0e) (qqf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bof)) (not (t8c)) )
         (and (not (znf)) (not (l8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gof)) (not (t8c)) )
         (and (not (cof)) (not (q8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jof)) (not (t8c)) )
         (and (not (hof)) (not (t8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lof)) (not (t8c)) )
         (and (not (kof)) (not (v8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qof)) (not (t8c)) )
         (and (not (mof)) (not (y8e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tof)) (not (t8c)) )
         (and (not (rof)) (not (b9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vof)) (not (t8c)) )
         (and (not (uof)) (not (g9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yof)) (not (t8c)) )
         (and (not (xof)) (not (j9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bpf)) (not (t8c)) )
         (and (not (zof)) (not (l9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gpf)) (not (t8c)) )
         (and (not (cpf)) (not (q9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jpf)) (not (t8c)) )
         (and (not (hpf)) (not (t9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lpf)) (not (t8c)) )
         (and (not (kpf)) (not (v9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qpf)) (not (t8c)) )
         (and (not (mpf)) (not (y9e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tpf)) (not (t8c)) )
         (and (not (rpf)) (not (b0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vpf)) (not (t8c)) )
         (and (not (upf)) (not (g0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ypf)) (not (t8c)) )
         (and (not (xpf)) (not (j0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqf)) (not (t8c)) )
         (and (not (zpf)) (not (l0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqf)) (not (t8c)) )
         (and (not (cqf)) (not (q0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqf)) (not (t8c)) )
         (and (not (hqf)) (not (t0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqf)) (not (t8c)) )
         (and (not (kqf)) (not (v0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqf)) (not (t8c)) )
         (and (not (mqf)) (not (y0e)) ))

    )
  )
  (:action MOVE_P4-7_P4-6
    :precondition  (and 
      (b0b)
      (v1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (b0b) (v1c) )
         (and (not (v1c)) (not (r1c)) (t1c) (u1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z7c) (uyd) )
         (and (not (uyd)) (not (qyd)) (not (v1c)) (not (r1c)) (t1c) (u1c) (ryd) (tyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (tyd)) (not (y7c)) )
         (and (not (uyd)) (not (qyd)) (not (v1c)) (not (r1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (znf) )
         (and (not (znf)) (not (qkf)) (mkf) (bof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (cof) )
         (and (not (cof)) (not (tkf)) (rkf) (gof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (hof) )
         (and (not (hof)) (not (vkf)) (ukf) (jof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (kof) )
         (and (not (kof)) (not (ykf)) (xkf) (lof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (mof) )
         (and (not (mof)) (not (blf)) (zkf) (qof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (rof) )
         (and (not (rof)) (not (glf)) (clf) (tof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (uof) )
         (and (not (uof)) (not (jlf)) (hlf) (vof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (xof) )
         (and (not (xof)) (not (llf)) (klf) (yof) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (tjf) (zof) )
         (and (not (zof)) (not (qlf)) (mlf) (bpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (cpf) )
         (and (not (cpf)) (not (tlf)) (rlf) (gpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (hpf) )
         (and (not (hpf)) (not (vlf)) (ulf) (jpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (kpf) )
         (and (not (kpf)) (not (ylf)) (xlf) (lpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (mpf) )
         (and (not (mpf)) (not (bmf)) (zlf) (qpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (rpf) )
         (and (not (rpf)) (not (gmf)) (cmf) (tpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (upf) )
         (and (not (upf)) (not (jmf)) (hmf) (vpf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (xpf) )
         (and (not (xpf)) (not (lmf)) (kmf) (ypf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (zpf) )
         (and (not (zpf)) (not (qmf)) (mmf) (bqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (cqf) )
         (and (not (cqf)) (not (tmf)) (rmf) (gqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (hqf) )
         (and (not (hqf)) (not (vmf)) (umf) (jqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (kqf) )
         (and (not (kqf)) (not (ymf)) (xmf) (lqf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (mqf) )
         (and (not (mqf)) (not (bnf)) (zmf) (qqf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bof)) (not (y7c)) )
         (and (not (znf)) (not (qkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gof)) (not (y7c)) )
         (and (not (cof)) (not (tkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jof)) (not (y7c)) )
         (and (not (hof)) (not (vkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lof)) (not (y7c)) )
         (and (not (kof)) (not (ykf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qof)) (not (y7c)) )
         (and (not (mof)) (not (blf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tof)) (not (y7c)) )
         (and (not (rof)) (not (glf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vof)) (not (y7c)) )
         (and (not (uof)) (not (jlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yof)) (not (bkf)) )
         (and (not (xof)) (not (llf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bpf)) (not (ckf)) )
         (and (not (zof)) (not (qlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gpf)) (not (gkf)) )
         (and (not (cpf)) (not (tlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jpf)) (not (hkf)) )
         (and (not (hpf)) (not (vlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lpf)) (not (jkf)) )
         (and (not (kpf)) (not (ylf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qpf)) (not (kkf)) )
         (and (not (mpf)) (not (bmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tpf)) (not (lkf)) )
         (and (not (rpf)) (not (gmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vpf)) (not (y7c)) )
         (and (not (upf)) (not (jmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ypf)) (not (y7c)) )
         (and (not (xpf)) (not (lmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqf)) (not (y7c)) )
         (and (not (zpf)) (not (qmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqf)) (not (y7c)) )
         (and (not (cqf)) (not (tmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqf)) (not (y7c)) )
         (and (not (hqf)) (not (vmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqf)) (not (y7c)) )
         (and (not (kqf)) (not (ymf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqf)) (not (y7c)) )
         (and (not (mqf)) (not (bnf)) ))

    )
  )
  (:action MOVE_P4-7_P5-7
    :precondition  (and 
      (b9b)
      (v1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (b9b) (v1c) )
         (and (not (r2c)) (not (v1c)) (u1c) (t2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z6c) (uyd) )
         (and (not (qzd)) (not (uyd)) (not (r2c)) (not (v1c)) (u1c) (t2c) (tyd) (rzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (tyd)) (not (y6c)) )
         (and (not (qzd)) (not (uyd)) (not (r2c)) (not (v1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (znf) )
         (and (not (b3f)) (not (znf)) (bof) (z2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (cof) )
         (and (not (g3f)) (not (cof)) (gof) (c3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (hof) )
         (and (not (j3f)) (not (hof)) (jof) (h3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (kof) )
         (and (not (l3f)) (not (kof)) (lof) (k3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (mof) )
         (and (not (q3f)) (not (mof)) (qof) (m3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (rof) )
         (and (not (t3f)) (not (rof)) (tof) (r3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (uof) )
         (and (not (v3f)) (not (uof)) (vof) (u3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (xof) )
         (and (not (y3f)) (not (xof)) (yof) (x3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (zof) )
         (and (not (b4f)) (not (zof)) (bpf) (z3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (cpf) )
         (and (not (g4f)) (not (cpf)) (gpf) (c4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (hpf) )
         (and (not (j4f)) (not (hpf)) (jpf) (h4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (kpf) )
         (and (not (l4f)) (not (kpf)) (lpf) (k4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (mpf) )
         (and (not (q4f)) (not (mpf)) (qpf) (m4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (rpf) )
         (and (not (t4f)) (not (rpf)) (tpf) (r4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (upf) )
         (and (not (v4f)) (not (upf)) (vpf) (u4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (xpf) )
         (and (not (y4f)) (not (xpf)) (ypf) (x4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (zpf) )
         (and (not (b5f)) (not (zpf)) (bqf) (z4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (cqf) )
         (and (not (g5f)) (not (cqf)) (gqf) (c5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (hqf) )
         (and (not (j5f)) (not (hqf)) (jqf) (h5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (kqf) )
         (and (not (l5f)) (not (kqf)) (lqf) (k5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (mqf) )
         (and (not (q5f)) (not (mqf)) (qqf) (m5f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bof)) (not (y6c)) )
         (and (not (b3f)) (not (znf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gof)) (not (y6c)) )
         (and (not (g3f)) (not (cof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jof)) (not (y6c)) )
         (and (not (j3f)) (not (hof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lof)) (not (y6c)) )
         (and (not (l3f)) (not (kof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qof)) (not (y6c)) )
         (and (not (q3f)) (not (mof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tof)) (not (y6c)) )
         (and (not (t3f)) (not (rof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vof)) (not (y6c)) )
         (and (not (v3f)) (not (uof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yof)) (not (y6c)) )
         (and (not (y3f)) (not (xof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bpf)) (not (y6c)) )
         (and (not (b4f)) (not (zof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gpf)) (not (y6c)) )
         (and (not (g4f)) (not (cpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jpf)) (not (y6c)) )
         (and (not (j4f)) (not (hpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lpf)) (not (y6c)) )
         (and (not (l4f)) (not (kpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qpf)) (not (y6c)) )
         (and (not (q4f)) (not (mpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tpf)) (not (y6c)) )
         (and (not (t4f)) (not (rpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vpf)) (not (y6c)) )
         (and (not (v4f)) (not (upf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ypf)) (not (y6c)) )
         (and (not (y4f)) (not (xpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqf)) (not (y6c)) )
         (and (not (b5f)) (not (zpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqf)) (not (y6c)) )
         (and (not (g5f)) (not (cqf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqf)) (not (y6c)) )
         (and (not (j5f)) (not (hqf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqf)) (not (y6c)) )
         (and (not (l5f)) (not (kqf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqf)) (not (y6c)) )
         (and (not (q5f)) (not (mqf)) ))

    )
  )
  (:action MOVE_P5-4_P4-4
    :precondition  (and 
      (j0b)
      (j2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j0b) (j2c) )
         (and (not (j2c)) (not (k1c)) (l1c) (h2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h8c) (hzd) )
         (and (not (hzd)) (not (jyd)) (not (j2c)) (not (k1c)) (l1c) (h2c) (kyd) (gzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gzd)) (not (g8c)) )
         (and (not (hzd)) (not (jyd)) (not (j2c)) (not (k1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (cuf) )
         (and (not (cuf)) (not (qdf)) (mdf) (guf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (huf) )
         (and (not (huf)) (not (tdf)) (rdf) (juf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (kuf) )
         (and (not (kuf)) (not (vdf)) (udf) (luf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (muf) )
         (and (not (muf)) (not (ydf)) (xdf) (quf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (ruf) )
         (and (not (ruf)) (not (bef)) (zdf) (tuf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (uuf) )
         (and (not (uuf)) (not (gef)) (cef) (vuf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (xuf) )
         (and (not (xuf)) (not (jef)) (hef) (yuf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (zuf) )
         (and (not (zuf)) (not (lef)) (kef) (bvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (cvf) )
         (and (not (cvf)) (not (qef)) (mef) (gvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (hvf) )
         (and (not (hvf)) (not (tef)) (ref) (jvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (vcf) (kvf) )
         (and (not (kvf)) (not (vef)) (uef) (lvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (mvf) )
         (and (not (mvf)) (not (yef)) (xef) (qvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (rvf) )
         (and (not (rvf)) (not (bff)) (zef) (tvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (uvf) )
         (and (not (uvf)) (not (gff)) (cff) (vvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (xvf) )
         (and (not (xvf)) (not (jff)) (hff) (yvf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (zvf) )
         (and (not (zvf)) (not (lff)) (kff) (bwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (cwf) )
         (and (not (cwf)) (not (qff)) (mff) (gwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (hwf) )
         (and (not (hwf)) (not (tff)) (rff) (jwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (kwf) )
         (and (not (kwf)) (not (vff)) (uff) (lwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (mwf) )
         (and (not (mwf)) (not (yff)) (xff) (qwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (rwf) )
         (and (not (rwf)) (not (bgf)) (zff) (twf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (guf)) (not (g8c)) )
         (and (not (cuf)) (not (qdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (juf)) (not (g8c)) )
         (and (not (huf)) (not (tdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (luf)) (not (g8c)) )
         (and (not (kuf)) (not (vdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (quf)) (not (g8c)) )
         (and (not (muf)) (not (ydf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tuf)) (not (g8c)) )
         (and (not (ruf)) (not (bef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vuf)) (not (g8c)) )
         (and (not (uuf)) (not (gef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yuf)) (not (g8c)) )
         (and (not (xuf)) (not (jef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bvf)) (not (bdf)) )
         (and (not (zuf)) (not (lef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gvf)) (not (cdf)) )
         (and (not (cvf)) (not (qef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jvf)) (not (gdf)) )
         (and (not (hvf)) (not (tef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lvf)) (not (hdf)) )
         (and (not (kvf)) (not (vef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qvf)) (not (jdf)) )
         (and (not (mvf)) (not (yef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tvf)) (not (kdf)) )
         (and (not (rvf)) (not (bff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vvf)) (not (ldf)) )
         (and (not (uvf)) (not (gff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yvf)) (not (g8c)) )
         (and (not (xvf)) (not (jff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bwf)) (not (g8c)) )
         (and (not (zvf)) (not (lff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gwf)) (not (g8c)) )
         (and (not (cwf)) (not (qff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jwf)) (not (g8c)) )
         (and (not (hwf)) (not (tff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwf)) (not (g8c)) )
         (and (not (kwf)) (not (vff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwf)) (not (g8c)) )
         (and (not (mwf)) (not (yff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twf)) (not (g8c)) )
         (and (not (rwf)) (not (bgf)) ))

    )
  )
  (:action MOVE_P5-4_P5-3
    :precondition  (and 
      (q9b)
      (j2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q9b) (j2c) )
         (and (not (j2c)) (not (c2c)) (g2c) (h2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m7c) (hzd) )
         (and (not (hzd)) (not (bzd)) (not (j2c)) (not (c2c)) (g2c) (h2c) (czd) (gzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gzd)) (not (l7c)) )
         (and (not (hzd)) (not (bzd)) (not (j2c)) (not (c2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (cuf) )
         (and (not (t5f)) (not (cuf)) (guf) (r5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (huf) )
         (and (not (v5f)) (not (huf)) (juf) (u5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (kuf) )
         (and (not (y5f)) (not (kuf)) (luf) (x5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (muf) )
         (and (not (b6f)) (not (muf)) (quf) (z5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (ruf) )
         (and (not (g6f)) (not (ruf)) (tuf) (c6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (uuf) )
         (and (not (j6f)) (not (uuf)) (vuf) (h6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (xuf) )
         (and (not (l6f)) (not (xuf)) (yuf) (k6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (zuf) )
         (and (not (q6f)) (not (zuf)) (bvf) (m6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (cvf) )
         (and (not (t6f)) (not (cvf)) (gvf) (r6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (hvf) )
         (and (not (v6f)) (not (hvf)) (jvf) (u6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (kvf) )
         (and (not (y6f)) (not (kvf)) (lvf) (x6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (mvf) )
         (and (not (b7f)) (not (mvf)) (qvf) (z6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (rvf) )
         (and (not (g7f)) (not (rvf)) (tvf) (c7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (uvf) )
         (and (not (j7f)) (not (uvf)) (vvf) (h7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (xvf) )
         (and (not (l7f)) (not (xvf)) (yvf) (k7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (zvf) )
         (and (not (q7f)) (not (zvf)) (bwf) (m7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (cwf) )
         (and (not (t7f)) (not (cwf)) (gwf) (r7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (hwf) )
         (and (not (v7f)) (not (hwf)) (jwf) (u7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (kwf) )
         (and (not (y7f)) (not (kwf)) (lwf) (x7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (mwf) )
         (and (not (b8f)) (not (mwf)) (qwf) (z7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (rwf) )
         (and (not (g8f)) (not (rwf)) (twf) (c8f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (guf)) (not (l7c)) )
         (and (not (t5f)) (not (cuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (juf)) (not (l7c)) )
         (and (not (v5f)) (not (huf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (luf)) (not (l7c)) )
         (and (not (y5f)) (not (kuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (quf)) (not (l7c)) )
         (and (not (b6f)) (not (muf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tuf)) (not (l7c)) )
         (and (not (g6f)) (not (ruf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vuf)) (not (l7c)) )
         (and (not (j6f)) (not (uuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yuf)) (not (l7c)) )
         (and (not (l6f)) (not (xuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bvf)) (not (l7c)) )
         (and (not (q6f)) (not (zuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gvf)) (not (l7c)) )
         (and (not (t6f)) (not (cvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jvf)) (not (l7c)) )
         (and (not (v6f)) (not (hvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lvf)) (not (l7c)) )
         (and (not (y6f)) (not (kvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qvf)) (not (l7c)) )
         (and (not (b7f)) (not (mvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tvf)) (not (l7c)) )
         (and (not (g7f)) (not (rvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vvf)) (not (l7c)) )
         (and (not (j7f)) (not (uvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yvf)) (not (l7c)) )
         (and (not (l7f)) (not (xvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bwf)) (not (l7c)) )
         (and (not (q7f)) (not (zvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gwf)) (not (l7c)) )
         (and (not (t7f)) (not (cwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jwf)) (not (l7c)) )
         (and (not (v7f)) (not (hwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwf)) (not (l7c)) )
         (and (not (y7f)) (not (kwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwf)) (not (l7c)) )
         (and (not (b8f)) (not (mwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twf)) (not (l7c)) )
         (and (not (g8f)) (not (rwf)) ))

    )
  )
  (:action MOVE_P5-4_P5-5
    :precondition  (and 
      (j9b)
      (j2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j9b) (j2c) )
         (and (not (k2c)) (not (j2c)) (h2c) (l2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h7c) (hzd) )
         (and (not (jzd)) (not (hzd)) (not (k2c)) (not (j2c)) (h2c) (l2c) (gzd) (kzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gzd)) (not (g7c)) )
         (and (not (jzd)) (not (hzd)) (not (k2c)) (not (j2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (cuf) )
         (and (not (vwf)) (not (cuf)) (guf) (uwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (huf) )
         (and (not (ywf)) (not (huf)) (juf) (xwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (kuf) )
         (and (not (bxf)) (not (kuf)) (luf) (zwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (muf) )
         (and (not (gxf)) (not (muf)) (quf) (cxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (ruf) )
         (and (not (jxf)) (not (ruf)) (tuf) (hxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (uuf) )
         (and (not (lxf)) (not (uuf)) (vuf) (kxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (xuf) )
         (and (not (qxf)) (not (xuf)) (yuf) (mxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (zuf) )
         (and (not (txf)) (not (zuf)) (bvf) (rxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (cvf) )
         (and (not (vxf)) (not (cvf)) (gvf) (uxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (hvf) )
         (and (not (yxf)) (not (hvf)) (jvf) (xxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (kvf) )
         (and (not (byf)) (not (kvf)) (lvf) (zxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (mvf) )
         (and (not (gyf)) (not (mvf)) (qvf) (cyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (rvf) )
         (and (not (jyf)) (not (rvf)) (tvf) (hyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (uvf) )
         (and (not (lyf)) (not (uvf)) (vvf) (kyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (xvf) )
         (and (not (qyf)) (not (xvf)) (yvf) (myf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (zvf) )
         (and (not (tyf)) (not (zvf)) (bwf) (ryf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (cwf) )
         (and (not (vyf)) (not (cwf)) (gwf) (uyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (hwf) )
         (and (not (yyf)) (not (hwf)) (jwf) (xyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (kwf) )
         (and (not (bzf)) (not (kwf)) (lwf) (zyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (mwf) )
         (and (not (gzf)) (not (mwf)) (qwf) (czf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (rwf) )
         (and (not (jzf)) (not (rwf)) (twf) (hzf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (guf)) (not (g7c)) )
         (and (not (vwf)) (not (cuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (juf)) (not (g7c)) )
         (and (not (ywf)) (not (huf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (luf)) (not (g7c)) )
         (and (not (bxf)) (not (kuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (quf)) (not (g7c)) )
         (and (not (gxf)) (not (muf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tuf)) (not (g7c)) )
         (and (not (jxf)) (not (ruf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vuf)) (not (g7c)) )
         (and (not (lxf)) (not (uuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yuf)) (not (g7c)) )
         (and (not (qxf)) (not (xuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bvf)) (not (g7c)) )
         (and (not (txf)) (not (zuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gvf)) (not (g7c)) )
         (and (not (vxf)) (not (cvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jvf)) (not (g7c)) )
         (and (not (yxf)) (not (hvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lvf)) (not (g7c)) )
         (and (not (byf)) (not (kvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qvf)) (not (g7c)) )
         (and (not (gyf)) (not (mvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tvf)) (not (g7c)) )
         (and (not (jyf)) (not (rvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vvf)) (not (g7c)) )
         (and (not (lyf)) (not (uvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yvf)) (not (g7c)) )
         (and (not (qyf)) (not (xvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bwf)) (not (g7c)) )
         (and (not (tyf)) (not (zvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gwf)) (not (g7c)) )
         (and (not (vyf)) (not (cwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jwf)) (not (g7c)) )
         (and (not (yyf)) (not (hwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwf)) (not (g7c)) )
         (and (not (bzf)) (not (kwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwf)) (not (g7c)) )
         (and (not (gzf)) (not (mwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twf)) (not (g7c)) )
         (and (not (jzf)) (not (rwf)) ))

    )
  )
  (:action MOVE_P5-4_P6-4
    :precondition  (and 
      (q8b)
      (j2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q8b) (j2c) )
         (and (not (c3c)) (not (j2c)) (h2c) (g3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m6c) (hzd) )
         (and (not (b1d)) (not (hzd)) (not (c3c)) (not (j2c)) (h2c) (g3c) (gzd) (c1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gzd)) (not (l6c)) )
         (and (not (b1d)) (not (hzd)) (not (c3c)) (not (j2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (cuf) )
         (and (not (g9f)) (not (cuf)) (guf) (c9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (huf) )
         (and (not (j9f)) (not (huf)) (juf) (h9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (kuf) )
         (and (not (l9f)) (not (kuf)) (luf) (k9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (muf) (l8f) )
         (and (not (q9f)) (not (muf)) (quf) (m9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (ruf) )
         (and (not (t9f)) (not (ruf)) (tuf) (r9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (uuf) )
         (and (not (v9f)) (not (uuf)) (vuf) (u9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (xuf) )
         (and (not (y9f)) (not (xuf)) (yuf) (x9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (zuf) )
         (and (not (b0f)) (not (zuf)) (bvf) (z9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (cvf) )
         (and (not (g0f)) (not (cvf)) (gvf) (c0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (hvf) )
         (and (not (j0f)) (not (hvf)) (jvf) (h0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (kvf) )
         (and (not (l0f)) (not (kvf)) (lvf) (k0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (mvf) )
         (and (not (q0f)) (not (mvf)) (qvf) (m0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (rvf) )
         (and (not (t0f)) (not (rvf)) (tvf) (r0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (uvf) )
         (and (not (v0f)) (not (uvf)) (vvf) (u0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (xvf) )
         (and (not (y0f)) (not (xvf)) (yvf) (x0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (zvf) )
         (and (not (bag)) (not (zvf)) (bwf) (z0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (cwf) )
         (and (not (gag)) (not (cwf)) (gwf) (cag) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (hwf) )
         (and (not (jag)) (not (hwf)) (jwf) (hag) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (kwf) )
         (and (not (lag)) (not (kwf)) (lwf) (kag) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (mwf) )
         (and (not (qag)) (not (mwf)) (qwf) (mag) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (rwf) )
         (and (not (tag)) (not (rwf)) (twf) (rag) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8f)) (not (guf)) )
         (and (not (g9f)) (not (cuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (u8f)) (not (juf)) )
         (and (not (j9f)) (not (huf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8f)) (not (luf)) )
         (and (not (l9f)) (not (kuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (x8f)) (not (quf)) )
         (and (not (q9f)) (not (muf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y8f)) (not (tuf)) )
         (and (not (t9f)) (not (ruf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (z8f)) (not (vuf)) )
         (and (not (v9f)) (not (uuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9f)) (not (yuf)) )
         (and (not (y9f)) (not (xuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bvf)) (not (l6c)) )
         (and (not (b0f)) (not (zuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gvf)) (not (l6c)) )
         (and (not (g0f)) (not (cvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jvf)) (not (l6c)) )
         (and (not (j0f)) (not (hvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lvf)) (not (l6c)) )
         (and (not (l0f)) (not (kvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qvf)) (not (l6c)) )
         (and (not (q0f)) (not (mvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tvf)) (not (l6c)) )
         (and (not (t0f)) (not (rvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vvf)) (not (l6c)) )
         (and (not (v0f)) (not (uvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yvf)) (not (l6c)) )
         (and (not (y0f)) (not (xvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bwf)) (not (l6c)) )
         (and (not (bag)) (not (zvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gwf)) (not (l6c)) )
         (and (not (gag)) (not (cwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jwf)) (not (l6c)) )
         (and (not (jag)) (not (hwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwf)) (not (l6c)) )
         (and (not (lag)) (not (kwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwf)) (not (l6c)) )
         (and (not (qag)) (not (mwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twf)) (not (l6c)) )
         (and (not (tag)) (not (rwf)) ))

    )
  )
  (:action MOVE_P5-5_P4-5
    :precondition  (and 
      (g0b)
      (l2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g0b) (l2c) )
         (and (not (l2c)) (not (m1c)) (q1c) (k2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c8c) (kzd) )
         (and (not (kzd)) (not (lyd)) (not (l2c)) (not (m1c)) (q1c) (k2c) (myd) (jzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jzd)) (not (b8c)) )
         (and (not (kzd)) (not (lyd)) (not (l2c)) (not (m1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (uwf) )
         (and (not (uwf)) (not (bhf)) (zgf) (vwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (xwf) )
         (and (not (xwf)) (not (ghf)) (chf) (ywf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (zwf) )
         (and (not (zwf)) (not (jhf)) (hhf) (bxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (cxf) )
         (and (not (cxf)) (not (lhf)) (khf) (gxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (hxf) )
         (and (not (hxf)) (not (qhf)) (mhf) (jxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (kxf) )
         (and (not (kxf)) (not (thf)) (rhf) (lxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (mxf) )
         (and (not (mxf)) (not (vhf)) (uhf) (qxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (rxf) )
         (and (not (rxf)) (not (yhf)) (xhf) (txf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (uxf) )
         (and (not (uxf)) (not (bif)) (zhf) (vxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (hgf) (xxf) )
         (and (not (xxf)) (not (gif)) (cif) (yxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (zxf) )
         (and (not (zxf)) (not (jif)) (hif) (byf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (cyf) )
         (and (not (cyf)) (not (lif)) (kif) (gyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (hyf) )
         (and (not (hyf)) (not (qif)) (mif) (jyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (kyf) )
         (and (not (kyf)) (not (tif)) (rif) (lyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (myf) )
         (and (not (myf)) (not (vif)) (uif) (qyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (ryf) )
         (and (not (ryf)) (not (yif)) (xif) (tyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (uyf) )
         (and (not (uyf)) (not (bjf)) (zif) (vyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (xyf) )
         (and (not (xyf)) (not (gjf)) (cjf) (yyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (zyf) )
         (and (not (zyf)) (not (jjf)) (hjf) (bzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (czf) )
         (and (not (czf)) (not (ljf)) (kjf) (gzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c8c) (hzf) )
         (and (not (hzf)) (not (qjf)) (mjf) (jzf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vwf)) (not (b8c)) )
         (and (not (uwf)) (not (bhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywf)) (not (b8c)) )
         (and (not (xwf)) (not (ghf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxf)) (not (b8c)) )
         (and (not (zwf)) (not (jhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxf)) (not (b8c)) )
         (and (not (cxf)) (not (lhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxf)) (not (b8c)) )
         (and (not (hxf)) (not (qhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxf)) (not (b8c)) )
         (and (not (kxf)) (not (thf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxf)) (not (b8c)) )
         (and (not (mxf)) (not (vhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txf)) (not (qgf)) )
         (and (not (rxf)) (not (yhf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxf)) (not (rgf)) )
         (and (not (uxf)) (not (bif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxf)) (not (tgf)) )
         (and (not (xxf)) (not (gif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (byf)) (not (ugf)) )
         (and (not (zxf)) (not (jif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gyf)) (not (vgf)) )
         (and (not (cyf)) (not (lif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jyf)) (not (xgf)) )
         (and (not (hyf)) (not (qif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lyf)) (not (ygf)) )
         (and (not (kyf)) (not (tif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qyf)) (not (b8c)) )
         (and (not (myf)) (not (vif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tyf)) (not (b8c)) )
         (and (not (ryf)) (not (yif)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vyf)) (not (b8c)) )
         (and (not (uyf)) (not (bjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yyf)) (not (b8c)) )
         (and (not (xyf)) (not (gjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bzf)) (not (b8c)) )
         (and (not (zyf)) (not (jjf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gzf)) (not (b8c)) )
         (and (not (czf)) (not (ljf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jzf)) (not (b8c)) )
         (and (not (hzf)) (not (qjf)) ))

    )
  )
  (:action MOVE_P5-5_P5-4
    :precondition  (and 
      (l9b)
      (l2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l9b) (l2c) )
         (and (not (l2c)) (not (h2c)) (j2c) (k2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k7c) (kzd) )
         (and (not (kzd)) (not (gzd)) (not (l2c)) (not (h2c)) (j2c) (k2c) (hzd) (jzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jzd)) (not (j7c)) )
         (and (not (kzd)) (not (gzd)) (not (l2c)) (not (h2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (uwf) )
         (and (not (uwf)) (not (guf)) (cuf) (vwf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (xwf) )
         (and (not (xwf)) (not (juf)) (huf) (ywf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (zwf) )
         (and (not (zwf)) (not (luf)) (kuf) (bxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (cxf) )
         (and (not (cxf)) (not (quf)) (muf) (gxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (hxf) )
         (and (not (hxf)) (not (tuf)) (ruf) (jxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (kxf) )
         (and (not (kxf)) (not (vuf)) (uuf) (lxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (mxf) )
         (and (not (mxf)) (not (yuf)) (xuf) (qxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (rxf) )
         (and (not (rxf)) (not (bvf)) (zuf) (txf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (uxf) )
         (and (not (uxf)) (not (gvf)) (cvf) (vxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (xxf) )
         (and (not (xxf)) (not (jvf)) (hvf) (yxf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (zxf) )
         (and (not (zxf)) (not (lvf)) (kvf) (byf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (cyf) )
         (and (not (cyf)) (not (qvf)) (mvf) (gyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (hyf) )
         (and (not (hyf)) (not (tvf)) (rvf) (jyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (kyf) )
         (and (not (kyf)) (not (vvf)) (uvf) (lyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (myf) )
         (and (not (myf)) (not (yvf)) (xvf) (qyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (ryf) )
         (and (not (ryf)) (not (bwf)) (zvf) (tyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (uyf) )
         (and (not (uyf)) (not (gwf)) (cwf) (vyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (xyf) )
         (and (not (xyf)) (not (jwf)) (hwf) (yyf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (zyf) )
         (and (not (zyf)) (not (lwf)) (kwf) (bzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (czf) )
         (and (not (czf)) (not (qwf)) (mwf) (gzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (hzf) )
         (and (not (hzf)) (not (twf)) (rwf) (jzf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vwf)) (not (j7c)) )
         (and (not (uwf)) (not (guf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywf)) (not (j7c)) )
         (and (not (xwf)) (not (juf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxf)) (not (j7c)) )
         (and (not (zwf)) (not (luf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxf)) (not (j7c)) )
         (and (not (cxf)) (not (quf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxf)) (not (j7c)) )
         (and (not (hxf)) (not (tuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxf)) (not (j7c)) )
         (and (not (kxf)) (not (vuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxf)) (not (j7c)) )
         (and (not (mxf)) (not (yuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txf)) (not (j7c)) )
         (and (not (rxf)) (not (bvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxf)) (not (j7c)) )
         (and (not (uxf)) (not (gvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxf)) (not (j7c)) )
         (and (not (xxf)) (not (jvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (byf)) (not (j7c)) )
         (and (not (zxf)) (not (lvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gyf)) (not (j7c)) )
         (and (not (cyf)) (not (qvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jyf)) (not (j7c)) )
         (and (not (hyf)) (not (tvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lyf)) (not (j7c)) )
         (and (not (kyf)) (not (vvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qyf)) (not (j7c)) )
         (and (not (myf)) (not (yvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tyf)) (not (j7c)) )
         (and (not (ryf)) (not (bwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vyf)) (not (j7c)) )
         (and (not (uyf)) (not (gwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yyf)) (not (j7c)) )
         (and (not (xyf)) (not (jwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bzf)) (not (j7c)) )
         (and (not (zyf)) (not (lwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gzf)) (not (j7c)) )
         (and (not (czf)) (not (qwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jzf)) (not (j7c)) )
         (and (not (hzf)) (not (twf)) ))

    )
  )
  (:action MOVE_P5-5_P5-6
    :precondition  (and 
      (g9b)
      (l2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g9b) (l2c) )
         (and (not (m2c)) (not (l2c)) (k2c) (q2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c7c) (kzd) )
         (and (not (lzd)) (not (kzd)) (not (m2c)) (not (l2c)) (k2c) (q2c) (jzd) (mzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jzd)) (not (b7c)) )
         (and (not (lzd)) (not (kzd)) (not (m2c)) (not (l2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (uwf) )
         (and (not (lzf)) (not (uwf)) (vwf) (kzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (xwf) )
         (and (not (qzf)) (not (xwf)) (ywf) (mzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (zwf) )
         (and (not (tzf)) (not (zwf)) (bxf) (rzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (cxf) )
         (and (not (vzf)) (not (cxf)) (gxf) (uzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (hxf) )
         (and (not (yzf)) (not (hxf)) (jxf) (xzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (kxf) )
         (and (not (b1f)) (not (kxf)) (lxf) (zzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (mxf) )
         (and (not (g1f)) (not (mxf)) (qxf) (c1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (rxf) )
         (and (not (j1f)) (not (rxf)) (txf) (h1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (uxf) )
         (and (not (l1f)) (not (uxf)) (vxf) (k1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (xxf) )
         (and (not (q1f)) (not (xxf)) (yxf) (m1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (zxf) )
         (and (not (t1f)) (not (zxf)) (byf) (r1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (cyf) )
         (and (not (v1f)) (not (cyf)) (gyf) (u1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (hyf) )
         (and (not (y1f)) (not (hyf)) (jyf) (x1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (kyf) )
         (and (not (b2f)) (not (kyf)) (lyf) (z1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (myf) )
         (and (not (g2f)) (not (myf)) (qyf) (c2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (ryf) )
         (and (not (j2f)) (not (ryf)) (tyf) (h2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (uyf) )
         (and (not (l2f)) (not (uyf)) (vyf) (k2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (xyf) )
         (and (not (q2f)) (not (xyf)) (yyf) (m2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (zyf) )
         (and (not (t2f)) (not (zyf)) (bzf) (r2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (czf) )
         (and (not (v2f)) (not (czf)) (gzf) (u2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (hzf) )
         (and (not (y2f)) (not (hzf)) (jzf) (x2f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vwf)) (not (b7c)) )
         (and (not (lzf)) (not (uwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywf)) (not (b7c)) )
         (and (not (qzf)) (not (xwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxf)) (not (b7c)) )
         (and (not (tzf)) (not (zwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxf)) (not (b7c)) )
         (and (not (vzf)) (not (cxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxf)) (not (b7c)) )
         (and (not (yzf)) (not (hxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxf)) (not (b7c)) )
         (and (not (b1f)) (not (kxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxf)) (not (b7c)) )
         (and (not (g1f)) (not (mxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txf)) (not (b7c)) )
         (and (not (j1f)) (not (rxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxf)) (not (b7c)) )
         (and (not (l1f)) (not (uxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxf)) (not (b7c)) )
         (and (not (q1f)) (not (xxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (byf)) (not (b7c)) )
         (and (not (t1f)) (not (zxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gyf)) (not (b7c)) )
         (and (not (v1f)) (not (cyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jyf)) (not (b7c)) )
         (and (not (y1f)) (not (hyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lyf)) (not (b7c)) )
         (and (not (b2f)) (not (kyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qyf)) (not (b7c)) )
         (and (not (g2f)) (not (myf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tyf)) (not (b7c)) )
         (and (not (j2f)) (not (ryf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vyf)) (not (b7c)) )
         (and (not (l2f)) (not (uyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yyf)) (not (b7c)) )
         (and (not (q2f)) (not (xyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bzf)) (not (b7c)) )
         (and (not (t2f)) (not (zyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gzf)) (not (b7c)) )
         (and (not (v2f)) (not (czf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jzf)) (not (b7c)) )
         (and (not (y2f)) (not (hzf)) ))

    )
  )
  (:action MOVE_P5-5_P6-5
    :precondition  (and 
      (l8b)
      (l2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l8b) (l2c) )
         (and (not (h3c)) (not (l2c)) (k2c) (j3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k6c) (kzd) )
         (and (not (g1d)) (not (kzd)) (not (h3c)) (not (l2c)) (k2c) (j3c) (jzd) (h1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jzd)) (not (j6c)) )
         (and (not (g1d)) (not (kzd)) (not (h3c)) (not (l2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (uwf) )
         (and (not (tbg)) (not (uwf)) (vwf) (rbg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (xwf) )
         (and (not (vbg)) (not (xwf)) (ywf) (ubg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (zwf) (xag) )
         (and (not (ybg)) (not (zwf)) (bxf) (xbg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (cxf) )
         (and (not (bcg)) (not (cxf)) (gxf) (zbg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (hxf) )
         (and (not (gcg)) (not (hxf)) (jxf) (ccg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (kxf) )
         (and (not (jcg)) (not (kxf)) (lxf) (hcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (mxf) )
         (and (not (lcg)) (not (mxf)) (qxf) (kcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (rxf) )
         (and (not (qcg)) (not (rxf)) (txf) (mcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (uxf) )
         (and (not (tcg)) (not (uxf)) (vxf) (rcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (xxf) )
         (and (not (vcg)) (not (xxf)) (yxf) (ucg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (zxf) )
         (and (not (ycg)) (not (zxf)) (byf) (xcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (cyf) )
         (and (not (bdg)) (not (cyf)) (gyf) (zcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (hyf) )
         (and (not (gdg)) (not (hyf)) (jyf) (cdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (kyf) )
         (and (not (jdg)) (not (kyf)) (lyf) (hdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (myf) )
         (and (not (ldg)) (not (myf)) (qyf) (kdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (ryf) )
         (and (not (qdg)) (not (ryf)) (tyf) (mdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (uyf) )
         (and (not (tdg)) (not (uyf)) (vyf) (rdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (xyf) )
         (and (not (vdg)) (not (xyf)) (yyf) (udg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (zyf) )
         (and (not (ydg)) (not (zyf)) (bzf) (xdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (czf) )
         (and (not (beg)) (not (czf)) (gzf) (zdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (hzf) )
         (and (not (geg)) (not (hzf)) (jzf) (ceg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gbg)) (not (vwf)) )
         (and (not (tbg)) (not (uwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hbg)) (not (ywf)) )
         (and (not (vbg)) (not (xwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jbg)) (not (bxf)) )
         (and (not (ybg)) (not (zwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kbg)) (not (gxf)) )
         (and (not (bcg)) (not (cxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lbg)) (not (jxf)) )
         (and (not (gcg)) (not (hxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mbg)) (not (lxf)) )
         (and (not (jcg)) (not (kxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbg)) (not (qxf)) )
         (and (not (lcg)) (not (mxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txf)) (not (j6c)) )
         (and (not (qcg)) (not (rxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxf)) (not (j6c)) )
         (and (not (tcg)) (not (uxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxf)) (not (j6c)) )
         (and (not (vcg)) (not (xxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (byf)) (not (j6c)) )
         (and (not (ycg)) (not (zxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gyf)) (not (j6c)) )
         (and (not (bdg)) (not (cyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jyf)) (not (j6c)) )
         (and (not (gdg)) (not (hyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lyf)) (not (j6c)) )
         (and (not (jdg)) (not (kyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qyf)) (not (j6c)) )
         (and (not (ldg)) (not (myf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tyf)) (not (j6c)) )
         (and (not (qdg)) (not (ryf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vyf)) (not (j6c)) )
         (and (not (tdg)) (not (uyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yyf)) (not (j6c)) )
         (and (not (vdg)) (not (xyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bzf)) (not (j6c)) )
         (and (not (ydg)) (not (zyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gzf)) (not (j6c)) )
         (and (not (beg)) (not (czf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jzf)) (not (j6c)) )
         (and (not (geg)) (not (hzf)) ))

    )
  )
  (:action MOVE_P5-6_P4-6
    :precondition  (and 
      (b0b)
      (q2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (b0b) (q2c) )
         (and (not (q2c)) (not (r1c)) (t1c) (m2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z7c) (mzd) )
         (and (not (mzd)) (not (qyd)) (not (q2c)) (not (r1c)) (t1c) (m2c) (ryd) (lzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lzd)) (not (y7c)) )
         (and (not (mzd)) (not (qyd)) (not (q2c)) (not (r1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (kzf) )
         (and (not (kzf)) (not (qkf)) (mkf) (lzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (mzf) )
         (and (not (mzf)) (not (tkf)) (rkf) (qzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (rzf) )
         (and (not (rzf)) (not (vkf)) (ukf) (tzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (uzf) )
         (and (not (uzf)) (not (ykf)) (xkf) (vzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (xzf) )
         (and (not (xzf)) (not (blf)) (zkf) (yzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (zzf) )
         (and (not (zzf)) (not (glf)) (clf) (b1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (c1f) )
         (and (not (c1f)) (not (jlf)) (hlf) (g1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (h1f) )
         (and (not (h1f)) (not (llf)) (klf) (j1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (tjf) (k1f) )
         (and (not (k1f)) (not (qlf)) (mlf) (l1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (m1f) )
         (and (not (m1f)) (not (tlf)) (rlf) (q1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (r1f) )
         (and (not (r1f)) (not (vlf)) (ulf) (t1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (u1f) )
         (and (not (u1f)) (not (ylf)) (xlf) (v1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (x1f) )
         (and (not (x1f)) (not (bmf)) (zlf) (y1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (z1f) )
         (and (not (z1f)) (not (gmf)) (cmf) (b2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (c2f) )
         (and (not (c2f)) (not (jmf)) (hmf) (g2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (h2f) )
         (and (not (h2f)) (not (lmf)) (kmf) (j2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (k2f) )
         (and (not (k2f)) (not (qmf)) (mmf) (l2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (m2f) )
         (and (not (m2f)) (not (tmf)) (rmf) (q2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (r2f) )
         (and (not (r2f)) (not (vmf)) (umf) (t2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (u2f) )
         (and (not (u2f)) (not (ymf)) (xmf) (v2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z7c) (x2f) )
         (and (not (x2f)) (not (bnf)) (zmf) (y2f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lzf)) (not (y7c)) )
         (and (not (kzf)) (not (qkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qzf)) (not (y7c)) )
         (and (not (mzf)) (not (tkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tzf)) (not (y7c)) )
         (and (not (rzf)) (not (vkf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vzf)) (not (y7c)) )
         (and (not (uzf)) (not (ykf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yzf)) (not (y7c)) )
         (and (not (xzf)) (not (blf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1f)) (not (y7c)) )
         (and (not (zzf)) (not (glf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1f)) (not (y7c)) )
         (and (not (c1f)) (not (jlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1f)) (not (bkf)) )
         (and (not (h1f)) (not (llf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1f)) (not (ckf)) )
         (and (not (k1f)) (not (qlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1f)) (not (gkf)) )
         (and (not (m1f)) (not (tlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1f)) (not (hkf)) )
         (and (not (r1f)) (not (vlf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1f)) (not (jkf)) )
         (and (not (u1f)) (not (ylf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1f)) (not (kkf)) )
         (and (not (x1f)) (not (bmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2f)) (not (lkf)) )
         (and (not (z1f)) (not (gmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2f)) (not (y7c)) )
         (and (not (c2f)) (not (jmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2f)) (not (y7c)) )
         (and (not (h2f)) (not (lmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2f)) (not (y7c)) )
         (and (not (k2f)) (not (qmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2f)) (not (y7c)) )
         (and (not (m2f)) (not (tmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2f)) (not (y7c)) )
         (and (not (r2f)) (not (vmf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2f)) (not (y7c)) )
         (and (not (u2f)) (not (ymf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2f)) (not (y7c)) )
         (and (not (x2f)) (not (bnf)) ))

    )
  )
  (:action MOVE_P5-6_P5-5
    :precondition  (and 
      (j9b)
      (q2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j9b) (q2c) )
         (and (not (q2c)) (not (k2c)) (l2c) (m2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h7c) (mzd) )
         (and (not (mzd)) (not (jzd)) (not (q2c)) (not (k2c)) (l2c) (m2c) (kzd) (lzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lzd)) (not (g7c)) )
         (and (not (mzd)) (not (jzd)) (not (q2c)) (not (k2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (kzf) )
         (and (not (kzf)) (not (vwf)) (uwf) (lzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (mzf) )
         (and (not (mzf)) (not (ywf)) (xwf) (qzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (rzf) )
         (and (not (rzf)) (not (bxf)) (zwf) (tzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (uzf) )
         (and (not (uzf)) (not (gxf)) (cxf) (vzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (xzf) )
         (and (not (xzf)) (not (jxf)) (hxf) (yzf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (zzf) )
         (and (not (zzf)) (not (lxf)) (kxf) (b1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (c1f) )
         (and (not (c1f)) (not (qxf)) (mxf) (g1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (h1f) )
         (and (not (h1f)) (not (txf)) (rxf) (j1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (k1f) )
         (and (not (k1f)) (not (vxf)) (uxf) (l1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (m1f) )
         (and (not (m1f)) (not (yxf)) (xxf) (q1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (r1f) )
         (and (not (r1f)) (not (byf)) (zxf) (t1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (u1f) )
         (and (not (u1f)) (not (gyf)) (cyf) (v1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (x1f) )
         (and (not (x1f)) (not (jyf)) (hyf) (y1f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (z1f) )
         (and (not (z1f)) (not (lyf)) (kyf) (b2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (c2f) )
         (and (not (c2f)) (not (qyf)) (myf) (g2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (h2f) )
         (and (not (h2f)) (not (tyf)) (ryf) (j2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (k2f) )
         (and (not (k2f)) (not (vyf)) (uyf) (l2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (m2f) )
         (and (not (m2f)) (not (yyf)) (xyf) (q2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (r2f) )
         (and (not (r2f)) (not (bzf)) (zyf) (t2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (u2f) )
         (and (not (u2f)) (not (gzf)) (czf) (v2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (x2f) )
         (and (not (x2f)) (not (jzf)) (hzf) (y2f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lzf)) (not (g7c)) )
         (and (not (kzf)) (not (vwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qzf)) (not (g7c)) )
         (and (not (mzf)) (not (ywf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tzf)) (not (g7c)) )
         (and (not (rzf)) (not (bxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vzf)) (not (g7c)) )
         (and (not (uzf)) (not (gxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yzf)) (not (g7c)) )
         (and (not (xzf)) (not (jxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1f)) (not (g7c)) )
         (and (not (zzf)) (not (lxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1f)) (not (g7c)) )
         (and (not (c1f)) (not (qxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1f)) (not (g7c)) )
         (and (not (h1f)) (not (txf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1f)) (not (g7c)) )
         (and (not (k1f)) (not (vxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1f)) (not (g7c)) )
         (and (not (m1f)) (not (yxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1f)) (not (g7c)) )
         (and (not (r1f)) (not (byf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1f)) (not (g7c)) )
         (and (not (u1f)) (not (gyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1f)) (not (g7c)) )
         (and (not (x1f)) (not (jyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2f)) (not (g7c)) )
         (and (not (z1f)) (not (lyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2f)) (not (g7c)) )
         (and (not (c2f)) (not (qyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2f)) (not (g7c)) )
         (and (not (h2f)) (not (tyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2f)) (not (g7c)) )
         (and (not (k2f)) (not (vyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2f)) (not (g7c)) )
         (and (not (m2f)) (not (yyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2f)) (not (g7c)) )
         (and (not (r2f)) (not (bzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2f)) (not (g7c)) )
         (and (not (u2f)) (not (gzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2f)) (not (g7c)) )
         (and (not (x2f)) (not (jzf)) ))

    )
  )
  (:action MOVE_P5-6_P5-7
    :precondition  (and 
      (b9b)
      (q2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (b9b) (q2c) )
         (and (not (r2c)) (not (q2c)) (m2c) (t2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z6c) (mzd) )
         (and (not (qzd)) (not (mzd)) (not (r2c)) (not (q2c)) (m2c) (t2c) (lzd) (rzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lzd)) (not (y6c)) )
         (and (not (qzd)) (not (mzd)) (not (r2c)) (not (q2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (kzf) )
         (and (not (b3f)) (not (kzf)) (lzf) (z2f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (mzf) )
         (and (not (g3f)) (not (mzf)) (qzf) (c3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (rzf) )
         (and (not (j3f)) (not (rzf)) (tzf) (h3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (uzf) )
         (and (not (l3f)) (not (uzf)) (vzf) (k3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (xzf) )
         (and (not (q3f)) (not (xzf)) (yzf) (m3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (zzf) )
         (and (not (t3f)) (not (zzf)) (b1f) (r3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (c1f) )
         (and (not (v3f)) (not (c1f)) (g1f) (u3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (h1f) )
         (and (not (y3f)) (not (h1f)) (j1f) (x3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (k1f) )
         (and (not (b4f)) (not (k1f)) (l1f) (z3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (m1f) )
         (and (not (g4f)) (not (m1f)) (q1f) (c4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (r1f) )
         (and (not (j4f)) (not (r1f)) (t1f) (h4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (u1f) )
         (and (not (l4f)) (not (u1f)) (v1f) (k4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (x1f) )
         (and (not (q4f)) (not (x1f)) (y1f) (m4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (z1f) )
         (and (not (t4f)) (not (z1f)) (b2f) (r4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (c2f) )
         (and (not (v4f)) (not (c2f)) (g2f) (u4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (h2f) )
         (and (not (y4f)) (not (h2f)) (j2f) (x4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (k2f) )
         (and (not (b5f)) (not (k2f)) (l2f) (z4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (m2f) )
         (and (not (g5f)) (not (m2f)) (q2f) (c5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (r2f) )
         (and (not (j5f)) (not (r2f)) (t2f) (h5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (u2f) )
         (and (not (l5f)) (not (u2f)) (v2f) (k5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (x2f) )
         (and (not (q5f)) (not (x2f)) (y2f) (m5f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lzf)) (not (y6c)) )
         (and (not (b3f)) (not (kzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qzf)) (not (y6c)) )
         (and (not (g3f)) (not (mzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tzf)) (not (y6c)) )
         (and (not (j3f)) (not (rzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vzf)) (not (y6c)) )
         (and (not (l3f)) (not (uzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yzf)) (not (y6c)) )
         (and (not (q3f)) (not (xzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1f)) (not (y6c)) )
         (and (not (t3f)) (not (zzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1f)) (not (y6c)) )
         (and (not (v3f)) (not (c1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1f)) (not (y6c)) )
         (and (not (y3f)) (not (h1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1f)) (not (y6c)) )
         (and (not (b4f)) (not (k1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1f)) (not (y6c)) )
         (and (not (g4f)) (not (m1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1f)) (not (y6c)) )
         (and (not (j4f)) (not (r1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1f)) (not (y6c)) )
         (and (not (l4f)) (not (u1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1f)) (not (y6c)) )
         (and (not (q4f)) (not (x1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2f)) (not (y6c)) )
         (and (not (t4f)) (not (z1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2f)) (not (y6c)) )
         (and (not (v4f)) (not (c2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2f)) (not (y6c)) )
         (and (not (y4f)) (not (h2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2f)) (not (y6c)) )
         (and (not (b5f)) (not (k2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2f)) (not (y6c)) )
         (and (not (g5f)) (not (m2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2f)) (not (y6c)) )
         (and (not (j5f)) (not (r2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2f)) (not (y6c)) )
         (and (not (l5f)) (not (u2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2f)) (not (y6c)) )
         (and (not (q5f)) (not (x2f)) ))

    )
  )
  (:action MOVE_P5-6_P6-6
    :precondition  (and 
      (j8b)
      (q2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j8b) (q2c) )
         (and (not (k3c)) (not (q2c)) (m2c) (l3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h6c) (mzd) )
         (and (not (j1d)) (not (mzd)) (not (k3c)) (not (q2c)) (m2c) (l3c) (lzd) (k1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lzd)) (not (g6c)) )
         (and (not (j1d)) (not (mzd)) (not (k3c)) (not (q2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (kzf) )
         (and (not (gfg)) (not (kzf)) (lzf) (cfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (mzf) (jeg) )
         (and (not (jfg)) (not (mzf)) (qzf) (hfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (rzf) )
         (and (not (lfg)) (not (rzf)) (tzf) (kfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (uzf) )
         (and (not (qfg)) (not (uzf)) (vzf) (mfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (xzf) )
         (and (not (tfg)) (not (xzf)) (yzf) (rfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (zzf) )
         (and (not (vfg)) (not (zzf)) (b1f) (ufg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (c1f) )
         (and (not (yfg)) (not (c1f)) (g1f) (xfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (h1f) )
         (and (not (bgg)) (not (h1f)) (j1f) (zfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (k1f) )
         (and (not (ggg)) (not (k1f)) (l1f) (cgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (m1f) )
         (and (not (jgg)) (not (m1f)) (q1f) (hgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (r1f) )
         (and (not (lgg)) (not (r1f)) (t1f) (kgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (u1f) )
         (and (not (qgg)) (not (u1f)) (v1f) (mgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (x1f) )
         (and (not (tgg)) (not (x1f)) (y1f) (rgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (z1f) )
         (and (not (vgg)) (not (z1f)) (b2f) (ugg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (c2f) )
         (and (not (ygg)) (not (c2f)) (g2f) (xgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (h2f) )
         (and (not (bhg)) (not (h2f)) (j2f) (zgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (k2f) )
         (and (not (ghg)) (not (k2f)) (l2f) (chg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (m2f) )
         (and (not (jhg)) (not (m2f)) (q2f) (hhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (r2f) )
         (and (not (lhg)) (not (r2f)) (t2f) (khg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (u2f) )
         (and (not (qhg)) (not (u2f)) (v2f) (mhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (x2f) )
         (and (not (thg)) (not (x2f)) (y2f) (rhg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (teg)) (not (lzf)) )
         (and (not (gfg)) (not (kzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ueg)) (not (qzf)) )
         (and (not (jfg)) (not (mzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (veg)) (not (tzf)) )
         (and (not (lfg)) (not (rzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (xeg)) (not (vzf)) )
         (and (not (qfg)) (not (uzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yeg)) (not (yzf)) )
         (and (not (tfg)) (not (xzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (zeg)) (not (b1f)) )
         (and (not (vfg)) (not (zzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bfg)) (not (g1f)) )
         (and (not (yfg)) (not (c1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1f)) (not (g6c)) )
         (and (not (bgg)) (not (h1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1f)) (not (g6c)) )
         (and (not (ggg)) (not (k1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1f)) (not (g6c)) )
         (and (not (jgg)) (not (m1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1f)) (not (g6c)) )
         (and (not (lgg)) (not (r1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1f)) (not (g6c)) )
         (and (not (qgg)) (not (u1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1f)) (not (g6c)) )
         (and (not (tgg)) (not (x1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2f)) (not (g6c)) )
         (and (not (vgg)) (not (z1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2f)) (not (g6c)) )
         (and (not (ygg)) (not (c2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2f)) (not (g6c)) )
         (and (not (bhg)) (not (h2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2f)) (not (g6c)) )
         (and (not (ghg)) (not (k2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2f)) (not (g6c)) )
         (and (not (jhg)) (not (m2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2f)) (not (g6c)) )
         (and (not (lhg)) (not (r2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2f)) (not (g6c)) )
         (and (not (qhg)) (not (u2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2f)) (not (g6c)) )
         (and (not (thg)) (not (x2f)) ))

    )
  )
  (:action MOVE_P5-7_P4-7
    :precondition  (and 
      (y9b)
      (t2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y9b) (t2c) )
         (and (not (t2c)) (not (u1c)) (v1c) (r2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x7c) (rzd) )
         (and (not (rzd)) (not (tyd)) (not (t2c)) (not (u1c)) (v1c) (r2c) (uyd) (qzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qzd)) (not (v7c)) )
         (and (not (rzd)) (not (tyd)) (not (t2c)) (not (u1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (z2f) )
         (and (not (z2f)) (not (bof)) (znf) (b3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (c3f) )
         (and (not (c3f)) (not (gof)) (cof) (g3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (h3f) )
         (and (not (h3f)) (not (jof)) (hof) (j3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (k3f) )
         (and (not (k3f)) (not (lof)) (kof) (l3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (m3f) )
         (and (not (m3f)) (not (qof)) (mof) (q3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (r3f) )
         (and (not (r3f)) (not (tof)) (rof) (t3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (u3f) )
         (and (not (u3f)) (not (vof)) (uof) (v3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cnf) (x3f) )
         (and (not (x3f)) (not (yof)) (xof) (y3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (z3f) )
         (and (not (z3f)) (not (bpf)) (zof) (b4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (c4f) )
         (and (not (c4f)) (not (gpf)) (cpf) (g4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (h4f) )
         (and (not (h4f)) (not (jpf)) (hpf) (j4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (k4f) )
         (and (not (k4f)) (not (lpf)) (kpf) (l4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (m4f) )
         (and (not (m4f)) (not (qpf)) (mpf) (q4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (r4f) )
         (and (not (r4f)) (not (tpf)) (rpf) (t4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (u4f) )
         (and (not (u4f)) (not (vpf)) (upf) (v4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (x4f) )
         (and (not (x4f)) (not (ypf)) (xpf) (y4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (z4f) )
         (and (not (z4f)) (not (bqf)) (zpf) (b5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (c5f) )
         (and (not (c5f)) (not (gqf)) (cqf) (g5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (h5f) )
         (and (not (h5f)) (not (jqf)) (hqf) (j5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (k5f) )
         (and (not (k5f)) (not (lqf)) (kqf) (l5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x7c) (m5f) )
         (and (not (m5f)) (not (qqf)) (mqf) (q5f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b3f)) (not (v7c)) )
         (and (not (z2f)) (not (bof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3f)) (not (v7c)) )
         (and (not (c3f)) (not (gof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3f)) (not (v7c)) )
         (and (not (h3f)) (not (jof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3f)) (not (v7c)) )
         (and (not (k3f)) (not (lof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3f)) (not (v7c)) )
         (and (not (m3f)) (not (qof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3f)) (not (v7c)) )
         (and (not (r3f)) (not (tof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3f)) (not (v7c)) )
         (and (not (u3f)) (not (vof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3f)) (not (qnf)) )
         (and (not (x3f)) (not (yof)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4f)) (not (rnf)) )
         (and (not (z3f)) (not (bpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4f)) (not (tnf)) )
         (and (not (c4f)) (not (gpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4f)) (not (unf)) )
         (and (not (h4f)) (not (jpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4f)) (not (vnf)) )
         (and (not (k4f)) (not (lpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4f)) (not (xnf)) )
         (and (not (m4f)) (not (qpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4f)) (not (ynf)) )
         (and (not (r4f)) (not (tpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4f)) (not (v7c)) )
         (and (not (u4f)) (not (vpf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4f)) (not (v7c)) )
         (and (not (x4f)) (not (ypf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5f)) (not (v7c)) )
         (and (not (z4f)) (not (bqf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5f)) (not (v7c)) )
         (and (not (c5f)) (not (gqf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5f)) (not (v7c)) )
         (and (not (h5f)) (not (jqf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5f)) (not (v7c)) )
         (and (not (k5f)) (not (lqf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q5f)) (not (v7c)) )
         (and (not (m5f)) (not (qqf)) ))

    )
  )
  (:action MOVE_P5-7_P5-6
    :precondition  (and 
      (g9b)
      (t2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g9b) (t2c) )
         (and (not (t2c)) (not (m2c)) (q2c) (r2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c7c) (rzd) )
         (and (not (rzd)) (not (lzd)) (not (t2c)) (not (m2c)) (q2c) (r2c) (mzd) (qzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qzd)) (not (b7c)) )
         (and (not (rzd)) (not (lzd)) (not (t2c)) (not (m2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (z2f) )
         (and (not (z2f)) (not (lzf)) (kzf) (b3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (c3f) )
         (and (not (c3f)) (not (qzf)) (mzf) (g3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (h3f) )
         (and (not (h3f)) (not (tzf)) (rzf) (j3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (k3f) )
         (and (not (k3f)) (not (vzf)) (uzf) (l3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (m3f) )
         (and (not (m3f)) (not (yzf)) (xzf) (q3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (r3f) )
         (and (not (r3f)) (not (b1f)) (zzf) (t3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (u3f) )
         (and (not (u3f)) (not (g1f)) (c1f) (v3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (x3f) )
         (and (not (x3f)) (not (j1f)) (h1f) (y3f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (z3f) )
         (and (not (z3f)) (not (l1f)) (k1f) (b4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (c4f) )
         (and (not (c4f)) (not (q1f)) (m1f) (g4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (h4f) )
         (and (not (h4f)) (not (t1f)) (r1f) (j4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (k4f) )
         (and (not (k4f)) (not (v1f)) (u1f) (l4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (m4f) )
         (and (not (m4f)) (not (y1f)) (x1f) (q4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (r4f) )
         (and (not (r4f)) (not (b2f)) (z1f) (t4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (u4f) )
         (and (not (u4f)) (not (g2f)) (c2f) (v4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (x4f) )
         (and (not (x4f)) (not (j2f)) (h2f) (y4f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (z4f) )
         (and (not (z4f)) (not (l2f)) (k2f) (b5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (c5f) )
         (and (not (c5f)) (not (q2f)) (m2f) (g5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (h5f) )
         (and (not (h5f)) (not (t2f)) (r2f) (j5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (k5f) )
         (and (not (k5f)) (not (v2f)) (u2f) (l5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (m5f) )
         (and (not (m5f)) (not (y2f)) (x2f) (q5f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b3f)) (not (b7c)) )
         (and (not (z2f)) (not (lzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3f)) (not (b7c)) )
         (and (not (c3f)) (not (qzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3f)) (not (b7c)) )
         (and (not (h3f)) (not (tzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3f)) (not (b7c)) )
         (and (not (k3f)) (not (vzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3f)) (not (b7c)) )
         (and (not (m3f)) (not (yzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3f)) (not (b7c)) )
         (and (not (r3f)) (not (b1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3f)) (not (b7c)) )
         (and (not (u3f)) (not (g1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3f)) (not (b7c)) )
         (and (not (x3f)) (not (j1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4f)) (not (b7c)) )
         (and (not (z3f)) (not (l1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4f)) (not (b7c)) )
         (and (not (c4f)) (not (q1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4f)) (not (b7c)) )
         (and (not (h4f)) (not (t1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4f)) (not (b7c)) )
         (and (not (k4f)) (not (v1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4f)) (not (b7c)) )
         (and (not (m4f)) (not (y1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4f)) (not (b7c)) )
         (and (not (r4f)) (not (b2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4f)) (not (b7c)) )
         (and (not (u4f)) (not (g2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4f)) (not (b7c)) )
         (and (not (x4f)) (not (j2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5f)) (not (b7c)) )
         (and (not (z4f)) (not (l2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5f)) (not (b7c)) )
         (and (not (c5f)) (not (q2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5f)) (not (b7c)) )
         (and (not (h5f)) (not (t2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5f)) (not (b7c)) )
         (and (not (k5f)) (not (v2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q5f)) (not (b7c)) )
         (and (not (m5f)) (not (y2f)) ))

    )
  )
  (:action MOVE_P5-7_P6-7
    :precondition  (and 
      (g8b)
      (t2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g8b) (t2c) )
         (and (not (m3c)) (not (t2c)) (r2c) (q3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c6c) (rzd) )
         (and (not (l1d)) (not (rzd)) (not (m3c)) (not (t2c)) (r2c) (q3c) (qzd) (m1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qzd)) (not (b6c)) )
         (and (not (l1d)) (not (rzd)) (not (m3c)) (not (t2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z2f) (uhg) )
         (and (not (tig)) (not (z2f)) (b3f) (rig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (c3f) )
         (and (not (vig)) (not (c3f)) (g3f) (uig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (h3f) )
         (and (not (yig)) (not (h3f)) (j3f) (xig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (k3f) )
         (and (not (bjg)) (not (k3f)) (l3f) (zig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (m3f) )
         (and (not (gjg)) (not (m3f)) (q3f) (cjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (r3f) )
         (and (not (jjg)) (not (r3f)) (t3f) (hjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (u3f) )
         (and (not (ljg)) (not (u3f)) (v3f) (kjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (x3f) )
         (and (not (qjg)) (not (x3f)) (y3f) (mjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (z3f) )
         (and (not (tjg)) (not (z3f)) (b4f) (rjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (c4f) )
         (and (not (vjg)) (not (c4f)) (g4f) (ujg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (h4f) )
         (and (not (yjg)) (not (h4f)) (j4f) (xjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (k4f) )
         (and (not (bkg)) (not (k4f)) (l4f) (zjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (m4f) )
         (and (not (gkg)) (not (m4f)) (q4f) (ckg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (r4f) )
         (and (not (jkg)) (not (r4f)) (t4f) (hkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (u4f) )
         (and (not (lkg)) (not (u4f)) (v4f) (kkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (x4f) )
         (and (not (qkg)) (not (x4f)) (y4f) (mkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (z4f) )
         (and (not (tkg)) (not (z4f)) (b5f) (rkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (c5f) )
         (and (not (vkg)) (not (c5f)) (g5f) (ukg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (h5f) )
         (and (not (ykg)) (not (h5f)) (j5f) (xkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (k5f) )
         (and (not (blg)) (not (k5f)) (l5f) (zkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (m5f) )
         (and (not (glg)) (not (m5f)) (q5f) (clg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gig)) (not (b3f)) )
         (and (not (tig)) (not (z2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hig)) (not (g3f)) )
         (and (not (vig)) (not (c3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jig)) (not (j3f)) )
         (and (not (yig)) (not (h3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kig)) (not (l3f)) )
         (and (not (bjg)) (not (k3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lig)) (not (q3f)) )
         (and (not (gjg)) (not (m3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mig)) (not (t3f)) )
         (and (not (jjg)) (not (r3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qig)) (not (v3f)) )
         (and (not (ljg)) (not (u3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3f)) (not (b6c)) )
         (and (not (qjg)) (not (x3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4f)) (not (b6c)) )
         (and (not (tjg)) (not (z3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4f)) (not (b6c)) )
         (and (not (vjg)) (not (c4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4f)) (not (b6c)) )
         (and (not (yjg)) (not (h4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4f)) (not (b6c)) )
         (and (not (bkg)) (not (k4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4f)) (not (b6c)) )
         (and (not (gkg)) (not (m4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4f)) (not (b6c)) )
         (and (not (jkg)) (not (r4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4f)) (not (b6c)) )
         (and (not (lkg)) (not (u4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4f)) (not (b6c)) )
         (and (not (qkg)) (not (x4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5f)) (not (b6c)) )
         (and (not (tkg)) (not (z4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5f)) (not (b6c)) )
         (and (not (vkg)) (not (c5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5f)) (not (b6c)) )
         (and (not (ykg)) (not (h5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5f)) (not (b6c)) )
         (and (not (blg)) (not (k5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q5f)) (not (b6c)) )
         (and (not (glg)) (not (m5f)) ))

    )
  )
  (:action MOVE_P6-4_P5-4
    :precondition  (and 
      (l9b)
      (g3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l9b) (g3c) )
         (and (not (g3c)) (not (h2c)) (j2c) (c3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k7c) (c1d) )
         (and (not (c1d)) (not (gzd)) (not (g3c)) (not (h2c)) (j2c) (c3c) (hzd) (b1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (b1d)) (not (j7c)) )
         (and (not (c1d)) (not (gzd)) (not (g3c)) (not (h2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (c9f) )
         (and (not (c9f)) (not (guf)) (cuf) (g9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (h9f) )
         (and (not (h9f)) (not (juf)) (huf) (j9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (k9f) )
         (and (not (k9f)) (not (luf)) (kuf) (l9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (m9f) )
         (and (not (m9f)) (not (quf)) (muf) (q9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (r9f) )
         (and (not (r9f)) (not (tuf)) (ruf) (t9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (u9f) )
         (and (not (u9f)) (not (vuf)) (uuf) (v9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (x9f) )
         (and (not (x9f)) (not (yuf)) (xuf) (y9f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (z9f) )
         (and (not (z9f)) (not (bvf)) (zuf) (b0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (c0f) )
         (and (not (c0f)) (not (gvf)) (cvf) (g0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (h0f) )
         (and (not (h0f)) (not (jvf)) (hvf) (j0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (k0f) )
         (and (not (k0f)) (not (lvf)) (kvf) (l0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (m0f) )
         (and (not (m0f)) (not (qvf)) (mvf) (q0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (r0f) )
         (and (not (r0f)) (not (tvf)) (rvf) (t0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (u0f) )
         (and (not (u0f)) (not (vvf)) (uvf) (v0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (x0f) )
         (and (not (x0f)) (not (yvf)) (xvf) (y0f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (z0f) )
         (and (not (z0f)) (not (bwf)) (zvf) (bag) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (cag) )
         (and (not (cag)) (not (gwf)) (cwf) (gag) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (hag) )
         (and (not (hag)) (not (jwf)) (hwf) (jag) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (kag) )
         (and (not (kag)) (not (lwf)) (kwf) (lag) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (mag) )
         (and (not (mag)) (not (qwf)) (mwf) (qag) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (rag) )
         (and (not (rag)) (not (twf)) (rwf) (tag) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9f)) (not (j7c)) )
         (and (not (c9f)) (not (guf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9f)) (not (j7c)) )
         (and (not (h9f)) (not (juf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9f)) (not (j7c)) )
         (and (not (k9f)) (not (luf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9f)) (not (j7c)) )
         (and (not (m9f)) (not (quf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9f)) (not (j7c)) )
         (and (not (r9f)) (not (tuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9f)) (not (j7c)) )
         (and (not (u9f)) (not (vuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y9f)) (not (j7c)) )
         (and (not (x9f)) (not (yuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0f)) (not (j7c)) )
         (and (not (z9f)) (not (bvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0f)) (not (j7c)) )
         (and (not (c0f)) (not (gvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0f)) (not (j7c)) )
         (and (not (h0f)) (not (jvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0f)) (not (j7c)) )
         (and (not (k0f)) (not (lvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0f)) (not (j7c)) )
         (and (not (m0f)) (not (qvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0f)) (not (j7c)) )
         (and (not (r0f)) (not (tvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0f)) (not (j7c)) )
         (and (not (u0f)) (not (vvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0f)) (not (j7c)) )
         (and (not (x0f)) (not (yvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bag)) (not (j7c)) )
         (and (not (z0f)) (not (bwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gag)) (not (j7c)) )
         (and (not (cag)) (not (gwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jag)) (not (j7c)) )
         (and (not (hag)) (not (jwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lag)) (not (j7c)) )
         (and (not (kag)) (not (lwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qag)) (not (j7c)) )
         (and (not (mag)) (not (qwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tag)) (not (j7c)) )
         (and (not (rag)) (not (twf)) ))

    )
  )
  (:action MOVE_P6-4_P6-3
    :precondition  (and 
      (t8b)
      (g3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t8b) (g3c) )
         (and (not (g3c)) (not (z2c)) (b3c) (c3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r6c) (c1d) )
         (and (not (c1d)) (not (yzd)) (not (g3c)) (not (z2c)) (b3c) (c3c) (zzd) (b1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (b1d)) (not (q6c)) )
         (and (not (c1d)) (not (yzd)) (not (g3c)) (not (z2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (c9f) )
         (and (not (gmg)) (not (c9f)) (g9f) (cmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (h9f) )
         (and (not (jmg)) (not (h9f)) (j9f) (hmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (k9f) )
         (and (not (lmg)) (not (k9f)) (l9f) (kmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (m9f) )
         (and (not (qmg)) (not (m9f)) (q9f) (mmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r9f) (mlg) )
         (and (not (tmg)) (not (r9f)) (t9f) (rmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (u9f) )
         (and (not (vmg)) (not (u9f)) (v9f) (umg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (x9f) )
         (and (not (ymg)) (not (x9f)) (y9f) (xmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (z9f) )
         (and (not (bng)) (not (z9f)) (b0f) (zmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (c0f) )
         (and (not (gng)) (not (c0f)) (g0f) (cng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (h0f) )
         (and (not (jng)) (not (h0f)) (j0f) (hng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (k0f) )
         (and (not (lng)) (not (k0f)) (l0f) (kng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (m0f) )
         (and (not (qng)) (not (m0f)) (q0f) (mng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (r0f) )
         (and (not (tng)) (not (r0f)) (t0f) (rng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (u0f) )
         (and (not (vng)) (not (u0f)) (v0f) (ung) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (x0f) )
         (and (not (yng)) (not (x0f)) (y0f) (xng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (z0f) )
         (and (not (bog)) (not (z0f)) (bag) (zng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (cag) )
         (and (not (gog)) (not (cag)) (gag) (cog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (hag) )
         (and (not (jog)) (not (hag)) (jag) (hog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (kag) )
         (and (not (log)) (not (kag)) (lag) (kog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (mag) )
         (and (not (qog)) (not (mag)) (qag) (mog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (rag) )
         (and (not (tog)) (not (rag)) (tag) (rog) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tlg)) (not (g9f)) )
         (and (not (gmg)) (not (c9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ulg)) (not (j9f)) )
         (and (not (jmg)) (not (h9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vlg)) (not (l9f)) )
         (and (not (lmg)) (not (k9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (xlg)) (not (q9f)) )
         (and (not (qmg)) (not (m9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ylg)) (not (t9f)) )
         (and (not (tmg)) (not (r9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (zlg)) (not (v9f)) )
         (and (not (vmg)) (not (u9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bmg)) (not (y9f)) )
         (and (not (ymg)) (not (x9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0f)) (not (q6c)) )
         (and (not (bng)) (not (z9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0f)) (not (q6c)) )
         (and (not (gng)) (not (c0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0f)) (not (q6c)) )
         (and (not (jng)) (not (h0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0f)) (not (q6c)) )
         (and (not (lng)) (not (k0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0f)) (not (q6c)) )
         (and (not (qng)) (not (m0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0f)) (not (q6c)) )
         (and (not (tng)) (not (r0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0f)) (not (q6c)) )
         (and (not (vng)) (not (u0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0f)) (not (q6c)) )
         (and (not (yng)) (not (x0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bag)) (not (q6c)) )
         (and (not (bog)) (not (z0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gag)) (not (q6c)) )
         (and (not (gog)) (not (cag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jag)) (not (q6c)) )
         (and (not (jog)) (not (hag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lag)) (not (q6c)) )
         (and (not (log)) (not (kag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qag)) (not (q6c)) )
         (and (not (qog)) (not (mag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tag)) (not (q6c)) )
         (and (not (tog)) (not (rag)) ))

    )
  )
  (:action MOVE_P6-4_P6-5
    :precondition  (and 
      (l8b)
      (g3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l8b) (g3c) )
         (and (not (h3c)) (not (g3c)) (c3c) (j3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k6c) (c1d) )
         (and (not (g1d)) (not (c1d)) (not (h3c)) (not (g3c)) (c3c) (j3c) (b1d) (h1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (b1d)) (not (j6c)) )
         (and (not (g1d)) (not (c1d)) (not (h3c)) (not (g3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (c9f) )
         (and (not (tbg)) (not (c9f)) (g9f) (rbg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (h9f) )
         (and (not (vbg)) (not (h9f)) (j9f) (ubg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9f) (xag) )
         (and (not (ybg)) (not (k9f)) (l9f) (xbg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (m9f) )
         (and (not (bcg)) (not (m9f)) (q9f) (zbg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (r9f) )
         (and (not (gcg)) (not (r9f)) (t9f) (ccg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (u9f) )
         (and (not (jcg)) (not (u9f)) (v9f) (hcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (x9f) )
         (and (not (lcg)) (not (x9f)) (y9f) (kcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (z9f) )
         (and (not (qcg)) (not (z9f)) (b0f) (mcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (c0f) )
         (and (not (tcg)) (not (c0f)) (g0f) (rcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (h0f) )
         (and (not (vcg)) (not (h0f)) (j0f) (ucg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (k0f) )
         (and (not (ycg)) (not (k0f)) (l0f) (xcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (m0f) )
         (and (not (bdg)) (not (m0f)) (q0f) (zcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (r0f) )
         (and (not (gdg)) (not (r0f)) (t0f) (cdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (u0f) )
         (and (not (jdg)) (not (u0f)) (v0f) (hdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (x0f) )
         (and (not (ldg)) (not (x0f)) (y0f) (kdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (z0f) )
         (and (not (qdg)) (not (z0f)) (bag) (mdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (cag) )
         (and (not (tdg)) (not (cag)) (gag) (rdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (hag) )
         (and (not (vdg)) (not (hag)) (jag) (udg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (kag) )
         (and (not (ydg)) (not (kag)) (lag) (xdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (mag) )
         (and (not (beg)) (not (mag)) (qag) (zdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (rag) )
         (and (not (geg)) (not (rag)) (tag) (ceg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gbg)) (not (g9f)) )
         (and (not (tbg)) (not (c9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hbg)) (not (j9f)) )
         (and (not (vbg)) (not (h9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jbg)) (not (l9f)) )
         (and (not (ybg)) (not (k9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kbg)) (not (q9f)) )
         (and (not (bcg)) (not (m9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lbg)) (not (t9f)) )
         (and (not (gcg)) (not (r9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mbg)) (not (v9f)) )
         (and (not (jcg)) (not (u9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbg)) (not (y9f)) )
         (and (not (lcg)) (not (x9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0f)) (not (j6c)) )
         (and (not (qcg)) (not (z9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0f)) (not (j6c)) )
         (and (not (tcg)) (not (c0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0f)) (not (j6c)) )
         (and (not (vcg)) (not (h0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0f)) (not (j6c)) )
         (and (not (ycg)) (not (k0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0f)) (not (j6c)) )
         (and (not (bdg)) (not (m0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0f)) (not (j6c)) )
         (and (not (gdg)) (not (r0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0f)) (not (j6c)) )
         (and (not (jdg)) (not (u0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0f)) (not (j6c)) )
         (and (not (ldg)) (not (x0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bag)) (not (j6c)) )
         (and (not (qdg)) (not (z0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gag)) (not (j6c)) )
         (and (not (tdg)) (not (cag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jag)) (not (j6c)) )
         (and (not (vdg)) (not (hag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lag)) (not (j6c)) )
         (and (not (ydg)) (not (kag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qag)) (not (j6c)) )
         (and (not (beg)) (not (mag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tag)) (not (j6c)) )
         (and (not (geg)) (not (rag)) ))

    )
  )
  (:action MOVE_P6-4_P7-4
    :precondition  (and 
      (t7b)
      (g3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t7b) (g3c) )
         (and (not (z3c)) (not (g3c)) (c3c) (b4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r5c) (c1d) )
         (and (not (y1d)) (not (c1d)) (not (z3c)) (not (g3c)) (c3c) (b4c) (b1d) (z1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (b1d)) (not (q5c)) )
         (and (not (y1d)) (not (c1d)) (not (z3c)) (not (g3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (c9f) )
         (and (not (vog)) (not (c9f)) (g9f) (uog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (h9f) )
         (and (not (yog)) (not (h9f)) (j9f) (xog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (k9f) )
         (and (not (bpg)) (not (k9f)) (l9f) (zog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (m9f) )
         (and (not (gpg)) (not (m9f)) (q9f) (cpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (r9f) )
         (and (not (jpg)) (not (r9f)) (t9f) (hpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (u9f) )
         (and (not (lpg)) (not (u9f)) (v9f) (kpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (x9f) )
         (and (not (qpg)) (not (x9f)) (y9f) (mpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (z9f) )
         (and (not (tpg)) (not (z9f)) (b0f) (rpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (c0f) )
         (and (not (vpg)) (not (c0f)) (g0f) (upg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (h0f) )
         (and (not (ypg)) (not (h0f)) (j0f) (xpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (k0f) )
         (and (not (bqg)) (not (k0f)) (l0f) (zpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (m0f) )
         (and (not (gqg)) (not (m0f)) (q0f) (cqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (r0f) )
         (and (not (jqg)) (not (r0f)) (t0f) (hqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (u0f) )
         (and (not (lqg)) (not (u0f)) (v0f) (kqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (x0f) )
         (and (not (qqg)) (not (x0f)) (y0f) (mqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (z0f) )
         (and (not (tqg)) (not (z0f)) (bag) (rqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (cag) )
         (and (not (vqg)) (not (cag)) (gag) (uqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (hag) )
         (and (not (yqg)) (not (hag)) (jag) (xqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (kag) )
         (and (not (bsg)) (not (kag)) (lag) (zqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (mag) )
         (and (not (gsg)) (not (mag)) (qag) (csg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (rag) )
         (and (not (jsg)) (not (rag)) (tag) (hsg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9f)) (not (q5c)) )
         (and (not (vog)) (not (c9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9f)) (not (q5c)) )
         (and (not (yog)) (not (h9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9f)) (not (q5c)) )
         (and (not (bpg)) (not (k9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9f)) (not (q5c)) )
         (and (not (gpg)) (not (m9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9f)) (not (q5c)) )
         (and (not (jpg)) (not (r9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9f)) (not (q5c)) )
         (and (not (lpg)) (not (u9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y9f)) (not (q5c)) )
         (and (not (qpg)) (not (x9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0f)) (not (q5c)) )
         (and (not (tpg)) (not (z9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0f)) (not (q5c)) )
         (and (not (vpg)) (not (c0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0f)) (not (q5c)) )
         (and (not (ypg)) (not (h0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0f)) (not (q5c)) )
         (and (not (bqg)) (not (k0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0f)) (not (q5c)) )
         (and (not (gqg)) (not (m0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0f)) (not (q5c)) )
         (and (not (jqg)) (not (r0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0f)) (not (q5c)) )
         (and (not (lqg)) (not (u0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0f)) (not (q5c)) )
         (and (not (qqg)) (not (x0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bag)) (not (q5c)) )
         (and (not (tqg)) (not (z0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gag)) (not (q5c)) )
         (and (not (vqg)) (not (cag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jag)) (not (q5c)) )
         (and (not (yqg)) (not (hag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lag)) (not (q5c)) )
         (and (not (bsg)) (not (kag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qag)) (not (q5c)) )
         (and (not (gsg)) (not (mag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tag)) (not (q5c)) )
         (and (not (jsg)) (not (rag)) ))

    )
  )
  (:action MOVE_P6-5_P5-5
    :precondition  (and 
      (j9b)
      (j3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j9b) (j3c) )
         (and (not (j3c)) (not (k2c)) (l2c) (h3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h7c) (h1d) )
         (and (not (h1d)) (not (jzd)) (not (j3c)) (not (k2c)) (l2c) (h3c) (kzd) (g1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (g1d)) (not (g7c)) )
         (and (not (h1d)) (not (jzd)) (not (j3c)) (not (k2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (rbg) )
         (and (not (rbg)) (not (vwf)) (uwf) (tbg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (ubg) )
         (and (not (ubg)) (not (ywf)) (xwf) (vbg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (xbg) )
         (and (not (xbg)) (not (bxf)) (zwf) (ybg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (zbg) )
         (and (not (zbg)) (not (gxf)) (cxf) (bcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (ccg) )
         (and (not (ccg)) (not (jxf)) (hxf) (gcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (hcg) )
         (and (not (hcg)) (not (lxf)) (kxf) (jcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (kcg) )
         (and (not (kcg)) (not (qxf)) (mxf) (lcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (mcg) )
         (and (not (mcg)) (not (txf)) (rxf) (qcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (rcg) )
         (and (not (rcg)) (not (vxf)) (uxf) (tcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (ucg) )
         (and (not (ucg)) (not (yxf)) (xxf) (vcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (xcg) )
         (and (not (xcg)) (not (byf)) (zxf) (ycg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (zcg) )
         (and (not (zcg)) (not (gyf)) (cyf) (bdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (cdg) )
         (and (not (cdg)) (not (jyf)) (hyf) (gdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (hdg) )
         (and (not (hdg)) (not (lyf)) (kyf) (jdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (kdg) )
         (and (not (kdg)) (not (qyf)) (myf) (ldg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (mdg) )
         (and (not (mdg)) (not (tyf)) (ryf) (qdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (rdg) )
         (and (not (rdg)) (not (vyf)) (uyf) (tdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (udg) )
         (and (not (udg)) (not (yyf)) (xyf) (vdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (xdg) )
         (and (not (xdg)) (not (bzf)) (zyf) (ydg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (zdg) )
         (and (not (zdg)) (not (gzf)) (czf) (beg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h7c) (ceg) )
         (and (not (ceg)) (not (jzf)) (hzf) (geg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbg)) (not (g7c)) )
         (and (not (rbg)) (not (vwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbg)) (not (g7c)) )
         (and (not (ubg)) (not (ywf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybg)) (not (g7c)) )
         (and (not (xbg)) (not (bxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bcg)) (not (g7c)) )
         (and (not (zbg)) (not (gxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gcg)) (not (g7c)) )
         (and (not (ccg)) (not (jxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jcg)) (not (g7c)) )
         (and (not (hcg)) (not (lxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lcg)) (not (g7c)) )
         (and (not (kcg)) (not (qxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qcg)) (not (g7c)) )
         (and (not (mcg)) (not (txf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tcg)) (not (g7c)) )
         (and (not (rcg)) (not (vxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vcg)) (not (g7c)) )
         (and (not (ucg)) (not (yxf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ycg)) (not (g7c)) )
         (and (not (xcg)) (not (byf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bdg)) (not (g7c)) )
         (and (not (zcg)) (not (gyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gdg)) (not (g7c)) )
         (and (not (cdg)) (not (jyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jdg)) (not (g7c)) )
         (and (not (hdg)) (not (lyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ldg)) (not (g7c)) )
         (and (not (kdg)) (not (qyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdg)) (not (g7c)) )
         (and (not (mdg)) (not (tyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdg)) (not (g7c)) )
         (and (not (rdg)) (not (vyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdg)) (not (g7c)) )
         (and (not (udg)) (not (yyf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydg)) (not (g7c)) )
         (and (not (xdg)) (not (bzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (beg)) (not (g7c)) )
         (and (not (zdg)) (not (gzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (geg)) (not (g7c)) )
         (and (not (ceg)) (not (jzf)) ))

    )
  )
  (:action MOVE_P6-5_P6-4
    :precondition  (and 
      (q8b)
      (j3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q8b) (j3c) )
         (and (not (j3c)) (not (c3c)) (g3c) (h3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m6c) (h1d) )
         (and (not (h1d)) (not (b1d)) (not (j3c)) (not (c3c)) (g3c) (h3c) (c1d) (g1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (g1d)) (not (l6c)) )
         (and (not (h1d)) (not (b1d)) (not (j3c)) (not (c3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (rbg) )
         (and (not (rbg)) (not (g9f)) (c9f) (tbg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (ubg) )
         (and (not (ubg)) (not (j9f)) (h9f) (vbg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (xbg) )
         (and (not (xbg)) (not (l9f)) (k9f) (ybg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (l8f) (zbg) )
         (and (not (zbg)) (not (q9f)) (m9f) (bcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (ccg) )
         (and (not (ccg)) (not (t9f)) (r9f) (gcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (hcg) )
         (and (not (hcg)) (not (v9f)) (u9f) (jcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (kcg) )
         (and (not (kcg)) (not (y9f)) (x9f) (lcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (mcg) )
         (and (not (mcg)) (not (b0f)) (z9f) (qcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (rcg) )
         (and (not (rcg)) (not (g0f)) (c0f) (tcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (ucg) )
         (and (not (ucg)) (not (j0f)) (h0f) (vcg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (xcg) )
         (and (not (xcg)) (not (l0f)) (k0f) (ycg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (zcg) )
         (and (not (zcg)) (not (q0f)) (m0f) (bdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (cdg) )
         (and (not (cdg)) (not (t0f)) (r0f) (gdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (hdg) )
         (and (not (hdg)) (not (v0f)) (u0f) (jdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (kdg) )
         (and (not (kdg)) (not (y0f)) (x0f) (ldg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (mdg) )
         (and (not (mdg)) (not (bag)) (z0f) (qdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (rdg) )
         (and (not (rdg)) (not (gag)) (cag) (tdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (udg) )
         (and (not (udg)) (not (jag)) (hag) (vdg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (xdg) )
         (and (not (xdg)) (not (lag)) (kag) (ydg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (zdg) )
         (and (not (zdg)) (not (qag)) (mag) (beg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (ceg) )
         (and (not (ceg)) (not (tag)) (rag) (geg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbg)) (not (t8f)) )
         (and (not (rbg)) (not (g9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbg)) (not (u8f)) )
         (and (not (ubg)) (not (j9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybg)) (not (v8f)) )
         (and (not (xbg)) (not (l9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bcg)) (not (x8f)) )
         (and (not (zbg)) (not (q9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gcg)) (not (y8f)) )
         (and (not (ccg)) (not (t9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jcg)) (not (z8f)) )
         (and (not (hcg)) (not (v9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lcg)) (not (b9f)) )
         (and (not (kcg)) (not (y9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qcg)) (not (l6c)) )
         (and (not (mcg)) (not (b0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tcg)) (not (l6c)) )
         (and (not (rcg)) (not (g0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vcg)) (not (l6c)) )
         (and (not (ucg)) (not (j0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ycg)) (not (l6c)) )
         (and (not (xcg)) (not (l0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bdg)) (not (l6c)) )
         (and (not (zcg)) (not (q0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gdg)) (not (l6c)) )
         (and (not (cdg)) (not (t0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jdg)) (not (l6c)) )
         (and (not (hdg)) (not (v0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ldg)) (not (l6c)) )
         (and (not (kdg)) (not (y0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdg)) (not (l6c)) )
         (and (not (mdg)) (not (bag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdg)) (not (l6c)) )
         (and (not (rdg)) (not (gag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdg)) (not (l6c)) )
         (and (not (udg)) (not (jag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydg)) (not (l6c)) )
         (and (not (xdg)) (not (lag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (beg)) (not (l6c)) )
         (and (not (zdg)) (not (qag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (geg)) (not (l6c)) )
         (and (not (ceg)) (not (tag)) ))

    )
  )
  (:action MOVE_P6-5_P6-6
    :precondition  (and 
      (j8b)
      (j3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j8b) (j3c) )
         (and (not (k3c)) (not (j3c)) (h3c) (l3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h6c) (h1d) )
         (and (not (j1d)) (not (h1d)) (not (k3c)) (not (j3c)) (h3c) (l3c) (g1d) (k1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (g1d)) (not (g6c)) )
         (and (not (j1d)) (not (h1d)) (not (k3c)) (not (j3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (rbg) )
         (and (not (gfg)) (not (rbg)) (tbg) (cfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (ubg) (jeg) )
         (and (not (jfg)) (not (ubg)) (vbg) (hfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (xbg) )
         (and (not (lfg)) (not (xbg)) (ybg) (kfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (zbg) )
         (and (not (qfg)) (not (zbg)) (bcg) (mfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (ccg) )
         (and (not (tfg)) (not (ccg)) (gcg) (rfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (hcg) )
         (and (not (vfg)) (not (hcg)) (jcg) (ufg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (kcg) )
         (and (not (yfg)) (not (kcg)) (lcg) (xfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (mcg) )
         (and (not (bgg)) (not (mcg)) (qcg) (zfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (rcg) )
         (and (not (ggg)) (not (rcg)) (tcg) (cgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (ucg) )
         (and (not (jgg)) (not (ucg)) (vcg) (hgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (xcg) )
         (and (not (lgg)) (not (xcg)) (ycg) (kgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (zcg) )
         (and (not (qgg)) (not (zcg)) (bdg) (mgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (cdg) )
         (and (not (tgg)) (not (cdg)) (gdg) (rgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (hdg) )
         (and (not (vgg)) (not (hdg)) (jdg) (ugg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (kdg) )
         (and (not (ygg)) (not (kdg)) (ldg) (xgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (mdg) )
         (and (not (bhg)) (not (mdg)) (qdg) (zgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (rdg) )
         (and (not (ghg)) (not (rdg)) (tdg) (chg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (udg) )
         (and (not (jhg)) (not (udg)) (vdg) (hhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (xdg) )
         (and (not (lhg)) (not (xdg)) (ydg) (khg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (zdg) )
         (and (not (qhg)) (not (zdg)) (beg) (mhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (ceg) )
         (and (not (thg)) (not (ceg)) (geg) (rhg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (teg)) (not (tbg)) )
         (and (not (gfg)) (not (rbg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ueg)) (not (vbg)) )
         (and (not (jfg)) (not (ubg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (veg)) (not (ybg)) )
         (and (not (lfg)) (not (xbg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (xeg)) (not (bcg)) )
         (and (not (qfg)) (not (zbg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yeg)) (not (gcg)) )
         (and (not (tfg)) (not (ccg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (zeg)) (not (jcg)) )
         (and (not (vfg)) (not (hcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bfg)) (not (lcg)) )
         (and (not (yfg)) (not (kcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qcg)) (not (g6c)) )
         (and (not (bgg)) (not (mcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tcg)) (not (g6c)) )
         (and (not (ggg)) (not (rcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vcg)) (not (g6c)) )
         (and (not (jgg)) (not (ucg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ycg)) (not (g6c)) )
         (and (not (lgg)) (not (xcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bdg)) (not (g6c)) )
         (and (not (qgg)) (not (zcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gdg)) (not (g6c)) )
         (and (not (tgg)) (not (cdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jdg)) (not (g6c)) )
         (and (not (vgg)) (not (hdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ldg)) (not (g6c)) )
         (and (not (ygg)) (not (kdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdg)) (not (g6c)) )
         (and (not (bhg)) (not (mdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdg)) (not (g6c)) )
         (and (not (ghg)) (not (rdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdg)) (not (g6c)) )
         (and (not (jhg)) (not (udg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydg)) (not (g6c)) )
         (and (not (lhg)) (not (xdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (beg)) (not (g6c)) )
         (and (not (qhg)) (not (zdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (geg)) (not (g6c)) )
         (and (not (thg)) (not (ceg)) ))

    )
  )
  (:action MOVE_P6-5_P7-5
    :precondition  (and 
      (q7b)
      (j3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q7b) (j3c) )
         (and (not (c4c)) (not (j3c)) (h3c) (g4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m5c) (h1d) )
         (and (not (b2d)) (not (h1d)) (not (c4c)) (not (j3c)) (h3c) (g4c) (g1d) (c2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (g1d)) (not (l5c)) )
         (and (not (b2d)) (not (h1d)) (not (c4c)) (not (j3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (rbg) )
         (and (not (lsg)) (not (rbg)) (tbg) (ksg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (ubg) )
         (and (not (qsg)) (not (ubg)) (vbg) (msg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (xbg) )
         (and (not (tsg)) (not (xbg)) (ybg) (rsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (zbg) )
         (and (not (vsg)) (not (zbg)) (bcg) (usg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (ccg) )
         (and (not (ysg)) (not (ccg)) (gcg) (xsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (hcg) )
         (and (not (brg)) (not (hcg)) (jcg) (zsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (kcg) )
         (and (not (grg)) (not (kcg)) (lcg) (crg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (mcg) )
         (and (not (jrg)) (not (mcg)) (qcg) (hrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (rcg) )
         (and (not (lrg)) (not (rcg)) (tcg) (krg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (ucg) )
         (and (not (qrg)) (not (ucg)) (vcg) (mrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (xcg) )
         (and (not (trg)) (not (xcg)) (ycg) (rrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (zcg) )
         (and (not (vrg)) (not (zcg)) (bdg) (urg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (cdg) )
         (and (not (yrg)) (not (cdg)) (gdg) (xrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (hdg) )
         (and (not (btg)) (not (hdg)) (jdg) (zrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (kdg) )
         (and (not (gtg)) (not (kdg)) (ldg) (ctg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (mdg) )
         (and (not (jtg)) (not (mdg)) (qdg) (htg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (rdg) )
         (and (not (ltg)) (not (rdg)) (tdg) (ktg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (udg) )
         (and (not (qtg)) (not (udg)) (vdg) (mtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (xdg) )
         (and (not (ttg)) (not (xdg)) (ydg) (rtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (zdg) )
         (and (not (vtg)) (not (zdg)) (beg) (utg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (ceg) )
         (and (not (ytg)) (not (ceg)) (geg) (xtg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbg)) (not (l5c)) )
         (and (not (lsg)) (not (rbg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbg)) (not (l5c)) )
         (and (not (qsg)) (not (ubg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybg)) (not (l5c)) )
         (and (not (tsg)) (not (xbg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bcg)) (not (l5c)) )
         (and (not (vsg)) (not (zbg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gcg)) (not (l5c)) )
         (and (not (ysg)) (not (ccg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jcg)) (not (l5c)) )
         (and (not (brg)) (not (hcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lcg)) (not (l5c)) )
         (and (not (grg)) (not (kcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qcg)) (not (l5c)) )
         (and (not (jrg)) (not (mcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tcg)) (not (l5c)) )
         (and (not (lrg)) (not (rcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vcg)) (not (l5c)) )
         (and (not (qrg)) (not (ucg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ycg)) (not (l5c)) )
         (and (not (trg)) (not (xcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bdg)) (not (l5c)) )
         (and (not (vrg)) (not (zcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gdg)) (not (l5c)) )
         (and (not (yrg)) (not (cdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jdg)) (not (l5c)) )
         (and (not (btg)) (not (hdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ldg)) (not (l5c)) )
         (and (not (gtg)) (not (kdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdg)) (not (l5c)) )
         (and (not (jtg)) (not (mdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdg)) (not (l5c)) )
         (and (not (ltg)) (not (rdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdg)) (not (l5c)) )
         (and (not (qtg)) (not (udg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydg)) (not (l5c)) )
         (and (not (ttg)) (not (xdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (beg)) (not (l5c)) )
         (and (not (vtg)) (not (zdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (geg)) (not (l5c)) )
         (and (not (ytg)) (not (ceg)) ))

    )
  )
  (:action MOVE_P6-6_P5-6
    :precondition  (and 
      (g9b)
      (l3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g9b) (l3c) )
         (and (not (l3c)) (not (m2c)) (q2c) (k3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c7c) (k1d) )
         (and (not (k1d)) (not (lzd)) (not (l3c)) (not (m2c)) (q2c) (k3c) (mzd) (j1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (j1d)) (not (b7c)) )
         (and (not (k1d)) (not (lzd)) (not (l3c)) (not (m2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (cfg) )
         (and (not (cfg)) (not (lzf)) (kzf) (gfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (hfg) )
         (and (not (hfg)) (not (qzf)) (mzf) (jfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (kfg) )
         (and (not (kfg)) (not (tzf)) (rzf) (lfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (mfg) )
         (and (not (mfg)) (not (vzf)) (uzf) (qfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (rfg) )
         (and (not (rfg)) (not (yzf)) (xzf) (tfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (ufg) )
         (and (not (ufg)) (not (b1f)) (zzf) (vfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (xfg) )
         (and (not (xfg)) (not (g1f)) (c1f) (yfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (zfg) )
         (and (not (zfg)) (not (j1f)) (h1f) (bgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (cgg) )
         (and (not (cgg)) (not (l1f)) (k1f) (ggg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (hgg) )
         (and (not (hgg)) (not (q1f)) (m1f) (jgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (kgg) )
         (and (not (kgg)) (not (t1f)) (r1f) (lgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (mgg) )
         (and (not (mgg)) (not (v1f)) (u1f) (qgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (rgg) )
         (and (not (rgg)) (not (y1f)) (x1f) (tgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (ugg) )
         (and (not (ugg)) (not (b2f)) (z1f) (vgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (xgg) )
         (and (not (xgg)) (not (g2f)) (c2f) (ygg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (zgg) )
         (and (not (zgg)) (not (j2f)) (h2f) (bhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (chg) )
         (and (not (chg)) (not (l2f)) (k2f) (ghg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (hhg) )
         (and (not (hhg)) (not (q2f)) (m2f) (jhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (khg) )
         (and (not (khg)) (not (t2f)) (r2f) (lhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (mhg) )
         (and (not (mhg)) (not (v2f)) (u2f) (qhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c7c) (rhg) )
         (and (not (rhg)) (not (y2f)) (x2f) (thg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfg)) (not (b7c)) )
         (and (not (cfg)) (not (lzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfg)) (not (b7c)) )
         (and (not (hfg)) (not (qzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lfg)) (not (b7c)) )
         (and (not (kfg)) (not (tzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qfg)) (not (b7c)) )
         (and (not (mfg)) (not (vzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tfg)) (not (b7c)) )
         (and (not (rfg)) (not (yzf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vfg)) (not (b7c)) )
         (and (not (ufg)) (not (b1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yfg)) (not (b7c)) )
         (and (not (xfg)) (not (g1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgg)) (not (b7c)) )
         (and (not (zfg)) (not (j1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ggg)) (not (b7c)) )
         (and (not (cgg)) (not (l1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jgg)) (not (b7c)) )
         (and (not (hgg)) (not (q1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lgg)) (not (b7c)) )
         (and (not (kgg)) (not (t1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qgg)) (not (b7c)) )
         (and (not (mgg)) (not (v1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tgg)) (not (b7c)) )
         (and (not (rgg)) (not (y1f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vgg)) (not (b7c)) )
         (and (not (ugg)) (not (b2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ygg)) (not (b7c)) )
         (and (not (xgg)) (not (g2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhg)) (not (b7c)) )
         (and (not (zgg)) (not (j2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghg)) (not (b7c)) )
         (and (not (chg)) (not (l2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhg)) (not (b7c)) )
         (and (not (hhg)) (not (q2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhg)) (not (b7c)) )
         (and (not (khg)) (not (t2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhg)) (not (b7c)) )
         (and (not (mhg)) (not (v2f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thg)) (not (b7c)) )
         (and (not (rhg)) (not (y2f)) ))

    )
  )
  (:action MOVE_P6-6_P6-5
    :precondition  (and 
      (l8b)
      (l3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l8b) (l3c) )
         (and (not (l3c)) (not (h3c)) (j3c) (k3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k6c) (k1d) )
         (and (not (k1d)) (not (g1d)) (not (l3c)) (not (h3c)) (j3c) (k3c) (h1d) (j1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (j1d)) (not (j6c)) )
         (and (not (k1d)) (not (g1d)) (not (l3c)) (not (h3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (cfg) )
         (and (not (cfg)) (not (tbg)) (rbg) (gfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (hfg) )
         (and (not (hfg)) (not (vbg)) (ubg) (jfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (xag) (kfg) )
         (and (not (kfg)) (not (ybg)) (xbg) (lfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (mfg) )
         (and (not (mfg)) (not (bcg)) (zbg) (qfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (rfg) )
         (and (not (rfg)) (not (gcg)) (ccg) (tfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (ufg) )
         (and (not (ufg)) (not (jcg)) (hcg) (vfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (xfg) )
         (and (not (xfg)) (not (lcg)) (kcg) (yfg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (zfg) )
         (and (not (zfg)) (not (qcg)) (mcg) (bgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (cgg) )
         (and (not (cgg)) (not (tcg)) (rcg) (ggg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (hgg) )
         (and (not (hgg)) (not (vcg)) (ucg) (jgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (kgg) )
         (and (not (kgg)) (not (ycg)) (xcg) (lgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (mgg) )
         (and (not (mgg)) (not (bdg)) (zcg) (qgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (rgg) )
         (and (not (rgg)) (not (gdg)) (cdg) (tgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (ugg) )
         (and (not (ugg)) (not (jdg)) (hdg) (vgg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (xgg) )
         (and (not (xgg)) (not (ldg)) (kdg) (ygg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (zgg) )
         (and (not (zgg)) (not (qdg)) (mdg) (bhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (chg) )
         (and (not (chg)) (not (tdg)) (rdg) (ghg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (hhg) )
         (and (not (hhg)) (not (vdg)) (udg) (jhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (khg) )
         (and (not (khg)) (not (ydg)) (xdg) (lhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (mhg) )
         (and (not (mhg)) (not (beg)) (zdg) (qhg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (rhg) )
         (and (not (rhg)) (not (geg)) (ceg) (thg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfg)) (not (gbg)) )
         (and (not (cfg)) (not (tbg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfg)) (not (hbg)) )
         (and (not (hfg)) (not (vbg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lfg)) (not (jbg)) )
         (and (not (kfg)) (not (ybg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qfg)) (not (kbg)) )
         (and (not (mfg)) (not (bcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tfg)) (not (lbg)) )
         (and (not (rfg)) (not (gcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vfg)) (not (mbg)) )
         (and (not (ufg)) (not (jcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yfg)) (not (qbg)) )
         (and (not (xfg)) (not (lcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgg)) (not (j6c)) )
         (and (not (zfg)) (not (qcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ggg)) (not (j6c)) )
         (and (not (cgg)) (not (tcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jgg)) (not (j6c)) )
         (and (not (hgg)) (not (vcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lgg)) (not (j6c)) )
         (and (not (kgg)) (not (ycg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qgg)) (not (j6c)) )
         (and (not (mgg)) (not (bdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tgg)) (not (j6c)) )
         (and (not (rgg)) (not (gdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vgg)) (not (j6c)) )
         (and (not (ugg)) (not (jdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ygg)) (not (j6c)) )
         (and (not (xgg)) (not (ldg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhg)) (not (j6c)) )
         (and (not (zgg)) (not (qdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghg)) (not (j6c)) )
         (and (not (chg)) (not (tdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhg)) (not (j6c)) )
         (and (not (hhg)) (not (vdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhg)) (not (j6c)) )
         (and (not (khg)) (not (ydg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhg)) (not (j6c)) )
         (and (not (mhg)) (not (beg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thg)) (not (j6c)) )
         (and (not (rhg)) (not (geg)) ))

    )
  )
  (:action MOVE_P6-6_P6-7
    :precondition  (and 
      (g8b)
      (l3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g8b) (l3c) )
         (and (not (m3c)) (not (l3c)) (k3c) (q3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c6c) (k1d) )
         (and (not (l1d)) (not (k1d)) (not (m3c)) (not (l3c)) (k3c) (q3c) (j1d) (m1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (j1d)) (not (b6c)) )
         (and (not (l1d)) (not (k1d)) (not (m3c)) (not (l3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cfg) (uhg) )
         (and (not (tig)) (not (cfg)) (gfg) (rig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (hfg) )
         (and (not (vig)) (not (hfg)) (jfg) (uig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (kfg) )
         (and (not (yig)) (not (kfg)) (lfg) (xig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (mfg) )
         (and (not (bjg)) (not (mfg)) (qfg) (zig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (rfg) )
         (and (not (gjg)) (not (rfg)) (tfg) (cjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (ufg) )
         (and (not (jjg)) (not (ufg)) (vfg) (hjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (xfg) )
         (and (not (ljg)) (not (xfg)) (yfg) (kjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (zfg) )
         (and (not (qjg)) (not (zfg)) (bgg) (mjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (cgg) )
         (and (not (tjg)) (not (cgg)) (ggg) (rjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (hgg) )
         (and (not (vjg)) (not (hgg)) (jgg) (ujg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (kgg) )
         (and (not (yjg)) (not (kgg)) (lgg) (xjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (mgg) )
         (and (not (bkg)) (not (mgg)) (qgg) (zjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (rgg) )
         (and (not (gkg)) (not (rgg)) (tgg) (ckg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (ugg) )
         (and (not (jkg)) (not (ugg)) (vgg) (hkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (xgg) )
         (and (not (lkg)) (not (xgg)) (ygg) (kkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (zgg) )
         (and (not (qkg)) (not (zgg)) (bhg) (mkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (chg) )
         (and (not (tkg)) (not (chg)) (ghg) (rkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (hhg) )
         (and (not (vkg)) (not (hhg)) (jhg) (ukg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (khg) )
         (and (not (ykg)) (not (khg)) (lhg) (xkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (mhg) )
         (and (not (blg)) (not (mhg)) (qhg) (zkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (rhg) )
         (and (not (glg)) (not (rhg)) (thg) (clg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gig)) (not (gfg)) )
         (and (not (tig)) (not (cfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hig)) (not (jfg)) )
         (and (not (vig)) (not (hfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jig)) (not (lfg)) )
         (and (not (yig)) (not (kfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kig)) (not (qfg)) )
         (and (not (bjg)) (not (mfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lig)) (not (tfg)) )
         (and (not (gjg)) (not (rfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mig)) (not (vfg)) )
         (and (not (jjg)) (not (ufg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qig)) (not (yfg)) )
         (and (not (ljg)) (not (xfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgg)) (not (b6c)) )
         (and (not (qjg)) (not (zfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ggg)) (not (b6c)) )
         (and (not (tjg)) (not (cgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jgg)) (not (b6c)) )
         (and (not (vjg)) (not (hgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lgg)) (not (b6c)) )
         (and (not (yjg)) (not (kgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qgg)) (not (b6c)) )
         (and (not (bkg)) (not (mgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tgg)) (not (b6c)) )
         (and (not (gkg)) (not (rgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vgg)) (not (b6c)) )
         (and (not (jkg)) (not (ugg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ygg)) (not (b6c)) )
         (and (not (lkg)) (not (xgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhg)) (not (b6c)) )
         (and (not (qkg)) (not (zgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghg)) (not (b6c)) )
         (and (not (tkg)) (not (chg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhg)) (not (b6c)) )
         (and (not (vkg)) (not (hhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhg)) (not (b6c)) )
         (and (not (ykg)) (not (khg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhg)) (not (b6c)) )
         (and (not (blg)) (not (mhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thg)) (not (b6c)) )
         (and (not (glg)) (not (rhg)) ))

    )
  )
  (:action MOVE_P6-6_P7-6
    :precondition  (and 
      (l7b)
      (l3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l7b) (l3c) )
         (and (not (h4c)) (not (l3c)) (k3c) (j4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k5c) (k1d) )
         (and (not (g2d)) (not (k1d)) (not (h4c)) (not (l3c)) (k3c) (j4c) (j1d) (h2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (j1d)) (not (j5c)) )
         (and (not (g2d)) (not (k1d)) (not (h4c)) (not (l3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (cfg) )
         (and (not (bug)) (not (cfg)) (gfg) (ztg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (hfg) )
         (and (not (gug)) (not (hfg)) (jfg) (cug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (kfg) )
         (and (not (jug)) (not (kfg)) (lfg) (hug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (mfg) )
         (and (not (lug)) (not (mfg)) (qfg) (kug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (rfg) )
         (and (not (qug)) (not (rfg)) (tfg) (mug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (ufg) )
         (and (not (tug)) (not (ufg)) (vfg) (rug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (xfg) )
         (and (not (vug)) (not (xfg)) (yfg) (uug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (zfg) )
         (and (not (yug)) (not (zfg)) (bgg) (xug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (cgg) )
         (and (not (bvg)) (not (cgg)) (ggg) (zug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (hgg) )
         (and (not (gvg)) (not (hgg)) (jgg) (cvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (kgg) )
         (and (not (jvg)) (not (kgg)) (lgg) (hvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (mgg) )
         (and (not (lvg)) (not (mgg)) (qgg) (kvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (rgg) )
         (and (not (qvg)) (not (rgg)) (tgg) (mvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (ugg) )
         (and (not (tvg)) (not (ugg)) (vgg) (rvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (xgg) )
         (and (not (vvg)) (not (xgg)) (ygg) (uvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (zgg) )
         (and (not (yvg)) (not (zgg)) (bhg) (xvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (chg) )
         (and (not (bwg)) (not (chg)) (ghg) (zvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (hhg) )
         (and (not (gwg)) (not (hhg)) (jhg) (cwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (khg) )
         (and (not (jwg)) (not (khg)) (lhg) (hwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (mhg) )
         (and (not (lwg)) (not (mhg)) (qhg) (kwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (rhg) )
         (and (not (qwg)) (not (rhg)) (thg) (mwg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfg)) (not (j5c)) )
         (and (not (bug)) (not (cfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfg)) (not (j5c)) )
         (and (not (gug)) (not (hfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lfg)) (not (j5c)) )
         (and (not (jug)) (not (kfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qfg)) (not (j5c)) )
         (and (not (lug)) (not (mfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tfg)) (not (j5c)) )
         (and (not (qug)) (not (rfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vfg)) (not (j5c)) )
         (and (not (tug)) (not (ufg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yfg)) (not (j5c)) )
         (and (not (vug)) (not (xfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgg)) (not (j5c)) )
         (and (not (yug)) (not (zfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ggg)) (not (j5c)) )
         (and (not (bvg)) (not (cgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jgg)) (not (j5c)) )
         (and (not (gvg)) (not (hgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lgg)) (not (j5c)) )
         (and (not (jvg)) (not (kgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qgg)) (not (j5c)) )
         (and (not (lvg)) (not (mgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tgg)) (not (j5c)) )
         (and (not (qvg)) (not (rgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vgg)) (not (j5c)) )
         (and (not (tvg)) (not (ugg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ygg)) (not (j5c)) )
         (and (not (vvg)) (not (xgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bhg)) (not (j5c)) )
         (and (not (yvg)) (not (zgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghg)) (not (j5c)) )
         (and (not (bwg)) (not (chg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhg)) (not (j5c)) )
         (and (not (gwg)) (not (hhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhg)) (not (j5c)) )
         (and (not (jwg)) (not (khg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhg)) (not (j5c)) )
         (and (not (lwg)) (not (mhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thg)) (not (j5c)) )
         (and (not (qwg)) (not (rhg)) ))

    )
  )
  (:action MOVE_P6-7_P5-7
    :precondition  (and 
      (b9b)
      (q3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (b9b) (q3c) )
         (and (not (q3c)) (not (r2c)) (t2c) (m3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z6c) (m1d) )
         (and (not (m1d)) (not (qzd)) (not (q3c)) (not (r2c)) (t2c) (m3c) (rzd) (l1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (l1d)) (not (y6c)) )
         (and (not (m1d)) (not (qzd)) (not (q3c)) (not (r2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (rig) )
         (and (not (rig)) (not (b3f)) (z2f) (tig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (uig) )
         (and (not (uig)) (not (g3f)) (c3f) (vig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (xig) )
         (and (not (xig)) (not (j3f)) (h3f) (yig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (zig) )
         (and (not (zig)) (not (l3f)) (k3f) (bjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (cjg) )
         (and (not (cjg)) (not (q3f)) (m3f) (gjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (hjg) )
         (and (not (hjg)) (not (t3f)) (r3f) (jjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (kjg) )
         (and (not (kjg)) (not (v3f)) (u3f) (ljg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (mjg) )
         (and (not (mjg)) (not (y3f)) (x3f) (qjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (rjg) )
         (and (not (rjg)) (not (b4f)) (z3f) (tjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (ujg) )
         (and (not (ujg)) (not (g4f)) (c4f) (vjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (xjg) )
         (and (not (xjg)) (not (j4f)) (h4f) (yjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (zjg) )
         (and (not (zjg)) (not (l4f)) (k4f) (bkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (ckg) )
         (and (not (ckg)) (not (q4f)) (m4f) (gkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (hkg) )
         (and (not (hkg)) (not (t4f)) (r4f) (jkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (kkg) )
         (and (not (kkg)) (not (v4f)) (u4f) (lkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (mkg) )
         (and (not (mkg)) (not (y4f)) (x4f) (qkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (rkg) )
         (and (not (rkg)) (not (b5f)) (z4f) (tkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (ukg) )
         (and (not (ukg)) (not (g5f)) (c5f) (vkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (xkg) )
         (and (not (xkg)) (not (j5f)) (h5f) (ykg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (zkg) )
         (and (not (zkg)) (not (l5f)) (k5f) (blg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z6c) (clg) )
         (and (not (clg)) (not (q5f)) (m5f) (glg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tig)) (not (y6c)) )
         (and (not (rig)) (not (b3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vig)) (not (y6c)) )
         (and (not (uig)) (not (g3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yig)) (not (y6c)) )
         (and (not (xig)) (not (j3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjg)) (not (y6c)) )
         (and (not (zig)) (not (l3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjg)) (not (y6c)) )
         (and (not (cjg)) (not (q3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjg)) (not (y6c)) )
         (and (not (hjg)) (not (t3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljg)) (not (y6c)) )
         (and (not (kjg)) (not (v3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjg)) (not (y6c)) )
         (and (not (mjg)) (not (y3f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tjg)) (not (y6c)) )
         (and (not (rjg)) (not (b4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vjg)) (not (y6c)) )
         (and (not (ujg)) (not (g4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yjg)) (not (y6c)) )
         (and (not (xjg)) (not (j4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bkg)) (not (y6c)) )
         (and (not (zjg)) (not (l4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gkg)) (not (y6c)) )
         (and (not (ckg)) (not (q4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jkg)) (not (y6c)) )
         (and (not (hkg)) (not (t4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lkg)) (not (y6c)) )
         (and (not (kkg)) (not (v4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qkg)) (not (y6c)) )
         (and (not (mkg)) (not (y4f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tkg)) (not (y6c)) )
         (and (not (rkg)) (not (b5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vkg)) (not (y6c)) )
         (and (not (ukg)) (not (g5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ykg)) (not (y6c)) )
         (and (not (xkg)) (not (j5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (blg)) (not (y6c)) )
         (and (not (zkg)) (not (l5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (glg)) (not (y6c)) )
         (and (not (clg)) (not (q5f)) ))

    )
  )
  (:action MOVE_P6-7_P6-6
    :precondition  (and 
      (j8b)
      (q3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j8b) (q3c) )
         (and (not (q3c)) (not (k3c)) (l3c) (m3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h6c) (m1d) )
         (and (not (m1d)) (not (j1d)) (not (q3c)) (not (k3c)) (l3c) (m3c) (k1d) (l1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (l1d)) (not (g6c)) )
         (and (not (m1d)) (not (j1d)) (not (q3c)) (not (k3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (rig) )
         (and (not (rig)) (not (gfg)) (cfg) (tig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (jeg) (uig) )
         (and (not (uig)) (not (jfg)) (hfg) (vig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (xig) )
         (and (not (xig)) (not (lfg)) (kfg) (yig) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (zig) )
         (and (not (zig)) (not (qfg)) (mfg) (bjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (cjg) )
         (and (not (cjg)) (not (tfg)) (rfg) (gjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (hjg) )
         (and (not (hjg)) (not (vfg)) (ufg) (jjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (kjg) )
         (and (not (kjg)) (not (yfg)) (xfg) (ljg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (mjg) )
         (and (not (mjg)) (not (bgg)) (zfg) (qjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (rjg) )
         (and (not (rjg)) (not (ggg)) (cgg) (tjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (ujg) )
         (and (not (ujg)) (not (jgg)) (hgg) (vjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (xjg) )
         (and (not (xjg)) (not (lgg)) (kgg) (yjg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (zjg) )
         (and (not (zjg)) (not (qgg)) (mgg) (bkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (ckg) )
         (and (not (ckg)) (not (tgg)) (rgg) (gkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (hkg) )
         (and (not (hkg)) (not (vgg)) (ugg) (jkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (kkg) )
         (and (not (kkg)) (not (ygg)) (xgg) (lkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (mkg) )
         (and (not (mkg)) (not (bhg)) (zgg) (qkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (rkg) )
         (and (not (rkg)) (not (ghg)) (chg) (tkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (ukg) )
         (and (not (ukg)) (not (jhg)) (hhg) (vkg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (xkg) )
         (and (not (xkg)) (not (lhg)) (khg) (ykg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (zkg) )
         (and (not (zkg)) (not (qhg)) (mhg) (blg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (clg) )
         (and (not (clg)) (not (thg)) (rhg) (glg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tig)) (not (teg)) )
         (and (not (rig)) (not (gfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vig)) (not (ueg)) )
         (and (not (uig)) (not (jfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yig)) (not (veg)) )
         (and (not (xig)) (not (lfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjg)) (not (xeg)) )
         (and (not (zig)) (not (qfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjg)) (not (yeg)) )
         (and (not (cjg)) (not (tfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjg)) (not (zeg)) )
         (and (not (hjg)) (not (vfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljg)) (not (bfg)) )
         (and (not (kjg)) (not (yfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjg)) (not (g6c)) )
         (and (not (mjg)) (not (bgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tjg)) (not (g6c)) )
         (and (not (rjg)) (not (ggg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vjg)) (not (g6c)) )
         (and (not (ujg)) (not (jgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yjg)) (not (g6c)) )
         (and (not (xjg)) (not (lgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bkg)) (not (g6c)) )
         (and (not (zjg)) (not (qgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gkg)) (not (g6c)) )
         (and (not (ckg)) (not (tgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jkg)) (not (g6c)) )
         (and (not (hkg)) (not (vgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lkg)) (not (g6c)) )
         (and (not (kkg)) (not (ygg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qkg)) (not (g6c)) )
         (and (not (mkg)) (not (bhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tkg)) (not (g6c)) )
         (and (not (rkg)) (not (ghg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vkg)) (not (g6c)) )
         (and (not (ukg)) (not (jhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ykg)) (not (g6c)) )
         (and (not (xkg)) (not (lhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (blg)) (not (g6c)) )
         (and (not (zkg)) (not (qhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (glg)) (not (g6c)) )
         (and (not (clg)) (not (thg)) ))

    )
  )
  (:action MOVE_P6-7_P7-7
    :precondition  (and 
      (j7b)
      (q3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j7b) (q3c) )
         (and (not (k4c)) (not (q3c)) (m3c) (l4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h5c) (m1d) )
         (and (not (j2d)) (not (m1d)) (not (k4c)) (not (q3c)) (m3c) (l4c) (l1d) (k2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (l1d)) (not (g5c)) )
         (and (not (j2d)) (not (m1d)) (not (k4c)) (not (q3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (rig) )
         (and (not (twg)) (not (rig)) (tig) (rwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (uig) )
         (and (not (vwg)) (not (uig)) (vig) (uwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (xig) )
         (and (not (ywg)) (not (xig)) (yig) (xwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (zig) )
         (and (not (bxg)) (not (zig)) (bjg) (zwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (cjg) )
         (and (not (gxg)) (not (cjg)) (gjg) (cxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (hjg) )
         (and (not (jxg)) (not (hjg)) (jjg) (hxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (kjg) )
         (and (not (lxg)) (not (kjg)) (ljg) (kxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (mjg) )
         (and (not (qxg)) (not (mjg)) (qjg) (mxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (rjg) )
         (and (not (txg)) (not (rjg)) (tjg) (rxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (ujg) )
         (and (not (vxg)) (not (ujg)) (vjg) (uxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (xjg) )
         (and (not (yxg)) (not (xjg)) (yjg) (xxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (zjg) )
         (and (not (byg)) (not (zjg)) (bkg) (zxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (ckg) )
         (and (not (gyg)) (not (ckg)) (gkg) (cyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (hkg) )
         (and (not (jyg)) (not (hkg)) (jkg) (hyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (kkg) )
         (and (not (lyg)) (not (kkg)) (lkg) (kyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (mkg) )
         (and (not (qyg)) (not (mkg)) (qkg) (myg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (rkg) )
         (and (not (tyg)) (not (rkg)) (tkg) (ryg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (ukg) )
         (and (not (vyg)) (not (ukg)) (vkg) (uyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (xkg) )
         (and (not (yyg)) (not (xkg)) (ykg) (xyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (zkg) )
         (and (not (bzg)) (not (zkg)) (blg) (zyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (clg) )
         (and (not (gzg)) (not (clg)) (glg) (czg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tig)) (not (g5c)) )
         (and (not (twg)) (not (rig)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vig)) (not (g5c)) )
         (and (not (vwg)) (not (uig)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yig)) (not (g5c)) )
         (and (not (ywg)) (not (xig)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjg)) (not (g5c)) )
         (and (not (bxg)) (not (zig)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjg)) (not (g5c)) )
         (and (not (gxg)) (not (cjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjg)) (not (g5c)) )
         (and (not (jxg)) (not (hjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljg)) (not (g5c)) )
         (and (not (lxg)) (not (kjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjg)) (not (g5c)) )
         (and (not (qxg)) (not (mjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tjg)) (not (g5c)) )
         (and (not (txg)) (not (rjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vjg)) (not (g5c)) )
         (and (not (vxg)) (not (ujg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yjg)) (not (g5c)) )
         (and (not (yxg)) (not (xjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bkg)) (not (g5c)) )
         (and (not (byg)) (not (zjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gkg)) (not (g5c)) )
         (and (not (gyg)) (not (ckg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jkg)) (not (g5c)) )
         (and (not (jyg)) (not (hkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lkg)) (not (g5c)) )
         (and (not (lyg)) (not (kkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qkg)) (not (g5c)) )
         (and (not (qyg)) (not (mkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tkg)) (not (g5c)) )
         (and (not (tyg)) (not (rkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vkg)) (not (g5c)) )
         (and (not (vyg)) (not (ukg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ykg)) (not (g5c)) )
         (and (not (yyg)) (not (xkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (blg)) (not (g5c)) )
         (and (not (bzg)) (not (zkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (glg)) (not (g5c)) )
         (and (not (gzg)) (not (clg)) ))

    )
  )
  (:action MOVE_P7-4_P6-4
    :precondition  (and 
      (q8b)
      (b4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q8b) (b4c) )
         (and (not (b4c)) (not (c3c)) (g3c) (z3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m6c) (z1d) )
         (and (not (z1d)) (not (b1d)) (not (b4c)) (not (c3c)) (g3c) (z3c) (c1d) (y1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (y1d)) (not (l6c)) )
         (and (not (z1d)) (not (b1d)) (not (b4c)) (not (c3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (uog) )
         (and (not (uog)) (not (g9f)) (c9f) (vog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (xog) )
         (and (not (xog)) (not (j9f)) (h9f) (yog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (zog) )
         (and (not (zog)) (not (l9f)) (k9f) (bpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (l8f) (cpg) )
         (and (not (cpg)) (not (q9f)) (m9f) (gpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (hpg) )
         (and (not (hpg)) (not (t9f)) (r9f) (jpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (kpg) )
         (and (not (kpg)) (not (v9f)) (u9f) (lpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (mpg) )
         (and (not (mpg)) (not (y9f)) (x9f) (qpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (rpg) )
         (and (not (rpg)) (not (b0f)) (z9f) (tpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (upg) )
         (and (not (upg)) (not (g0f)) (c0f) (vpg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (xpg) )
         (and (not (xpg)) (not (j0f)) (h0f) (ypg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (zpg) )
         (and (not (zpg)) (not (l0f)) (k0f) (bqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (cqg) )
         (and (not (cqg)) (not (q0f)) (m0f) (gqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (hqg) )
         (and (not (hqg)) (not (t0f)) (r0f) (jqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (kqg) )
         (and (not (kqg)) (not (v0f)) (u0f) (lqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (mqg) )
         (and (not (mqg)) (not (y0f)) (x0f) (qqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (rqg) )
         (and (not (rqg)) (not (bag)) (z0f) (tqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (uqg) )
         (and (not (uqg)) (not (gag)) (cag) (vqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (xqg) )
         (and (not (xqg)) (not (jag)) (hag) (yqg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (zqg) )
         (and (not (zqg)) (not (lag)) (kag) (bsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (csg) )
         (and (not (csg)) (not (qag)) (mag) (gsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (hsg) )
         (and (not (hsg)) (not (tag)) (rag) (jsg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vog)) (not (t8f)) )
         (and (not (uog)) (not (g9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yog)) (not (u8f)) )
         (and (not (xog)) (not (j9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bpg)) (not (v8f)) )
         (and (not (zog)) (not (l9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gpg)) (not (x8f)) )
         (and (not (cpg)) (not (q9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jpg)) (not (y8f)) )
         (and (not (hpg)) (not (t9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lpg)) (not (z8f)) )
         (and (not (kpg)) (not (v9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qpg)) (not (b9f)) )
         (and (not (mpg)) (not (y9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tpg)) (not (l6c)) )
         (and (not (rpg)) (not (b0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vpg)) (not (l6c)) )
         (and (not (upg)) (not (g0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ypg)) (not (l6c)) )
         (and (not (xpg)) (not (j0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqg)) (not (l6c)) )
         (and (not (zpg)) (not (l0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqg)) (not (l6c)) )
         (and (not (cqg)) (not (q0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqg)) (not (l6c)) )
         (and (not (hqg)) (not (t0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqg)) (not (l6c)) )
         (and (not (kqg)) (not (v0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqg)) (not (l6c)) )
         (and (not (mqg)) (not (y0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tqg)) (not (l6c)) )
         (and (not (rqg)) (not (bag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vqg)) (not (l6c)) )
         (and (not (uqg)) (not (gag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yqg)) (not (l6c)) )
         (and (not (xqg)) (not (jag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bsg)) (not (l6c)) )
         (and (not (zqg)) (not (lag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gsg)) (not (l6c)) )
         (and (not (csg)) (not (qag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jsg)) (not (l6c)) )
         (and (not (hsg)) (not (tag)) ))

    )
  )
  (:action MOVE_P7-4_P7-3
    :precondition  (and 
      (v7b)
      (b4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v7b) (b4c) )
         (and (not (b4c)) (not (x3c)) (y3c) (z3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u5c) (z1d) )
         (and (not (z1d)) (not (v1d)) (not (b4c)) (not (x3c)) (y3c) (z3c) (x1d) (y1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (y1d)) (not (t5c)) )
         (and (not (z1d)) (not (v1d)) (not (b4c)) (not (x3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (uog) )
         (and (not (jzg)) (not (uog)) (vog) (hzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (xog) )
         (and (not (lzg)) (not (xog)) (yog) (kzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (zog) )
         (and (not (qzg)) (not (zog)) (bpg) (mzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (cpg) )
         (and (not (tzg)) (not (cpg)) (gpg) (rzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (hpg) )
         (and (not (vzg)) (not (hpg)) (jpg) (uzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (kpg) )
         (and (not (yzg)) (not (kpg)) (lpg) (xzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (mpg) )
         (and (not (b1g)) (not (mpg)) (qpg) (zzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (rpg) )
         (and (not (g1g)) (not (rpg)) (tpg) (c1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (upg) )
         (and (not (j1g)) (not (upg)) (vpg) (h1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (xpg) )
         (and (not (l1g)) (not (xpg)) (ypg) (k1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (zpg) )
         (and (not (q1g)) (not (zpg)) (bqg) (m1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (cqg) )
         (and (not (t1g)) (not (cqg)) (gqg) (r1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (hqg) )
         (and (not (v1g)) (not (hqg)) (jqg) (u1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (kqg) )
         (and (not (y1g)) (not (kqg)) (lqg) (x1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (mqg) )
         (and (not (b2g)) (not (mqg)) (qqg) (z1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (rqg) )
         (and (not (g2g)) (not (rqg)) (tqg) (c2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (uqg) )
         (and (not (j2g)) (not (uqg)) (vqg) (h2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (xqg) )
         (and (not (l2g)) (not (xqg)) (yqg) (k2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (zqg) )
         (and (not (q2g)) (not (zqg)) (bsg) (m2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (csg) )
         (and (not (t2g)) (not (csg)) (gsg) (r2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (hsg) )
         (and (not (v2g)) (not (hsg)) (jsg) (u2g) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vog)) (not (t5c)) )
         (and (not (jzg)) (not (uog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yog)) (not (t5c)) )
         (and (not (lzg)) (not (xog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bpg)) (not (t5c)) )
         (and (not (qzg)) (not (zog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gpg)) (not (t5c)) )
         (and (not (tzg)) (not (cpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jpg)) (not (t5c)) )
         (and (not (vzg)) (not (hpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lpg)) (not (t5c)) )
         (and (not (yzg)) (not (kpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qpg)) (not (t5c)) )
         (and (not (b1g)) (not (mpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tpg)) (not (t5c)) )
         (and (not (g1g)) (not (rpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vpg)) (not (t5c)) )
         (and (not (j1g)) (not (upg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ypg)) (not (t5c)) )
         (and (not (l1g)) (not (xpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqg)) (not (t5c)) )
         (and (not (q1g)) (not (zpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqg)) (not (t5c)) )
         (and (not (t1g)) (not (cqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqg)) (not (t5c)) )
         (and (not (v1g)) (not (hqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqg)) (not (t5c)) )
         (and (not (y1g)) (not (kqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqg)) (not (t5c)) )
         (and (not (b2g)) (not (mqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tqg)) (not (t5c)) )
         (and (not (g2g)) (not (rqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vqg)) (not (t5c)) )
         (and (not (j2g)) (not (uqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yqg)) (not (t5c)) )
         (and (not (l2g)) (not (xqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bsg)) (not (t5c)) )
         (and (not (q2g)) (not (zqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gsg)) (not (t5c)) )
         (and (not (t2g)) (not (csg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jsg)) (not (t5c)) )
         (and (not (v2g)) (not (hsg)) ))

    )
  )
  (:action MOVE_P7-4_P7-5
    :precondition  (and 
      (q7b)
      (b4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q7b) (b4c) )
         (and (not (c4c)) (not (b4c)) (z3c) (g4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m5c) (z1d) )
         (and (not (b2d)) (not (z1d)) (not (c4c)) (not (b4c)) (z3c) (g4c) (y1d) (c2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (y1d)) (not (l5c)) )
         (and (not (b2d)) (not (z1d)) (not (c4c)) (not (b4c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (uog) )
         (and (not (lsg)) (not (uog)) (vog) (ksg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (xog) )
         (and (not (qsg)) (not (xog)) (yog) (msg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (zog) )
         (and (not (tsg)) (not (zog)) (bpg) (rsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (cpg) )
         (and (not (vsg)) (not (cpg)) (gpg) (usg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (hpg) )
         (and (not (ysg)) (not (hpg)) (jpg) (xsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (kpg) )
         (and (not (brg)) (not (kpg)) (lpg) (zsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (mpg) )
         (and (not (grg)) (not (mpg)) (qpg) (crg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (rpg) )
         (and (not (jrg)) (not (rpg)) (tpg) (hrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (upg) )
         (and (not (lrg)) (not (upg)) (vpg) (krg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (xpg) )
         (and (not (qrg)) (not (xpg)) (ypg) (mrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (zpg) )
         (and (not (trg)) (not (zpg)) (bqg) (rrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (cqg) )
         (and (not (vrg)) (not (cqg)) (gqg) (urg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (hqg) )
         (and (not (yrg)) (not (hqg)) (jqg) (xrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (kqg) )
         (and (not (btg)) (not (kqg)) (lqg) (zrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (mqg) )
         (and (not (gtg)) (not (mqg)) (qqg) (ctg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (rqg) )
         (and (not (jtg)) (not (rqg)) (tqg) (htg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (uqg) )
         (and (not (ltg)) (not (uqg)) (vqg) (ktg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (xqg) )
         (and (not (qtg)) (not (xqg)) (yqg) (mtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (zqg) )
         (and (not (ttg)) (not (zqg)) (bsg) (rtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (csg) )
         (and (not (vtg)) (not (csg)) (gsg) (utg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (hsg) )
         (and (not (ytg)) (not (hsg)) (jsg) (xtg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vog)) (not (l5c)) )
         (and (not (lsg)) (not (uog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yog)) (not (l5c)) )
         (and (not (qsg)) (not (xog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bpg)) (not (l5c)) )
         (and (not (tsg)) (not (zog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gpg)) (not (l5c)) )
         (and (not (vsg)) (not (cpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jpg)) (not (l5c)) )
         (and (not (ysg)) (not (hpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lpg)) (not (l5c)) )
         (and (not (brg)) (not (kpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qpg)) (not (l5c)) )
         (and (not (grg)) (not (mpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tpg)) (not (l5c)) )
         (and (not (jrg)) (not (rpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vpg)) (not (l5c)) )
         (and (not (lrg)) (not (upg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ypg)) (not (l5c)) )
         (and (not (qrg)) (not (xpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqg)) (not (l5c)) )
         (and (not (trg)) (not (zpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqg)) (not (l5c)) )
         (and (not (vrg)) (not (cqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqg)) (not (l5c)) )
         (and (not (yrg)) (not (hqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqg)) (not (l5c)) )
         (and (not (btg)) (not (kqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqg)) (not (l5c)) )
         (and (not (gtg)) (not (mqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tqg)) (not (l5c)) )
         (and (not (jtg)) (not (rqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vqg)) (not (l5c)) )
         (and (not (ltg)) (not (uqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yqg)) (not (l5c)) )
         (and (not (qtg)) (not (xqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bsg)) (not (l5c)) )
         (and (not (ttg)) (not (zqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gsg)) (not (l5c)) )
         (and (not (vtg)) (not (csg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jsg)) (not (l5c)) )
         (and (not (ytg)) (not (hsg)) ))

    )
  )
  (:action MOVE_P7-5_P6-5
    :precondition  (and 
      (l8b)
      (g4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l8b) (g4c) )
         (and (not (g4c)) (not (h3c)) (j3c) (c4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k6c) (c2d) )
         (and (not (c2d)) (not (g1d)) (not (g4c)) (not (h3c)) (j3c) (c4c) (h1d) (b2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (b2d)) (not (j6c)) )
         (and (not (c2d)) (not (g1d)) (not (g4c)) (not (h3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (ksg) )
         (and (not (ksg)) (not (tbg)) (rbg) (lsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (msg) )
         (and (not (msg)) (not (vbg)) (ubg) (qsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (xag) (rsg) )
         (and (not (rsg)) (not (ybg)) (xbg) (tsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (usg) )
         (and (not (usg)) (not (bcg)) (zbg) (vsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (xsg) )
         (and (not (xsg)) (not (gcg)) (ccg) (ysg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (zsg) )
         (and (not (zsg)) (not (jcg)) (hcg) (brg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (crg) )
         (and (not (crg)) (not (lcg)) (kcg) (grg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (hrg) )
         (and (not (hrg)) (not (qcg)) (mcg) (jrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (krg) )
         (and (not (krg)) (not (tcg)) (rcg) (lrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (mrg) )
         (and (not (mrg)) (not (vcg)) (ucg) (qrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (rrg) )
         (and (not (rrg)) (not (ycg)) (xcg) (trg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (urg) )
         (and (not (urg)) (not (bdg)) (zcg) (vrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (xrg) )
         (and (not (xrg)) (not (gdg)) (cdg) (yrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (zrg) )
         (and (not (zrg)) (not (jdg)) (hdg) (btg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (ctg) )
         (and (not (ctg)) (not (ldg)) (kdg) (gtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (htg) )
         (and (not (htg)) (not (qdg)) (mdg) (jtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (ktg) )
         (and (not (ktg)) (not (tdg)) (rdg) (ltg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (mtg) )
         (and (not (mtg)) (not (vdg)) (udg) (qtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (rtg) )
         (and (not (rtg)) (not (ydg)) (xdg) (ttg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (utg) )
         (and (not (utg)) (not (beg)) (zdg) (vtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k6c) (xtg) )
         (and (not (xtg)) (not (geg)) (ceg) (ytg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lsg)) (not (gbg)) )
         (and (not (ksg)) (not (tbg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qsg)) (not (hbg)) )
         (and (not (msg)) (not (vbg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tsg)) (not (jbg)) )
         (and (not (rsg)) (not (ybg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vsg)) (not (kbg)) )
         (and (not (usg)) (not (bcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ysg)) (not (lbg)) )
         (and (not (xsg)) (not (gcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (brg)) (not (mbg)) )
         (and (not (zsg)) (not (jcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (grg)) (not (qbg)) )
         (and (not (crg)) (not (lcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jrg)) (not (j6c)) )
         (and (not (hrg)) (not (qcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lrg)) (not (j6c)) )
         (and (not (krg)) (not (tcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qrg)) (not (j6c)) )
         (and (not (mrg)) (not (vcg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (trg)) (not (j6c)) )
         (and (not (rrg)) (not (ycg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vrg)) (not (j6c)) )
         (and (not (urg)) (not (bdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yrg)) (not (j6c)) )
         (and (not (xrg)) (not (gdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (btg)) (not (j6c)) )
         (and (not (zrg)) (not (jdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gtg)) (not (j6c)) )
         (and (not (ctg)) (not (ldg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jtg)) (not (j6c)) )
         (and (not (htg)) (not (qdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ltg)) (not (j6c)) )
         (and (not (ktg)) (not (tdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qtg)) (not (j6c)) )
         (and (not (mtg)) (not (vdg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ttg)) (not (j6c)) )
         (and (not (rtg)) (not (ydg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vtg)) (not (j6c)) )
         (and (not (utg)) (not (beg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ytg)) (not (j6c)) )
         (and (not (xtg)) (not (geg)) ))

    )
  )
  (:action MOVE_P7-5_P7-4
    :precondition  (and 
      (t7b)
      (g4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t7b) (g4c) )
         (and (not (g4c)) (not (z3c)) (b4c) (c4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r5c) (c2d) )
         (and (not (c2d)) (not (y1d)) (not (g4c)) (not (z3c)) (b4c) (c4c) (z1d) (b2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (b2d)) (not (q5c)) )
         (and (not (c2d)) (not (y1d)) (not (g4c)) (not (z3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (ksg) )
         (and (not (ksg)) (not (vog)) (uog) (lsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (msg) )
         (and (not (msg)) (not (yog)) (xog) (qsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (rsg) )
         (and (not (rsg)) (not (bpg)) (zog) (tsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (usg) )
         (and (not (usg)) (not (gpg)) (cpg) (vsg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (xsg) )
         (and (not (xsg)) (not (jpg)) (hpg) (ysg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (zsg) )
         (and (not (zsg)) (not (lpg)) (kpg) (brg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (crg) )
         (and (not (crg)) (not (qpg)) (mpg) (grg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (hrg) )
         (and (not (hrg)) (not (tpg)) (rpg) (jrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (krg) )
         (and (not (krg)) (not (vpg)) (upg) (lrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (mrg) )
         (and (not (mrg)) (not (ypg)) (xpg) (qrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (rrg) )
         (and (not (rrg)) (not (bqg)) (zpg) (trg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (urg) )
         (and (not (urg)) (not (gqg)) (cqg) (vrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (xrg) )
         (and (not (xrg)) (not (jqg)) (hqg) (yrg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (zrg) )
         (and (not (zrg)) (not (lqg)) (kqg) (btg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (ctg) )
         (and (not (ctg)) (not (qqg)) (mqg) (gtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (htg) )
         (and (not (htg)) (not (tqg)) (rqg) (jtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (ktg) )
         (and (not (ktg)) (not (vqg)) (uqg) (ltg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (mtg) )
         (and (not (mtg)) (not (yqg)) (xqg) (qtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (rtg) )
         (and (not (rtg)) (not (bsg)) (zqg) (ttg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (utg) )
         (and (not (utg)) (not (gsg)) (csg) (vtg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (xtg) )
         (and (not (xtg)) (not (jsg)) (hsg) (ytg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lsg)) (not (q5c)) )
         (and (not (ksg)) (not (vog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qsg)) (not (q5c)) )
         (and (not (msg)) (not (yog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tsg)) (not (q5c)) )
         (and (not (rsg)) (not (bpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vsg)) (not (q5c)) )
         (and (not (usg)) (not (gpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ysg)) (not (q5c)) )
         (and (not (xsg)) (not (jpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (brg)) (not (q5c)) )
         (and (not (zsg)) (not (lpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (grg)) (not (q5c)) )
         (and (not (crg)) (not (qpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jrg)) (not (q5c)) )
         (and (not (hrg)) (not (tpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lrg)) (not (q5c)) )
         (and (not (krg)) (not (vpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qrg)) (not (q5c)) )
         (and (not (mrg)) (not (ypg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (trg)) (not (q5c)) )
         (and (not (rrg)) (not (bqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vrg)) (not (q5c)) )
         (and (not (urg)) (not (gqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yrg)) (not (q5c)) )
         (and (not (xrg)) (not (jqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (btg)) (not (q5c)) )
         (and (not (zrg)) (not (lqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gtg)) (not (q5c)) )
         (and (not (ctg)) (not (qqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jtg)) (not (q5c)) )
         (and (not (htg)) (not (tqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ltg)) (not (q5c)) )
         (and (not (ktg)) (not (vqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qtg)) (not (q5c)) )
         (and (not (mtg)) (not (yqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ttg)) (not (q5c)) )
         (and (not (rtg)) (not (bsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vtg)) (not (q5c)) )
         (and (not (utg)) (not (gsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ytg)) (not (q5c)) )
         (and (not (xtg)) (not (jsg)) ))

    )
  )
  (:action MOVE_P7-5_P7-6
    :precondition  (and 
      (l7b)
      (g4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l7b) (g4c) )
         (and (not (h4c)) (not (g4c)) (c4c) (j4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k5c) (c2d) )
         (and (not (g2d)) (not (c2d)) (not (h4c)) (not (g4c)) (c4c) (j4c) (b2d) (h2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (b2d)) (not (j5c)) )
         (and (not (g2d)) (not (c2d)) (not (h4c)) (not (g4c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (ksg) )
         (and (not (bug)) (not (ksg)) (lsg) (ztg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (msg) )
         (and (not (gug)) (not (msg)) (qsg) (cug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (rsg) )
         (and (not (jug)) (not (rsg)) (tsg) (hug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (usg) )
         (and (not (lug)) (not (usg)) (vsg) (kug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (xsg) )
         (and (not (qug)) (not (xsg)) (ysg) (mug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (zsg) )
         (and (not (tug)) (not (zsg)) (brg) (rug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (crg) )
         (and (not (vug)) (not (crg)) (grg) (uug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (hrg) )
         (and (not (yug)) (not (hrg)) (jrg) (xug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (krg) )
         (and (not (bvg)) (not (krg)) (lrg) (zug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (mrg) )
         (and (not (gvg)) (not (mrg)) (qrg) (cvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (rrg) )
         (and (not (jvg)) (not (rrg)) (trg) (hvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (urg) )
         (and (not (lvg)) (not (urg)) (vrg) (kvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (xrg) )
         (and (not (qvg)) (not (xrg)) (yrg) (mvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (zrg) )
         (and (not (tvg)) (not (zrg)) (btg) (rvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (ctg) )
         (and (not (vvg)) (not (ctg)) (gtg) (uvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (htg) )
         (and (not (yvg)) (not (htg)) (jtg) (xvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (ktg) )
         (and (not (bwg)) (not (ktg)) (ltg) (zvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (mtg) )
         (and (not (gwg)) (not (mtg)) (qtg) (cwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (rtg) )
         (and (not (jwg)) (not (rtg)) (ttg) (hwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (utg) )
         (and (not (lwg)) (not (utg)) (vtg) (kwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (xtg) )
         (and (not (qwg)) (not (xtg)) (ytg) (mwg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lsg)) (not (j5c)) )
         (and (not (bug)) (not (ksg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qsg)) (not (j5c)) )
         (and (not (gug)) (not (msg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tsg)) (not (j5c)) )
         (and (not (jug)) (not (rsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vsg)) (not (j5c)) )
         (and (not (lug)) (not (usg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ysg)) (not (j5c)) )
         (and (not (qug)) (not (xsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (brg)) (not (j5c)) )
         (and (not (tug)) (not (zsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (grg)) (not (j5c)) )
         (and (not (vug)) (not (crg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jrg)) (not (j5c)) )
         (and (not (yug)) (not (hrg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lrg)) (not (j5c)) )
         (and (not (bvg)) (not (krg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qrg)) (not (j5c)) )
         (and (not (gvg)) (not (mrg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (trg)) (not (j5c)) )
         (and (not (jvg)) (not (rrg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vrg)) (not (j5c)) )
         (and (not (lvg)) (not (urg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yrg)) (not (j5c)) )
         (and (not (qvg)) (not (xrg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (btg)) (not (j5c)) )
         (and (not (tvg)) (not (zrg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gtg)) (not (j5c)) )
         (and (not (vvg)) (not (ctg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jtg)) (not (j5c)) )
         (and (not (yvg)) (not (htg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ltg)) (not (j5c)) )
         (and (not (bwg)) (not (ktg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qtg)) (not (j5c)) )
         (and (not (gwg)) (not (mtg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ttg)) (not (j5c)) )
         (and (not (jwg)) (not (rtg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vtg)) (not (j5c)) )
         (and (not (lwg)) (not (utg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ytg)) (not (j5c)) )
         (and (not (qwg)) (not (xtg)) ))

    )
  )
  (:action MOVE_P7-6_P6-6
    :precondition  (and 
      (j8b)
      (j4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j8b) (j4c) )
         (and (not (j4c)) (not (k3c)) (l3c) (h4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h6c) (h2d) )
         (and (not (h2d)) (not (j1d)) (not (j4c)) (not (k3c)) (l3c) (h4c) (k1d) (g2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (g2d)) (not (g6c)) )
         (and (not (h2d)) (not (j1d)) (not (j4c)) (not (k3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (ztg) )
         (and (not (ztg)) (not (gfg)) (cfg) (bug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (jeg) (cug) )
         (and (not (cug)) (not (jfg)) (hfg) (gug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (hug) )
         (and (not (hug)) (not (lfg)) (kfg) (jug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (kug) )
         (and (not (kug)) (not (qfg)) (mfg) (lug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (mug) )
         (and (not (mug)) (not (tfg)) (rfg) (qug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (rug) )
         (and (not (rug)) (not (vfg)) (ufg) (tug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (uug) )
         (and (not (uug)) (not (yfg)) (xfg) (vug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (xug) )
         (and (not (xug)) (not (bgg)) (zfg) (yug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (zug) )
         (and (not (zug)) (not (ggg)) (cgg) (bvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (cvg) )
         (and (not (cvg)) (not (jgg)) (hgg) (gvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (hvg) )
         (and (not (hvg)) (not (lgg)) (kgg) (jvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (kvg) )
         (and (not (kvg)) (not (qgg)) (mgg) (lvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (mvg) )
         (and (not (mvg)) (not (tgg)) (rgg) (qvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (rvg) )
         (and (not (rvg)) (not (vgg)) (ugg) (tvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (uvg) )
         (and (not (uvg)) (not (ygg)) (xgg) (vvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (xvg) )
         (and (not (xvg)) (not (bhg)) (zgg) (yvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (zvg) )
         (and (not (zvg)) (not (ghg)) (chg) (bwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (cwg) )
         (and (not (cwg)) (not (jhg)) (hhg) (gwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (hwg) )
         (and (not (hwg)) (not (lhg)) (khg) (jwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (kwg) )
         (and (not (kwg)) (not (qhg)) (mhg) (lwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h6c) (mwg) )
         (and (not (mwg)) (not (thg)) (rhg) (qwg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bug)) (not (teg)) )
         (and (not (ztg)) (not (gfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gug)) (not (ueg)) )
         (and (not (cug)) (not (jfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jug)) (not (veg)) )
         (and (not (hug)) (not (lfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lug)) (not (xeg)) )
         (and (not (kug)) (not (qfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qug)) (not (yeg)) )
         (and (not (mug)) (not (tfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tug)) (not (zeg)) )
         (and (not (rug)) (not (vfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vug)) (not (bfg)) )
         (and (not (uug)) (not (yfg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yug)) (not (g6c)) )
         (and (not (xug)) (not (bgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bvg)) (not (g6c)) )
         (and (not (zug)) (not (ggg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gvg)) (not (g6c)) )
         (and (not (cvg)) (not (jgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jvg)) (not (g6c)) )
         (and (not (hvg)) (not (lgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lvg)) (not (g6c)) )
         (and (not (kvg)) (not (qgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qvg)) (not (g6c)) )
         (and (not (mvg)) (not (tgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tvg)) (not (g6c)) )
         (and (not (rvg)) (not (vgg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vvg)) (not (g6c)) )
         (and (not (uvg)) (not (ygg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yvg)) (not (g6c)) )
         (and (not (xvg)) (not (bhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bwg)) (not (g6c)) )
         (and (not (zvg)) (not (ghg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gwg)) (not (g6c)) )
         (and (not (cwg)) (not (jhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jwg)) (not (g6c)) )
         (and (not (hwg)) (not (lhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwg)) (not (g6c)) )
         (and (not (kwg)) (not (qhg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwg)) (not (g6c)) )
         (and (not (mwg)) (not (thg)) ))

    )
  )
  (:action MOVE_P7-6_P7-5
    :precondition  (and 
      (q7b)
      (j4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q7b) (j4c) )
         (and (not (j4c)) (not (c4c)) (g4c) (h4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m5c) (h2d) )
         (and (not (h2d)) (not (b2d)) (not (j4c)) (not (c4c)) (g4c) (h4c) (c2d) (g2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (g2d)) (not (l5c)) )
         (and (not (h2d)) (not (b2d)) (not (j4c)) (not (c4c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (ztg) )
         (and (not (ztg)) (not (lsg)) (ksg) (bug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (cug) )
         (and (not (cug)) (not (qsg)) (msg) (gug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (hug) )
         (and (not (hug)) (not (tsg)) (rsg) (jug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (kug) )
         (and (not (kug)) (not (vsg)) (usg) (lug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (mug) )
         (and (not (mug)) (not (ysg)) (xsg) (qug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (rug) )
         (and (not (rug)) (not (brg)) (zsg) (tug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (uug) )
         (and (not (uug)) (not (grg)) (crg) (vug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (xug) )
         (and (not (xug)) (not (jrg)) (hrg) (yug) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (zug) )
         (and (not (zug)) (not (lrg)) (krg) (bvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (cvg) )
         (and (not (cvg)) (not (qrg)) (mrg) (gvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (hvg) )
         (and (not (hvg)) (not (trg)) (rrg) (jvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (kvg) )
         (and (not (kvg)) (not (vrg)) (urg) (lvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (mvg) )
         (and (not (mvg)) (not (yrg)) (xrg) (qvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (rvg) )
         (and (not (rvg)) (not (btg)) (zrg) (tvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (uvg) )
         (and (not (uvg)) (not (gtg)) (ctg) (vvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (xvg) )
         (and (not (xvg)) (not (jtg)) (htg) (yvg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (zvg) )
         (and (not (zvg)) (not (ltg)) (ktg) (bwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (cwg) )
         (and (not (cwg)) (not (qtg)) (mtg) (gwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (hwg) )
         (and (not (hwg)) (not (ttg)) (rtg) (jwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (kwg) )
         (and (not (kwg)) (not (vtg)) (utg) (lwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m5c) (mwg) )
         (and (not (mwg)) (not (ytg)) (xtg) (qwg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bug)) (not (l5c)) )
         (and (not (ztg)) (not (lsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gug)) (not (l5c)) )
         (and (not (cug)) (not (qsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jug)) (not (l5c)) )
         (and (not (hug)) (not (tsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lug)) (not (l5c)) )
         (and (not (kug)) (not (vsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qug)) (not (l5c)) )
         (and (not (mug)) (not (ysg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tug)) (not (l5c)) )
         (and (not (rug)) (not (brg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vug)) (not (l5c)) )
         (and (not (uug)) (not (grg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yug)) (not (l5c)) )
         (and (not (xug)) (not (jrg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bvg)) (not (l5c)) )
         (and (not (zug)) (not (lrg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gvg)) (not (l5c)) )
         (and (not (cvg)) (not (qrg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jvg)) (not (l5c)) )
         (and (not (hvg)) (not (trg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lvg)) (not (l5c)) )
         (and (not (kvg)) (not (vrg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qvg)) (not (l5c)) )
         (and (not (mvg)) (not (yrg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tvg)) (not (l5c)) )
         (and (not (rvg)) (not (btg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vvg)) (not (l5c)) )
         (and (not (uvg)) (not (gtg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yvg)) (not (l5c)) )
         (and (not (xvg)) (not (jtg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bwg)) (not (l5c)) )
         (and (not (zvg)) (not (ltg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gwg)) (not (l5c)) )
         (and (not (cwg)) (not (qtg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jwg)) (not (l5c)) )
         (and (not (hwg)) (not (ttg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwg)) (not (l5c)) )
         (and (not (kwg)) (not (vtg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwg)) (not (l5c)) )
         (and (not (mwg)) (not (ytg)) ))

    )
  )
  (:action MOVE_P7-6_P7-7
    :precondition  (and 
      (j7b)
      (j4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j7b) (j4c) )
         (and (not (k4c)) (not (j4c)) (h4c) (l4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h5c) (h2d) )
         (and (not (j2d)) (not (h2d)) (not (k4c)) (not (j4c)) (h4c) (l4c) (g2d) (k2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (g2d)) (not (g5c)) )
         (and (not (j2d)) (not (h2d)) (not (k4c)) (not (j4c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (ztg) )
         (and (not (twg)) (not (ztg)) (bug) (rwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (cug) )
         (and (not (vwg)) (not (cug)) (gug) (uwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (hug) )
         (and (not (ywg)) (not (hug)) (jug) (xwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (kug) )
         (and (not (bxg)) (not (kug)) (lug) (zwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (mug) )
         (and (not (gxg)) (not (mug)) (qug) (cxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (rug) )
         (and (not (jxg)) (not (rug)) (tug) (hxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (uug) )
         (and (not (lxg)) (not (uug)) (vug) (kxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (xug) )
         (and (not (qxg)) (not (xug)) (yug) (mxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (zug) )
         (and (not (txg)) (not (zug)) (bvg) (rxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (cvg) )
         (and (not (vxg)) (not (cvg)) (gvg) (uxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (hvg) )
         (and (not (yxg)) (not (hvg)) (jvg) (xxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (kvg) )
         (and (not (byg)) (not (kvg)) (lvg) (zxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (mvg) )
         (and (not (gyg)) (not (mvg)) (qvg) (cyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (rvg) )
         (and (not (jyg)) (not (rvg)) (tvg) (hyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (uvg) )
         (and (not (lyg)) (not (uvg)) (vvg) (kyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (xvg) )
         (and (not (qyg)) (not (xvg)) (yvg) (myg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (zvg) )
         (and (not (tyg)) (not (zvg)) (bwg) (ryg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (cwg) )
         (and (not (vyg)) (not (cwg)) (gwg) (uyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (hwg) )
         (and (not (yyg)) (not (hwg)) (jwg) (xyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (kwg) )
         (and (not (bzg)) (not (kwg)) (lwg) (zyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5c) (mwg) )
         (and (not (gzg)) (not (mwg)) (qwg) (czg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bug)) (not (g5c)) )
         (and (not (twg)) (not (ztg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gug)) (not (g5c)) )
         (and (not (vwg)) (not (cug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jug)) (not (g5c)) )
         (and (not (ywg)) (not (hug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lug)) (not (g5c)) )
         (and (not (bxg)) (not (kug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qug)) (not (g5c)) )
         (and (not (gxg)) (not (mug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tug)) (not (g5c)) )
         (and (not (jxg)) (not (rug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vug)) (not (g5c)) )
         (and (not (lxg)) (not (uug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yug)) (not (g5c)) )
         (and (not (qxg)) (not (xug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bvg)) (not (g5c)) )
         (and (not (txg)) (not (zug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gvg)) (not (g5c)) )
         (and (not (vxg)) (not (cvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jvg)) (not (g5c)) )
         (and (not (yxg)) (not (hvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lvg)) (not (g5c)) )
         (and (not (byg)) (not (kvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qvg)) (not (g5c)) )
         (and (not (gyg)) (not (mvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tvg)) (not (g5c)) )
         (and (not (jyg)) (not (rvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vvg)) (not (g5c)) )
         (and (not (lyg)) (not (uvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yvg)) (not (g5c)) )
         (and (not (qyg)) (not (xvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bwg)) (not (g5c)) )
         (and (not (tyg)) (not (zvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gwg)) (not (g5c)) )
         (and (not (vyg)) (not (cwg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jwg)) (not (g5c)) )
         (and (not (yyg)) (not (hwg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwg)) (not (g5c)) )
         (and (not (bzg)) (not (kwg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwg)) (not (g5c)) )
         (and (not (gzg)) (not (mwg)) ))

    )
  )
  (:action MOVE_P7-7_P6-7
    :precondition  (and 
      (g8b)
      (l4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (g8b) (l4c) )
         (and (not (l4c)) (not (m3c)) (q3c) (k4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c6c) (k2d) )
         (and (not (k2d)) (not (l1d)) (not (l4c)) (not (m3c)) (q3c) (k4c) (m1d) (j2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (j2d)) (not (b6c)) )
         (and (not (k2d)) (not (l1d)) (not (l4c)) (not (m3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (uhg) (rwg) )
         (and (not (rwg)) (not (tig)) (rig) (twg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (uwg) )
         (and (not (uwg)) (not (vig)) (uig) (vwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (xwg) )
         (and (not (xwg)) (not (yig)) (xig) (ywg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (zwg) )
         (and (not (zwg)) (not (bjg)) (zig) (bxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (cxg) )
         (and (not (cxg)) (not (gjg)) (cjg) (gxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (hxg) )
         (and (not (hxg)) (not (jjg)) (hjg) (jxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (kxg) )
         (and (not (kxg)) (not (ljg)) (kjg) (lxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (mxg) )
         (and (not (mxg)) (not (qjg)) (mjg) (qxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (rxg) )
         (and (not (rxg)) (not (tjg)) (rjg) (txg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (uxg) )
         (and (not (uxg)) (not (vjg)) (ujg) (vxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (xxg) )
         (and (not (xxg)) (not (yjg)) (xjg) (yxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (zxg) )
         (and (not (zxg)) (not (bkg)) (zjg) (byg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (cyg) )
         (and (not (cyg)) (not (gkg)) (ckg) (gyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (hyg) )
         (and (not (hyg)) (not (jkg)) (hkg) (jyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (kyg) )
         (and (not (kyg)) (not (lkg)) (kkg) (lyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (myg) )
         (and (not (myg)) (not (qkg)) (mkg) (qyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (ryg) )
         (and (not (ryg)) (not (tkg)) (rkg) (tyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (uyg) )
         (and (not (uyg)) (not (vkg)) (ukg) (vyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (xyg) )
         (and (not (xyg)) (not (ykg)) (xkg) (yyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (zyg) )
         (and (not (zyg)) (not (blg)) (zkg) (bzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6c) (czg) )
         (and (not (czg)) (not (glg)) (clg) (gzg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twg)) (not (gig)) )
         (and (not (rwg)) (not (tig)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vwg)) (not (hig)) )
         (and (not (uwg)) (not (vig)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywg)) (not (jig)) )
         (and (not (xwg)) (not (yig)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxg)) (not (kig)) )
         (and (not (zwg)) (not (bjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxg)) (not (lig)) )
         (and (not (cxg)) (not (gjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxg)) (not (mig)) )
         (and (not (hxg)) (not (jjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxg)) (not (qig)) )
         (and (not (kxg)) (not (ljg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxg)) (not (b6c)) )
         (and (not (mxg)) (not (qjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txg)) (not (b6c)) )
         (and (not (rxg)) (not (tjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxg)) (not (b6c)) )
         (and (not (uxg)) (not (vjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxg)) (not (b6c)) )
         (and (not (xxg)) (not (yjg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (byg)) (not (b6c)) )
         (and (not (zxg)) (not (bkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gyg)) (not (b6c)) )
         (and (not (cyg)) (not (gkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jyg)) (not (b6c)) )
         (and (not (hyg)) (not (jkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lyg)) (not (b6c)) )
         (and (not (kyg)) (not (lkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qyg)) (not (b6c)) )
         (and (not (myg)) (not (qkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tyg)) (not (b6c)) )
         (and (not (ryg)) (not (tkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vyg)) (not (b6c)) )
         (and (not (uyg)) (not (vkg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yyg)) (not (b6c)) )
         (and (not (xyg)) (not (ykg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bzg)) (not (b6c)) )
         (and (not (zyg)) (not (blg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gzg)) (not (b6c)) )
         (and (not (czg)) (not (glg)) ))

    )
  )
  (:action MOVE_P7-7_P7-6
    :precondition  (and 
      (l7b)
      (l4c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l7b) (l4c) )
         (and (not (l4c)) (not (h4c)) (j4c) (k4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k5c) (k2d) )
         (and (not (k2d)) (not (g2d)) (not (l4c)) (not (h4c)) (j4c) (k4c) (h2d) (j2d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (j2d)) (not (j5c)) )
         (and (not (k2d)) (not (g2d)) (not (l4c)) (not (h4c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (rwg) )
         (and (not (rwg)) (not (bug)) (ztg) (twg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (uwg) )
         (and (not (uwg)) (not (gug)) (cug) (vwg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (xwg) )
         (and (not (xwg)) (not (jug)) (hug) (ywg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (zwg) )
         (and (not (zwg)) (not (lug)) (kug) (bxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (cxg) )
         (and (not (cxg)) (not (qug)) (mug) (gxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (hxg) )
         (and (not (hxg)) (not (tug)) (rug) (jxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (kxg) )
         (and (not (kxg)) (not (vug)) (uug) (lxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (mxg) )
         (and (not (mxg)) (not (yug)) (xug) (qxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (rxg) )
         (and (not (rxg)) (not (bvg)) (zug) (txg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (uxg) )
         (and (not (uxg)) (not (gvg)) (cvg) (vxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (xxg) )
         (and (not (xxg)) (not (jvg)) (hvg) (yxg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (zxg) )
         (and (not (zxg)) (not (lvg)) (kvg) (byg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (cyg) )
         (and (not (cyg)) (not (qvg)) (mvg) (gyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (hyg) )
         (and (not (hyg)) (not (tvg)) (rvg) (jyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (kyg) )
         (and (not (kyg)) (not (vvg)) (uvg) (lyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (myg) )
         (and (not (myg)) (not (yvg)) (xvg) (qyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (ryg) )
         (and (not (ryg)) (not (bwg)) (zvg) (tyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (uyg) )
         (and (not (uyg)) (not (gwg)) (cwg) (vyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (xyg) )
         (and (not (xyg)) (not (jwg)) (hwg) (yyg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (zyg) )
         (and (not (zyg)) (not (lwg)) (kwg) (bzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k5c) (czg) )
         (and (not (czg)) (not (qwg)) (mwg) (gzg) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twg)) (not (j5c)) )
         (and (not (rwg)) (not (bug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vwg)) (not (j5c)) )
         (and (not (uwg)) (not (gug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywg)) (not (j5c)) )
         (and (not (xwg)) (not (jug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxg)) (not (j5c)) )
         (and (not (zwg)) (not (lug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxg)) (not (j5c)) )
         (and (not (cxg)) (not (qug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxg)) (not (j5c)) )
         (and (not (hxg)) (not (tug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxg)) (not (j5c)) )
         (and (not (kxg)) (not (vug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxg)) (not (j5c)) )
         (and (not (mxg)) (not (yug)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txg)) (not (j5c)) )
         (and (not (rxg)) (not (bvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxg)) (not (j5c)) )
         (and (not (uxg)) (not (gvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxg)) (not (j5c)) )
         (and (not (xxg)) (not (jvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (byg)) (not (j5c)) )
         (and (not (zxg)) (not (lvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gyg)) (not (j5c)) )
         (and (not (cyg)) (not (qvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jyg)) (not (j5c)) )
         (and (not (hyg)) (not (tvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lyg)) (not (j5c)) )
         (and (not (kyg)) (not (vvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qyg)) (not (j5c)) )
         (and (not (myg)) (not (yvg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tyg)) (not (j5c)) )
         (and (not (ryg)) (not (bwg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vyg)) (not (j5c)) )
         (and (not (uyg)) (not (gwg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yyg)) (not (j5c)) )
         (and (not (xyg)) (not (jwg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bzg)) (not (j5c)) )
         (and (not (zyg)) (not (lwg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gzg)) (not (j5c)) )
         (and (not (czg)) (not (qwg)) ))

    )
  )
  (:action MOVE_P1-3_P1-2
    :precondition  (and 
      (gcc)
      (vxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gcc) (vxc) )
         (and (not (vxc)) (not (rxc)) (txc) (uxc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (cad) (uvd) )
         (and (not (uvd)) (not (qvd)) (not (vxc)) (not (rxc)) (txc) (uxc) (rvd) (tvd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (tvd)) (not (bad)) )
         (and (not (uvd)) (not (qvd)) (not (vxc)) (not (rxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (m8d) )
         (and (not (y2g)) (not (m8d)) (q8d) (x2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (r8d) )
         (and (not (b3g)) (not (r8d)) (t8d) (z2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (u8d) )
         (and (not (g3g)) (not (u8d)) (v8d) (c3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (x8d) )
         (and (not (j3g)) (not (x8d)) (y8d) (h3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (z8d) )
         (and (not (l3g)) (not (z8d)) (b9d) (k3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (c9d) )
         (and (not (q3g)) (not (c9d)) (g9d) (m3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (h9d) )
         (and (not (t3g)) (not (h9d)) (j9d) (r3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (k9d) )
         (and (not (v3g)) (not (k9d)) (l9d) (u3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (m9d) )
         (and (not (y3g)) (not (m9d)) (q9d) (x3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (r9d) )
         (and (not (b4g)) (not (r9d)) (t9d) (z3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (u9d) )
         (and (not (g4g)) (not (u9d)) (v9d) (c4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (x9d) )
         (and (not (j4g)) (not (x9d)) (y9d) (h4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (z9d) )
         (and (not (l4g)) (not (z9d)) (b0d) (k4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (c0d) )
         (and (not (q4g)) (not (c0d)) (g0d) (m4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (h0d) )
         (and (not (t4g)) (not (h0d)) (j0d) (r4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (k0d) )
         (and (not (v4g)) (not (k0d)) (l0d) (u4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (m0d) )
         (and (not (y4g)) (not (m0d)) (q0d) (x4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (r0d) )
         (and (not (b5g)) (not (r0d)) (t0d) (z4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (u0d) )
         (and (not (g5g)) (not (u0d)) (v0d) (c5g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (x0d) )
         (and (not (j5g)) (not (x0d)) (y0d) (h5g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (z0d) )
         (and (not (l5g)) (not (z0d)) (bae) (k5g) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8d)) (not (bad)) )
         (and (not (y2g)) (not (m8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8d)) (not (bad)) )
         (and (not (b3g)) (not (r8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8d)) (not (bad)) )
         (and (not (g3g)) (not (u8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y8d)) (not (bad)) )
         (and (not (j3g)) (not (x8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9d)) (not (bad)) )
         (and (not (l3g)) (not (z8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9d)) (not (bad)) )
         (and (not (q3g)) (not (c9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9d)) (not (bad)) )
         (and (not (t3g)) (not (h9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9d)) (not (bad)) )
         (and (not (v3g)) (not (k9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9d)) (not (bad)) )
         (and (not (y3g)) (not (m9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9d)) (not (bad)) )
         (and (not (b4g)) (not (r9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9d)) (not (bad)) )
         (and (not (g4g)) (not (u9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y9d)) (not (bad)) )
         (and (not (j4g)) (not (x9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0d)) (not (bad)) )
         (and (not (l4g)) (not (z9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0d)) (not (bad)) )
         (and (not (q4g)) (not (c0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0d)) (not (bad)) )
         (and (not (t4g)) (not (h0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0d)) (not (bad)) )
         (and (not (v4g)) (not (k0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0d)) (not (bad)) )
         (and (not (y4g)) (not (m0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0d)) (not (bad)) )
         (and (not (b5g)) (not (r0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0d)) (not (bad)) )
         (and (not (g5g)) (not (u0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0d)) (not (bad)) )
         (and (not (j5g)) (not (x0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bae)) (not (bad)) )
         (and (not (l5g)) (not (z0d)) ))

    )
  )
  (:action MOVE_P1-3_P1-4
    :precondition  (and 
      (ybc)
      (vxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (ybc) (vxc) )
         (and (not (vxc)) (not (kxc)) (lxc) (uxc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x0c) (uvd) )
         (and (not (uvd)) (not (jvd)) (not (vxc)) (not (kxc)) (lxc) (uxc) (kvd) (tvd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (tvd)) (not (v0c)) )
         (and (not (uvd)) (not (jvd)) (not (vxc)) (not (kxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (m8d) )
         (and (not (m8d)) (not (y5d)) (x5d) (q8d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (r8d) )
         (and (not (r8d)) (not (b6d)) (z5d) (t8d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (u8d) )
         (and (not (u8d)) (not (g6d)) (c6d) (v8d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (x8d) )
         (and (not (x8d)) (not (j6d)) (h6d) (y8d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (z8d) )
         (and (not (z8d)) (not (l6d)) (k6d) (b9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (c9d) )
         (and (not (c9d)) (not (q6d)) (m6d) (g9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (h9d) )
         (and (not (h9d)) (not (t6d)) (r6d) (j9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (k9d) )
         (and (not (k9d)) (not (v6d)) (u6d) (l9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (m9d) )
         (and (not (m9d)) (not (y6d)) (x6d) (q9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (r9d) )
         (and (not (r9d)) (not (b7d)) (z6d) (t9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (u9d) )
         (and (not (u9d)) (not (g7d)) (c7d) (v9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (x9d) )
         (and (not (x9d)) (not (j7d)) (h7d) (y9d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (z9d) )
         (and (not (z9d)) (not (l7d)) (k7d) (b0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (c0d) )
         (and (not (c0d)) (not (q7d)) (m7d) (g0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (h0d) )
         (and (not (h0d)) (not (t7d)) (r7d) (j0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (k0d) )
         (and (not (k0d)) (not (v7d)) (u7d) (l0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (m0d) )
         (and (not (m0d)) (not (y7d)) (x7d) (q0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (r0d) )
         (and (not (r0d)) (not (b8d)) (z7d) (t0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (u0d) )
         (and (not (u0d)) (not (g8d)) (c8d) (v0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (x0d) )
         (and (not (x0d)) (not (j8d)) (h8d) (y0d) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x0c) (z0d) )
         (and (not (z0d)) (not (l8d)) (k8d) (bae) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8d)) (not (v0c)) )
         (and (not (m8d)) (not (y5d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8d)) (not (v0c)) )
         (and (not (r8d)) (not (b6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8d)) (not (v0c)) )
         (and (not (u8d)) (not (g6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y8d)) (not (v0c)) )
         (and (not (x8d)) (not (j6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9d)) (not (v0c)) )
         (and (not (z8d)) (not (l6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9d)) (not (v0c)) )
         (and (not (c9d)) (not (q6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9d)) (not (v0c)) )
         (and (not (h9d)) (not (t6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9d)) (not (v0c)) )
         (and (not (k9d)) (not (v6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9d)) (not (v0c)) )
         (and (not (m9d)) (not (y6d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9d)) (not (v0c)) )
         (and (not (r9d)) (not (b7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9d)) (not (v0c)) )
         (and (not (u9d)) (not (g7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y9d)) (not (v0c)) )
         (and (not (x9d)) (not (j7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0d)) (not (v0c)) )
         (and (not (z9d)) (not (l7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0d)) (not (v0c)) )
         (and (not (c0d)) (not (q7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0d)) (not (v0c)) )
         (and (not (h0d)) (not (t7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0d)) (not (v0c)) )
         (and (not (k0d)) (not (v7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0d)) (not (v0c)) )
         (and (not (m0d)) (not (y7d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0d)) (not (v0c)) )
         (and (not (r0d)) (not (b8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0d)) (not (v0c)) )
         (and (not (u0d)) (not (g8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0d)) (not (v0c)) )
         (and (not (x0d)) (not (j8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bae)) (not (v0c)) )
         (and (not (z0d)) (not (l8d)) ))

    )
  )
  (:action MOVE_P1-3_P2-3
    :precondition  (and 
      (gbc)
      (vxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gbc) (vxc) )
         (and (not (myc)) (not (vxc)) (uxc) (qyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c0c) (uvd) )
         (and (not (lwd)) (not (uvd)) (not (myc)) (not (vxc)) (uxc) (qyc) (tvd) (mwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (tvd)) (not (b0c)) )
         (and (not (lwd)) (not (uvd)) (not (myc)) (not (vxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (m8d) )
         (and (not (ywe)) (not (m8d)) (q8d) (xwe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (r8d) )
         (and (not (bxe)) (not (r8d)) (t8d) (zwe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (u8d) )
         (and (not (gxe)) (not (u8d)) (v8d) (cxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (x8d) )
         (and (not (jxe)) (not (x8d)) (y8d) (hxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (z8d) )
         (and (not (lxe)) (not (z8d)) (b9d) (kxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (c9d) )
         (and (not (qxe)) (not (c9d)) (g9d) (mxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (h9d) )
         (and (not (txe)) (not (h9d)) (j9d) (rxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (k9d) )
         (and (not (vxe)) (not (k9d)) (l9d) (uxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (m9d) )
         (and (not (yxe)) (not (m9d)) (q9d) (xxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (r9d) )
         (and (not (bye)) (not (r9d)) (t9d) (zxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (u9d) )
         (and (not (gye)) (not (u9d)) (v9d) (cye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (x9d) )
         (and (not (jye)) (not (x9d)) (y9d) (hye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (z9d) )
         (and (not (lye)) (not (z9d)) (b0d) (kye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (c0d) )
         (and (not (qye)) (not (c0d)) (g0d) (mye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (h0d) )
         (and (not (tye)) (not (h0d)) (j0d) (rye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (k0d) )
         (and (not (vye)) (not (k0d)) (l0d) (uye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (m0d) )
         (and (not (yye)) (not (m0d)) (q0d) (xye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (r0d) )
         (and (not (bze)) (not (r0d)) (t0d) (zye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u0d) (hwe) )
         (and (not (gze)) (not (u0d)) (v0d) (cze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (x0d) )
         (and (not (jze)) (not (x0d)) (y0d) (hze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (z0d) )
         (and (not (lze)) (not (z0d)) (bae) (kze) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8d)) (not (b0c)) )
         (and (not (ywe)) (not (m8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8d)) (not (b0c)) )
         (and (not (bxe)) (not (r8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8d)) (not (b0c)) )
         (and (not (gxe)) (not (u8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y8d)) (not (b0c)) )
         (and (not (jxe)) (not (x8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9d)) (not (b0c)) )
         (and (not (lxe)) (not (z8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9d)) (not (b0c)) )
         (and (not (qxe)) (not (c9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9d)) (not (b0c)) )
         (and (not (txe)) (not (h9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9d)) (not (b0c)) )
         (and (not (vxe)) (not (k9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9d)) (not (b0c)) )
         (and (not (yxe)) (not (m9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9d)) (not (b0c)) )
         (and (not (bye)) (not (r9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9d)) (not (b0c)) )
         (and (not (gye)) (not (u9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y9d)) (not (b0c)) )
         (and (not (jye)) (not (x9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0d)) (not (b0c)) )
         (and (not (lye)) (not (z9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0d)) (not (b0c)) )
         (and (not (qye)) (not (c0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwe)) (not (j0d)) )
         (and (not (tye)) (not (h0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mwe)) (not (l0d)) )
         (and (not (vye)) (not (k0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwe)) (not (q0d)) )
         (and (not (yye)) (not (m0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (rwe)) (not (t0d)) )
         (and (not (bze)) (not (r0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twe)) (not (v0d)) )
         (and (not (gze)) (not (u0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (uwe)) (not (y0d)) )
         (and (not (jze)) (not (x0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vwe)) (not (bae)) )
         (and (not (lze)) (not (z0d)) ))

    )
  )
  (:action MOVE_P2-3_P1-3
    :precondition  (and 
      (bcc)
      (qyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bcc) (qyc) )
         (and (not (qyc)) (not (uxc)) (vxc) (myc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z0c) (mwd) )
         (and (not (mwd)) (not (tvd)) (not (qyc)) (not (uxc)) (vxc) (myc) (uvd) (lwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lwd)) (not (y0c)) )
         (and (not (mwd)) (not (tvd)) (not (qyc)) (not (uxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (xwe) )
         (and (not (xwe)) (not (q8d)) (m8d) (ywe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (zwe) )
         (and (not (zwe)) (not (t8d)) (r8d) (bxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (cxe) )
         (and (not (cxe)) (not (v8d)) (u8d) (gxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (hxe) )
         (and (not (hxe)) (not (y8d)) (x8d) (jxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (kxe) )
         (and (not (kxe)) (not (b9d)) (z8d) (lxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (mxe) )
         (and (not (mxe)) (not (g9d)) (c9d) (qxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (rxe) )
         (and (not (rxe)) (not (j9d)) (h9d) (txe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (uxe) )
         (and (not (uxe)) (not (l9d)) (k9d) (vxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (xxe) )
         (and (not (xxe)) (not (q9d)) (m9d) (yxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (zxe) )
         (and (not (zxe)) (not (t9d)) (r9d) (bye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (cye) )
         (and (not (cye)) (not (v9d)) (u9d) (gye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (hye) )
         (and (not (hye)) (not (y9d)) (x9d) (jye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (kye) )
         (and (not (kye)) (not (b0d)) (z9d) (lye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (mye) )
         (and (not (mye)) (not (g0d)) (c0d) (qye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (rye) )
         (and (not (rye)) (not (j0d)) (h0d) (tye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (uye) )
         (and (not (uye)) (not (l0d)) (k0d) (vye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (xye) )
         (and (not (xye)) (not (q0d)) (m0d) (yye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (zye) )
         (and (not (zye)) (not (t0d)) (r0d) (bze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (cze) )
         (and (not (cze)) (not (v0d)) (u0d) (gze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (hze) )
         (and (not (hze)) (not (y0d)) (x0d) (jze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (kze) )
         (and (not (kze)) (not (bae)) (z0d) (lze) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywe)) (not (y0c)) )
         (and (not (xwe)) (not (q8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxe)) (not (y0c)) )
         (and (not (zwe)) (not (t8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxe)) (not (y0c)) )
         (and (not (cxe)) (not (v8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxe)) (not (y0c)) )
         (and (not (hxe)) (not (y8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxe)) (not (y0c)) )
         (and (not (kxe)) (not (b9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxe)) (not (y0c)) )
         (and (not (mxe)) (not (g9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txe)) (not (y0c)) )
         (and (not (rxe)) (not (j9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxe)) (not (y0c)) )
         (and (not (uxe)) (not (l9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxe)) (not (y0c)) )
         (and (not (xxe)) (not (q9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bye)) (not (y0c)) )
         (and (not (zxe)) (not (t9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gye)) (not (y0c)) )
         (and (not (cye)) (not (v9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jye)) (not (y0c)) )
         (and (not (hye)) (not (y9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lye)) (not (y0c)) )
         (and (not (kye)) (not (b0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qye)) (not (y0c)) )
         (and (not (mye)) (not (g0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tye)) (not (y0c)) )
         (and (not (rye)) (not (j0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vye)) (not (y0c)) )
         (and (not (uye)) (not (l0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yye)) (not (y0c)) )
         (and (not (xye)) (not (q0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bze)) (not (y0c)) )
         (and (not (zye)) (not (t0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gze)) (not (y0c)) )
         (and (not (cze)) (not (v0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jze)) (not (y0c)) )
         (and (not (hze)) (not (y0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lze)) (not (y0c)) )
         (and (not (kze)) (not (bae)) ))

    )
  )
  (:action MOVE_P2-3_P2-2
    :precondition  (and 
      (jbc)
      (qyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (jbc) (qyc) )
         (and (not (qyc)) (not (kyc)) (lyc) (myc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h0c) (mwd) )
         (and (not (mwd)) (not (jwd)) (not (qyc)) (not (kyc)) (lyc) (myc) (kwd) (lwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lwd)) (not (g0c)) )
         (and (not (mwd)) (not (jwd)) (not (qyc)) (not (kyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (xwe) )
         (and (not (l6g)) (not (xwe)) (ywe) (k6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (zwe) )
         (and (not (q6g)) (not (zwe)) (bxe) (m6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (cxe) )
         (and (not (t6g)) (not (cxe)) (gxe) (r6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (hxe) )
         (and (not (v6g)) (not (hxe)) (jxe) (u6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (kxe) )
         (and (not (y6g)) (not (kxe)) (lxe) (x6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (mxe) )
         (and (not (b7g)) (not (mxe)) (qxe) (z6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (rxe) )
         (and (not (g7g)) (not (rxe)) (txe) (c7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (uxe) )
         (and (not (j7g)) (not (uxe)) (vxe) (h7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (xxe) )
         (and (not (l7g)) (not (xxe)) (yxe) (k7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (zxe) )
         (and (not (q7g)) (not (zxe)) (bye) (m7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (cye) )
         (and (not (t7g)) (not (cye)) (gye) (r7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (hye) )
         (and (not (v7g)) (not (hye)) (jye) (u7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (kye) )
         (and (not (y7g)) (not (kye)) (lye) (x7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (mye) )
         (and (not (b8g)) (not (mye)) (qye) (z7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (rye) )
         (and (not (g8g)) (not (rye)) (tye) (c8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (uye) )
         (and (not (j8g)) (not (uye)) (vye) (h8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (xye) )
         (and (not (l8g)) (not (xye)) (yye) (k8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (zye) )
         (and (not (q8g)) (not (zye)) (bze) (m8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (cze) )
         (and (not (t8g)) (not (cze)) (gze) (r8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (hze) (v5g) )
         (and (not (v8g)) (not (hze)) (jze) (u8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (kze) )
         (and (not (y8g)) (not (kze)) (lze) (x8g) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywe)) (not (g0c)) )
         (and (not (l6g)) (not (xwe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxe)) (not (g0c)) )
         (and (not (q6g)) (not (zwe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxe)) (not (g0c)) )
         (and (not (t6g)) (not (cxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxe)) (not (g0c)) )
         (and (not (v6g)) (not (hxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxe)) (not (g0c)) )
         (and (not (y6g)) (not (kxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxe)) (not (g0c)) )
         (and (not (b7g)) (not (mxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txe)) (not (g0c)) )
         (and (not (g7g)) (not (rxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxe)) (not (g0c)) )
         (and (not (j7g)) (not (uxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxe)) (not (g0c)) )
         (and (not (l7g)) (not (xxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bye)) (not (g0c)) )
         (and (not (q7g)) (not (zxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gye)) (not (g0c)) )
         (and (not (t7g)) (not (cye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jye)) (not (g0c)) )
         (and (not (v7g)) (not (hye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lye)) (not (g0c)) )
         (and (not (y7g)) (not (kye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qye)) (not (g0c)) )
         (and (not (b8g)) (not (mye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5g)) (not (tye)) )
         (and (not (g8g)) (not (rye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (z5g)) (not (vye)) )
         (and (not (j8g)) (not (uye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6g)) (not (yye)) )
         (and (not (l8g)) (not (xye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (c6g)) (not (bze)) )
         (and (not (q8g)) (not (zye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6g)) (not (gze)) )
         (and (not (t8g)) (not (cze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (h6g)) (not (jze)) )
         (and (not (v8g)) (not (hze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6g)) (not (lze)) )
         (and (not (y8g)) (not (kze)) ))

    )
  )
  (:action MOVE_P2-3_P2-4
    :precondition  (and 
      (bbc)
      (qyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bbc) (qyc) )
         (and (not (ryc)) (not (qyc)) (myc) (tyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z9c) (mwd) )
         (and (not (qwd)) (not (mwd)) (not (ryc)) (not (qyc)) (myc) (tyc) (lwd) (rwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lwd)) (not (y9c)) )
         (and (not (qwd)) (not (mwd)) (not (ryc)) (not (qyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (xwe) )
         (and (not (xwe)) (not (tde)) (rde) (ywe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (zwe) )
         (and (not (zwe)) (not (vde)) (ude) (bxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (cxe) )
         (and (not (cxe)) (not (yde)) (xde) (gxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (hxe) )
         (and (not (hxe)) (not (bee)) (zde) (jxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (kxe) )
         (and (not (kxe)) (not (gee)) (cee) (lxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (mxe) )
         (and (not (mxe)) (not (jee)) (hee) (qxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (rxe) )
         (and (not (rxe)) (not (lee)) (kee) (txe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (uxe) )
         (and (not (uxe)) (not (qee)) (mee) (vxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (xxe) )
         (and (not (xxe)) (not (tee)) (ree) (yxe) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (zxe) )
         (and (not (zxe)) (not (vee)) (uee) (bye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (cye) )
         (and (not (cye)) (not (yee)) (xee) (gye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (hye) )
         (and (not (hye)) (not (bfe)) (zee) (jye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (kye) )
         (and (not (kye)) (not (gfe)) (cfe) (lye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (mye) )
         (and (not (mye)) (not (jfe)) (hfe) (qye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (rye) )
         (and (not (rye)) (not (lfe)) (kfe) (tye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (uye) )
         (and (not (uye)) (not (qfe)) (mfe) (vye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (xye) )
         (and (not (xye)) (not (tfe)) (rfe) (yye) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (yce) (zye) )
         (and (not (zye)) (not (vfe)) (ufe) (bze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (cze) )
         (and (not (cze)) (not (yfe)) (xfe) (gze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (hze) )
         (and (not (hze)) (not (bge)) (zfe) (jze) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z9c) (kze) )
         (and (not (kze)) (not (gge)) (cge) (lze) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywe)) (not (y9c)) )
         (and (not (xwe)) (not (tde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxe)) (not (y9c)) )
         (and (not (zwe)) (not (vde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxe)) (not (y9c)) )
         (and (not (cxe)) (not (yde)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxe)) (not (y9c)) )
         (and (not (hxe)) (not (bee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxe)) (not (y9c)) )
         (and (not (kxe)) (not (gee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxe)) (not (y9c)) )
         (and (not (mxe)) (not (jee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txe)) (not (y9c)) )
         (and (not (rxe)) (not (lee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxe)) (not (y9c)) )
         (and (not (uxe)) (not (qee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxe)) (not (y9c)) )
         (and (not (xxe)) (not (tee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bye)) (not (y9c)) )
         (and (not (zxe)) (not (vee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gye)) (not (y9c)) )
         (and (not (cye)) (not (yee)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jye)) (not (y9c)) )
         (and (not (hye)) (not (bfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lye)) (not (y9c)) )
         (and (not (kye)) (not (gfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qye)) (not (y9c)) )
         (and (not (mye)) (not (jfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tye)) (not (gde)) )
         (and (not (rye)) (not (lfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vye)) (not (hde)) )
         (and (not (uye)) (not (qfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yye)) (not (jde)) )
         (and (not (xye)) (not (tfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bze)) (not (kde)) )
         (and (not (zye)) (not (vfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gze)) (not (lde)) )
         (and (not (cze)) (not (yfe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jze)) (not (mde)) )
         (and (not (hze)) (not (bge)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lze)) (not (qde)) )
         (and (not (kze)) (not (gge)) ))

    )
  )
  (:action MOVE_P2-3_P3-3
    :precondition  (and 
      (jac)
      (qyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (jac) (qyc) )
         (and (not (kzc)) (not (qyc)) (myc) (lzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h9c) (mwd) )
         (and (not (jxd)) (not (mwd)) (not (kzc)) (not (qyc)) (myc) (lzc) (lwd) (kxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lwd)) (not (g9c)) )
         (and (not (jxd)) (not (mwd)) (not (kzc)) (not (qyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (xwe) )
         (and (not (baf)) (not (xwe)) (ywe) (z0e) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (zwe) )
         (and (not (gaf)) (not (zwe)) (bxe) (caf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (cxe) )
         (and (not (jaf)) (not (cxe)) (gxe) (haf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (hxe) )
         (and (not (laf)) (not (hxe)) (jxe) (kaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (kxe) )
         (and (not (qaf)) (not (kxe)) (lxe) (maf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (mxe) )
         (and (not (taf)) (not (mxe)) (qxe) (raf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (rxe) )
         (and (not (vaf)) (not (rxe)) (txe) (uaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (uxe) )
         (and (not (yaf)) (not (uxe)) (vxe) (xaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (xxe) )
         (and (not (bbf)) (not (xxe)) (yxe) (zaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (zxe) )
         (and (not (gbf)) (not (zxe)) (bye) (cbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (cye) )
         (and (not (jbf)) (not (cye)) (gye) (hbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (hye) )
         (and (not (lbf)) (not (hye)) (jye) (kbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (kye) )
         (and (not (qbf)) (not (kye)) (lye) (mbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (mye) )
         (and (not (tbf)) (not (mye)) (qye) (rbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (rye) )
         (and (not (vbf)) (not (rye)) (tye) (ubf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (uye) )
         (and (not (ybf)) (not (uye)) (vye) (xbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (xye) )
         (and (not (bcf)) (not (xye)) (yye) (zbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (zye) )
         (and (not (gcf)) (not (zye)) (bze) (ccf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (cze) )
         (and (not (jcf)) (not (cze)) (gze) (hcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (hze) )
         (and (not (lcf)) (not (hze)) (jze) (kcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (kze) )
         (and (not (qcf)) (not (kze)) (lze) (mcf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywe)) (not (g9c)) )
         (and (not (baf)) (not (xwe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxe)) (not (g9c)) )
         (and (not (gaf)) (not (zwe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxe)) (not (g9c)) )
         (and (not (jaf)) (not (cxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxe)) (not (g9c)) )
         (and (not (laf)) (not (hxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxe)) (not (g9c)) )
         (and (not (qaf)) (not (kxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxe)) (not (g9c)) )
         (and (not (taf)) (not (mxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txe)) (not (g9c)) )
         (and (not (vaf)) (not (rxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxe)) (not (g9c)) )
         (and (not (yaf)) (not (uxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxe)) (not (g9c)) )
         (and (not (bbf)) (not (xxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bye)) (not (g9c)) )
         (and (not (gbf)) (not (zxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gye)) (not (g9c)) )
         (and (not (jbf)) (not (cye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jye)) (not (g9c)) )
         (and (not (lbf)) (not (hye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lye)) (not (g9c)) )
         (and (not (qbf)) (not (kye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qye)) (not (g9c)) )
         (and (not (tbf)) (not (mye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tye)) (not (g9c)) )
         (and (not (vbf)) (not (rye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vye)) (not (g9c)) )
         (and (not (ybf)) (not (uye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yye)) (not (g9c)) )
         (and (not (bcf)) (not (xye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bze)) (not (g9c)) )
         (and (not (gcf)) (not (zye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gze)) (not (g9c)) )
         (and (not (jcf)) (not (cze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jze)) (not (g9c)) )
         (and (not (lcf)) (not (hze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lze)) (not (g9c)) )
         (and (not (qcf)) (not (kze)) ))

    )
  )
  (:action MOVE_P3-3_P2-3
    :precondition  (and 
      (gbc)
      (lzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gbc) (lzc) )
         (and (not (lzc)) (not (myc)) (qyc) (kzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c0c) (kxd) )
         (and (not (kxd)) (not (lwd)) (not (lzc)) (not (myc)) (qyc) (kzc) (mwd) (jxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jxd)) (not (b0c)) )
         (and (not (kxd)) (not (lwd)) (not (lzc)) (not (myc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (z0e) )
         (and (not (z0e)) (not (ywe)) (xwe) (baf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (caf) )
         (and (not (caf)) (not (bxe)) (zwe) (gaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (haf) )
         (and (not (haf)) (not (gxe)) (cxe) (jaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (kaf) )
         (and (not (kaf)) (not (jxe)) (hxe) (laf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (maf) )
         (and (not (maf)) (not (lxe)) (kxe) (qaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (raf) )
         (and (not (raf)) (not (qxe)) (mxe) (taf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (uaf) )
         (and (not (uaf)) (not (txe)) (rxe) (vaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (xaf) )
         (and (not (xaf)) (not (vxe)) (uxe) (yaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (zaf) )
         (and (not (zaf)) (not (yxe)) (xxe) (bbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (cbf) )
         (and (not (cbf)) (not (bye)) (zxe) (gbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (hbf) )
         (and (not (hbf)) (not (gye)) (cye) (jbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (kbf) )
         (and (not (kbf)) (not (jye)) (hye) (lbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (mbf) )
         (and (not (mbf)) (not (lye)) (kye) (qbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (rbf) )
         (and (not (rbf)) (not (qye)) (mye) (tbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (ubf) )
         (and (not (ubf)) (not (tye)) (rye) (vbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (xbf) )
         (and (not (xbf)) (not (vye)) (uye) (ybf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (zbf) )
         (and (not (zbf)) (not (yye)) (xye) (bcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (ccf) )
         (and (not (ccf)) (not (bze)) (zye) (gcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (hwe) (hcf) )
         (and (not (hcf)) (not (gze)) (cze) (jcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (kcf) )
         (and (not (kcf)) (not (jze)) (hze) (lcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (mcf) )
         (and (not (mcf)) (not (lze)) (kze) (qcf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (baf)) (not (b0c)) )
         (and (not (z0e)) (not (ywe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gaf)) (not (b0c)) )
         (and (not (caf)) (not (bxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jaf)) (not (b0c)) )
         (and (not (haf)) (not (gxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (laf)) (not (b0c)) )
         (and (not (kaf)) (not (jxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qaf)) (not (b0c)) )
         (and (not (maf)) (not (lxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (taf)) (not (b0c)) )
         (and (not (raf)) (not (qxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vaf)) (not (b0c)) )
         (and (not (uaf)) (not (txe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yaf)) (not (b0c)) )
         (and (not (xaf)) (not (vxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bbf)) (not (b0c)) )
         (and (not (zaf)) (not (yxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gbf)) (not (b0c)) )
         (and (not (cbf)) (not (bye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jbf)) (not (b0c)) )
         (and (not (hbf)) (not (gye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lbf)) (not (b0c)) )
         (and (not (kbf)) (not (jye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbf)) (not (b0c)) )
         (and (not (mbf)) (not (lye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbf)) (not (b0c)) )
         (and (not (rbf)) (not (qye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbf)) (not (lwe)) )
         (and (not (ubf)) (not (tye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybf)) (not (mwe)) )
         (and (not (xbf)) (not (vye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bcf)) (not (qwe)) )
         (and (not (zbf)) (not (yye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gcf)) (not (rwe)) )
         (and (not (ccf)) (not (bze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jcf)) (not (twe)) )
         (and (not (hcf)) (not (gze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lcf)) (not (uwe)) )
         (and (not (kcf)) (not (jze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qcf)) (not (vwe)) )
         (and (not (mcf)) (not (lze)) ))

    )
  )
  (:action MOVE_P3-3_P3-2
    :precondition  (and 
      (lac)
      (lzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (lac) (lzc) )
         (and (not (lzc)) (not (hzc)) (jzc) (kzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k9c) (kxd) )
         (and (not (kxd)) (not (gxd)) (not (lzc)) (not (hzc)) (jzc) (kzc) (hxd) (jxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jxd)) (not (j9c)) )
         (and (not (kxd)) (not (gxd)) (not (lzc)) (not (hzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (z0e) )
         (and (not (b9g)) (not (z0e)) (baf) (z8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (caf) )
         (and (not (g9g)) (not (caf)) (gaf) (c9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (haf) )
         (and (not (j9g)) (not (haf)) (jaf) (h9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (kaf) )
         (and (not (l9g)) (not (kaf)) (laf) (k9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (maf) )
         (and (not (q9g)) (not (maf)) (qaf) (m9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (raf) )
         (and (not (t9g)) (not (raf)) (taf) (r9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (uaf) )
         (and (not (v9g)) (not (uaf)) (vaf) (u9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (xaf) )
         (and (not (y9g)) (not (xaf)) (yaf) (x9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (zaf) )
         (and (not (b0g)) (not (zaf)) (bbf) (z9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (cbf) )
         (and (not (g0g)) (not (cbf)) (gbf) (c0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (hbf) )
         (and (not (j0g)) (not (hbf)) (jbf) (h0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (kbf) )
         (and (not (l0g)) (not (kbf)) (lbf) (k0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (mbf) )
         (and (not (q0g)) (not (mbf)) (qbf) (m0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (rbf) )
         (and (not (t0g)) (not (rbf)) (tbf) (r0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (ubf) )
         (and (not (v0g)) (not (ubf)) (vbf) (u0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (xbf) )
         (and (not (y0g)) (not (xbf)) (ybf) (x0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (zbf) )
         (and (not (bah)) (not (zbf)) (bcf) (z0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (ccf) )
         (and (not (gah)) (not (ccf)) (gcf) (cah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (hcf) )
         (and (not (jah)) (not (hcf)) (jcf) (hah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (kcf) )
         (and (not (lah)) (not (kcf)) (lcf) (kah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (mcf) )
         (and (not (qah)) (not (mcf)) (qcf) (mah) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (baf)) (not (j9c)) )
         (and (not (b9g)) (not (z0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gaf)) (not (j9c)) )
         (and (not (g9g)) (not (caf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jaf)) (not (j9c)) )
         (and (not (j9g)) (not (haf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (laf)) (not (j9c)) )
         (and (not (l9g)) (not (kaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qaf)) (not (j9c)) )
         (and (not (q9g)) (not (maf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (taf)) (not (j9c)) )
         (and (not (t9g)) (not (raf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vaf)) (not (j9c)) )
         (and (not (v9g)) (not (uaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yaf)) (not (j9c)) )
         (and (not (y9g)) (not (xaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bbf)) (not (j9c)) )
         (and (not (b0g)) (not (zaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gbf)) (not (j9c)) )
         (and (not (g0g)) (not (cbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jbf)) (not (j9c)) )
         (and (not (j0g)) (not (hbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lbf)) (not (j9c)) )
         (and (not (l0g)) (not (kbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbf)) (not (j9c)) )
         (and (not (q0g)) (not (mbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbf)) (not (j9c)) )
         (and (not (t0g)) (not (rbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbf)) (not (j9c)) )
         (and (not (v0g)) (not (ubf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybf)) (not (j9c)) )
         (and (not (y0g)) (not (xbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bcf)) (not (j9c)) )
         (and (not (bah)) (not (zbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gcf)) (not (j9c)) )
         (and (not (gah)) (not (ccf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jcf)) (not (j9c)) )
         (and (not (jah)) (not (hcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lcf)) (not (j9c)) )
         (and (not (lah)) (not (kcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qcf)) (not (j9c)) )
         (and (not (qah)) (not (mcf)) ))

    )
  )
  (:action MOVE_P3-3_P3-4
    :precondition  (and 
      (gac)
      (lzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gac) (lzc) )
         (and (not (mzc)) (not (lzc)) (kzc) (qzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c9c) (kxd) )
         (and (not (lxd)) (not (kxd)) (not (mzc)) (not (lzc)) (kzc) (qzc) (jxd) (mxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jxd)) (not (b9c)) )
         (and (not (lxd)) (not (kxd)) (not (mzc)) (not (lzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (z0e) )
         (and (not (z0e)) (not (qze)) (mze) (baf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (caf) )
         (and (not (caf)) (not (tze)) (rze) (gaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (haf) )
         (and (not (haf)) (not (vze)) (uze) (jaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (kaf) )
         (and (not (kaf)) (not (yze)) (xze) (laf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (maf) )
         (and (not (maf)) (not (b1e)) (zze) (qaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (raf) )
         (and (not (raf)) (not (g1e)) (c1e) (taf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (uaf) )
         (and (not (uaf)) (not (j1e)) (h1e) (vaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (xaf) )
         (and (not (xaf)) (not (l1e)) (k1e) (yaf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (zaf) )
         (and (not (zaf)) (not (q1e)) (m1e) (bbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (cbf) )
         (and (not (cbf)) (not (t1e)) (r1e) (gbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (hbf) )
         (and (not (hbf)) (not (v1e)) (u1e) (jbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (kbf) )
         (and (not (kbf)) (not (y1e)) (x1e) (lbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (mbf) )
         (and (not (mbf)) (not (b2e)) (z1e) (qbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (rbf) )
         (and (not (rbf)) (not (g2e)) (c2e) (tbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (ubf) )
         (and (not (ubf)) (not (j2e)) (h2e) (vbf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (xbf) )
         (and (not (xbf)) (not (l2e)) (k2e) (ybf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (zbf) )
         (and (not (zbf)) (not (q2e)) (m2e) (bcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (ccf) )
         (and (not (ccf)) (not (t2e)) (r2e) (gcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (hcf) )
         (and (not (hcf)) (not (v2e)) (u2e) (jcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (kcf) )
         (and (not (kcf)) (not (y2e)) (x2e) (lcf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c9c) (mcf) )
         (and (not (mcf)) (not (b3e)) (z2e) (qcf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (baf)) (not (b9c)) )
         (and (not (z0e)) (not (qze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gaf)) (not (b9c)) )
         (and (not (caf)) (not (tze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jaf)) (not (b9c)) )
         (and (not (haf)) (not (vze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (laf)) (not (b9c)) )
         (and (not (kaf)) (not (yze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qaf)) (not (b9c)) )
         (and (not (maf)) (not (b1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (taf)) (not (b9c)) )
         (and (not (raf)) (not (g1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vaf)) (not (b9c)) )
         (and (not (uaf)) (not (j1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yaf)) (not (b9c)) )
         (and (not (xaf)) (not (l1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bbf)) (not (b9c)) )
         (and (not (zaf)) (not (q1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gbf)) (not (b9c)) )
         (and (not (cbf)) (not (t1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jbf)) (not (b9c)) )
         (and (not (hbf)) (not (v1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lbf)) (not (b9c)) )
         (and (not (kbf)) (not (y1e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbf)) (not (b9c)) )
         (and (not (mbf)) (not (b2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbf)) (not (b9c)) )
         (and (not (rbf)) (not (g2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbf)) (not (b9c)) )
         (and (not (ubf)) (not (j2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybf)) (not (b9c)) )
         (and (not (xbf)) (not (l2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bcf)) (not (b9c)) )
         (and (not (zbf)) (not (q2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gcf)) (not (b9c)) )
         (and (not (ccf)) (not (t2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jcf)) (not (b9c)) )
         (and (not (hcf)) (not (v2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lcf)) (not (b9c)) )
         (and (not (kcf)) (not (y2e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qcf)) (not (b9c)) )
         (and (not (mcf)) (not (b3e)) ))

    )
  )
  (:action MOVE_P3-3_P4-3
    :precondition  (and 
      (l0b)
      (lzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l0b) (lzc) )
         (and (not (h1c)) (not (lzc)) (kzc) (j1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k8c) (kxd) )
         (and (not (gyd)) (not (kxd)) (not (h1c)) (not (lzc)) (kzc) (j1c) (jxd) (hyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jxd)) (not (j8c)) )
         (and (not (gyd)) (not (kxd)) (not (h1c)) (not (lzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (z0e) )
         (and (not (qsf)) (not (z0e)) (baf) (msf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (caf) )
         (and (not (tsf)) (not (caf)) (gaf) (rsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (haf) )
         (and (not (vsf)) (not (haf)) (jaf) (usf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (kaf) )
         (and (not (ysf)) (not (kaf)) (laf) (xsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (maf) )
         (and (not (brf)) (not (maf)) (qaf) (zsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (raf) )
         (and (not (grf)) (not (raf)) (taf) (crf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (uaf) )
         (and (not (jrf)) (not (uaf)) (vaf) (hrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (xaf) )
         (and (not (lrf)) (not (xaf)) (yaf) (krf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (zaf) )
         (and (not (qrf)) (not (zaf)) (bbf) (mrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (cbf) )
         (and (not (trf)) (not (cbf)) (gbf) (rrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (hbf) )
         (and (not (vrf)) (not (hbf)) (jbf) (urf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (kbf) (xqf) )
         (and (not (yrf)) (not (kbf)) (lbf) (xrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (mbf) )
         (and (not (btf)) (not (mbf)) (qbf) (zrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (rbf) )
         (and (not (gtf)) (not (rbf)) (tbf) (ctf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (ubf) )
         (and (not (jtf)) (not (ubf)) (vbf) (htf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (xbf) )
         (and (not (ltf)) (not (xbf)) (ybf) (ktf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (zbf) )
         (and (not (qtf)) (not (zbf)) (bcf) (mtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (ccf) )
         (and (not (ttf)) (not (ccf)) (gcf) (rtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (hcf) )
         (and (not (vtf)) (not (hcf)) (jcf) (utf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (kcf) )
         (and (not (ytf)) (not (kcf)) (lcf) (xtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (mcf) )
         (and (not (buf)) (not (mcf)) (qcf) (ztf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (baf)) (not (j8c)) )
         (and (not (qsf)) (not (z0e)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gaf)) (not (j8c)) )
         (and (not (tsf)) (not (caf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jaf)) (not (j8c)) )
         (and (not (vsf)) (not (haf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (laf)) (not (j8c)) )
         (and (not (ysf)) (not (kaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qaf)) (not (j8c)) )
         (and (not (brf)) (not (maf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (taf)) (not (j8c)) )
         (and (not (grf)) (not (raf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vaf)) (not (j8c)) )
         (and (not (jrf)) (not (uaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bsf)) (not (yaf)) )
         (and (not (lrf)) (not (xaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (csf)) (not (bbf)) )
         (and (not (qrf)) (not (zaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gsf)) (not (gbf)) )
         (and (not (trf)) (not (cbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hsf)) (not (jbf)) )
         (and (not (vrf)) (not (hbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jsf)) (not (lbf)) )
         (and (not (yrf)) (not (kbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ksf)) (not (qbf)) )
         (and (not (btf)) (not (mbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lsf)) (not (tbf)) )
         (and (not (gtf)) (not (rbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbf)) (not (j8c)) )
         (and (not (jtf)) (not (ubf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybf)) (not (j8c)) )
         (and (not (ltf)) (not (xbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bcf)) (not (j8c)) )
         (and (not (qtf)) (not (zbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gcf)) (not (j8c)) )
         (and (not (ttf)) (not (ccf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jcf)) (not (j8c)) )
         (and (not (vtf)) (not (hcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lcf)) (not (j8c)) )
         (and (not (ytf)) (not (kcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qcf)) (not (j8c)) )
         (and (not (buf)) (not (mcf)) ))

    )
  )
  (:action MOVE_P4-3_P3-3
    :precondition  (and 
      (jac)
      (j1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (jac) (j1c) )
         (and (not (j1c)) (not (kzc)) (lzc) (h1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h9c) (hyd) )
         (and (not (hyd)) (not (jxd)) (not (j1c)) (not (kzc)) (lzc) (h1c) (kxd) (gyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gyd)) (not (g9c)) )
         (and (not (hyd)) (not (jxd)) (not (j1c)) (not (kzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (msf) )
         (and (not (msf)) (not (baf)) (z0e) (qsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (rsf) )
         (and (not (rsf)) (not (gaf)) (caf) (tsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (usf) )
         (and (not (usf)) (not (jaf)) (haf) (vsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (xsf) )
         (and (not (xsf)) (not (laf)) (kaf) (ysf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (zsf) )
         (and (not (zsf)) (not (qaf)) (maf) (brf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (crf) )
         (and (not (crf)) (not (taf)) (raf) (grf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (hrf) )
         (and (not (hrf)) (not (vaf)) (uaf) (jrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (krf) )
         (and (not (krf)) (not (yaf)) (xaf) (lrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (mrf) )
         (and (not (mrf)) (not (bbf)) (zaf) (qrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (rrf) )
         (and (not (rrf)) (not (gbf)) (cbf) (trf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (urf) )
         (and (not (urf)) (not (jbf)) (hbf) (vrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (xrf) )
         (and (not (xrf)) (not (lbf)) (kbf) (yrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (zrf) )
         (and (not (zrf)) (not (qbf)) (mbf) (btf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (ctf) )
         (and (not (ctf)) (not (tbf)) (rbf) (gtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (htf) )
         (and (not (htf)) (not (vbf)) (ubf) (jtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (ktf) )
         (and (not (ktf)) (not (ybf)) (xbf) (ltf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (mtf) )
         (and (not (mtf)) (not (bcf)) (zbf) (qtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (rtf) )
         (and (not (rtf)) (not (gcf)) (ccf) (ttf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (utf) )
         (and (not (utf)) (not (jcf)) (hcf) (vtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (xtf) )
         (and (not (xtf)) (not (lcf)) (kcf) (ytf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (ztf) )
         (and (not (ztf)) (not (qcf)) (mcf) (buf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qsf)) (not (g9c)) )
         (and (not (msf)) (not (baf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tsf)) (not (g9c)) )
         (and (not (rsf)) (not (gaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vsf)) (not (g9c)) )
         (and (not (usf)) (not (jaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ysf)) (not (g9c)) )
         (and (not (xsf)) (not (laf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (brf)) (not (g9c)) )
         (and (not (zsf)) (not (qaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (grf)) (not (g9c)) )
         (and (not (crf)) (not (taf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jrf)) (not (g9c)) )
         (and (not (hrf)) (not (vaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lrf)) (not (g9c)) )
         (and (not (krf)) (not (yaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qrf)) (not (g9c)) )
         (and (not (mrf)) (not (bbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (trf)) (not (g9c)) )
         (and (not (rrf)) (not (gbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vrf)) (not (g9c)) )
         (and (not (urf)) (not (jbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yrf)) (not (g9c)) )
         (and (not (xrf)) (not (lbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (btf)) (not (g9c)) )
         (and (not (zrf)) (not (qbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gtf)) (not (g9c)) )
         (and (not (ctf)) (not (tbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jtf)) (not (g9c)) )
         (and (not (htf)) (not (vbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ltf)) (not (g9c)) )
         (and (not (ktf)) (not (ybf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qtf)) (not (g9c)) )
         (and (not (mtf)) (not (bcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ttf)) (not (g9c)) )
         (and (not (rtf)) (not (gcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vtf)) (not (g9c)) )
         (and (not (utf)) (not (jcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ytf)) (not (g9c)) )
         (and (not (xtf)) (not (lcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (buf)) (not (g9c)) )
         (and (not (ztf)) (not (qcf)) ))

    )
  )
  (:action MOVE_P4-3_P4-2
    :precondition  (and 
      (q0b)
      (j1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q0b) (j1c) )
         (and (not (j1c)) (not (c1c)) (g1c) (h1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m8c) (hyd) )
         (and (not (hyd)) (not (byd)) (not (j1c)) (not (c1c)) (g1c) (h1c) (cyd) (gyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gyd)) (not (l8c)) )
         (and (not (hyd)) (not (byd)) (not (j1c)) (not (c1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (msf) )
         (and (not (qbh)) (not (msf)) (qsf) (mbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (rsf) )
         (and (not (tbh)) (not (rsf)) (tsf) (rbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (usf) )
         (and (not (vbh)) (not (usf)) (vsf) (ubh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (xsf) )
         (and (not (ybh)) (not (xsf)) (ysf) (xbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (zsf) )
         (and (not (bch)) (not (zsf)) (brf) (zbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (crf) )
         (and (not (gch)) (not (crf)) (grf) (cch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (hrf) )
         (and (not (jch)) (not (hrf)) (jrf) (hch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (krf) )
         (and (not (lch)) (not (krf)) (lrf) (kch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (mrf) )
         (and (not (qch)) (not (mrf)) (qrf) (mch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (rrf) )
         (and (not (tch)) (not (rrf)) (trf) (rch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (urf) )
         (and (not (vch)) (not (urf)) (vrf) (uch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (xrf) )
         (and (not (ych)) (not (xrf)) (yrf) (xch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (zrf) (yah) )
         (and (not (bdh)) (not (zrf)) (btf) (zch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (ctf) )
         (and (not (gdh)) (not (ctf)) (gtf) (cdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (htf) )
         (and (not (jdh)) (not (htf)) (jtf) (hdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (ktf) )
         (and (not (ldh)) (not (ktf)) (ltf) (kdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (mtf) )
         (and (not (qdh)) (not (mtf)) (qtf) (mdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (rtf) )
         (and (not (tdh)) (not (rtf)) (ttf) (rdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (utf) )
         (and (not (vdh)) (not (utf)) (vtf) (udh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (xtf) )
         (and (not (ydh)) (not (xtf)) (ytf) (xdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (ztf) )
         (and (not (beh)) (not (ztf)) (buf) (zdh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qsf)) (not (l8c)) )
         (and (not (qbh)) (not (msf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tsf)) (not (l8c)) )
         (and (not (tbh)) (not (rsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vsf)) (not (l8c)) )
         (and (not (vbh)) (not (usf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ysf)) (not (l8c)) )
         (and (not (ybh)) (not (xsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (brf)) (not (l8c)) )
         (and (not (bch)) (not (zsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (grf)) (not (l8c)) )
         (and (not (gch)) (not (crf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jrf)) (not (l8c)) )
         (and (not (jch)) (not (hrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bbh)) (not (lrf)) )
         (and (not (lch)) (not (krf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (cbh)) (not (qrf)) )
         (and (not (qch)) (not (mrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gbh)) (not (trf)) )
         (and (not (tch)) (not (rrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hbh)) (not (vrf)) )
         (and (not (vch)) (not (urf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jbh)) (not (yrf)) )
         (and (not (ych)) (not (xrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kbh)) (not (btf)) )
         (and (not (bdh)) (not (zrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lbh)) (not (gtf)) )
         (and (not (gdh)) (not (ctf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jtf)) (not (l8c)) )
         (and (not (jdh)) (not (htf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ltf)) (not (l8c)) )
         (and (not (ldh)) (not (ktf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qtf)) (not (l8c)) )
         (and (not (qdh)) (not (mtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ttf)) (not (l8c)) )
         (and (not (tdh)) (not (rtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vtf)) (not (l8c)) )
         (and (not (vdh)) (not (utf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ytf)) (not (l8c)) )
         (and (not (ydh)) (not (xtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (buf)) (not (l8c)) )
         (and (not (beh)) (not (ztf)) ))

    )
  )
  (:action MOVE_P4-3_P4-4
    :precondition  (and 
      (j0b)
      (j1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (j0b) (j1c) )
         (and (not (k1c)) (not (j1c)) (h1c) (l1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h8c) (hyd) )
         (and (not (jyd)) (not (hyd)) (not (k1c)) (not (j1c)) (h1c) (l1c) (gyd) (kyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gyd)) (not (g8c)) )
         (and (not (jyd)) (not (hyd)) (not (k1c)) (not (j1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (msf) )
         (and (not (msf)) (not (qdf)) (mdf) (qsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (rsf) )
         (and (not (rsf)) (not (tdf)) (rdf) (tsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (usf) )
         (and (not (usf)) (not (vdf)) (udf) (vsf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (xsf) )
         (and (not (xsf)) (not (ydf)) (xdf) (ysf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (zsf) )
         (and (not (zsf)) (not (bef)) (zdf) (brf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (crf) )
         (and (not (crf)) (not (gef)) (cef) (grf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (hrf) )
         (and (not (hrf)) (not (jef)) (hef) (jrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (krf) )
         (and (not (krf)) (not (lef)) (kef) (lrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (mrf) )
         (and (not (mrf)) (not (qef)) (mef) (qrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (rrf) )
         (and (not (rrf)) (not (tef)) (ref) (trf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (vcf) (urf) )
         (and (not (urf)) (not (vef)) (uef) (vrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (xrf) )
         (and (not (xrf)) (not (yef)) (xef) (yrf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (zrf) )
         (and (not (zrf)) (not (bff)) (zef) (btf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (ctf) )
         (and (not (ctf)) (not (gff)) (cff) (gtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (htf) )
         (and (not (htf)) (not (jff)) (hff) (jtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (ktf) )
         (and (not (ktf)) (not (lff)) (kff) (ltf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (mtf) )
         (and (not (mtf)) (not (qff)) (mff) (qtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (rtf) )
         (and (not (rtf)) (not (tff)) (rff) (ttf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (utf) )
         (and (not (utf)) (not (vff)) (uff) (vtf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (xtf) )
         (and (not (xtf)) (not (yff)) (xff) (ytf) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h8c) (ztf) )
         (and (not (ztf)) (not (bgf)) (zff) (buf) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qsf)) (not (g8c)) )
         (and (not (msf)) (not (qdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tsf)) (not (g8c)) )
         (and (not (rsf)) (not (tdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vsf)) (not (g8c)) )
         (and (not (usf)) (not (vdf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ysf)) (not (g8c)) )
         (and (not (xsf)) (not (ydf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (brf)) (not (g8c)) )
         (and (not (zsf)) (not (bef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (grf)) (not (g8c)) )
         (and (not (crf)) (not (gef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jrf)) (not (g8c)) )
         (and (not (hrf)) (not (jef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lrf)) (not (bdf)) )
         (and (not (krf)) (not (lef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qrf)) (not (cdf)) )
         (and (not (mrf)) (not (qef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (trf)) (not (gdf)) )
         (and (not (rrf)) (not (tef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vrf)) (not (hdf)) )
         (and (not (urf)) (not (vef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yrf)) (not (jdf)) )
         (and (not (xrf)) (not (yef)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (btf)) (not (kdf)) )
         (and (not (zrf)) (not (bff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gtf)) (not (ldf)) )
         (and (not (ctf)) (not (gff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jtf)) (not (g8c)) )
         (and (not (htf)) (not (jff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ltf)) (not (g8c)) )
         (and (not (ktf)) (not (lff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qtf)) (not (g8c)) )
         (and (not (mtf)) (not (qff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ttf)) (not (g8c)) )
         (and (not (rtf)) (not (tff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vtf)) (not (g8c)) )
         (and (not (utf)) (not (vff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ytf)) (not (g8c)) )
         (and (not (xtf)) (not (yff)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (buf)) (not (g8c)) )
         (and (not (ztf)) (not (bgf)) ))

    )
  )
  (:action MOVE_P4-3_P5-3
    :precondition  (and 
      (q9b)
      (j1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q9b) (j1c) )
         (and (not (c2c)) (not (j1c)) (h1c) (g2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m7c) (hyd) )
         (and (not (bzd)) (not (hyd)) (not (c2c)) (not (j1c)) (h1c) (g2c) (gyd) (czd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gyd)) (not (l7c)) )
         (and (not (bzd)) (not (hyd)) (not (c2c)) (not (j1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (msf) )
         (and (not (t5f)) (not (msf)) (qsf) (r5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (rsf) )
         (and (not (v5f)) (not (rsf)) (tsf) (u5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (usf) )
         (and (not (y5f)) (not (usf)) (vsf) (x5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (xsf) )
         (and (not (b6f)) (not (xsf)) (ysf) (z5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (zsf) )
         (and (not (g6f)) (not (zsf)) (brf) (c6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (crf) )
         (and (not (j6f)) (not (crf)) (grf) (h6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (hrf) )
         (and (not (l6f)) (not (hrf)) (jrf) (k6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (krf) )
         (and (not (q6f)) (not (krf)) (lrf) (m6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (mrf) )
         (and (not (t6f)) (not (mrf)) (qrf) (r6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (rrf) )
         (and (not (v6f)) (not (rrf)) (trf) (u6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (urf) )
         (and (not (y6f)) (not (urf)) (vrf) (x6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (xrf) )
         (and (not (b7f)) (not (xrf)) (yrf) (z6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (zrf) )
         (and (not (g7f)) (not (zrf)) (btf) (c7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (ctf) )
         (and (not (j7f)) (not (ctf)) (gtf) (h7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (htf) )
         (and (not (l7f)) (not (htf)) (jtf) (k7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (ktf) )
         (and (not (q7f)) (not (ktf)) (ltf) (m7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (mtf) )
         (and (not (t7f)) (not (mtf)) (qtf) (r7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (rtf) )
         (and (not (v7f)) (not (rtf)) (ttf) (u7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (utf) )
         (and (not (y7f)) (not (utf)) (vtf) (x7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (xtf) )
         (and (not (b8f)) (not (xtf)) (ytf) (z7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (ztf) )
         (and (not (g8f)) (not (ztf)) (buf) (c8f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qsf)) (not (l7c)) )
         (and (not (t5f)) (not (msf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tsf)) (not (l7c)) )
         (and (not (v5f)) (not (rsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vsf)) (not (l7c)) )
         (and (not (y5f)) (not (usf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ysf)) (not (l7c)) )
         (and (not (b6f)) (not (xsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (brf)) (not (l7c)) )
         (and (not (g6f)) (not (zsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (grf)) (not (l7c)) )
         (and (not (j6f)) (not (crf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jrf)) (not (l7c)) )
         (and (not (l6f)) (not (hrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lrf)) (not (l7c)) )
         (and (not (q6f)) (not (krf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qrf)) (not (l7c)) )
         (and (not (t6f)) (not (mrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (trf)) (not (l7c)) )
         (and (not (v6f)) (not (rrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vrf)) (not (l7c)) )
         (and (not (y6f)) (not (urf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yrf)) (not (l7c)) )
         (and (not (b7f)) (not (xrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (btf)) (not (l7c)) )
         (and (not (g7f)) (not (zrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gtf)) (not (l7c)) )
         (and (not (j7f)) (not (ctf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jtf)) (not (l7c)) )
         (and (not (l7f)) (not (htf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ltf)) (not (l7c)) )
         (and (not (q7f)) (not (ktf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qtf)) (not (l7c)) )
         (and (not (t7f)) (not (mtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ttf)) (not (l7c)) )
         (and (not (v7f)) (not (rtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vtf)) (not (l7c)) )
         (and (not (y7f)) (not (utf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ytf)) (not (l7c)) )
         (and (not (b8f)) (not (xtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (buf)) (not (l7c)) )
         (and (not (g8f)) (not (ztf)) ))

    )
  )
  (:action MOVE_P5-3_P4-3
    :precondition  (and 
      (l0b)
      (g2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l0b) (g2c) )
         (and (not (g2c)) (not (h1c)) (j1c) (c2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k8c) (czd) )
         (and (not (czd)) (not (gyd)) (not (g2c)) (not (h1c)) (j1c) (c2c) (hyd) (bzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (bzd)) (not (j8c)) )
         (and (not (czd)) (not (gyd)) (not (g2c)) (not (h1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (r5f) )
         (and (not (r5f)) (not (qsf)) (msf) (t5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (u5f) )
         (and (not (u5f)) (not (tsf)) (rsf) (v5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (x5f) )
         (and (not (x5f)) (not (vsf)) (usf) (y5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (z5f) )
         (and (not (z5f)) (not (ysf)) (xsf) (b6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (c6f) )
         (and (not (c6f)) (not (brf)) (zsf) (g6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (h6f) )
         (and (not (h6f)) (not (grf)) (crf) (j6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (k6f) )
         (and (not (k6f)) (not (jrf)) (hrf) (l6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (m6f) )
         (and (not (m6f)) (not (lrf)) (krf) (q6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (r6f) )
         (and (not (r6f)) (not (qrf)) (mrf) (t6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (u6f) )
         (and (not (u6f)) (not (trf)) (rrf) (v6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (x6f) )
         (and (not (x6f)) (not (vrf)) (urf) (y6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (xqf) (z6f) )
         (and (not (z6f)) (not (yrf)) (xrf) (b7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (c7f) )
         (and (not (c7f)) (not (btf)) (zrf) (g7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (h7f) )
         (and (not (h7f)) (not (gtf)) (ctf) (j7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (k7f) )
         (and (not (k7f)) (not (jtf)) (htf) (l7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (m7f) )
         (and (not (m7f)) (not (ltf)) (ktf) (q7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (r7f) )
         (and (not (r7f)) (not (qtf)) (mtf) (t7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (u7f) )
         (and (not (u7f)) (not (ttf)) (rtf) (v7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (x7f) )
         (and (not (x7f)) (not (vtf)) (utf) (y7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (z7f) )
         (and (not (z7f)) (not (ytf)) (xtf) (b8f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (c8f) )
         (and (not (c8f)) (not (buf)) (ztf) (g8f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t5f)) (not (j8c)) )
         (and (not (r5f)) (not (qsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v5f)) (not (j8c)) )
         (and (not (u5f)) (not (tsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5f)) (not (j8c)) )
         (and (not (x5f)) (not (vsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6f)) (not (j8c)) )
         (and (not (z5f)) (not (ysf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6f)) (not (j8c)) )
         (and (not (c6f)) (not (brf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6f)) (not (j8c)) )
         (and (not (h6f)) (not (grf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6f)) (not (j8c)) )
         (and (not (k6f)) (not (jrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6f)) (not (bsf)) )
         (and (not (m6f)) (not (lrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6f)) (not (csf)) )
         (and (not (r6f)) (not (qrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6f)) (not (gsf)) )
         (and (not (u6f)) (not (trf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6f)) (not (hsf)) )
         (and (not (x6f)) (not (vrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7f)) (not (jsf)) )
         (and (not (z6f)) (not (yrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7f)) (not (ksf)) )
         (and (not (c7f)) (not (btf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7f)) (not (lsf)) )
         (and (not (h7f)) (not (gtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7f)) (not (j8c)) )
         (and (not (k7f)) (not (jtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7f)) (not (j8c)) )
         (and (not (m7f)) (not (ltf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7f)) (not (j8c)) )
         (and (not (r7f)) (not (qtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7f)) (not (j8c)) )
         (and (not (u7f)) (not (ttf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7f)) (not (j8c)) )
         (and (not (x7f)) (not (vtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8f)) (not (j8c)) )
         (and (not (z7f)) (not (ytf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8f)) (not (j8c)) )
         (and (not (c8f)) (not (buf)) ))

    )
  )
  (:action MOVE_P5-3_P5-2
    :precondition  (and 
      (t9b)
      (g2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t9b) (g2c) )
         (and (not (g2c)) (not (z1c)) (b2c) (c2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r7c) (czd) )
         (and (not (czd)) (not (yyd)) (not (g2c)) (not (z1c)) (b2c) (c2c) (zyd) (bzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (bzd)) (not (q7c)) )
         (and (not (czd)) (not (yyd)) (not (g2c)) (not (z1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (r5f) )
         (and (not (geh)) (not (r5f)) (t5f) (ceh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (u5f) )
         (and (not (jeh)) (not (u5f)) (v5f) (heh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (x5f) )
         (and (not (leh)) (not (x5f)) (y5f) (keh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (z5f) )
         (and (not (qeh)) (not (z5f)) (b6f) (meh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (c6f) )
         (and (not (teh)) (not (c6f)) (g6f) (reh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (h6f) )
         (and (not (veh)) (not (h6f)) (j6f) (ueh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (k6f) )
         (and (not (yeh)) (not (k6f)) (l6f) (xeh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (m6f) )
         (and (not (bfh)) (not (m6f)) (q6f) (zeh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (r6f) )
         (and (not (gfh)) (not (r6f)) (t6f) (cfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (u6f) )
         (and (not (jfh)) (not (u6f)) (v6f) (hfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (x6f) )
         (and (not (lfh)) (not (x6f)) (y6f) (kfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (z6f) )
         (and (not (qfh)) (not (z6f)) (b7f) (mfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (c7f) )
         (and (not (tfh)) (not (c7f)) (g7f) (rfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (h7f) )
         (and (not (vfh)) (not (h7f)) (j7f) (ufh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (k7f) )
         (and (not (yfh)) (not (k7f)) (l7f) (xfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (m7f) )
         (and (not (bgh)) (not (m7f)) (q7f) (zfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (r7f) )
         (and (not (ggh)) (not (r7f)) (t7f) (cgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (u7f) )
         (and (not (jgh)) (not (u7f)) (v7f) (hgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (x7f) )
         (and (not (lgh)) (not (x7f)) (y7f) (kgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (z7f) )
         (and (not (qgh)) (not (z7f)) (b8f) (mgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (c8f) )
         (and (not (tgh)) (not (c8f)) (g8f) (rgh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t5f)) (not (q7c)) )
         (and (not (geh)) (not (r5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v5f)) (not (q7c)) )
         (and (not (jeh)) (not (u5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5f)) (not (q7c)) )
         (and (not (leh)) (not (x5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6f)) (not (q7c)) )
         (and (not (qeh)) (not (z5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6f)) (not (q7c)) )
         (and (not (teh)) (not (c6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6f)) (not (q7c)) )
         (and (not (veh)) (not (h6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6f)) (not (q7c)) )
         (and (not (yeh)) (not (k6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6f)) (not (q7c)) )
         (and (not (bfh)) (not (m6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6f)) (not (q7c)) )
         (and (not (gfh)) (not (r6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6f)) (not (q7c)) )
         (and (not (jfh)) (not (u6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6f)) (not (q7c)) )
         (and (not (lfh)) (not (x6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7f)) (not (q7c)) )
         (and (not (qfh)) (not (z6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7f)) (not (q7c)) )
         (and (not (tfh)) (not (c7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7f)) (not (q7c)) )
         (and (not (vfh)) (not (h7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7f)) (not (q7c)) )
         (and (not (yfh)) (not (k7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7f)) (not (q7c)) )
         (and (not (bgh)) (not (m7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7f)) (not (q7c)) )
         (and (not (ggh)) (not (r7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7f)) (not (q7c)) )
         (and (not (jgh)) (not (u7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7f)) (not (q7c)) )
         (and (not (lgh)) (not (x7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8f)) (not (q7c)) )
         (and (not (qgh)) (not (z7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8f)) (not (q7c)) )
         (and (not (tgh)) (not (c8f)) ))

    )
  )
  (:action MOVE_P5-3_P5-4
    :precondition  (and 
      (l9b)
      (g2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l9b) (g2c) )
         (and (not (h2c)) (not (g2c)) (c2c) (j2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k7c) (czd) )
         (and (not (gzd)) (not (czd)) (not (h2c)) (not (g2c)) (c2c) (j2c) (bzd) (hzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (bzd)) (not (j7c)) )
         (and (not (gzd)) (not (czd)) (not (h2c)) (not (g2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (r5f) )
         (and (not (r5f)) (not (guf)) (cuf) (t5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (u5f) )
         (and (not (u5f)) (not (juf)) (huf) (v5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (x5f) )
         (and (not (x5f)) (not (luf)) (kuf) (y5f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (z5f) )
         (and (not (z5f)) (not (quf)) (muf) (b6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (c6f) )
         (and (not (c6f)) (not (tuf)) (ruf) (g6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (h6f) )
         (and (not (h6f)) (not (vuf)) (uuf) (j6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (k6f) )
         (and (not (k6f)) (not (yuf)) (xuf) (l6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (m6f) )
         (and (not (m6f)) (not (bvf)) (zuf) (q6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (r6f) )
         (and (not (r6f)) (not (gvf)) (cvf) (t6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (u6f) )
         (and (not (u6f)) (not (jvf)) (hvf) (v6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (x6f) )
         (and (not (x6f)) (not (lvf)) (kvf) (y6f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (z6f) )
         (and (not (z6f)) (not (qvf)) (mvf) (b7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (c7f) )
         (and (not (c7f)) (not (tvf)) (rvf) (g7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (h7f) )
         (and (not (h7f)) (not (vvf)) (uvf) (j7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (k7f) )
         (and (not (k7f)) (not (yvf)) (xvf) (l7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (m7f) )
         (and (not (m7f)) (not (bwf)) (zvf) (q7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (r7f) )
         (and (not (r7f)) (not (gwf)) (cwf) (t7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (u7f) )
         (and (not (u7f)) (not (jwf)) (hwf) (v7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (x7f) )
         (and (not (x7f)) (not (lwf)) (kwf) (y7f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (z7f) )
         (and (not (z7f)) (not (qwf)) (mwf) (b8f) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k7c) (c8f) )
         (and (not (c8f)) (not (twf)) (rwf) (g8f) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t5f)) (not (j7c)) )
         (and (not (r5f)) (not (guf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v5f)) (not (j7c)) )
         (and (not (u5f)) (not (juf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5f)) (not (j7c)) )
         (and (not (x5f)) (not (luf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6f)) (not (j7c)) )
         (and (not (z5f)) (not (quf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6f)) (not (j7c)) )
         (and (not (c6f)) (not (tuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6f)) (not (j7c)) )
         (and (not (h6f)) (not (vuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6f)) (not (j7c)) )
         (and (not (k6f)) (not (yuf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6f)) (not (j7c)) )
         (and (not (m6f)) (not (bvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6f)) (not (j7c)) )
         (and (not (r6f)) (not (gvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6f)) (not (j7c)) )
         (and (not (u6f)) (not (jvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6f)) (not (j7c)) )
         (and (not (x6f)) (not (lvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7f)) (not (j7c)) )
         (and (not (z6f)) (not (qvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7f)) (not (j7c)) )
         (and (not (c7f)) (not (tvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7f)) (not (j7c)) )
         (and (not (h7f)) (not (vvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7f)) (not (j7c)) )
         (and (not (k7f)) (not (yvf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7f)) (not (j7c)) )
         (and (not (m7f)) (not (bwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7f)) (not (j7c)) )
         (and (not (r7f)) (not (gwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7f)) (not (j7c)) )
         (and (not (u7f)) (not (jwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7f)) (not (j7c)) )
         (and (not (x7f)) (not (lwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8f)) (not (j7c)) )
         (and (not (z7f)) (not (qwf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8f)) (not (j7c)) )
         (and (not (c8f)) (not (twf)) ))

    )
  )
  (:action MOVE_P5-3_P6-3
    :precondition  (and 
      (t8b)
      (g2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t8b) (g2c) )
         (and (not (z2c)) (not (g2c)) (c2c) (b3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r6c) (czd) )
         (and (not (yzd)) (not (czd)) (not (z2c)) (not (g2c)) (c2c) (b3c) (bzd) (zzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (bzd)) (not (q6c)) )
         (and (not (yzd)) (not (czd)) (not (z2c)) (not (g2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (r5f) )
         (and (not (gmg)) (not (r5f)) (t5f) (cmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (u5f) )
         (and (not (jmg)) (not (u5f)) (v5f) (hmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (x5f) )
         (and (not (lmg)) (not (x5f)) (y5f) (kmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (z5f) )
         (and (not (qmg)) (not (z5f)) (b6f) (mmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c6f) (mlg) )
         (and (not (tmg)) (not (c6f)) (g6f) (rmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (h6f) )
         (and (not (vmg)) (not (h6f)) (j6f) (umg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (k6f) )
         (and (not (ymg)) (not (k6f)) (l6f) (xmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (m6f) )
         (and (not (bng)) (not (m6f)) (q6f) (zmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (r6f) )
         (and (not (gng)) (not (r6f)) (t6f) (cng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (u6f) )
         (and (not (jng)) (not (u6f)) (v6f) (hng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (x6f) )
         (and (not (lng)) (not (x6f)) (y6f) (kng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (z6f) )
         (and (not (qng)) (not (z6f)) (b7f) (mng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (c7f) )
         (and (not (tng)) (not (c7f)) (g7f) (rng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (h7f) )
         (and (not (vng)) (not (h7f)) (j7f) (ung) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (k7f) )
         (and (not (yng)) (not (k7f)) (l7f) (xng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (m7f) )
         (and (not (bog)) (not (m7f)) (q7f) (zng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (r7f) )
         (and (not (gog)) (not (r7f)) (t7f) (cog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (u7f) )
         (and (not (jog)) (not (u7f)) (v7f) (hog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (x7f) )
         (and (not (log)) (not (x7f)) (y7f) (kog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (z7f) )
         (and (not (qog)) (not (z7f)) (b8f) (mog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (c8f) )
         (and (not (tog)) (not (c8f)) (g8f) (rog) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tlg)) (not (t5f)) )
         (and (not (gmg)) (not (r5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ulg)) (not (v5f)) )
         (and (not (jmg)) (not (u5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vlg)) (not (y5f)) )
         (and (not (lmg)) (not (x5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (xlg)) (not (b6f)) )
         (and (not (qmg)) (not (z5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ylg)) (not (g6f)) )
         (and (not (tmg)) (not (c6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (zlg)) (not (j6f)) )
         (and (not (vmg)) (not (h6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bmg)) (not (l6f)) )
         (and (not (ymg)) (not (k6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6f)) (not (q6c)) )
         (and (not (bng)) (not (m6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6f)) (not (q6c)) )
         (and (not (gng)) (not (r6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6f)) (not (q6c)) )
         (and (not (jng)) (not (u6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6f)) (not (q6c)) )
         (and (not (lng)) (not (x6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7f)) (not (q6c)) )
         (and (not (qng)) (not (z6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7f)) (not (q6c)) )
         (and (not (tng)) (not (c7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7f)) (not (q6c)) )
         (and (not (vng)) (not (h7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7f)) (not (q6c)) )
         (and (not (yng)) (not (k7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7f)) (not (q6c)) )
         (and (not (bog)) (not (m7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7f)) (not (q6c)) )
         (and (not (gog)) (not (r7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7f)) (not (q6c)) )
         (and (not (jog)) (not (u7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7f)) (not (q6c)) )
         (and (not (log)) (not (x7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8f)) (not (q6c)) )
         (and (not (qog)) (not (z7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8f)) (not (q6c)) )
         (and (not (tog)) (not (c8f)) ))

    )
  )
  (:action MOVE_P6-3_P5-3
    :precondition  (and 
      (q9b)
      (b3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q9b) (b3c) )
         (and (not (b3c)) (not (c2c)) (g2c) (z2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m7c) (zzd) )
         (and (not (zzd)) (not (bzd)) (not (b3c)) (not (c2c)) (g2c) (z2c) (czd) (yzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yzd)) (not (l7c)) )
         (and (not (zzd)) (not (bzd)) (not (b3c)) (not (c2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (cmg) )
         (and (not (cmg)) (not (t5f)) (r5f) (gmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (hmg) )
         (and (not (hmg)) (not (v5f)) (u5f) (jmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (kmg) )
         (and (not (kmg)) (not (y5f)) (x5f) (lmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (mmg) )
         (and (not (mmg)) (not (b6f)) (z5f) (qmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (rmg) )
         (and (not (rmg)) (not (g6f)) (c6f) (tmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (umg) )
         (and (not (umg)) (not (j6f)) (h6f) (vmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (xmg) )
         (and (not (xmg)) (not (l6f)) (k6f) (ymg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (zmg) )
         (and (not (zmg)) (not (q6f)) (m6f) (bng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (cng) )
         (and (not (cng)) (not (t6f)) (r6f) (gng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (hng) )
         (and (not (hng)) (not (v6f)) (u6f) (jng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (kng) )
         (and (not (kng)) (not (y6f)) (x6f) (lng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (mng) )
         (and (not (mng)) (not (b7f)) (z6f) (qng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (rng) )
         (and (not (rng)) (not (g7f)) (c7f) (tng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (ung) )
         (and (not (ung)) (not (j7f)) (h7f) (vng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (xng) )
         (and (not (xng)) (not (l7f)) (k7f) (yng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (zng) )
         (and (not (zng)) (not (q7f)) (m7f) (bog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (cog) )
         (and (not (cog)) (not (t7f)) (r7f) (gog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (hog) )
         (and (not (hog)) (not (v7f)) (u7f) (jog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (kog) )
         (and (not (kog)) (not (y7f)) (x7f) (log) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (mog) )
         (and (not (mog)) (not (b8f)) (z7f) (qog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (rog) )
         (and (not (rog)) (not (g8f)) (c8f) (tog) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gmg)) (not (l7c)) )
         (and (not (cmg)) (not (t5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jmg)) (not (l7c)) )
         (and (not (hmg)) (not (v5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lmg)) (not (l7c)) )
         (and (not (kmg)) (not (y5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qmg)) (not (l7c)) )
         (and (not (mmg)) (not (b6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tmg)) (not (l7c)) )
         (and (not (rmg)) (not (g6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vmg)) (not (l7c)) )
         (and (not (umg)) (not (j6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ymg)) (not (l7c)) )
         (and (not (xmg)) (not (l6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bng)) (not (l7c)) )
         (and (not (zmg)) (not (q6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gng)) (not (l7c)) )
         (and (not (cng)) (not (t6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jng)) (not (l7c)) )
         (and (not (hng)) (not (v6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lng)) (not (l7c)) )
         (and (not (kng)) (not (y6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qng)) (not (l7c)) )
         (and (not (mng)) (not (b7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tng)) (not (l7c)) )
         (and (not (rng)) (not (g7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vng)) (not (l7c)) )
         (and (not (ung)) (not (j7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yng)) (not (l7c)) )
         (and (not (xng)) (not (l7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bog)) (not (l7c)) )
         (and (not (zng)) (not (q7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gog)) (not (l7c)) )
         (and (not (cog)) (not (t7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jog)) (not (l7c)) )
         (and (not (hog)) (not (v7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (log)) (not (l7c)) )
         (and (not (kog)) (not (y7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qog)) (not (l7c)) )
         (and (not (mog)) (not (b8f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tog)) (not (l7c)) )
         (and (not (rog)) (not (g8f)) ))

    )
  )
  (:action MOVE_P6-3_P6-2
    :precondition  (and 
      (v8b)
      (b3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v8b) (b3c) )
         (and (not (b3c)) (not (x2c)) (y2c) (z2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u6c) (zzd) )
         (and (not (zzd)) (not (vzd)) (not (b3c)) (not (x2c)) (y2c) (z2c) (xzd) (yzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yzd)) (not (t6c)) )
         (and (not (zzd)) (not (vzd)) (not (b3c)) (not (x2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (cmg) )
         (and (not (thh)) (not (cmg)) (gmg) (rhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (hmg) )
         (and (not (vhh)) (not (hmg)) (jmg) (uhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (kmg) )
         (and (not (yhh)) (not (kmg)) (lmg) (xhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (mmg) )
         (and (not (bih)) (not (mmg)) (qmg) (zhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (rmg) )
         (and (not (gih)) (not (rmg)) (tmg) (cih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (umg) (bhh) )
         (and (not (jih)) (not (umg)) (vmg) (hih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (xmg) )
         (and (not (lih)) (not (xmg)) (ymg) (kih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (zmg) )
         (and (not (qih)) (not (zmg)) (bng) (mih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (cng) )
         (and (not (tih)) (not (cng)) (gng) (rih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (hng) )
         (and (not (vih)) (not (hng)) (jng) (uih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (kng) )
         (and (not (yih)) (not (kng)) (lng) (xih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (mng) )
         (and (not (bjh)) (not (mng)) (qng) (zih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (rng) )
         (and (not (gjh)) (not (rng)) (tng) (cjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (ung) )
         (and (not (jjh)) (not (ung)) (vng) (hjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (xng) )
         (and (not (ljh)) (not (xng)) (yng) (kjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (zng) )
         (and (not (qjh)) (not (zng)) (bog) (mjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (cog) )
         (and (not (tjh)) (not (cog)) (gog) (rjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (hog) )
         (and (not (vjh)) (not (hog)) (jog) (ujh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (kog) )
         (and (not (yjh)) (not (kog)) (log) (xjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (mog) )
         (and (not (bkh)) (not (mog)) (qog) (zjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (rog) )
         (and (not (gkh)) (not (rog)) (tog) (ckh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghh)) (not (gmg)) )
         (and (not (thh)) (not (cmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hhh)) (not (jmg)) )
         (and (not (vhh)) (not (hmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhh)) (not (lmg)) )
         (and (not (yhh)) (not (kmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (khh)) (not (qmg)) )
         (and (not (bih)) (not (mmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhh)) (not (tmg)) )
         (and (not (gih)) (not (rmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mhh)) (not (vmg)) )
         (and (not (jih)) (not (umg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhh)) (not (ymg)) )
         (and (not (lih)) (not (xmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bng)) (not (t6c)) )
         (and (not (qih)) (not (zmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gng)) (not (t6c)) )
         (and (not (tih)) (not (cng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jng)) (not (t6c)) )
         (and (not (vih)) (not (hng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lng)) (not (t6c)) )
         (and (not (yih)) (not (kng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qng)) (not (t6c)) )
         (and (not (bjh)) (not (mng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tng)) (not (t6c)) )
         (and (not (gjh)) (not (rng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vng)) (not (t6c)) )
         (and (not (jjh)) (not (ung)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yng)) (not (t6c)) )
         (and (not (ljh)) (not (xng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bog)) (not (t6c)) )
         (and (not (qjh)) (not (zng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gog)) (not (t6c)) )
         (and (not (tjh)) (not (cog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jog)) (not (t6c)) )
         (and (not (vjh)) (not (hog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (log)) (not (t6c)) )
         (and (not (yjh)) (not (kog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qog)) (not (t6c)) )
         (and (not (bkh)) (not (mog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tog)) (not (t6c)) )
         (and (not (gkh)) (not (rog)) ))

    )
  )
  (:action MOVE_P6-3_P6-4
    :precondition  (and 
      (q8b)
      (b3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q8b) (b3c) )
         (and (not (c3c)) (not (b3c)) (z2c) (g3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m6c) (zzd) )
         (and (not (b1d)) (not (zzd)) (not (c3c)) (not (b3c)) (z2c) (g3c) (yzd) (c1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yzd)) (not (l6c)) )
         (and (not (b1d)) (not (zzd)) (not (c3c)) (not (b3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (cmg) )
         (and (not (cmg)) (not (g9f)) (c9f) (gmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (hmg) )
         (and (not (hmg)) (not (j9f)) (h9f) (jmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (kmg) )
         (and (not (kmg)) (not (l9f)) (k9f) (lmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (l8f) (mmg) )
         (and (not (mmg)) (not (q9f)) (m9f) (qmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (rmg) )
         (and (not (rmg)) (not (t9f)) (r9f) (tmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (umg) )
         (and (not (umg)) (not (v9f)) (u9f) (vmg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (xmg) )
         (and (not (xmg)) (not (y9f)) (x9f) (ymg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (zmg) )
         (and (not (zmg)) (not (b0f)) (z9f) (bng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (cng) )
         (and (not (cng)) (not (g0f)) (c0f) (gng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (hng) )
         (and (not (hng)) (not (j0f)) (h0f) (jng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (kng) )
         (and (not (kng)) (not (l0f)) (k0f) (lng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (mng) )
         (and (not (mng)) (not (q0f)) (m0f) (qng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (rng) )
         (and (not (rng)) (not (t0f)) (r0f) (tng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (ung) )
         (and (not (ung)) (not (v0f)) (u0f) (vng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (xng) )
         (and (not (xng)) (not (y0f)) (x0f) (yng) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (zng) )
         (and (not (zng)) (not (bag)) (z0f) (bog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (cog) )
         (and (not (cog)) (not (gag)) (cag) (gog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (hog) )
         (and (not (hog)) (not (jag)) (hag) (jog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (kog) )
         (and (not (kog)) (not (lag)) (kag) (log) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (mog) )
         (and (not (mog)) (not (qag)) (mag) (qog) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m6c) (rog) )
         (and (not (rog)) (not (tag)) (rag) (tog) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gmg)) (not (t8f)) )
         (and (not (cmg)) (not (g9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jmg)) (not (u8f)) )
         (and (not (hmg)) (not (j9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lmg)) (not (v8f)) )
         (and (not (kmg)) (not (l9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qmg)) (not (x8f)) )
         (and (not (mmg)) (not (q9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tmg)) (not (y8f)) )
         (and (not (rmg)) (not (t9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vmg)) (not (z8f)) )
         (and (not (umg)) (not (v9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ymg)) (not (b9f)) )
         (and (not (xmg)) (not (y9f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bng)) (not (l6c)) )
         (and (not (zmg)) (not (b0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gng)) (not (l6c)) )
         (and (not (cng)) (not (g0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jng)) (not (l6c)) )
         (and (not (hng)) (not (j0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lng)) (not (l6c)) )
         (and (not (kng)) (not (l0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qng)) (not (l6c)) )
         (and (not (mng)) (not (q0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tng)) (not (l6c)) )
         (and (not (rng)) (not (t0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vng)) (not (l6c)) )
         (and (not (ung)) (not (v0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yng)) (not (l6c)) )
         (and (not (xng)) (not (y0f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bog)) (not (l6c)) )
         (and (not (zng)) (not (bag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gog)) (not (l6c)) )
         (and (not (cog)) (not (gag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jog)) (not (l6c)) )
         (and (not (hog)) (not (jag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (log)) (not (l6c)) )
         (and (not (kog)) (not (lag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qog)) (not (l6c)) )
         (and (not (mog)) (not (qag)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tog)) (not (l6c)) )
         (and (not (rog)) (not (tag)) ))

    )
  )
  (:action MOVE_P6-3_P7-3
    :precondition  (and 
      (v7b)
      (b3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v7b) (b3c) )
         (and (not (x3c)) (not (b3c)) (z2c) (y3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u5c) (zzd) )
         (and (not (v1d)) (not (zzd)) (not (x3c)) (not (b3c)) (z2c) (y3c) (yzd) (x1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yzd)) (not (t5c)) )
         (and (not (v1d)) (not (zzd)) (not (x3c)) (not (b3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (cmg) )
         (and (not (jzg)) (not (cmg)) (gmg) (hzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (hmg) )
         (and (not (lzg)) (not (hmg)) (jmg) (kzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (kmg) )
         (and (not (qzg)) (not (kmg)) (lmg) (mzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (mmg) )
         (and (not (tzg)) (not (mmg)) (qmg) (rzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (rmg) )
         (and (not (vzg)) (not (rmg)) (tmg) (uzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (umg) )
         (and (not (yzg)) (not (umg)) (vmg) (xzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (xmg) )
         (and (not (b1g)) (not (xmg)) (ymg) (zzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (zmg) )
         (and (not (g1g)) (not (zmg)) (bng) (c1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (cng) )
         (and (not (j1g)) (not (cng)) (gng) (h1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (hng) )
         (and (not (l1g)) (not (hng)) (jng) (k1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (kng) )
         (and (not (q1g)) (not (kng)) (lng) (m1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (mng) )
         (and (not (t1g)) (not (mng)) (qng) (r1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (rng) )
         (and (not (v1g)) (not (rng)) (tng) (u1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (ung) )
         (and (not (y1g)) (not (ung)) (vng) (x1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (xng) )
         (and (not (b2g)) (not (xng)) (yng) (z1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (zng) )
         (and (not (g2g)) (not (zng)) (bog) (c2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (cog) )
         (and (not (j2g)) (not (cog)) (gog) (h2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (hog) )
         (and (not (l2g)) (not (hog)) (jog) (k2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (kog) )
         (and (not (q2g)) (not (kog)) (log) (m2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (mog) )
         (and (not (t2g)) (not (mog)) (qog) (r2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (rog) )
         (and (not (v2g)) (not (rog)) (tog) (u2g) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gmg)) (not (t5c)) )
         (and (not (jzg)) (not (cmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jmg)) (not (t5c)) )
         (and (not (lzg)) (not (hmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lmg)) (not (t5c)) )
         (and (not (qzg)) (not (kmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qmg)) (not (t5c)) )
         (and (not (tzg)) (not (mmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tmg)) (not (t5c)) )
         (and (not (vzg)) (not (rmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vmg)) (not (t5c)) )
         (and (not (yzg)) (not (umg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ymg)) (not (t5c)) )
         (and (not (b1g)) (not (xmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bng)) (not (t5c)) )
         (and (not (g1g)) (not (zmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gng)) (not (t5c)) )
         (and (not (j1g)) (not (cng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jng)) (not (t5c)) )
         (and (not (l1g)) (not (hng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lng)) (not (t5c)) )
         (and (not (q1g)) (not (kng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qng)) (not (t5c)) )
         (and (not (t1g)) (not (mng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tng)) (not (t5c)) )
         (and (not (v1g)) (not (rng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vng)) (not (t5c)) )
         (and (not (y1g)) (not (ung)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yng)) (not (t5c)) )
         (and (not (b2g)) (not (xng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bog)) (not (t5c)) )
         (and (not (g2g)) (not (zng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gog)) (not (t5c)) )
         (and (not (j2g)) (not (cog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jog)) (not (t5c)) )
         (and (not (l2g)) (not (hog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (log)) (not (t5c)) )
         (and (not (q2g)) (not (kog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qog)) (not (t5c)) )
         (and (not (t2g)) (not (mog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tog)) (not (t5c)) )
         (and (not (v2g)) (not (rog)) ))

    )
  )
  (:action MOVE_P7-3_P6-3
    :precondition  (and 
      (t8b)
      (y3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t8b) (y3c) )
         (and (not (y3c)) (not (z2c)) (b3c) (x3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r6c) (x1d) )
         (and (not (x1d)) (not (yzd)) (not (y3c)) (not (z2c)) (b3c) (x3c) (zzd) (v1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (v1d)) (not (q6c)) )
         (and (not (x1d)) (not (yzd)) (not (y3c)) (not (z2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (hzg) )
         (and (not (hzg)) (not (gmg)) (cmg) (jzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (kzg) )
         (and (not (kzg)) (not (jmg)) (hmg) (lzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (mzg) )
         (and (not (mzg)) (not (lmg)) (kmg) (qzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (rzg) )
         (and (not (rzg)) (not (qmg)) (mmg) (tzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (mlg) (uzg) )
         (and (not (uzg)) (not (tmg)) (rmg) (vzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (xzg) )
         (and (not (xzg)) (not (vmg)) (umg) (yzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (zzg) )
         (and (not (zzg)) (not (ymg)) (xmg) (b1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (c1g) )
         (and (not (c1g)) (not (bng)) (zmg) (g1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (h1g) )
         (and (not (h1g)) (not (gng)) (cng) (j1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (k1g) )
         (and (not (k1g)) (not (jng)) (hng) (l1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (m1g) )
         (and (not (m1g)) (not (lng)) (kng) (q1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (r1g) )
         (and (not (r1g)) (not (qng)) (mng) (t1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (u1g) )
         (and (not (u1g)) (not (tng)) (rng) (v1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (x1g) )
         (and (not (x1g)) (not (vng)) (ung) (y1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (z1g) )
         (and (not (z1g)) (not (yng)) (xng) (b2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (c2g) )
         (and (not (c2g)) (not (bog)) (zng) (g2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (h2g) )
         (and (not (h2g)) (not (gog)) (cog) (j2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (k2g) )
         (and (not (k2g)) (not (jog)) (hog) (l2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (m2g) )
         (and (not (m2g)) (not (log)) (kog) (q2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (r2g) )
         (and (not (r2g)) (not (qog)) (mog) (t2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (u2g) )
         (and (not (u2g)) (not (tog)) (rog) (v2g) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jzg)) (not (tlg)) )
         (and (not (hzg)) (not (gmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lzg)) (not (ulg)) )
         (and (not (kzg)) (not (jmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qzg)) (not (vlg)) )
         (and (not (mzg)) (not (lmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tzg)) (not (xlg)) )
         (and (not (rzg)) (not (qmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vzg)) (not (ylg)) )
         (and (not (uzg)) (not (tmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yzg)) (not (zlg)) )
         (and (not (xzg)) (not (vmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1g)) (not (bmg)) )
         (and (not (zzg)) (not (ymg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1g)) (not (q6c)) )
         (and (not (c1g)) (not (bng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1g)) (not (q6c)) )
         (and (not (h1g)) (not (gng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1g)) (not (q6c)) )
         (and (not (k1g)) (not (jng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1g)) (not (q6c)) )
         (and (not (m1g)) (not (lng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1g)) (not (q6c)) )
         (and (not (r1g)) (not (qng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1g)) (not (q6c)) )
         (and (not (u1g)) (not (tng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1g)) (not (q6c)) )
         (and (not (x1g)) (not (vng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2g)) (not (q6c)) )
         (and (not (z1g)) (not (yng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2g)) (not (q6c)) )
         (and (not (c2g)) (not (bog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2g)) (not (q6c)) )
         (and (not (h2g)) (not (gog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2g)) (not (q6c)) )
         (and (not (k2g)) (not (jog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2g)) (not (q6c)) )
         (and (not (m2g)) (not (log)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2g)) (not (q6c)) )
         (and (not (r2g)) (not (qog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2g)) (not (q6c)) )
         (and (not (u2g)) (not (tog)) ))

    )
  )
  (:action MOVE_P7-3_P7-2
    :precondition  (and 
      (y7b)
      (y3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y7b) (y3c) )
         (and (not (y3c)) (not (u3c)) (v3c) (x3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x5c) (x1d) )
         (and (not (x1d)) (not (t1d)) (not (y3c)) (not (u3c)) (v3c) (x3c) (u1d) (v1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (v1d)) (not (v5c)) )
         (and (not (x1d)) (not (t1d)) (not (y3c)) (not (u3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (hzg) )
         (and (not (jkh)) (not (hzg)) (jzg) (hkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (kzg) )
         (and (not (lkh)) (not (kzg)) (lzg) (kkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (mzg) )
         (and (not (qkh)) (not (mzg)) (qzg) (mkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (rzg) )
         (and (not (tkh)) (not (rzg)) (tzg) (rkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (uzg) )
         (and (not (vkh)) (not (uzg)) (vzg) (ukh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (xzg) )
         (and (not (ykh)) (not (xzg)) (yzg) (xkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (zzg) )
         (and (not (blh)) (not (zzg)) (b1g) (zkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (c1g) )
         (and (not (glh)) (not (c1g)) (g1g) (clh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (h1g) )
         (and (not (jlh)) (not (h1g)) (j1g) (hlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (k1g) )
         (and (not (llh)) (not (k1g)) (l1g) (klh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (m1g) )
         (and (not (qlh)) (not (m1g)) (q1g) (mlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (r1g) )
         (and (not (tlh)) (not (r1g)) (t1g) (rlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (u1g) )
         (and (not (vlh)) (not (u1g)) (v1g) (ulh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (x1g) )
         (and (not (ylh)) (not (x1g)) (y1g) (xlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (z1g) )
         (and (not (bmh)) (not (z1g)) (b2g) (zlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (c2g) )
         (and (not (gmh)) (not (c2g)) (g2g) (cmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (h2g) )
         (and (not (jmh)) (not (h2g)) (j2g) (hmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (k2g) )
         (and (not (lmh)) (not (k2g)) (l2g) (kmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (m2g) )
         (and (not (qmh)) (not (m2g)) (q2g) (mmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (r2g) )
         (and (not (tmh)) (not (r2g)) (t2g) (rmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (u2g) )
         (and (not (vmh)) (not (u2g)) (v2g) (umh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jzg)) (not (v5c)) )
         (and (not (jkh)) (not (hzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lzg)) (not (v5c)) )
         (and (not (lkh)) (not (kzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qzg)) (not (v5c)) )
         (and (not (qkh)) (not (mzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tzg)) (not (v5c)) )
         (and (not (tkh)) (not (rzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vzg)) (not (v5c)) )
         (and (not (vkh)) (not (uzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yzg)) (not (v5c)) )
         (and (not (ykh)) (not (xzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1g)) (not (v5c)) )
         (and (not (blh)) (not (zzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1g)) (not (v5c)) )
         (and (not (glh)) (not (c1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1g)) (not (v5c)) )
         (and (not (jlh)) (not (h1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1g)) (not (v5c)) )
         (and (not (llh)) (not (k1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1g)) (not (v5c)) )
         (and (not (qlh)) (not (m1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1g)) (not (v5c)) )
         (and (not (tlh)) (not (r1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1g)) (not (v5c)) )
         (and (not (vlh)) (not (u1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1g)) (not (v5c)) )
         (and (not (ylh)) (not (x1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2g)) (not (v5c)) )
         (and (not (bmh)) (not (z1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2g)) (not (v5c)) )
         (and (not (gmh)) (not (c2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2g)) (not (v5c)) )
         (and (not (jmh)) (not (h2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2g)) (not (v5c)) )
         (and (not (lmh)) (not (k2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2g)) (not (v5c)) )
         (and (not (qmh)) (not (m2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2g)) (not (v5c)) )
         (and (not (tmh)) (not (r2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2g)) (not (v5c)) )
         (and (not (vmh)) (not (u2g)) ))

    )
  )
  (:action MOVE_P7-3_P7-4
    :precondition  (and 
      (t7b)
      (y3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t7b) (y3c) )
         (and (not (z3c)) (not (y3c)) (x3c) (b4c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r5c) (x1d) )
         (and (not (y1d)) (not (x1d)) (not (z3c)) (not (y3c)) (x3c) (b4c) (v1d) (z1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (v1d)) (not (q5c)) )
         (and (not (y1d)) (not (x1d)) (not (z3c)) (not (y3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (hzg) )
         (and (not (hzg)) (not (vog)) (uog) (jzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (kzg) )
         (and (not (kzg)) (not (yog)) (xog) (lzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (mzg) )
         (and (not (mzg)) (not (bpg)) (zog) (qzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (rzg) )
         (and (not (rzg)) (not (gpg)) (cpg) (tzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (uzg) )
         (and (not (uzg)) (not (jpg)) (hpg) (vzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (xzg) )
         (and (not (xzg)) (not (lpg)) (kpg) (yzg) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (zzg) )
         (and (not (zzg)) (not (qpg)) (mpg) (b1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (c1g) )
         (and (not (c1g)) (not (tpg)) (rpg) (g1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (h1g) )
         (and (not (h1g)) (not (vpg)) (upg) (j1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (k1g) )
         (and (not (k1g)) (not (ypg)) (xpg) (l1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (m1g) )
         (and (not (m1g)) (not (bqg)) (zpg) (q1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (r1g) )
         (and (not (r1g)) (not (gqg)) (cqg) (t1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (u1g) )
         (and (not (u1g)) (not (jqg)) (hqg) (v1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (x1g) )
         (and (not (x1g)) (not (lqg)) (kqg) (y1g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (z1g) )
         (and (not (z1g)) (not (qqg)) (mqg) (b2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (c2g) )
         (and (not (c2g)) (not (tqg)) (rqg) (g2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (h2g) )
         (and (not (h2g)) (not (vqg)) (uqg) (j2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (k2g) )
         (and (not (k2g)) (not (yqg)) (xqg) (l2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (m2g) )
         (and (not (m2g)) (not (bsg)) (zqg) (q2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (r2g) )
         (and (not (r2g)) (not (gsg)) (csg) (t2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r5c) (u2g) )
         (and (not (u2g)) (not (jsg)) (hsg) (v2g) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jzg)) (not (q5c)) )
         (and (not (hzg)) (not (vog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lzg)) (not (q5c)) )
         (and (not (kzg)) (not (yog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qzg)) (not (q5c)) )
         (and (not (mzg)) (not (bpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tzg)) (not (q5c)) )
         (and (not (rzg)) (not (gpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vzg)) (not (q5c)) )
         (and (not (uzg)) (not (jpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yzg)) (not (q5c)) )
         (and (not (xzg)) (not (lpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1g)) (not (q5c)) )
         (and (not (zzg)) (not (qpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1g)) (not (q5c)) )
         (and (not (c1g)) (not (tpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1g)) (not (q5c)) )
         (and (not (h1g)) (not (vpg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1g)) (not (q5c)) )
         (and (not (k1g)) (not (ypg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1g)) (not (q5c)) )
         (and (not (m1g)) (not (bqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1g)) (not (q5c)) )
         (and (not (r1g)) (not (gqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1g)) (not (q5c)) )
         (and (not (u1g)) (not (jqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1g)) (not (q5c)) )
         (and (not (x1g)) (not (lqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2g)) (not (q5c)) )
         (and (not (z1g)) (not (qqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2g)) (not (q5c)) )
         (and (not (c2g)) (not (tqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2g)) (not (q5c)) )
         (and (not (h2g)) (not (vqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2g)) (not (q5c)) )
         (and (not (k2g)) (not (yqg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2g)) (not (q5c)) )
         (and (not (m2g)) (not (bsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2g)) (not (q5c)) )
         (and (not (r2g)) (not (gsg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v2g)) (not (q5c)) )
         (and (not (u2g)) (not (jsg)) ))

    )
  )
  (:action MOVE_P1-2_P1-1
    :precondition  (and 
      (jcc)
      (txc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (jcc) (txc) )
         (and (not (txc)) (not (mxc)) (qxc) (rxc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (had) (rvd) )
         (and (not (rvd)) (not (lvd)) (not (txc)) (not (mxc)) (qxc) (rxc) (mvd) (qvd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qvd)) (not (gad)) )
         (and (not (rvd)) (not (lvd)) (not (txc)) (not (mxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (x2g) )
         (and (not (ymh)) (not (x2g)) (y2g) (xmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (z2g) )
         (and (not (bnh)) (not (z2g)) (b3g) (zmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (c3g) )
         (and (not (gnh)) (not (c3g)) (g3g) (cnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (h3g) )
         (and (not (jnh)) (not (h3g)) (j3g) (hnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (k3g) )
         (and (not (lnh)) (not (k3g)) (l3g) (knh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (m3g) )
         (and (not (qnh)) (not (m3g)) (q3g) (mnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (r3g) )
         (and (not (tnh)) (not (r3g)) (t3g) (rnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (u3g) )
         (and (not (vnh)) (not (u3g)) (v3g) (unh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (x3g) )
         (and (not (ynh)) (not (x3g)) (y3g) (xnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (z3g) )
         (and (not (boh)) (not (z3g)) (b4g) (znh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (c4g) )
         (and (not (goh)) (not (c4g)) (g4g) (coh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (h4g) )
         (and (not (joh)) (not (h4g)) (j4g) (hoh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (k4g) )
         (and (not (loh)) (not (k4g)) (l4g) (koh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (m4g) )
         (and (not (qoh)) (not (m4g)) (q4g) (moh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (r4g) )
         (and (not (toh)) (not (r4g)) (t4g) (roh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (u4g) )
         (and (not (voh)) (not (u4g)) (v4g) (uoh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (x4g) )
         (and (not (yoh)) (not (x4g)) (y4g) (xoh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (z4g) )
         (and (not (bph)) (not (z4g)) (b5g) (zoh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (c5g) )
         (and (not (gph)) (not (c5g)) (g5g) (cph) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (h5g) )
         (and (not (jph)) (not (h5g)) (j5g) (hph) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (k5g) )
         (and (not (lph)) (not (k5g)) (l5g) (kph) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2g)) (not (gad)) )
         (and (not (ymh)) (not (x2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b3g)) (not (gad)) )
         (and (not (bnh)) (not (z2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3g)) (not (gad)) )
         (and (not (gnh)) (not (c3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3g)) (not (gad)) )
         (and (not (jnh)) (not (h3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3g)) (not (gad)) )
         (and (not (lnh)) (not (k3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3g)) (not (gad)) )
         (and (not (qnh)) (not (m3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3g)) (not (gad)) )
         (and (not (tnh)) (not (r3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3g)) (not (gad)) )
         (and (not (vnh)) (not (u3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3g)) (not (gad)) )
         (and (not (ynh)) (not (x3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4g)) (not (gad)) )
         (and (not (boh)) (not (z3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4g)) (not (gad)) )
         (and (not (goh)) (not (c4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4g)) (not (gad)) )
         (and (not (joh)) (not (h4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4g)) (not (gad)) )
         (and (not (loh)) (not (k4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4g)) (not (gad)) )
         (and (not (qoh)) (not (m4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4g)) (not (gad)) )
         (and (not (toh)) (not (r4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4g)) (not (gad)) )
         (and (not (voh)) (not (u4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4g)) (not (gad)) )
         (and (not (yoh)) (not (x4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5g)) (not (gad)) )
         (and (not (bph)) (not (z4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5g)) (not (gad)) )
         (and (not (gph)) (not (c5g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5g)) (not (gad)) )
         (and (not (jph)) (not (h5g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5g)) (not (gad)) )
         (and (not (lph)) (not (k5g)) ))

    )
  )
  (:action MOVE_P1-2_P1-3
    :precondition  (and 
      (bcc)
      (txc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (bcc) (txc) )
         (and (not (uxc)) (not (txc)) (rxc) (vxc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z0c) (rvd) )
         (and (not (tvd)) (not (rvd)) (not (uxc)) (not (txc)) (rxc) (vxc) (qvd) (uvd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qvd)) (not (y0c)) )
         (and (not (tvd)) (not (rvd)) (not (uxc)) (not (txc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (x2g) )
         (and (not (x2g)) (not (q8d)) (m8d) (y2g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (z2g) )
         (and (not (z2g)) (not (t8d)) (r8d) (b3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (c3g) )
         (and (not (c3g)) (not (v8d)) (u8d) (g3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (h3g) )
         (and (not (h3g)) (not (y8d)) (x8d) (j3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (k3g) )
         (and (not (k3g)) (not (b9d)) (z8d) (l3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (m3g) )
         (and (not (m3g)) (not (g9d)) (c9d) (q3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (r3g) )
         (and (not (r3g)) (not (j9d)) (h9d) (t3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (u3g) )
         (and (not (u3g)) (not (l9d)) (k9d) (v3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (x3g) )
         (and (not (x3g)) (not (q9d)) (m9d) (y3g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (z3g) )
         (and (not (z3g)) (not (t9d)) (r9d) (b4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (c4g) )
         (and (not (c4g)) (not (v9d)) (u9d) (g4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (h4g) )
         (and (not (h4g)) (not (y9d)) (x9d) (j4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (k4g) )
         (and (not (k4g)) (not (b0d)) (z9d) (l4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (m4g) )
         (and (not (m4g)) (not (g0d)) (c0d) (q4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (r4g) )
         (and (not (r4g)) (not (j0d)) (h0d) (t4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (u4g) )
         (and (not (u4g)) (not (l0d)) (k0d) (v4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (x4g) )
         (and (not (x4g)) (not (q0d)) (m0d) (y4g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (z4g) )
         (and (not (z4g)) (not (t0d)) (r0d) (b5g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (c5g) )
         (and (not (c5g)) (not (v0d)) (u0d) (g5g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (h5g) )
         (and (not (h5g)) (not (y0d)) (x0d) (j5g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z0c) (k5g) )
         (and (not (k5g)) (not (bae)) (z0d) (l5g) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2g)) (not (y0c)) )
         (and (not (x2g)) (not (q8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b3g)) (not (y0c)) )
         (and (not (z2g)) (not (t8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3g)) (not (y0c)) )
         (and (not (c3g)) (not (v8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3g)) (not (y0c)) )
         (and (not (h3g)) (not (y8d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3g)) (not (y0c)) )
         (and (not (k3g)) (not (b9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3g)) (not (y0c)) )
         (and (not (m3g)) (not (g9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3g)) (not (y0c)) )
         (and (not (r3g)) (not (j9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3g)) (not (y0c)) )
         (and (not (u3g)) (not (l9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3g)) (not (y0c)) )
         (and (not (x3g)) (not (q9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4g)) (not (y0c)) )
         (and (not (z3g)) (not (t9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4g)) (not (y0c)) )
         (and (not (c4g)) (not (v9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4g)) (not (y0c)) )
         (and (not (h4g)) (not (y9d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4g)) (not (y0c)) )
         (and (not (k4g)) (not (b0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4g)) (not (y0c)) )
         (and (not (m4g)) (not (g0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4g)) (not (y0c)) )
         (and (not (r4g)) (not (j0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4g)) (not (y0c)) )
         (and (not (u4g)) (not (l0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4g)) (not (y0c)) )
         (and (not (x4g)) (not (q0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5g)) (not (y0c)) )
         (and (not (z4g)) (not (t0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5g)) (not (y0c)) )
         (and (not (c5g)) (not (v0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5g)) (not (y0c)) )
         (and (not (h5g)) (not (y0d)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5g)) (not (y0c)) )
         (and (not (k5g)) (not (bae)) ))

    )
  )
  (:action MOVE_P1-2_P2-2
    :precondition  (and 
      (jbc)
      (txc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (jbc) (txc) )
         (and (not (kyc)) (not (txc)) (rxc) (lyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h0c) (rvd) )
         (and (not (jwd)) (not (rvd)) (not (kyc)) (not (txc)) (rxc) (lyc) (qvd) (kwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (qvd)) (not (g0c)) )
         (and (not (jwd)) (not (rvd)) (not (kyc)) (not (txc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (x2g) )
         (and (not (l6g)) (not (x2g)) (y2g) (k6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (z2g) )
         (and (not (q6g)) (not (z2g)) (b3g) (m6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (c3g) )
         (and (not (t6g)) (not (c3g)) (g3g) (r6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (h3g) )
         (and (not (v6g)) (not (h3g)) (j3g) (u6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (k3g) )
         (and (not (y6g)) (not (k3g)) (l3g) (x6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (m3g) )
         (and (not (b7g)) (not (m3g)) (q3g) (z6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (r3g) )
         (and (not (g7g)) (not (r3g)) (t3g) (c7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (u3g) )
         (and (not (j7g)) (not (u3g)) (v3g) (h7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (x3g) )
         (and (not (l7g)) (not (x3g)) (y3g) (k7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (z3g) )
         (and (not (q7g)) (not (z3g)) (b4g) (m7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (c4g) )
         (and (not (t7g)) (not (c4g)) (g4g) (r7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (h4g) )
         (and (not (v7g)) (not (h4g)) (j4g) (u7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (k4g) )
         (and (not (y7g)) (not (k4g)) (l4g) (x7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (m4g) )
         (and (not (b8g)) (not (m4g)) (q4g) (z7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (r4g) )
         (and (not (g8g)) (not (r4g)) (t4g) (c8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (u4g) )
         (and (not (j8g)) (not (u4g)) (v4g) (h8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (x4g) )
         (and (not (l8g)) (not (x4g)) (y4g) (k8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (z4g) )
         (and (not (q8g)) (not (z4g)) (b5g) (m8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (c5g) )
         (and (not (t8g)) (not (c5g)) (g5g) (r8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h5g) (v5g) )
         (and (not (v8g)) (not (h5g)) (j5g) (u8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (k5g) )
         (and (not (y8g)) (not (k5g)) (l5g) (x8g) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y2g)) (not (g0c)) )
         (and (not (l6g)) (not (x2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b3g)) (not (g0c)) )
         (and (not (q6g)) (not (z2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3g)) (not (g0c)) )
         (and (not (t6g)) (not (c3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3g)) (not (g0c)) )
         (and (not (v6g)) (not (h3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3g)) (not (g0c)) )
         (and (not (y6g)) (not (k3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3g)) (not (g0c)) )
         (and (not (b7g)) (not (m3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3g)) (not (g0c)) )
         (and (not (g7g)) (not (r3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3g)) (not (g0c)) )
         (and (not (j7g)) (not (u3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3g)) (not (g0c)) )
         (and (not (l7g)) (not (x3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4g)) (not (g0c)) )
         (and (not (q7g)) (not (z3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4g)) (not (g0c)) )
         (and (not (t7g)) (not (c4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4g)) (not (g0c)) )
         (and (not (v7g)) (not (h4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4g)) (not (g0c)) )
         (and (not (y7g)) (not (k4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4g)) (not (g0c)) )
         (and (not (b8g)) (not (m4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5g)) (not (t4g)) )
         (and (not (g8g)) (not (r4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (z5g)) (not (v4g)) )
         (and (not (j8g)) (not (u4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6g)) (not (y4g)) )
         (and (not (l8g)) (not (x4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (c6g)) (not (b5g)) )
         (and (not (q8g)) (not (z4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6g)) (not (g5g)) )
         (and (not (t8g)) (not (c5g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (h6g)) (not (j5g)) )
         (and (not (v8g)) (not (h5g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6g)) (not (l5g)) )
         (and (not (y8g)) (not (k5g)) ))

    )
  )
  (:action MOVE_P2-2_P1-2
    :precondition  (and 
      (gcc)
      (lyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gcc) (lyc) )
         (and (not (lyc)) (not (rxc)) (txc) (kyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (cad) (kwd) )
         (and (not (kwd)) (not (qvd)) (not (lyc)) (not (rxc)) (txc) (kyc) (rvd) (jwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jwd)) (not (bad)) )
         (and (not (kwd)) (not (qvd)) (not (lyc)) (not (rxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (k6g) )
         (and (not (k6g)) (not (y2g)) (x2g) (l6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (m6g) )
         (and (not (m6g)) (not (b3g)) (z2g) (q6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (r6g) )
         (and (not (r6g)) (not (g3g)) (c3g) (t6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (u6g) )
         (and (not (u6g)) (not (j3g)) (h3g) (v6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (x6g) )
         (and (not (x6g)) (not (l3g)) (k3g) (y6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (z6g) )
         (and (not (z6g)) (not (q3g)) (m3g) (b7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (c7g) )
         (and (not (c7g)) (not (t3g)) (r3g) (g7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (h7g) )
         (and (not (h7g)) (not (v3g)) (u3g) (j7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (k7g) )
         (and (not (k7g)) (not (y3g)) (x3g) (l7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (m7g) )
         (and (not (m7g)) (not (b4g)) (z3g) (q7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (r7g) )
         (and (not (r7g)) (not (g4g)) (c4g) (t7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (u7g) )
         (and (not (u7g)) (not (j4g)) (h4g) (v7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (x7g) )
         (and (not (x7g)) (not (l4g)) (k4g) (y7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (z7g) )
         (and (not (z7g)) (not (q4g)) (m4g) (b8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (c8g) )
         (and (not (c8g)) (not (t4g)) (r4g) (g8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (h8g) )
         (and (not (h8g)) (not (v4g)) (u4g) (j8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (k8g) )
         (and (not (k8g)) (not (y4g)) (x4g) (l8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (m8g) )
         (and (not (m8g)) (not (b5g)) (z4g) (q8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (r8g) )
         (and (not (r8g)) (not (g5g)) (c5g) (t8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (u8g) )
         (and (not (u8g)) (not (j5g)) (h5g) (v8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (x8g) )
         (and (not (x8g)) (not (l5g)) (k5g) (y8g) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6g)) (not (bad)) )
         (and (not (k6g)) (not (y2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6g)) (not (bad)) )
         (and (not (m6g)) (not (b3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6g)) (not (bad)) )
         (and (not (r6g)) (not (g3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6g)) (not (bad)) )
         (and (not (u6g)) (not (j3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6g)) (not (bad)) )
         (and (not (x6g)) (not (l3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7g)) (not (bad)) )
         (and (not (z6g)) (not (q3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7g)) (not (bad)) )
         (and (not (c7g)) (not (t3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7g)) (not (bad)) )
         (and (not (h7g)) (not (v3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7g)) (not (bad)) )
         (and (not (k7g)) (not (y3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7g)) (not (bad)) )
         (and (not (m7g)) (not (b4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7g)) (not (bad)) )
         (and (not (r7g)) (not (g4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7g)) (not (bad)) )
         (and (not (u7g)) (not (j4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7g)) (not (bad)) )
         (and (not (x7g)) (not (l4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8g)) (not (bad)) )
         (and (not (z7g)) (not (q4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8g)) (not (bad)) )
         (and (not (c8g)) (not (t4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8g)) (not (bad)) )
         (and (not (h8g)) (not (v4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l8g)) (not (bad)) )
         (and (not (k8g)) (not (y4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8g)) (not (bad)) )
         (and (not (m8g)) (not (b5g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8g)) (not (bad)) )
         (and (not (r8g)) (not (g5g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8g)) (not (bad)) )
         (and (not (u8g)) (not (j5g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y8g)) (not (bad)) )
         (and (not (x8g)) (not (l5g)) ))

    )
  )
  (:action MOVE_P2-2_P2-1
    :precondition  (and 
      (lbc)
      (lyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (lbc) (lyc) )
         (and (not (lyc)) (not (hyc)) (jyc) (kyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k0c) (kwd) )
         (and (not (kwd)) (not (gwd)) (not (lyc)) (not (hyc)) (jyc) (kyc) (hwd) (jwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jwd)) (not (j0c)) )
         (and (not (kwd)) (not (gwd)) (not (lyc)) (not (hyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (k6g) )
         (and (not (lqh)) (not (k6g)) (l6g) (kqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (m6g) )
         (and (not (qqh)) (not (m6g)) (q6g) (mqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (r6g) )
         (and (not (tqh)) (not (r6g)) (t6g) (rqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (u6g) )
         (and (not (vqh)) (not (u6g)) (v6g) (uqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (x6g) )
         (and (not (yqh)) (not (x6g)) (y6g) (xqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (z6g) )
         (and (not (bsh)) (not (z6g)) (b7g) (zqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (c7g) )
         (and (not (gsh)) (not (c7g)) (g7g) (csh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (h7g) )
         (and (not (jsh)) (not (h7g)) (j7g) (hsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (k7g) )
         (and (not (lsh)) (not (k7g)) (l7g) (ksh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (m7g) )
         (and (not (qsh)) (not (m7g)) (q7g) (msh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (r7g) )
         (and (not (tsh)) (not (r7g)) (t7g) (rsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (u7g) )
         (and (not (vsh)) (not (u7g)) (v7g) (ush) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (x7g) )
         (and (not (ysh)) (not (x7g)) (y7g) (xsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (z7g) )
         (and (not (brh)) (not (z7g)) (b8g) (zsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (c8g) )
         (and (not (grh)) (not (c8g)) (g8g) (crh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (h8g) )
         (and (not (jrh)) (not (h8g)) (j8g) (hrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (k8g) )
         (and (not (lrh)) (not (k8g)) (l8g) (krh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (m8g) )
         (and (not (qrh)) (not (m8g)) (q8g) (mrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (r8g) )
         (and (not (trh)) (not (r8g)) (t8g) (rrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (u8g) )
         (and (not (vrh)) (not (u8g)) (v8g) (urh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x8g) (xph) )
         (and (not (yrh)) (not (x8g)) (y8g) (xrh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6g)) (not (j0c)) )
         (and (not (lqh)) (not (k6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6g)) (not (j0c)) )
         (and (not (qqh)) (not (m6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6g)) (not (j0c)) )
         (and (not (tqh)) (not (r6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6g)) (not (j0c)) )
         (and (not (vqh)) (not (u6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6g)) (not (j0c)) )
         (and (not (yqh)) (not (x6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7g)) (not (j0c)) )
         (and (not (bsh)) (not (z6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7g)) (not (j0c)) )
         (and (not (gsh)) (not (c7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7g)) (not (j0c)) )
         (and (not (jsh)) (not (h7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7g)) (not (j0c)) )
         (and (not (lsh)) (not (k7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7g)) (not (j0c)) )
         (and (not (qsh)) (not (m7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7g)) (not (j0c)) )
         (and (not (tsh)) (not (r7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7g)) (not (j0c)) )
         (and (not (vsh)) (not (u7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7g)) (not (j0c)) )
         (and (not (ysh)) (not (x7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8g)) (not (j0c)) )
         (and (not (brh)) (not (z7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yph)) (not (g8g)) )
         (and (not (grh)) (not (c8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (zph)) (not (j8g)) )
         (and (not (jrh)) (not (h8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqh)) (not (l8g)) )
         (and (not (lrh)) (not (k8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (cqh)) (not (q8g)) )
         (and (not (qrh)) (not (m8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqh)) (not (t8g)) )
         (and (not (trh)) (not (r8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hqh)) (not (v8g)) )
         (and (not (vrh)) (not (u8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqh)) (not (y8g)) )
         (and (not (yrh)) (not (x8g)) ))

    )
  )
  (:action MOVE_P2-2_P2-3
    :precondition  (and 
      (gbc)
      (lyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gbc) (lyc) )
         (and (not (myc)) (not (lyc)) (kyc) (qyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (c0c) (kwd) )
         (and (not (lwd)) (not (kwd)) (not (myc)) (not (lyc)) (kyc) (qyc) (jwd) (mwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jwd)) (not (b0c)) )
         (and (not (lwd)) (not (kwd)) (not (myc)) (not (lyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (k6g) )
         (and (not (k6g)) (not (ywe)) (xwe) (l6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (m6g) )
         (and (not (m6g)) (not (bxe)) (zwe) (q6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (r6g) )
         (and (not (r6g)) (not (gxe)) (cxe) (t6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (u6g) )
         (and (not (u6g)) (not (jxe)) (hxe) (v6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (x6g) )
         (and (not (x6g)) (not (lxe)) (kxe) (y6g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (z6g) )
         (and (not (z6g)) (not (qxe)) (mxe) (b7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (c7g) )
         (and (not (c7g)) (not (txe)) (rxe) (g7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (h7g) )
         (and (not (h7g)) (not (vxe)) (uxe) (j7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (k7g) )
         (and (not (k7g)) (not (yxe)) (xxe) (l7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (m7g) )
         (and (not (m7g)) (not (bye)) (zxe) (q7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (r7g) )
         (and (not (r7g)) (not (gye)) (cye) (t7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (u7g) )
         (and (not (u7g)) (not (jye)) (hye) (v7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (x7g) )
         (and (not (x7g)) (not (lye)) (kye) (y7g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (z7g) )
         (and (not (z7g)) (not (qye)) (mye) (b8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (c8g) )
         (and (not (c8g)) (not (tye)) (rye) (g8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (h8g) )
         (and (not (h8g)) (not (vye)) (uye) (j8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (k8g) )
         (and (not (k8g)) (not (yye)) (xye) (l8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (m8g) )
         (and (not (m8g)) (not (bze)) (zye) (q8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (hwe) (r8g) )
         (and (not (r8g)) (not (gze)) (cze) (t8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (u8g) )
         (and (not (u8g)) (not (jze)) (hze) (v8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c0c) (x8g) )
         (and (not (x8g)) (not (lze)) (kze) (y8g) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6g)) (not (b0c)) )
         (and (not (k6g)) (not (ywe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6g)) (not (b0c)) )
         (and (not (m6g)) (not (bxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6g)) (not (b0c)) )
         (and (not (r6g)) (not (gxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6g)) (not (b0c)) )
         (and (not (u6g)) (not (jxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6g)) (not (b0c)) )
         (and (not (x6g)) (not (lxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7g)) (not (b0c)) )
         (and (not (z6g)) (not (qxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7g)) (not (b0c)) )
         (and (not (c7g)) (not (txe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7g)) (not (b0c)) )
         (and (not (h7g)) (not (vxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7g)) (not (b0c)) )
         (and (not (k7g)) (not (yxe)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7g)) (not (b0c)) )
         (and (not (m7g)) (not (bye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7g)) (not (b0c)) )
         (and (not (r7g)) (not (gye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7g)) (not (b0c)) )
         (and (not (u7g)) (not (jye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7g)) (not (b0c)) )
         (and (not (x7g)) (not (lye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8g)) (not (b0c)) )
         (and (not (z7g)) (not (qye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8g)) (not (lwe)) )
         (and (not (c8g)) (not (tye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8g)) (not (mwe)) )
         (and (not (h8g)) (not (vye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l8g)) (not (qwe)) )
         (and (not (k8g)) (not (yye)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8g)) (not (rwe)) )
         (and (not (m8g)) (not (bze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8g)) (not (twe)) )
         (and (not (r8g)) (not (gze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8g)) (not (uwe)) )
         (and (not (u8g)) (not (jze)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y8g)) (not (vwe)) )
         (and (not (x8g)) (not (lze)) ))

    )
  )
  (:action MOVE_P2-2_P3-2
    :precondition  (and 
      (lac)
      (lyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (lac) (lyc) )
         (and (not (hzc)) (not (lyc)) (kyc) (jzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k9c) (kwd) )
         (and (not (gxd)) (not (kwd)) (not (hzc)) (not (lyc)) (kyc) (jzc) (jwd) (hxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (jwd)) (not (j9c)) )
         (and (not (gxd)) (not (kwd)) (not (hzc)) (not (lyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (k6g) )
         (and (not (b9g)) (not (k6g)) (l6g) (z8g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (m6g) )
         (and (not (g9g)) (not (m6g)) (q6g) (c9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (r6g) )
         (and (not (j9g)) (not (r6g)) (t6g) (h9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (u6g) )
         (and (not (l9g)) (not (u6g)) (v6g) (k9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (x6g) )
         (and (not (q9g)) (not (x6g)) (y6g) (m9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (z6g) )
         (and (not (t9g)) (not (z6g)) (b7g) (r9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (c7g) )
         (and (not (v9g)) (not (c7g)) (g7g) (u9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (h7g) )
         (and (not (y9g)) (not (h7g)) (j7g) (x9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (k7g) )
         (and (not (b0g)) (not (k7g)) (l7g) (z9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (m7g) )
         (and (not (g0g)) (not (m7g)) (q7g) (c0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (r7g) )
         (and (not (j0g)) (not (r7g)) (t7g) (h0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (u7g) )
         (and (not (l0g)) (not (u7g)) (v7g) (k0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (x7g) )
         (and (not (q0g)) (not (x7g)) (y7g) (m0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (z7g) )
         (and (not (t0g)) (not (z7g)) (b8g) (r0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (c8g) )
         (and (not (v0g)) (not (c8g)) (g8g) (u0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (h8g) )
         (and (not (y0g)) (not (h8g)) (j8g) (x0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (k8g) )
         (and (not (bah)) (not (k8g)) (l8g) (z0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (m8g) )
         (and (not (gah)) (not (m8g)) (q8g) (cah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (r8g) )
         (and (not (jah)) (not (r8g)) (t8g) (hah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (u8g) )
         (and (not (lah)) (not (u8g)) (v8g) (kah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (x8g) )
         (and (not (qah)) (not (x8g)) (y8g) (mah) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6g)) (not (j9c)) )
         (and (not (b9g)) (not (k6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6g)) (not (j9c)) )
         (and (not (g9g)) (not (m6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6g)) (not (j9c)) )
         (and (not (j9g)) (not (r6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6g)) (not (j9c)) )
         (and (not (l9g)) (not (u6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6g)) (not (j9c)) )
         (and (not (q9g)) (not (x6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7g)) (not (j9c)) )
         (and (not (t9g)) (not (z6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7g)) (not (j9c)) )
         (and (not (v9g)) (not (c7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7g)) (not (j9c)) )
         (and (not (y9g)) (not (h7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7g)) (not (j9c)) )
         (and (not (b0g)) (not (k7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7g)) (not (j9c)) )
         (and (not (g0g)) (not (m7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7g)) (not (j9c)) )
         (and (not (j0g)) (not (r7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7g)) (not (j9c)) )
         (and (not (l0g)) (not (u7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7g)) (not (j9c)) )
         (and (not (q0g)) (not (x7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8g)) (not (j9c)) )
         (and (not (t0g)) (not (z7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8g)) (not (j9c)) )
         (and (not (v0g)) (not (c8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8g)) (not (j9c)) )
         (and (not (y0g)) (not (h8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l8g)) (not (j9c)) )
         (and (not (bah)) (not (k8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8g)) (not (j9c)) )
         (and (not (gah)) (not (m8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8g)) (not (j9c)) )
         (and (not (jah)) (not (r8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8g)) (not (j9c)) )
         (and (not (lah)) (not (u8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y8g)) (not (j9c)) )
         (and (not (qah)) (not (x8g)) ))

    )
  )
  (:action MOVE_P3-2_P2-2
    :precondition  (and 
      (jbc)
      (jzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (jbc) (jzc) )
         (and (not (jzc)) (not (kyc)) (lyc) (hzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h0c) (hxd) )
         (and (not (hxd)) (not (jwd)) (not (jzc)) (not (kyc)) (lyc) (hzc) (kwd) (gxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gxd)) (not (g0c)) )
         (and (not (hxd)) (not (jwd)) (not (jzc)) (not (kyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (z8g) )
         (and (not (z8g)) (not (l6g)) (k6g) (b9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (c9g) )
         (and (not (c9g)) (not (q6g)) (m6g) (g9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (h9g) )
         (and (not (h9g)) (not (t6g)) (r6g) (j9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (k9g) )
         (and (not (k9g)) (not (v6g)) (u6g) (l9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (m9g) )
         (and (not (m9g)) (not (y6g)) (x6g) (q9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (r9g) )
         (and (not (r9g)) (not (b7g)) (z6g) (t9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (u9g) )
         (and (not (u9g)) (not (g7g)) (c7g) (v9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (x9g) )
         (and (not (x9g)) (not (j7g)) (h7g) (y9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (z9g) )
         (and (not (z9g)) (not (l7g)) (k7g) (b0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (c0g) )
         (and (not (c0g)) (not (q7g)) (m7g) (g0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (h0g) )
         (and (not (h0g)) (not (t7g)) (r7g) (j0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (k0g) )
         (and (not (k0g)) (not (v7g)) (u7g) (l0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (m0g) )
         (and (not (m0g)) (not (y7g)) (x7g) (q0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (r0g) )
         (and (not (r0g)) (not (b8g)) (z7g) (t0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (u0g) )
         (and (not (u0g)) (not (g8g)) (c8g) (v0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (x0g) )
         (and (not (x0g)) (not (j8g)) (h8g) (y0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (z0g) )
         (and (not (z0g)) (not (l8g)) (k8g) (bah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (cah) )
         (and (not (cah)) (not (q8g)) (m8g) (gah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (hah) )
         (and (not (hah)) (not (t8g)) (r8g) (jah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (v5g) (kah) )
         (and (not (kah)) (not (v8g)) (u8g) (lah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (mah) )
         (and (not (mah)) (not (y8g)) (x8g) (qah) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9g)) (not (g0c)) )
         (and (not (z8g)) (not (l6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9g)) (not (g0c)) )
         (and (not (c9g)) (not (q6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9g)) (not (g0c)) )
         (and (not (h9g)) (not (t6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9g)) (not (g0c)) )
         (and (not (k9g)) (not (v6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9g)) (not (g0c)) )
         (and (not (m9g)) (not (y6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9g)) (not (g0c)) )
         (and (not (r9g)) (not (b7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9g)) (not (g0c)) )
         (and (not (u9g)) (not (g7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y9g)) (not (g0c)) )
         (and (not (x9g)) (not (j7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0g)) (not (g0c)) )
         (and (not (z9g)) (not (l7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0g)) (not (g0c)) )
         (and (not (c0g)) (not (q7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0g)) (not (g0c)) )
         (and (not (h0g)) (not (t7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0g)) (not (g0c)) )
         (and (not (k0g)) (not (v7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0g)) (not (g0c)) )
         (and (not (m0g)) (not (y7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0g)) (not (g0c)) )
         (and (not (r0g)) (not (b8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0g)) (not (y5g)) )
         (and (not (u0g)) (not (g8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0g)) (not (z5g)) )
         (and (not (x0g)) (not (j8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bah)) (not (b6g)) )
         (and (not (z0g)) (not (l8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gah)) (not (c6g)) )
         (and (not (cah)) (not (q8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jah)) (not (g6g)) )
         (and (not (hah)) (not (t8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lah)) (not (h6g)) )
         (and (not (kah)) (not (v8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qah)) (not (j6g)) )
         (and (not (mah)) (not (y8g)) ))

    )
  )
  (:action MOVE_P3-2_P3-1
    :precondition  (and 
      (qac)
      (jzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (qac) (jzc) )
         (and (not (jzc)) (not (czc)) (gzc) (hzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m9c) (hxd) )
         (and (not (hxd)) (not (bxd)) (not (jzc)) (not (czc)) (gzc) (hzc) (cxd) (gxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gxd)) (not (l9c)) )
         (and (not (hxd)) (not (bxd)) (not (jzc)) (not (czc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (z8g) )
         (and (not (bth)) (not (z8g)) (b9g) (zrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (c9g) )
         (and (not (gth)) (not (c9g)) (g9g) (cth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (h9g) )
         (and (not (jth)) (not (h9g)) (j9g) (hth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (k9g) )
         (and (not (lth)) (not (k9g)) (l9g) (kth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (m9g) )
         (and (not (qth)) (not (m9g)) (q9g) (mth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (r9g) )
         (and (not (tth)) (not (r9g)) (t9g) (rth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (u9g) )
         (and (not (vth)) (not (u9g)) (v9g) (uth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (x9g) )
         (and (not (yth)) (not (x9g)) (y9g) (xth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (z9g) )
         (and (not (buh)) (not (z9g)) (b0g) (zth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (c0g) )
         (and (not (guh)) (not (c0g)) (g0g) (cuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (h0g) )
         (and (not (juh)) (not (h0g)) (j0g) (huh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (k0g) )
         (and (not (luh)) (not (k0g)) (l0g) (kuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (m0g) )
         (and (not (quh)) (not (m0g)) (q0g) (muh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (r0g) )
         (and (not (tuh)) (not (r0g)) (t0g) (ruh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (u0g) )
         (and (not (vuh)) (not (u0g)) (v0g) (uuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (x0g) )
         (and (not (yuh)) (not (x0g)) (y0g) (xuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (z0g) )
         (and (not (bvh)) (not (z0g)) (bah) (zuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (cah) )
         (and (not (gvh)) (not (cah)) (gah) (cvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (hah) )
         (and (not (jvh)) (not (hah)) (jah) (hvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (kah) )
         (and (not (lvh)) (not (kah)) (lah) (kvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (mah) )
         (and (not (qvh)) (not (mah)) (qah) (mvh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9g)) (not (l9c)) )
         (and (not (bth)) (not (z8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9g)) (not (l9c)) )
         (and (not (gth)) (not (c9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9g)) (not (l9c)) )
         (and (not (jth)) (not (h9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9g)) (not (l9c)) )
         (and (not (lth)) (not (k9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9g)) (not (l9c)) )
         (and (not (qth)) (not (m9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9g)) (not (l9c)) )
         (and (not (tth)) (not (r9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9g)) (not (l9c)) )
         (and (not (vth)) (not (u9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y9g)) (not (l9c)) )
         (and (not (yth)) (not (x9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0g)) (not (l9c)) )
         (and (not (buh)) (not (z9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0g)) (not (l9c)) )
         (and (not (guh)) (not (c0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0g)) (not (l9c)) )
         (and (not (juh)) (not (h0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0g)) (not (l9c)) )
         (and (not (luh)) (not (k0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0g)) (not (l9c)) )
         (and (not (quh)) (not (m0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0g)) (not (l9c)) )
         (and (not (tuh)) (not (r0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0g)) (not (l9c)) )
         (and (not (vuh)) (not (u0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0g)) (not (l9c)) )
         (and (not (yuh)) (not (x0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bah)) (not (l9c)) )
         (and (not (bvh)) (not (z0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gah)) (not (l9c)) )
         (and (not (gvh)) (not (cah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jah)) (not (l9c)) )
         (and (not (jvh)) (not (hah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lah)) (not (l9c)) )
         (and (not (lvh)) (not (kah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qah)) (not (l9c)) )
         (and (not (qvh)) (not (mah)) ))

    )
  )
  (:action MOVE_P3-2_P3-3
    :precondition  (and 
      (jac)
      (jzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (jac) (jzc) )
         (and (not (kzc)) (not (jzc)) (hzc) (lzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h9c) (hxd) )
         (and (not (jxd)) (not (hxd)) (not (kzc)) (not (jzc)) (hzc) (lzc) (gxd) (kxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gxd)) (not (g9c)) )
         (and (not (jxd)) (not (hxd)) (not (kzc)) (not (jzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (z8g) )
         (and (not (z8g)) (not (baf)) (z0e) (b9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (c9g) )
         (and (not (c9g)) (not (gaf)) (caf) (g9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (h9g) )
         (and (not (h9g)) (not (jaf)) (haf) (j9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (k9g) )
         (and (not (k9g)) (not (laf)) (kaf) (l9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (m9g) )
         (and (not (m9g)) (not (qaf)) (maf) (q9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (r9g) )
         (and (not (r9g)) (not (taf)) (raf) (t9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (u9g) )
         (and (not (u9g)) (not (vaf)) (uaf) (v9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (x9g) )
         (and (not (x9g)) (not (yaf)) (xaf) (y9g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (z9g) )
         (and (not (z9g)) (not (bbf)) (zaf) (b0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (c0g) )
         (and (not (c0g)) (not (gbf)) (cbf) (g0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (h0g) )
         (and (not (h0g)) (not (jbf)) (hbf) (j0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (k0g) )
         (and (not (k0g)) (not (lbf)) (kbf) (l0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (m0g) )
         (and (not (m0g)) (not (qbf)) (mbf) (q0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (r0g) )
         (and (not (r0g)) (not (tbf)) (rbf) (t0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (u0g) )
         (and (not (u0g)) (not (vbf)) (ubf) (v0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (x0g) )
         (and (not (x0g)) (not (ybf)) (xbf) (y0g) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (z0g) )
         (and (not (z0g)) (not (bcf)) (zbf) (bah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (cah) )
         (and (not (cah)) (not (gcf)) (ccf) (gah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (hah) )
         (and (not (hah)) (not (jcf)) (hcf) (jah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (kah) )
         (and (not (kah)) (not (lcf)) (kcf) (lah) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h9c) (mah) )
         (and (not (mah)) (not (qcf)) (mcf) (qah) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9g)) (not (g9c)) )
         (and (not (z8g)) (not (baf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9g)) (not (g9c)) )
         (and (not (c9g)) (not (gaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9g)) (not (g9c)) )
         (and (not (h9g)) (not (jaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9g)) (not (g9c)) )
         (and (not (k9g)) (not (laf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9g)) (not (g9c)) )
         (and (not (m9g)) (not (qaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9g)) (not (g9c)) )
         (and (not (r9g)) (not (taf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9g)) (not (g9c)) )
         (and (not (u9g)) (not (vaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y9g)) (not (g9c)) )
         (and (not (x9g)) (not (yaf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b0g)) (not (g9c)) )
         (and (not (z9g)) (not (bbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g0g)) (not (g9c)) )
         (and (not (c0g)) (not (gbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j0g)) (not (g9c)) )
         (and (not (h0g)) (not (jbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l0g)) (not (g9c)) )
         (and (not (k0g)) (not (lbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q0g)) (not (g9c)) )
         (and (not (m0g)) (not (qbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t0g)) (not (g9c)) )
         (and (not (r0g)) (not (tbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0g)) (not (g9c)) )
         (and (not (u0g)) (not (vbf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0g)) (not (g9c)) )
         (and (not (x0g)) (not (ybf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bah)) (not (g9c)) )
         (and (not (z0g)) (not (bcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gah)) (not (g9c)) )
         (and (not (cah)) (not (gcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jah)) (not (g9c)) )
         (and (not (hah)) (not (jcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lah)) (not (g9c)) )
         (and (not (kah)) (not (lcf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qah)) (not (g9c)) )
         (and (not (mah)) (not (qcf)) ))

    )
  )
  (:action MOVE_P3-2_P4-2
    :precondition  (and 
      (q0b)
      (jzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q0b) (jzc) )
         (and (not (c1c)) (not (jzc)) (hzc) (g1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m8c) (hxd) )
         (and (not (byd)) (not (hxd)) (not (c1c)) (not (jzc)) (hzc) (g1c) (gxd) (cyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gxd)) (not (l8c)) )
         (and (not (byd)) (not (hxd)) (not (c1c)) (not (jzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (z8g) )
         (and (not (qbh)) (not (z8g)) (b9g) (mbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (c9g) )
         (and (not (tbh)) (not (c9g)) (g9g) (rbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (h9g) )
         (and (not (vbh)) (not (h9g)) (j9g) (ubh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (k9g) )
         (and (not (ybh)) (not (k9g)) (l9g) (xbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (m9g) )
         (and (not (bch)) (not (m9g)) (q9g) (zbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (r9g) )
         (and (not (gch)) (not (r9g)) (t9g) (cch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (u9g) )
         (and (not (jch)) (not (u9g)) (v9g) (hch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (x9g) )
         (and (not (lch)) (not (x9g)) (y9g) (kch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (z9g) )
         (and (not (qch)) (not (z9g)) (b0g) (mch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (c0g) )
         (and (not (tch)) (not (c0g)) (g0g) (rch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (h0g) )
         (and (not (vch)) (not (h0g)) (j0g) (uch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (k0g) )
         (and (not (ych)) (not (k0g)) (l0g) (xch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m0g) (yah) )
         (and (not (bdh)) (not (m0g)) (q0g) (zch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (r0g) )
         (and (not (gdh)) (not (r0g)) (t0g) (cdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (u0g) )
         (and (not (jdh)) (not (u0g)) (v0g) (hdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (x0g) )
         (and (not (ldh)) (not (x0g)) (y0g) (kdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (z0g) )
         (and (not (qdh)) (not (z0g)) (bah) (mdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (cah) )
         (and (not (tdh)) (not (cah)) (gah) (rdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (hah) )
         (and (not (vdh)) (not (hah)) (jah) (udh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (kah) )
         (and (not (ydh)) (not (kah)) (lah) (xdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (mah) )
         (and (not (beh)) (not (mah)) (qah) (zdh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b9g)) (not (l8c)) )
         (and (not (qbh)) (not (z8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g9g)) (not (l8c)) )
         (and (not (tbh)) (not (c9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j9g)) (not (l8c)) )
         (and (not (vbh)) (not (h9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l9g)) (not (l8c)) )
         (and (not (ybh)) (not (k9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q9g)) (not (l8c)) )
         (and (not (bch)) (not (m9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t9g)) (not (l8c)) )
         (and (not (gch)) (not (r9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v9g)) (not (l8c)) )
         (and (not (jch)) (not (u9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bbh)) (not (y9g)) )
         (and (not (lch)) (not (x9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (cbh)) (not (b0g)) )
         (and (not (qch)) (not (z9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gbh)) (not (g0g)) )
         (and (not (tch)) (not (c0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hbh)) (not (j0g)) )
         (and (not (vch)) (not (h0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jbh)) (not (l0g)) )
         (and (not (ych)) (not (k0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kbh)) (not (q0g)) )
         (and (not (bdh)) (not (m0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lbh)) (not (t0g)) )
         (and (not (gdh)) (not (r0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v0g)) (not (l8c)) )
         (and (not (jdh)) (not (u0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y0g)) (not (l8c)) )
         (and (not (ldh)) (not (x0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bah)) (not (l8c)) )
         (and (not (qdh)) (not (z0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gah)) (not (l8c)) )
         (and (not (tdh)) (not (cah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jah)) (not (l8c)) )
         (and (not (vdh)) (not (hah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lah)) (not (l8c)) )
         (and (not (ydh)) (not (kah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qah)) (not (l8c)) )
         (and (not (beh)) (not (mah)) ))

    )
  )
  (:action MOVE_P4-2_P3-2
    :precondition  (and 
      (lac)
      (g1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (lac) (g1c) )
         (and (not (g1c)) (not (hzc)) (jzc) (c1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k9c) (cyd) )
         (and (not (cyd)) (not (gxd)) (not (g1c)) (not (hzc)) (jzc) (c1c) (hxd) (byd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (byd)) (not (j9c)) )
         (and (not (cyd)) (not (gxd)) (not (g1c)) (not (hzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (mbh) )
         (and (not (mbh)) (not (b9g)) (z8g) (qbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (rbh) )
         (and (not (rbh)) (not (g9g)) (c9g) (tbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (ubh) )
         (and (not (ubh)) (not (j9g)) (h9g) (vbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (xbh) )
         (and (not (xbh)) (not (l9g)) (k9g) (ybh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (zbh) )
         (and (not (zbh)) (not (q9g)) (m9g) (bch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (cch) )
         (and (not (cch)) (not (t9g)) (r9g) (gch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (hch) )
         (and (not (hch)) (not (v9g)) (u9g) (jch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (kch) )
         (and (not (kch)) (not (y9g)) (x9g) (lch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (mch) )
         (and (not (mch)) (not (b0g)) (z9g) (qch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (rch) )
         (and (not (rch)) (not (g0g)) (c0g) (tch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (uch) )
         (and (not (uch)) (not (j0g)) (h0g) (vch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (xch) )
         (and (not (xch)) (not (l0g)) (k0g) (ych) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (zch) )
         (and (not (zch)) (not (q0g)) (m0g) (bdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (cdh) )
         (and (not (cdh)) (not (t0g)) (r0g) (gdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (hdh) )
         (and (not (hdh)) (not (v0g)) (u0g) (jdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (kdh) )
         (and (not (kdh)) (not (y0g)) (x0g) (ldh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (mdh) )
         (and (not (mdh)) (not (bah)) (z0g) (qdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (rdh) )
         (and (not (rdh)) (not (gah)) (cah) (tdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (udh) )
         (and (not (udh)) (not (jah)) (hah) (vdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (xdh) )
         (and (not (xdh)) (not (lah)) (kah) (ydh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (zdh) )
         (and (not (zdh)) (not (qah)) (mah) (beh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbh)) (not (j9c)) )
         (and (not (mbh)) (not (b9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbh)) (not (j9c)) )
         (and (not (rbh)) (not (g9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbh)) (not (j9c)) )
         (and (not (ubh)) (not (j9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybh)) (not (j9c)) )
         (and (not (xbh)) (not (l9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bch)) (not (j9c)) )
         (and (not (zbh)) (not (q9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gch)) (not (j9c)) )
         (and (not (cch)) (not (t9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jch)) (not (j9c)) )
         (and (not (hch)) (not (v9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lch)) (not (j9c)) )
         (and (not (kch)) (not (y9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qch)) (not (j9c)) )
         (and (not (mch)) (not (b0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tch)) (not (j9c)) )
         (and (not (rch)) (not (g0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vch)) (not (j9c)) )
         (and (not (uch)) (not (j0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ych)) (not (j9c)) )
         (and (not (xch)) (not (l0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bdh)) (not (j9c)) )
         (and (not (zch)) (not (q0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gdh)) (not (j9c)) )
         (and (not (cdh)) (not (t0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jdh)) (not (j9c)) )
         (and (not (hdh)) (not (v0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ldh)) (not (j9c)) )
         (and (not (kdh)) (not (y0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdh)) (not (j9c)) )
         (and (not (mdh)) (not (bah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdh)) (not (j9c)) )
         (and (not (rdh)) (not (gah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdh)) (not (j9c)) )
         (and (not (udh)) (not (jah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydh)) (not (j9c)) )
         (and (not (xdh)) (not (lah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (beh)) (not (j9c)) )
         (and (not (zdh)) (not (qah)) ))

    )
  )
  (:action MOVE_P4-2_P4-1
    :precondition  (and 
      (t0b)
      (g1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t0b) (g1c) )
         (and (not (g1c)) (not (zzc)) (b1c) (c1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r8c) (cyd) )
         (and (not (cyd)) (not (yxd)) (not (g1c)) (not (zzc)) (b1c) (c1c) (zxd) (byd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (byd)) (not (q8c)) )
         (and (not (cyd)) (not (yxd)) (not (g1c)) (not (zzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (mbh) )
         (and (not (qwh)) (not (mbh)) (qbh) (mwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (rbh) )
         (and (not (twh)) (not (rbh)) (tbh) (rwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (ubh) )
         (and (not (vwh)) (not (ubh)) (vbh) (uwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (xbh) )
         (and (not (ywh)) (not (xbh)) (ybh) (xwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (zbh) )
         (and (not (bxh)) (not (zbh)) (bch) (zwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (cch) )
         (and (not (gxh)) (not (cch)) (gch) (cxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (hch) )
         (and (not (jxh)) (not (hch)) (jch) (hxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (kch) )
         (and (not (lxh)) (not (kch)) (lch) (kxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (mch) )
         (and (not (qxh)) (not (mch)) (qch) (mxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (rch) )
         (and (not (txh)) (not (rch)) (tch) (rxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (uch) )
         (and (not (vxh)) (not (uch)) (vch) (uxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (xch) )
         (and (not (yxh)) (not (xch)) (ych) (xxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (zch) )
         (and (not (byh)) (not (zch)) (bdh) (zxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cdh) (zvh) )
         (and (not (gyh)) (not (cdh)) (gdh) (cyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (hdh) )
         (and (not (jyh)) (not (hdh)) (jdh) (hyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (kdh) )
         (and (not (lyh)) (not (kdh)) (ldh) (kyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (mdh) )
         (and (not (qyh)) (not (mdh)) (qdh) (myh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (rdh) )
         (and (not (tyh)) (not (rdh)) (tdh) (ryh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (udh) )
         (and (not (vyh)) (not (udh)) (vdh) (uyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (xdh) )
         (and (not (yyh)) (not (xdh)) (ydh) (xyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (zdh) )
         (and (not (bzh)) (not (zdh)) (beh) (zyh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbh)) (not (q8c)) )
         (and (not (qwh)) (not (mbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbh)) (not (q8c)) )
         (and (not (twh)) (not (rbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbh)) (not (q8c)) )
         (and (not (vwh)) (not (ubh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybh)) (not (q8c)) )
         (and (not (ywh)) (not (xbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bch)) (not (q8c)) )
         (and (not (bxh)) (not (zbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gch)) (not (q8c)) )
         (and (not (gxh)) (not (cch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jch)) (not (q8c)) )
         (and (not (jxh)) (not (hch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bwh)) (not (lch)) )
         (and (not (lxh)) (not (kch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (cwh)) (not (qch)) )
         (and (not (qxh)) (not (mch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gwh)) (not (tch)) )
         (and (not (txh)) (not (rch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hwh)) (not (vch)) )
         (and (not (vxh)) (not (uch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jwh)) (not (ych)) )
         (and (not (yxh)) (not (xch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kwh)) (not (bdh)) )
         (and (not (byh)) (not (zch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwh)) (not (gdh)) )
         (and (not (gyh)) (not (cdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jdh)) (not (q8c)) )
         (and (not (jyh)) (not (hdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ldh)) (not (q8c)) )
         (and (not (lyh)) (not (kdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdh)) (not (q8c)) )
         (and (not (qyh)) (not (mdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdh)) (not (q8c)) )
         (and (not (tyh)) (not (rdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdh)) (not (q8c)) )
         (and (not (vyh)) (not (udh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydh)) (not (q8c)) )
         (and (not (yyh)) (not (xdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (beh)) (not (q8c)) )
         (and (not (bzh)) (not (zdh)) ))

    )
  )
  (:action MOVE_P4-2_P4-3
    :precondition  (and 
      (l0b)
      (g1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (l0b) (g1c) )
         (and (not (h1c)) (not (g1c)) (c1c) (j1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k8c) (cyd) )
         (and (not (gyd)) (not (cyd)) (not (h1c)) (not (g1c)) (c1c) (j1c) (byd) (hyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (byd)) (not (j8c)) )
         (and (not (gyd)) (not (cyd)) (not (h1c)) (not (g1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (mbh) )
         (and (not (mbh)) (not (qsf)) (msf) (qbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (rbh) )
         (and (not (rbh)) (not (tsf)) (rsf) (tbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (ubh) )
         (and (not (ubh)) (not (vsf)) (usf) (vbh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (xbh) )
         (and (not (xbh)) (not (ysf)) (xsf) (ybh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (zbh) )
         (and (not (zbh)) (not (brf)) (zsf) (bch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (cch) )
         (and (not (cch)) (not (grf)) (crf) (gch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (hch) )
         (and (not (hch)) (not (jrf)) (hrf) (jch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (kch) )
         (and (not (kch)) (not (lrf)) (krf) (lch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (mch) )
         (and (not (mch)) (not (qrf)) (mrf) (qch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (rch) )
         (and (not (rch)) (not (trf)) (rrf) (tch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (uch) )
         (and (not (uch)) (not (vrf)) (urf) (vch) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (xqf) (xch) )
         (and (not (xch)) (not (yrf)) (xrf) (ych) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (zch) )
         (and (not (zch)) (not (btf)) (zrf) (bdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (cdh) )
         (and (not (cdh)) (not (gtf)) (ctf) (gdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (hdh) )
         (and (not (hdh)) (not (jtf)) (htf) (jdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (kdh) )
         (and (not (kdh)) (not (ltf)) (ktf) (ldh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (mdh) )
         (and (not (mdh)) (not (qtf)) (mtf) (qdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (rdh) )
         (and (not (rdh)) (not (ttf)) (rtf) (tdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (udh) )
         (and (not (udh)) (not (vtf)) (utf) (vdh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (xdh) )
         (and (not (xdh)) (not (ytf)) (xtf) (ydh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k8c) (zdh) )
         (and (not (zdh)) (not (buf)) (ztf) (beh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbh)) (not (j8c)) )
         (and (not (mbh)) (not (qsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbh)) (not (j8c)) )
         (and (not (rbh)) (not (tsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbh)) (not (j8c)) )
         (and (not (ubh)) (not (vsf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybh)) (not (j8c)) )
         (and (not (xbh)) (not (ysf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bch)) (not (j8c)) )
         (and (not (zbh)) (not (brf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gch)) (not (j8c)) )
         (and (not (cch)) (not (grf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jch)) (not (j8c)) )
         (and (not (hch)) (not (jrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lch)) (not (bsf)) )
         (and (not (kch)) (not (lrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qch)) (not (csf)) )
         (and (not (mch)) (not (qrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tch)) (not (gsf)) )
         (and (not (rch)) (not (trf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vch)) (not (hsf)) )
         (and (not (uch)) (not (vrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ych)) (not (jsf)) )
         (and (not (xch)) (not (yrf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bdh)) (not (ksf)) )
         (and (not (zch)) (not (btf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gdh)) (not (lsf)) )
         (and (not (cdh)) (not (gtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jdh)) (not (j8c)) )
         (and (not (hdh)) (not (jtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ldh)) (not (j8c)) )
         (and (not (kdh)) (not (ltf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdh)) (not (j8c)) )
         (and (not (mdh)) (not (qtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdh)) (not (j8c)) )
         (and (not (rdh)) (not (ttf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdh)) (not (j8c)) )
         (and (not (udh)) (not (vtf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydh)) (not (j8c)) )
         (and (not (xdh)) (not (ytf)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (beh)) (not (j8c)) )
         (and (not (zdh)) (not (buf)) ))

    )
  )
  (:action MOVE_P4-2_P5-2
    :precondition  (and 
      (t9b)
      (g1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t9b) (g1c) )
         (and (not (z1c)) (not (g1c)) (c1c) (b2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r7c) (cyd) )
         (and (not (yyd)) (not (cyd)) (not (z1c)) (not (g1c)) (c1c) (b2c) (byd) (zyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (byd)) (not (q7c)) )
         (and (not (yyd)) (not (cyd)) (not (z1c)) (not (g1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (mbh) )
         (and (not (geh)) (not (mbh)) (qbh) (ceh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (rbh) )
         (and (not (jeh)) (not (rbh)) (tbh) (heh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (ubh) )
         (and (not (leh)) (not (ubh)) (vbh) (keh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (xbh) )
         (and (not (qeh)) (not (xbh)) (ybh) (meh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (zbh) )
         (and (not (teh)) (not (zbh)) (bch) (reh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (cch) )
         (and (not (veh)) (not (cch)) (gch) (ueh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (hch) )
         (and (not (yeh)) (not (hch)) (jch) (xeh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (kch) )
         (and (not (bfh)) (not (kch)) (lch) (zeh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (mch) )
         (and (not (gfh)) (not (mch)) (qch) (cfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (rch) )
         (and (not (jfh)) (not (rch)) (tch) (hfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (uch) )
         (and (not (lfh)) (not (uch)) (vch) (kfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (xch) )
         (and (not (qfh)) (not (xch)) (ych) (mfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (zch) )
         (and (not (tfh)) (not (zch)) (bdh) (rfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (cdh) )
         (and (not (vfh)) (not (cdh)) (gdh) (ufh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (hdh) )
         (and (not (yfh)) (not (hdh)) (jdh) (xfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (kdh) )
         (and (not (bgh)) (not (kdh)) (ldh) (zfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (mdh) )
         (and (not (ggh)) (not (mdh)) (qdh) (cgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (rdh) )
         (and (not (jgh)) (not (rdh)) (tdh) (hgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (udh) )
         (and (not (lgh)) (not (udh)) (vdh) (kgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (xdh) )
         (and (not (qgh)) (not (xdh)) (ydh) (mgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (zdh) )
         (and (not (tgh)) (not (zdh)) (beh) (rgh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qbh)) (not (q7c)) )
         (and (not (geh)) (not (mbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tbh)) (not (q7c)) )
         (and (not (jeh)) (not (rbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vbh)) (not (q7c)) )
         (and (not (leh)) (not (ubh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ybh)) (not (q7c)) )
         (and (not (qeh)) (not (xbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bch)) (not (q7c)) )
         (and (not (teh)) (not (zbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gch)) (not (q7c)) )
         (and (not (veh)) (not (cch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jch)) (not (q7c)) )
         (and (not (yeh)) (not (hch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lch)) (not (q7c)) )
         (and (not (bfh)) (not (kch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qch)) (not (q7c)) )
         (and (not (gfh)) (not (mch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tch)) (not (q7c)) )
         (and (not (jfh)) (not (rch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vch)) (not (q7c)) )
         (and (not (lfh)) (not (uch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ych)) (not (q7c)) )
         (and (not (qfh)) (not (xch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bdh)) (not (q7c)) )
         (and (not (tfh)) (not (zch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gdh)) (not (q7c)) )
         (and (not (vfh)) (not (cdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jdh)) (not (q7c)) )
         (and (not (yfh)) (not (hdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ldh)) (not (q7c)) )
         (and (not (bgh)) (not (kdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qdh)) (not (q7c)) )
         (and (not (ggh)) (not (mdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tdh)) (not (q7c)) )
         (and (not (jgh)) (not (rdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vdh)) (not (q7c)) )
         (and (not (lgh)) (not (udh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ydh)) (not (q7c)) )
         (and (not (qgh)) (not (xdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (beh)) (not (q7c)) )
         (and (not (tgh)) (not (zdh)) ))

    )
  )
  (:action MOVE_P5-2_P4-2
    :precondition  (and 
      (q0b)
      (b2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q0b) (b2c) )
         (and (not (b2c)) (not (c1c)) (g1c) (z1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m8c) (zyd) )
         (and (not (zyd)) (not (byd)) (not (b2c)) (not (c1c)) (g1c) (z1c) (cyd) (yyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yyd)) (not (l8c)) )
         (and (not (zyd)) (not (byd)) (not (b2c)) (not (c1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (ceh) )
         (and (not (ceh)) (not (qbh)) (mbh) (geh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (heh) )
         (and (not (heh)) (not (tbh)) (rbh) (jeh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (keh) )
         (and (not (keh)) (not (vbh)) (ubh) (leh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (meh) )
         (and (not (meh)) (not (ybh)) (xbh) (qeh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (reh) )
         (and (not (reh)) (not (bch)) (zbh) (teh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (ueh) )
         (and (not (ueh)) (not (gch)) (cch) (veh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (xeh) )
         (and (not (xeh)) (not (jch)) (hch) (yeh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (zeh) )
         (and (not (zeh)) (not (lch)) (kch) (bfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (cfh) )
         (and (not (cfh)) (not (qch)) (mch) (gfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (hfh) )
         (and (not (hfh)) (not (tch)) (rch) (jfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (kfh) )
         (and (not (kfh)) (not (vch)) (uch) (lfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (mfh) )
         (and (not (mfh)) (not (ych)) (xch) (qfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (yah) (rfh) )
         (and (not (rfh)) (not (bdh)) (zch) (tfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (ufh) )
         (and (not (ufh)) (not (gdh)) (cdh) (vfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (xfh) )
         (and (not (xfh)) (not (jdh)) (hdh) (yfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (zfh) )
         (and (not (zfh)) (not (ldh)) (kdh) (bgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (cgh) )
         (and (not (cgh)) (not (qdh)) (mdh) (ggh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (hgh) )
         (and (not (hgh)) (not (tdh)) (rdh) (jgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (kgh) )
         (and (not (kgh)) (not (vdh)) (udh) (lgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (mgh) )
         (and (not (mgh)) (not (ydh)) (xdh) (qgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (rgh) )
         (and (not (rgh)) (not (beh)) (zdh) (tgh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (geh)) (not (l8c)) )
         (and (not (ceh)) (not (qbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jeh)) (not (l8c)) )
         (and (not (heh)) (not (tbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (leh)) (not (l8c)) )
         (and (not (keh)) (not (vbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qeh)) (not (l8c)) )
         (and (not (meh)) (not (ybh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (teh)) (not (l8c)) )
         (and (not (reh)) (not (bch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (veh)) (not (l8c)) )
         (and (not (ueh)) (not (gch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yeh)) (not (l8c)) )
         (and (not (xeh)) (not (jch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bfh)) (not (bbh)) )
         (and (not (zeh)) (not (lch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfh)) (not (cbh)) )
         (and (not (cfh)) (not (qch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfh)) (not (gbh)) )
         (and (not (hfh)) (not (tch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lfh)) (not (hbh)) )
         (and (not (kfh)) (not (vch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qfh)) (not (jbh)) )
         (and (not (mfh)) (not (ych)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tfh)) (not (kbh)) )
         (and (not (rfh)) (not (bdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vfh)) (not (lbh)) )
         (and (not (ufh)) (not (gdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yfh)) (not (l8c)) )
         (and (not (xfh)) (not (jdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgh)) (not (l8c)) )
         (and (not (zfh)) (not (ldh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ggh)) (not (l8c)) )
         (and (not (cgh)) (not (qdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jgh)) (not (l8c)) )
         (and (not (hgh)) (not (tdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lgh)) (not (l8c)) )
         (and (not (kgh)) (not (vdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qgh)) (not (l8c)) )
         (and (not (mgh)) (not (ydh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tgh)) (not (l8c)) )
         (and (not (rgh)) (not (beh)) ))

    )
  )
  (:action MOVE_P5-2_P5-1
    :precondition  (and 
      (v9b)
      (b2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v9b) (b2c) )
         (and (not (b2c)) (not (x1c)) (y1c) (z1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u7c) (zyd) )
         (and (not (zyd)) (not (vyd)) (not (b2c)) (not (x1c)) (y1c) (z1c) (xyd) (yyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yyd)) (not (t7c)) )
         (and (not (zyd)) (not (vyd)) (not (b2c)) (not (x1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (ceh) )
         (and (not (gzh)) (not (ceh)) (geh) (czh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (heh) )
         (and (not (jzh)) (not (heh)) (jeh) (hzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (keh) )
         (and (not (lzh)) (not (keh)) (leh) (kzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (meh) )
         (and (not (qzh)) (not (meh)) (qeh) (mzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (reh) )
         (and (not (tzh)) (not (reh)) (teh) (rzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (ueh) )
         (and (not (vzh)) (not (ueh)) (veh) (uzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (xeh) )
         (and (not (yzh)) (not (xeh)) (yeh) (xzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (zeh) )
         (and (not (b1h)) (not (zeh)) (bfh) (zzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (cfh) )
         (and (not (g1h)) (not (cfh)) (gfh) (c1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (hfh) )
         (and (not (j1h)) (not (hfh)) (jfh) (h1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (kfh) )
         (and (not (l1h)) (not (kfh)) (lfh) (k1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (mfh) )
         (and (not (q1h)) (not (mfh)) (qfh) (m1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (rfh) )
         (and (not (t1h)) (not (rfh)) (tfh) (r1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (ufh) )
         (and (not (v1h)) (not (ufh)) (vfh) (u1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (xfh) )
         (and (not (y1h)) (not (xfh)) (yfh) (x1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (zfh) )
         (and (not (b2h)) (not (zfh)) (bgh) (z1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (cgh) )
         (and (not (g2h)) (not (cgh)) (ggh) (c2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (hgh) )
         (and (not (j2h)) (not (hgh)) (jgh) (h2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (kgh) )
         (and (not (l2h)) (not (kgh)) (lgh) (k2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (mgh) )
         (and (not (q2h)) (not (mgh)) (qgh) (m2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (rgh) )
         (and (not (t2h)) (not (rgh)) (tgh) (r2h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (geh)) (not (t7c)) )
         (and (not (gzh)) (not (ceh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jeh)) (not (t7c)) )
         (and (not (jzh)) (not (heh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (leh)) (not (t7c)) )
         (and (not (lzh)) (not (keh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qeh)) (not (t7c)) )
         (and (not (qzh)) (not (meh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (teh)) (not (t7c)) )
         (and (not (tzh)) (not (reh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (veh)) (not (t7c)) )
         (and (not (vzh)) (not (ueh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yeh)) (not (t7c)) )
         (and (not (yzh)) (not (xeh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bfh)) (not (t7c)) )
         (and (not (b1h)) (not (zeh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfh)) (not (t7c)) )
         (and (not (g1h)) (not (cfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfh)) (not (t7c)) )
         (and (not (j1h)) (not (hfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lfh)) (not (t7c)) )
         (and (not (l1h)) (not (kfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qfh)) (not (t7c)) )
         (and (not (q1h)) (not (mfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tfh)) (not (t7c)) )
         (and (not (t1h)) (not (rfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vfh)) (not (t7c)) )
         (and (not (v1h)) (not (ufh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yfh)) (not (t7c)) )
         (and (not (y1h)) (not (xfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgh)) (not (t7c)) )
         (and (not (b2h)) (not (zfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ggh)) (not (t7c)) )
         (and (not (g2h)) (not (cgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jgh)) (not (t7c)) )
         (and (not (j2h)) (not (hgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lgh)) (not (t7c)) )
         (and (not (l2h)) (not (kgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qgh)) (not (t7c)) )
         (and (not (q2h)) (not (mgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tgh)) (not (t7c)) )
         (and (not (t2h)) (not (rgh)) ))

    )
  )
  (:action MOVE_P5-2_P5-3
    :precondition  (and 
      (q9b)
      (b2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q9b) (b2c) )
         (and (not (c2c)) (not (b2c)) (z1c) (g2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m7c) (zyd) )
         (and (not (bzd)) (not (zyd)) (not (c2c)) (not (b2c)) (z1c) (g2c) (yyd) (czd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yyd)) (not (l7c)) )
         (and (not (bzd)) (not (zyd)) (not (c2c)) (not (b2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (ceh) )
         (and (not (ceh)) (not (t5f)) (r5f) (geh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (heh) )
         (and (not (heh)) (not (v5f)) (u5f) (jeh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (keh) )
         (and (not (keh)) (not (y5f)) (x5f) (leh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (meh) )
         (and (not (meh)) (not (b6f)) (z5f) (qeh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (reh) )
         (and (not (reh)) (not (g6f)) (c6f) (teh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (ueh) )
         (and (not (ueh)) (not (j6f)) (h6f) (veh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (xeh) )
         (and (not (xeh)) (not (l6f)) (k6f) (yeh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (zeh) )
         (and (not (zeh)) (not (q6f)) (m6f) (bfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (cfh) )
         (and (not (cfh)) (not (t6f)) (r6f) (gfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (hfh) )
         (and (not (hfh)) (not (v6f)) (u6f) (jfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (kfh) )
         (and (not (kfh)) (not (y6f)) (x6f) (lfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (mfh) )
         (and (not (mfh)) (not (b7f)) (z6f) (qfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (rfh) )
         (and (not (rfh)) (not (g7f)) (c7f) (tfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (ufh) )
         (and (not (ufh)) (not (j7f)) (h7f) (vfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (xfh) )
         (and (not (xfh)) (not (l7f)) (k7f) (yfh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (zfh) )
         (and (not (zfh)) (not (q7f)) (m7f) (bgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (cgh) )
         (and (not (cgh)) (not (t7f)) (r7f) (ggh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (hgh) )
         (and (not (hgh)) (not (v7f)) (u7f) (jgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (kgh) )
         (and (not (kgh)) (not (y7f)) (x7f) (lgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (mgh) )
         (and (not (mgh)) (not (b8f)) (z7f) (qgh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m7c) (rgh) )
         (and (not (rgh)) (not (g8f)) (c8f) (tgh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (geh)) (not (l7c)) )
         (and (not (ceh)) (not (t5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jeh)) (not (l7c)) )
         (and (not (heh)) (not (v5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (leh)) (not (l7c)) )
         (and (not (keh)) (not (y5f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qeh)) (not (l7c)) )
         (and (not (meh)) (not (b6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (teh)) (not (l7c)) )
         (and (not (reh)) (not (g6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (veh)) (not (l7c)) )
         (and (not (ueh)) (not (j6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yeh)) (not (l7c)) )
         (and (not (xeh)) (not (l6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bfh)) (not (l7c)) )
         (and (not (zeh)) (not (q6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfh)) (not (l7c)) )
         (and (not (cfh)) (not (t6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfh)) (not (l7c)) )
         (and (not (hfh)) (not (v6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lfh)) (not (l7c)) )
         (and (not (kfh)) (not (y6f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qfh)) (not (l7c)) )
         (and (not (mfh)) (not (b7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tfh)) (not (l7c)) )
         (and (not (rfh)) (not (g7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vfh)) (not (l7c)) )
         (and (not (ufh)) (not (j7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yfh)) (not (l7c)) )
         (and (not (xfh)) (not (l7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgh)) (not (l7c)) )
         (and (not (zfh)) (not (q7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ggh)) (not (l7c)) )
         (and (not (cgh)) (not (t7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jgh)) (not (l7c)) )
         (and (not (hgh)) (not (v7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lgh)) (not (l7c)) )
         (and (not (kgh)) (not (y7f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qgh)) (not (l7c)) )
         (and (not (mgh)) (not (b8f)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tgh)) (not (l7c)) )
         (and (not (rgh)) (not (g8f)) ))

    )
  )
  (:action MOVE_P5-2_P6-2
    :precondition  (and 
      (v8b)
      (b2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v8b) (b2c) )
         (and (not (x2c)) (not (b2c)) (z1c) (y2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u6c) (zyd) )
         (and (not (vzd)) (not (zyd)) (not (x2c)) (not (b2c)) (z1c) (y2c) (yyd) (xzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yyd)) (not (t6c)) )
         (and (not (vzd)) (not (zyd)) (not (x2c)) (not (b2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (ceh) )
         (and (not (thh)) (not (ceh)) (geh) (rhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (heh) )
         (and (not (vhh)) (not (heh)) (jeh) (uhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (keh) )
         (and (not (yhh)) (not (keh)) (leh) (xhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (meh) )
         (and (not (bih)) (not (meh)) (qeh) (zhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (reh) )
         (and (not (gih)) (not (reh)) (teh) (cih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (ueh) (bhh) )
         (and (not (jih)) (not (ueh)) (veh) (hih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (xeh) )
         (and (not (lih)) (not (xeh)) (yeh) (kih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (zeh) )
         (and (not (qih)) (not (zeh)) (bfh) (mih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (cfh) )
         (and (not (tih)) (not (cfh)) (gfh) (rih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (hfh) )
         (and (not (vih)) (not (hfh)) (jfh) (uih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (kfh) )
         (and (not (yih)) (not (kfh)) (lfh) (xih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (mfh) )
         (and (not (bjh)) (not (mfh)) (qfh) (zih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (rfh) )
         (and (not (gjh)) (not (rfh)) (tfh) (cjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (ufh) )
         (and (not (jjh)) (not (ufh)) (vfh) (hjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (xfh) )
         (and (not (ljh)) (not (xfh)) (yfh) (kjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (zfh) )
         (and (not (qjh)) (not (zfh)) (bgh) (mjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (cgh) )
         (and (not (tjh)) (not (cgh)) (ggh) (rjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (hgh) )
         (and (not (vjh)) (not (hgh)) (jgh) (ujh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (kgh) )
         (and (not (yjh)) (not (kgh)) (lgh) (xjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (mgh) )
         (and (not (bkh)) (not (mgh)) (qgh) (zjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (rgh) )
         (and (not (gkh)) (not (rgh)) (tgh) (ckh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ghh)) (not (geh)) )
         (and (not (thh)) (not (ceh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hhh)) (not (jeh)) )
         (and (not (vhh)) (not (heh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jhh)) (not (leh)) )
         (and (not (yhh)) (not (keh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (khh)) (not (qeh)) )
         (and (not (bih)) (not (meh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lhh)) (not (teh)) )
         (and (not (gih)) (not (reh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (mhh)) (not (veh)) )
         (and (not (jih)) (not (ueh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qhh)) (not (yeh)) )
         (and (not (lih)) (not (xeh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bfh)) (not (t6c)) )
         (and (not (qih)) (not (zeh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gfh)) (not (t6c)) )
         (and (not (tih)) (not (cfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jfh)) (not (t6c)) )
         (and (not (vih)) (not (hfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lfh)) (not (t6c)) )
         (and (not (yih)) (not (kfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qfh)) (not (t6c)) )
         (and (not (bjh)) (not (mfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tfh)) (not (t6c)) )
         (and (not (gjh)) (not (rfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vfh)) (not (t6c)) )
         (and (not (jjh)) (not (ufh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yfh)) (not (t6c)) )
         (and (not (ljh)) (not (xfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bgh)) (not (t6c)) )
         (and (not (qjh)) (not (zfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ggh)) (not (t6c)) )
         (and (not (tjh)) (not (cgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jgh)) (not (t6c)) )
         (and (not (vjh)) (not (hgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lgh)) (not (t6c)) )
         (and (not (yjh)) (not (kgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qgh)) (not (t6c)) )
         (and (not (bkh)) (not (mgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tgh)) (not (t6c)) )
         (and (not (gkh)) (not (rgh)) ))

    )
  )
  (:action MOVE_P6-2_P5-2
    :precondition  (and 
      (t9b)
      (y2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t9b) (y2c) )
         (and (not (y2c)) (not (z1c)) (b2c) (x2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r7c) (xzd) )
         (and (not (xzd)) (not (yyd)) (not (y2c)) (not (z1c)) (b2c) (x2c) (zyd) (vzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vzd)) (not (q7c)) )
         (and (not (xzd)) (not (yyd)) (not (y2c)) (not (z1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (rhh) )
         (and (not (rhh)) (not (geh)) (ceh) (thh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (uhh) )
         (and (not (uhh)) (not (jeh)) (heh) (vhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (xhh) )
         (and (not (xhh)) (not (leh)) (keh) (yhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (zhh) )
         (and (not (zhh)) (not (qeh)) (meh) (bih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (cih) )
         (and (not (cih)) (not (teh)) (reh) (gih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (hih) )
         (and (not (hih)) (not (veh)) (ueh) (jih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (kih) )
         (and (not (kih)) (not (yeh)) (xeh) (lih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (mih) )
         (and (not (mih)) (not (bfh)) (zeh) (qih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (rih) )
         (and (not (rih)) (not (gfh)) (cfh) (tih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (uih) )
         (and (not (uih)) (not (jfh)) (hfh) (vih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (xih) )
         (and (not (xih)) (not (lfh)) (kfh) (yih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (zih) )
         (and (not (zih)) (not (qfh)) (mfh) (bjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (cjh) )
         (and (not (cjh)) (not (tfh)) (rfh) (gjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (hjh) )
         (and (not (hjh)) (not (vfh)) (ufh) (jjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (kjh) )
         (and (not (kjh)) (not (yfh)) (xfh) (ljh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (mjh) )
         (and (not (mjh)) (not (bgh)) (zfh) (qjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (rjh) )
         (and (not (rjh)) (not (ggh)) (cgh) (tjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (ujh) )
         (and (not (ujh)) (not (jgh)) (hgh) (vjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (xjh) )
         (and (not (xjh)) (not (lgh)) (kgh) (yjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (zjh) )
         (and (not (zjh)) (not (qgh)) (mgh) (bkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (ckh) )
         (and (not (ckh)) (not (tgh)) (rgh) (gkh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thh)) (not (q7c)) )
         (and (not (rhh)) (not (geh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vhh)) (not (q7c)) )
         (and (not (uhh)) (not (jeh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yhh)) (not (q7c)) )
         (and (not (xhh)) (not (leh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bih)) (not (q7c)) )
         (and (not (zhh)) (not (qeh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gih)) (not (q7c)) )
         (and (not (cih)) (not (teh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jih)) (not (q7c)) )
         (and (not (hih)) (not (veh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lih)) (not (q7c)) )
         (and (not (kih)) (not (yeh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qih)) (not (q7c)) )
         (and (not (mih)) (not (bfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tih)) (not (q7c)) )
         (and (not (rih)) (not (gfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vih)) (not (q7c)) )
         (and (not (uih)) (not (jfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yih)) (not (q7c)) )
         (and (not (xih)) (not (lfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjh)) (not (q7c)) )
         (and (not (zih)) (not (qfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjh)) (not (q7c)) )
         (and (not (cjh)) (not (tfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjh)) (not (q7c)) )
         (and (not (hjh)) (not (vfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljh)) (not (q7c)) )
         (and (not (kjh)) (not (yfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjh)) (not (q7c)) )
         (and (not (mjh)) (not (bgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tjh)) (not (q7c)) )
         (and (not (rjh)) (not (ggh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vjh)) (not (q7c)) )
         (and (not (ujh)) (not (jgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yjh)) (not (q7c)) )
         (and (not (xjh)) (not (lgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bkh)) (not (q7c)) )
         (and (not (zjh)) (not (qgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gkh)) (not (q7c)) )
         (and (not (ckh)) (not (tgh)) ))

    )
  )
  (:action MOVE_P6-2_P6-1
    :precondition  (and 
      (y8b)
      (y2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y8b) (y2c) )
         (and (not (y2c)) (not (u2c)) (v2c) (x2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x6c) (xzd) )
         (and (not (xzd)) (not (tzd)) (not (y2c)) (not (u2c)) (v2c) (x2c) (uzd) (vzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vzd)) (not (v6c)) )
         (and (not (xzd)) (not (tzd)) (not (y2c)) (not (u2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (rhh) )
         (and (not (t3h)) (not (rhh)) (thh) (r3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (uhh) )
         (and (not (v3h)) (not (uhh)) (vhh) (u3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (xhh) )
         (and (not (y3h)) (not (xhh)) (yhh) (x3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (zhh) )
         (and (not (b4h)) (not (zhh)) (bih) (z3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (cih) )
         (and (not (g4h)) (not (cih)) (gih) (c4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (hih) )
         (and (not (j4h)) (not (hih)) (jih) (h4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (kih) (c3h) )
         (and (not (l4h)) (not (kih)) (lih) (k4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (mih) )
         (and (not (q4h)) (not (mih)) (qih) (m4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (rih) )
         (and (not (t4h)) (not (rih)) (tih) (r4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (uih) )
         (and (not (v4h)) (not (uih)) (vih) (u4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (xih) )
         (and (not (y4h)) (not (xih)) (yih) (x4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (zih) )
         (and (not (b5h)) (not (zih)) (bjh) (z4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (cjh) )
         (and (not (g5h)) (not (cjh)) (gjh) (c5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (hjh) )
         (and (not (j5h)) (not (hjh)) (jjh) (h5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (kjh) )
         (and (not (l5h)) (not (kjh)) (ljh) (k5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (mjh) )
         (and (not (q5h)) (not (mjh)) (qjh) (m5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (rjh) )
         (and (not (t5h)) (not (rjh)) (tjh) (r5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (ujh) )
         (and (not (v5h)) (not (ujh)) (vjh) (u5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (xjh) )
         (and (not (y5h)) (not (xjh)) (yjh) (x5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (zjh) )
         (and (not (b6h)) (not (zjh)) (bkh) (z5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (ckh) )
         (and (not (g6h)) (not (ckh)) (gkh) (c6h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3h)) (not (thh)) )
         (and (not (t3h)) (not (rhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (h3h)) (not (vhh)) )
         (and (not (v3h)) (not (uhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3h)) (not (yhh)) )
         (and (not (y3h)) (not (xhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (k3h)) (not (bih)) )
         (and (not (b4h)) (not (zhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3h)) (not (gih)) )
         (and (not (g4h)) (not (cih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (m3h)) (not (jih)) )
         (and (not (j4h)) (not (hih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3h)) (not (lih)) )
         (and (not (l4h)) (not (kih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qih)) (not (v6c)) )
         (and (not (q4h)) (not (mih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tih)) (not (v6c)) )
         (and (not (t4h)) (not (rih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vih)) (not (v6c)) )
         (and (not (v4h)) (not (uih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yih)) (not (v6c)) )
         (and (not (y4h)) (not (xih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjh)) (not (v6c)) )
         (and (not (b5h)) (not (zih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjh)) (not (v6c)) )
         (and (not (g5h)) (not (cjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjh)) (not (v6c)) )
         (and (not (j5h)) (not (hjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljh)) (not (v6c)) )
         (and (not (l5h)) (not (kjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjh)) (not (v6c)) )
         (and (not (q5h)) (not (mjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tjh)) (not (v6c)) )
         (and (not (t5h)) (not (rjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vjh)) (not (v6c)) )
         (and (not (v5h)) (not (ujh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yjh)) (not (v6c)) )
         (and (not (y5h)) (not (xjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bkh)) (not (v6c)) )
         (and (not (b6h)) (not (zjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gkh)) (not (v6c)) )
         (and (not (g6h)) (not (ckh)) ))

    )
  )
  (:action MOVE_P6-2_P6-3
    :precondition  (and 
      (t8b)
      (y2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t8b) (y2c) )
         (and (not (z2c)) (not (y2c)) (x2c) (b3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r6c) (xzd) )
         (and (not (yzd)) (not (xzd)) (not (z2c)) (not (y2c)) (x2c) (b3c) (vzd) (zzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vzd)) (not (q6c)) )
         (and (not (yzd)) (not (xzd)) (not (z2c)) (not (y2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (rhh) )
         (and (not (rhh)) (not (gmg)) (cmg) (thh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (uhh) )
         (and (not (uhh)) (not (jmg)) (hmg) (vhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (xhh) )
         (and (not (xhh)) (not (lmg)) (kmg) (yhh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (zhh) )
         (and (not (zhh)) (not (qmg)) (mmg) (bih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (mlg) (cih) )
         (and (not (cih)) (not (tmg)) (rmg) (gih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (hih) )
         (and (not (hih)) (not (vmg)) (umg) (jih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (kih) )
         (and (not (kih)) (not (ymg)) (xmg) (lih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (mih) )
         (and (not (mih)) (not (bng)) (zmg) (qih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (rih) )
         (and (not (rih)) (not (gng)) (cng) (tih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (uih) )
         (and (not (uih)) (not (jng)) (hng) (vih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (xih) )
         (and (not (xih)) (not (lng)) (kng) (yih) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (zih) )
         (and (not (zih)) (not (qng)) (mng) (bjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (cjh) )
         (and (not (cjh)) (not (tng)) (rng) (gjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (hjh) )
         (and (not (hjh)) (not (vng)) (ung) (jjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (kjh) )
         (and (not (kjh)) (not (yng)) (xng) (ljh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (mjh) )
         (and (not (mjh)) (not (bog)) (zng) (qjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (rjh) )
         (and (not (rjh)) (not (gog)) (cog) (tjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (ujh) )
         (and (not (ujh)) (not (jog)) (hog) (vjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (xjh) )
         (and (not (xjh)) (not (log)) (kog) (yjh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (zjh) )
         (and (not (zjh)) (not (qog)) (mog) (bkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r6c) (ckh) )
         (and (not (ckh)) (not (tog)) (rog) (gkh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thh)) (not (tlg)) )
         (and (not (rhh)) (not (gmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vhh)) (not (ulg)) )
         (and (not (uhh)) (not (jmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yhh)) (not (vlg)) )
         (and (not (xhh)) (not (lmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bih)) (not (xlg)) )
         (and (not (zhh)) (not (qmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gih)) (not (ylg)) )
         (and (not (cih)) (not (tmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jih)) (not (zlg)) )
         (and (not (hih)) (not (vmg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lih)) (not (bmg)) )
         (and (not (kih)) (not (ymg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qih)) (not (q6c)) )
         (and (not (mih)) (not (bng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tih)) (not (q6c)) )
         (and (not (rih)) (not (gng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vih)) (not (q6c)) )
         (and (not (uih)) (not (jng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yih)) (not (q6c)) )
         (and (not (xih)) (not (lng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjh)) (not (q6c)) )
         (and (not (zih)) (not (qng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjh)) (not (q6c)) )
         (and (not (cjh)) (not (tng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjh)) (not (q6c)) )
         (and (not (hjh)) (not (vng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljh)) (not (q6c)) )
         (and (not (kjh)) (not (yng)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjh)) (not (q6c)) )
         (and (not (mjh)) (not (bog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tjh)) (not (q6c)) )
         (and (not (rjh)) (not (gog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vjh)) (not (q6c)) )
         (and (not (ujh)) (not (jog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yjh)) (not (q6c)) )
         (and (not (xjh)) (not (log)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bkh)) (not (q6c)) )
         (and (not (zjh)) (not (qog)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gkh)) (not (q6c)) )
         (and (not (ckh)) (not (tog)) ))

    )
  )
  (:action MOVE_P6-2_P7-2
    :precondition  (and 
      (y7b)
      (y2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y7b) (y2c) )
         (and (not (u3c)) (not (y2c)) (x2c) (v3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x5c) (xzd) )
         (and (not (t1d)) (not (xzd)) (not (u3c)) (not (y2c)) (x2c) (v3c) (vzd) (u1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vzd)) (not (v5c)) )
         (and (not (t1d)) (not (xzd)) (not (u3c)) (not (y2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (rhh) )
         (and (not (jkh)) (not (rhh)) (thh) (hkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (uhh) )
         (and (not (lkh)) (not (uhh)) (vhh) (kkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (xhh) )
         (and (not (qkh)) (not (xhh)) (yhh) (mkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (zhh) )
         (and (not (tkh)) (not (zhh)) (bih) (rkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (cih) )
         (and (not (vkh)) (not (cih)) (gih) (ukh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (hih) )
         (and (not (ykh)) (not (hih)) (jih) (xkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (kih) )
         (and (not (blh)) (not (kih)) (lih) (zkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (mih) )
         (and (not (glh)) (not (mih)) (qih) (clh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (rih) )
         (and (not (jlh)) (not (rih)) (tih) (hlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (uih) )
         (and (not (llh)) (not (uih)) (vih) (klh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (xih) )
         (and (not (qlh)) (not (xih)) (yih) (mlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (zih) )
         (and (not (tlh)) (not (zih)) (bjh) (rlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (cjh) )
         (and (not (vlh)) (not (cjh)) (gjh) (ulh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (hjh) )
         (and (not (ylh)) (not (hjh)) (jjh) (xlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (kjh) )
         (and (not (bmh)) (not (kjh)) (ljh) (zlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (mjh) )
         (and (not (gmh)) (not (mjh)) (qjh) (cmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (rjh) )
         (and (not (jmh)) (not (rjh)) (tjh) (hmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (ujh) )
         (and (not (lmh)) (not (ujh)) (vjh) (kmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (xjh) )
         (and (not (qmh)) (not (xjh)) (yjh) (mmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (zjh) )
         (and (not (tmh)) (not (zjh)) (bkh) (rmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (ckh) )
         (and (not (vmh)) (not (ckh)) (gkh) (umh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (thh)) (not (v5c)) )
         (and (not (jkh)) (not (rhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vhh)) (not (v5c)) )
         (and (not (lkh)) (not (uhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yhh)) (not (v5c)) )
         (and (not (qkh)) (not (xhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bih)) (not (v5c)) )
         (and (not (tkh)) (not (zhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gih)) (not (v5c)) )
         (and (not (vkh)) (not (cih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jih)) (not (v5c)) )
         (and (not (ykh)) (not (hih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lih)) (not (v5c)) )
         (and (not (blh)) (not (kih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qih)) (not (v5c)) )
         (and (not (glh)) (not (mih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tih)) (not (v5c)) )
         (and (not (jlh)) (not (rih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vih)) (not (v5c)) )
         (and (not (llh)) (not (uih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yih)) (not (v5c)) )
         (and (not (qlh)) (not (xih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bjh)) (not (v5c)) )
         (and (not (tlh)) (not (zih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gjh)) (not (v5c)) )
         (and (not (vlh)) (not (cjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jjh)) (not (v5c)) )
         (and (not (ylh)) (not (hjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ljh)) (not (v5c)) )
         (and (not (bmh)) (not (kjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qjh)) (not (v5c)) )
         (and (not (gmh)) (not (mjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tjh)) (not (v5c)) )
         (and (not (jmh)) (not (rjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vjh)) (not (v5c)) )
         (and (not (lmh)) (not (ujh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yjh)) (not (v5c)) )
         (and (not (qmh)) (not (xjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bkh)) (not (v5c)) )
         (and (not (tmh)) (not (zjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gkh)) (not (v5c)) )
         (and (not (vmh)) (not (ckh)) ))

    )
  )
  (:action MOVE_P7-2_P6-2
    :precondition  (and 
      (v8b)
      (v3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v8b) (v3c) )
         (and (not (v3c)) (not (x2c)) (y2c) (u3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u6c) (u1d) )
         (and (not (u1d)) (not (vzd)) (not (v3c)) (not (x2c)) (y2c) (u3c) (xzd) (t1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (t1d)) (not (t6c)) )
         (and (not (u1d)) (not (vzd)) (not (v3c)) (not (x2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (hkh) )
         (and (not (hkh)) (not (thh)) (rhh) (jkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (kkh) )
         (and (not (kkh)) (not (vhh)) (uhh) (lkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (mkh) )
         (and (not (mkh)) (not (yhh)) (xhh) (qkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (rkh) )
         (and (not (rkh)) (not (bih)) (zhh) (tkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (ukh) )
         (and (not (ukh)) (not (gih)) (cih) (vkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (bhh) (xkh) )
         (and (not (xkh)) (not (jih)) (hih) (ykh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (zkh) )
         (and (not (zkh)) (not (lih)) (kih) (blh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (clh) )
         (and (not (clh)) (not (qih)) (mih) (glh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (hlh) )
         (and (not (hlh)) (not (tih)) (rih) (jlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (klh) )
         (and (not (klh)) (not (vih)) (uih) (llh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (mlh) )
         (and (not (mlh)) (not (yih)) (xih) (qlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (rlh) )
         (and (not (rlh)) (not (bjh)) (zih) (tlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (ulh) )
         (and (not (ulh)) (not (gjh)) (cjh) (vlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (xlh) )
         (and (not (xlh)) (not (jjh)) (hjh) (ylh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (zlh) )
         (and (not (zlh)) (not (ljh)) (kjh) (bmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (cmh) )
         (and (not (cmh)) (not (qjh)) (mjh) (gmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (hmh) )
         (and (not (hmh)) (not (tjh)) (rjh) (jmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (kmh) )
         (and (not (kmh)) (not (vjh)) (ujh) (lmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (mmh) )
         (and (not (mmh)) (not (yjh)) (xjh) (qmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (rmh) )
         (and (not (rmh)) (not (bkh)) (zjh) (tmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (umh) )
         (and (not (umh)) (not (gkh)) (ckh) (vmh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jkh)) (not (ghh)) )
         (and (not (hkh)) (not (thh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lkh)) (not (hhh)) )
         (and (not (kkh)) (not (vhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qkh)) (not (jhh)) )
         (and (not (mkh)) (not (yhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tkh)) (not (khh)) )
         (and (not (rkh)) (not (bih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vkh)) (not (lhh)) )
         (and (not (ukh)) (not (gih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ykh)) (not (mhh)) )
         (and (not (xkh)) (not (jih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (blh)) (not (qhh)) )
         (and (not (zkh)) (not (lih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (glh)) (not (t6c)) )
         (and (not (clh)) (not (qih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jlh)) (not (t6c)) )
         (and (not (hlh)) (not (tih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (llh)) (not (t6c)) )
         (and (not (klh)) (not (vih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qlh)) (not (t6c)) )
         (and (not (mlh)) (not (yih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tlh)) (not (t6c)) )
         (and (not (rlh)) (not (bjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vlh)) (not (t6c)) )
         (and (not (ulh)) (not (gjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ylh)) (not (t6c)) )
         (and (not (xlh)) (not (jjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bmh)) (not (t6c)) )
         (and (not (zlh)) (not (ljh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gmh)) (not (t6c)) )
         (and (not (cmh)) (not (qjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jmh)) (not (t6c)) )
         (and (not (hmh)) (not (tjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lmh)) (not (t6c)) )
         (and (not (kmh)) (not (vjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qmh)) (not (t6c)) )
         (and (not (mmh)) (not (yjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tmh)) (not (t6c)) )
         (and (not (rmh)) (not (bkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vmh)) (not (t6c)) )
         (and (not (umh)) (not (gkh)) ))

    )
  )
  (:action MOVE_P7-2_P7-1
    :precondition  (and 
      (b8b)
      (v3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (b8b) (v3c) )
         (and (not (v3c)) (not (r3c)) (t3c) (u3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z5c) (u1d) )
         (and (not (u1d)) (not (q1d)) (not (v3c)) (not (r3c)) (t3c) (u3c) (r1d) (t1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (t1d)) (not (y5c)) )
         (and (not (u1d)) (not (q1d)) (not (v3c)) (not (r3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (hkh) )
         (and (not (j6h)) (not (hkh)) (jkh) (h6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (kkh) )
         (and (not (l6h)) (not (kkh)) (lkh) (k6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (mkh) )
         (and (not (q6h)) (not (mkh)) (qkh) (m6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (rkh) )
         (and (not (t6h)) (not (rkh)) (tkh) (r6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (ukh) )
         (and (not (v6h)) (not (ukh)) (vkh) (u6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (xkh) )
         (and (not (y6h)) (not (xkh)) (ykh) (x6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (zkh) )
         (and (not (b7h)) (not (zkh)) (blh) (z6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (clh) )
         (and (not (g7h)) (not (clh)) (glh) (c7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (hlh) )
         (and (not (j7h)) (not (hlh)) (jlh) (h7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (klh) )
         (and (not (l7h)) (not (klh)) (llh) (k7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (mlh) )
         (and (not (q7h)) (not (mlh)) (qlh) (m7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (rlh) )
         (and (not (t7h)) (not (rlh)) (tlh) (r7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (ulh) )
         (and (not (v7h)) (not (ulh)) (vlh) (u7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (xlh) )
         (and (not (y7h)) (not (xlh)) (ylh) (x7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (zlh) )
         (and (not (b8h)) (not (zlh)) (bmh) (z7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (cmh) )
         (and (not (g8h)) (not (cmh)) (gmh) (c8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (hmh) )
         (and (not (j8h)) (not (hmh)) (jmh) (h8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (kmh) )
         (and (not (l8h)) (not (kmh)) (lmh) (k8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (mmh) )
         (and (not (q8h)) (not (mmh)) (qmh) (m8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (rmh) )
         (and (not (t8h)) (not (rmh)) (tmh) (r8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (umh) )
         (and (not (v8h)) (not (umh)) (vmh) (u8h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jkh)) (not (y5c)) )
         (and (not (j6h)) (not (hkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lkh)) (not (y5c)) )
         (and (not (l6h)) (not (kkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qkh)) (not (y5c)) )
         (and (not (q6h)) (not (mkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tkh)) (not (y5c)) )
         (and (not (t6h)) (not (rkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vkh)) (not (y5c)) )
         (and (not (v6h)) (not (ukh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ykh)) (not (y5c)) )
         (and (not (y6h)) (not (xkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (blh)) (not (y5c)) )
         (and (not (b7h)) (not (zkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (glh)) (not (y5c)) )
         (and (not (g7h)) (not (clh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jlh)) (not (y5c)) )
         (and (not (j7h)) (not (hlh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (llh)) (not (y5c)) )
         (and (not (l7h)) (not (klh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qlh)) (not (y5c)) )
         (and (not (q7h)) (not (mlh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tlh)) (not (y5c)) )
         (and (not (t7h)) (not (rlh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vlh)) (not (y5c)) )
         (and (not (v7h)) (not (ulh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ylh)) (not (y5c)) )
         (and (not (y7h)) (not (xlh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bmh)) (not (y5c)) )
         (and (not (b8h)) (not (zlh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gmh)) (not (y5c)) )
         (and (not (g8h)) (not (cmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jmh)) (not (y5c)) )
         (and (not (j8h)) (not (hmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lmh)) (not (y5c)) )
         (and (not (l8h)) (not (kmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qmh)) (not (y5c)) )
         (and (not (q8h)) (not (mmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tmh)) (not (y5c)) )
         (and (not (t8h)) (not (rmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vmh)) (not (y5c)) )
         (and (not (v8h)) (not (umh)) ))

    )
  )
  (:action MOVE_P7-2_P7-3
    :precondition  (and 
      (v7b)
      (v3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v7b) (v3c) )
         (and (not (x3c)) (not (v3c)) (u3c) (y3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u5c) (u1d) )
         (and (not (v1d)) (not (u1d)) (not (x3c)) (not (v3c)) (u3c) (y3c) (t1d) (x1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (t1d)) (not (t5c)) )
         (and (not (v1d)) (not (u1d)) (not (x3c)) (not (v3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (hkh) )
         (and (not (hkh)) (not (jzg)) (hzg) (jkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (kkh) )
         (and (not (kkh)) (not (lzg)) (kzg) (lkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (mkh) )
         (and (not (mkh)) (not (qzg)) (mzg) (qkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (rkh) )
         (and (not (rkh)) (not (tzg)) (rzg) (tkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (ukh) )
         (and (not (ukh)) (not (vzg)) (uzg) (vkh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (xkh) )
         (and (not (xkh)) (not (yzg)) (xzg) (ykh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (zkh) )
         (and (not (zkh)) (not (b1g)) (zzg) (blh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (clh) )
         (and (not (clh)) (not (g1g)) (c1g) (glh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (hlh) )
         (and (not (hlh)) (not (j1g)) (h1g) (jlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (klh) )
         (and (not (klh)) (not (l1g)) (k1g) (llh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (mlh) )
         (and (not (mlh)) (not (q1g)) (m1g) (qlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (rlh) )
         (and (not (rlh)) (not (t1g)) (r1g) (tlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (ulh) )
         (and (not (ulh)) (not (v1g)) (u1g) (vlh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (xlh) )
         (and (not (xlh)) (not (y1g)) (x1g) (ylh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (zlh) )
         (and (not (zlh)) (not (b2g)) (z1g) (bmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (cmh) )
         (and (not (cmh)) (not (g2g)) (c2g) (gmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (hmh) )
         (and (not (hmh)) (not (j2g)) (h2g) (jmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (kmh) )
         (and (not (kmh)) (not (l2g)) (k2g) (lmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (mmh) )
         (and (not (mmh)) (not (q2g)) (m2g) (qmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (rmh) )
         (and (not (rmh)) (not (t2g)) (r2g) (tmh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u5c) (umh) )
         (and (not (umh)) (not (v2g)) (u2g) (vmh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jkh)) (not (t5c)) )
         (and (not (hkh)) (not (jzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lkh)) (not (t5c)) )
         (and (not (kkh)) (not (lzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qkh)) (not (t5c)) )
         (and (not (mkh)) (not (qzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tkh)) (not (t5c)) )
         (and (not (rkh)) (not (tzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vkh)) (not (t5c)) )
         (and (not (ukh)) (not (vzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ykh)) (not (t5c)) )
         (and (not (xkh)) (not (yzg)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (blh)) (not (t5c)) )
         (and (not (zkh)) (not (b1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (glh)) (not (t5c)) )
         (and (not (clh)) (not (g1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jlh)) (not (t5c)) )
         (and (not (hlh)) (not (j1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (llh)) (not (t5c)) )
         (and (not (klh)) (not (l1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qlh)) (not (t5c)) )
         (and (not (mlh)) (not (q1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tlh)) (not (t5c)) )
         (and (not (rlh)) (not (t1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vlh)) (not (t5c)) )
         (and (not (ulh)) (not (v1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ylh)) (not (t5c)) )
         (and (not (xlh)) (not (y1g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bmh)) (not (t5c)) )
         (and (not (zlh)) (not (b2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gmh)) (not (t5c)) )
         (and (not (cmh)) (not (g2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jmh)) (not (t5c)) )
         (and (not (hmh)) (not (j2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lmh)) (not (t5c)) )
         (and (not (kmh)) (not (l2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qmh)) (not (t5c)) )
         (and (not (mmh)) (not (q2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tmh)) (not (t5c)) )
         (and (not (rmh)) (not (t2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vmh)) (not (t5c)) )
         (and (not (umh)) (not (v2g)) ))

    )
  )
  (:action MOVE_P1-1_P1-2
    :precondition  (and 
      (gcc)
      (qxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (gcc) (qxc) )
         (and (not (rxc)) (not (qxc)) (mxc) (txc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (cad) (mvd) )
         (and (not (qvd)) (not (mvd)) (not (rxc)) (not (qxc)) (mxc) (txc) (lvd) (rvd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lvd)) (not (bad)) )
         (and (not (qvd)) (not (mvd)) (not (rxc)) (not (qxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (xmh) )
         (and (not (xmh)) (not (y2g)) (x2g) (ymh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (zmh) )
         (and (not (zmh)) (not (b3g)) (z2g) (bnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (cnh) )
         (and (not (cnh)) (not (g3g)) (c3g) (gnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (hnh) )
         (and (not (hnh)) (not (j3g)) (h3g) (jnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (knh) )
         (and (not (knh)) (not (l3g)) (k3g) (lnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (mnh) )
         (and (not (mnh)) (not (q3g)) (m3g) (qnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (rnh) )
         (and (not (rnh)) (not (t3g)) (r3g) (tnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (unh) )
         (and (not (unh)) (not (v3g)) (u3g) (vnh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (xnh) )
         (and (not (xnh)) (not (y3g)) (x3g) (ynh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (znh) )
         (and (not (znh)) (not (b4g)) (z3g) (boh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (coh) )
         (and (not (coh)) (not (g4g)) (c4g) (goh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (hoh) )
         (and (not (hoh)) (not (j4g)) (h4g) (joh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (koh) )
         (and (not (koh)) (not (l4g)) (k4g) (loh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (moh) )
         (and (not (moh)) (not (q4g)) (m4g) (qoh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (roh) )
         (and (not (roh)) (not (t4g)) (r4g) (toh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (uoh) )
         (and (not (uoh)) (not (v4g)) (u4g) (voh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (xoh) )
         (and (not (xoh)) (not (y4g)) (x4g) (yoh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (zoh) )
         (and (not (zoh)) (not (b5g)) (z4g) (bph) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (cph) )
         (and (not (cph)) (not (g5g)) (c5g) (gph) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (hph) )
         (and (not (hph)) (not (j5g)) (h5g) (jph) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (cad) (kph) )
         (and (not (kph)) (not (l5g)) (k5g) (lph) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ymh)) (not (bad)) )
         (and (not (xmh)) (not (y2g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bnh)) (not (bad)) )
         (and (not (zmh)) (not (b3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gnh)) (not (bad)) )
         (and (not (cnh)) (not (g3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jnh)) (not (bad)) )
         (and (not (hnh)) (not (j3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lnh)) (not (bad)) )
         (and (not (knh)) (not (l3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qnh)) (not (bad)) )
         (and (not (mnh)) (not (q3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tnh)) (not (bad)) )
         (and (not (rnh)) (not (t3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vnh)) (not (bad)) )
         (and (not (unh)) (not (v3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ynh)) (not (bad)) )
         (and (not (xnh)) (not (y3g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (boh)) (not (bad)) )
         (and (not (znh)) (not (b4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (goh)) (not (bad)) )
         (and (not (coh)) (not (g4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (joh)) (not (bad)) )
         (and (not (hoh)) (not (j4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (loh)) (not (bad)) )
         (and (not (koh)) (not (l4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qoh)) (not (bad)) )
         (and (not (moh)) (not (q4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (toh)) (not (bad)) )
         (and (not (roh)) (not (t4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (voh)) (not (bad)) )
         (and (not (uoh)) (not (v4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yoh)) (not (bad)) )
         (and (not (xoh)) (not (y4g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bph)) (not (bad)) )
         (and (not (zoh)) (not (b5g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gph)) (not (bad)) )
         (and (not (cph)) (not (g5g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jph)) (not (bad)) )
         (and (not (hph)) (not (j5g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lph)) (not (bad)) )
         (and (not (kph)) (not (l5g)) ))

    )
  )
  (:action MOVE_P1-1_P2-1
    :precondition  (and 
      (lbc)
      (qxc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (lbc) (qxc) )
         (and (not (hyc)) (not (qxc)) (mxc) (jyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k0c) (mvd) )
         (and (not (gwd)) (not (mvd)) (not (hyc)) (not (qxc)) (mxc) (jyc) (lvd) (hwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (lvd)) (not (j0c)) )
         (and (not (gwd)) (not (mvd)) (not (hyc)) (not (qxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (xmh) )
         (and (not (lqh)) (not (xmh)) (ymh) (kqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (zmh) )
         (and (not (qqh)) (not (zmh)) (bnh) (mqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (cnh) )
         (and (not (tqh)) (not (cnh)) (gnh) (rqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (hnh) )
         (and (not (vqh)) (not (hnh)) (jnh) (uqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (knh) )
         (and (not (yqh)) (not (knh)) (lnh) (xqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (mnh) )
         (and (not (bsh)) (not (mnh)) (qnh) (zqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (rnh) )
         (and (not (gsh)) (not (rnh)) (tnh) (csh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (unh) )
         (and (not (jsh)) (not (unh)) (vnh) (hsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (xnh) )
         (and (not (lsh)) (not (xnh)) (ynh) (ksh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (znh) )
         (and (not (qsh)) (not (znh)) (boh) (msh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (coh) )
         (and (not (tsh)) (not (coh)) (goh) (rsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (hoh) )
         (and (not (vsh)) (not (hoh)) (joh) (ush) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (koh) )
         (and (not (ysh)) (not (koh)) (loh) (xsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (moh) )
         (and (not (brh)) (not (moh)) (qoh) (zsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (roh) )
         (and (not (grh)) (not (roh)) (toh) (crh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (uoh) )
         (and (not (jrh)) (not (uoh)) (voh) (hrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (xoh) )
         (and (not (lrh)) (not (xoh)) (yoh) (krh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (zoh) )
         (and (not (qrh)) (not (zoh)) (bph) (mrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (cph) )
         (and (not (trh)) (not (cph)) (gph) (rrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (hph) )
         (and (not (vrh)) (not (hph)) (jph) (urh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (kph) (xph) )
         (and (not (yrh)) (not (kph)) (lph) (xrh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ymh)) (not (j0c)) )
         (and (not (lqh)) (not (xmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bnh)) (not (j0c)) )
         (and (not (qqh)) (not (zmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gnh)) (not (j0c)) )
         (and (not (tqh)) (not (cnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jnh)) (not (j0c)) )
         (and (not (vqh)) (not (hnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lnh)) (not (j0c)) )
         (and (not (yqh)) (not (knh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qnh)) (not (j0c)) )
         (and (not (bsh)) (not (mnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tnh)) (not (j0c)) )
         (and (not (gsh)) (not (rnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vnh)) (not (j0c)) )
         (and (not (jsh)) (not (unh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ynh)) (not (j0c)) )
         (and (not (lsh)) (not (xnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (boh)) (not (j0c)) )
         (and (not (qsh)) (not (znh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (goh)) (not (j0c)) )
         (and (not (tsh)) (not (coh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (joh)) (not (j0c)) )
         (and (not (vsh)) (not (hoh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (loh)) (not (j0c)) )
         (and (not (ysh)) (not (koh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qoh)) (not (j0c)) )
         (and (not (brh)) (not (moh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yph)) (not (toh)) )
         (and (not (grh)) (not (roh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (zph)) (not (voh)) )
         (and (not (jrh)) (not (uoh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bqh)) (not (yoh)) )
         (and (not (lrh)) (not (xoh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (cqh)) (not (bph)) )
         (and (not (qrh)) (not (zoh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gqh)) (not (gph)) )
         (and (not (trh)) (not (cph)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hqh)) (not (jph)) )
         (and (not (vrh)) (not (hph)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jqh)) (not (lph)) )
         (and (not (yrh)) (not (kph)) ))

    )
  )
  (:action MOVE_P2-1_P1-1
    :precondition  (and 
      (jcc)
      (jyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (jcc) (jyc) )
         (and (not (jyc)) (not (mxc)) (qxc) (hyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (had) (hwd) )
         (and (not (hwd)) (not (lvd)) (not (jyc)) (not (mxc)) (qxc) (hyc) (mvd) (gwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gwd)) (not (gad)) )
         (and (not (hwd)) (not (lvd)) (not (jyc)) (not (mxc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (kqh) )
         (and (not (kqh)) (not (ymh)) (xmh) (lqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (mqh) )
         (and (not (mqh)) (not (bnh)) (zmh) (qqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (rqh) )
         (and (not (rqh)) (not (gnh)) (cnh) (tqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (uqh) )
         (and (not (uqh)) (not (jnh)) (hnh) (vqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (xqh) )
         (and (not (xqh)) (not (lnh)) (knh) (yqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (zqh) )
         (and (not (zqh)) (not (qnh)) (mnh) (bsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (csh) )
         (and (not (csh)) (not (tnh)) (rnh) (gsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (hsh) )
         (and (not (hsh)) (not (vnh)) (unh) (jsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (ksh) )
         (and (not (ksh)) (not (ynh)) (xnh) (lsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (msh) )
         (and (not (msh)) (not (boh)) (znh) (qsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (rsh) )
         (and (not (rsh)) (not (goh)) (coh) (tsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (ush) )
         (and (not (ush)) (not (joh)) (hoh) (vsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (xsh) )
         (and (not (xsh)) (not (loh)) (koh) (ysh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (zsh) )
         (and (not (zsh)) (not (qoh)) (moh) (brh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (crh) )
         (and (not (crh)) (not (toh)) (roh) (grh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (hrh) )
         (and (not (hrh)) (not (voh)) (uoh) (jrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (krh) )
         (and (not (krh)) (not (yoh)) (xoh) (lrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (mrh) )
         (and (not (mrh)) (not (bph)) (zoh) (qrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (rrh) )
         (and (not (rrh)) (not (gph)) (cph) (trh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (urh) )
         (and (not (urh)) (not (jph)) (hph) (vrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (had) (xrh) )
         (and (not (xrh)) (not (lph)) (kph) (yrh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqh)) (not (gad)) )
         (and (not (kqh)) (not (ymh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqh)) (not (gad)) )
         (and (not (mqh)) (not (bnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tqh)) (not (gad)) )
         (and (not (rqh)) (not (gnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vqh)) (not (gad)) )
         (and (not (uqh)) (not (jnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yqh)) (not (gad)) )
         (and (not (xqh)) (not (lnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bsh)) (not (gad)) )
         (and (not (zqh)) (not (qnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gsh)) (not (gad)) )
         (and (not (csh)) (not (tnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jsh)) (not (gad)) )
         (and (not (hsh)) (not (vnh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lsh)) (not (gad)) )
         (and (not (ksh)) (not (ynh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qsh)) (not (gad)) )
         (and (not (msh)) (not (boh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tsh)) (not (gad)) )
         (and (not (rsh)) (not (goh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vsh)) (not (gad)) )
         (and (not (ush)) (not (joh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ysh)) (not (gad)) )
         (and (not (xsh)) (not (loh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (brh)) (not (gad)) )
         (and (not (zsh)) (not (qoh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (grh)) (not (gad)) )
         (and (not (crh)) (not (toh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jrh)) (not (gad)) )
         (and (not (hrh)) (not (voh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lrh)) (not (gad)) )
         (and (not (krh)) (not (yoh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qrh)) (not (gad)) )
         (and (not (mrh)) (not (bph)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (trh)) (not (gad)) )
         (and (not (rrh)) (not (gph)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vrh)) (not (gad)) )
         (and (not (urh)) (not (jph)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yrh)) (not (gad)) )
         (and (not (xrh)) (not (lph)) ))

    )
  )
  (:action MOVE_P2-1_P2-2
    :precondition  (and 
      (jbc)
      (jyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (jbc) (jyc) )
         (and (not (kyc)) (not (jyc)) (hyc) (lyc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (h0c) (hwd) )
         (and (not (jwd)) (not (hwd)) (not (kyc)) (not (jyc)) (hyc) (lyc) (gwd) (kwd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gwd)) (not (g0c)) )
         (and (not (jwd)) (not (hwd)) (not (kyc)) (not (jyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (kqh) )
         (and (not (kqh)) (not (l6g)) (k6g) (lqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (mqh) )
         (and (not (mqh)) (not (q6g)) (m6g) (qqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (rqh) )
         (and (not (rqh)) (not (t6g)) (r6g) (tqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (uqh) )
         (and (not (uqh)) (not (v6g)) (u6g) (vqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (xqh) )
         (and (not (xqh)) (not (y6g)) (x6g) (yqh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (zqh) )
         (and (not (zqh)) (not (b7g)) (z6g) (bsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (csh) )
         (and (not (csh)) (not (g7g)) (c7g) (gsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (hsh) )
         (and (not (hsh)) (not (j7g)) (h7g) (jsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (ksh) )
         (and (not (ksh)) (not (l7g)) (k7g) (lsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (msh) )
         (and (not (msh)) (not (q7g)) (m7g) (qsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (rsh) )
         (and (not (rsh)) (not (t7g)) (r7g) (tsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (ush) )
         (and (not (ush)) (not (v7g)) (u7g) (vsh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (xsh) )
         (and (not (xsh)) (not (y7g)) (x7g) (ysh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (zsh) )
         (and (not (zsh)) (not (b8g)) (z7g) (brh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (crh) )
         (and (not (crh)) (not (g8g)) (c8g) (grh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (hrh) )
         (and (not (hrh)) (not (j8g)) (h8g) (jrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (krh) )
         (and (not (krh)) (not (l8g)) (k8g) (lrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (mrh) )
         (and (not (mrh)) (not (q8g)) (m8g) (qrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (rrh) )
         (and (not (rrh)) (not (t8g)) (r8g) (trh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (v5g) (urh) )
         (and (not (urh)) (not (v8g)) (u8g) (vrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (h0c) (xrh) )
         (and (not (xrh)) (not (y8g)) (x8g) (yrh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqh)) (not (g0c)) )
         (and (not (kqh)) (not (l6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqh)) (not (g0c)) )
         (and (not (mqh)) (not (q6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tqh)) (not (g0c)) )
         (and (not (rqh)) (not (t6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vqh)) (not (g0c)) )
         (and (not (uqh)) (not (v6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yqh)) (not (g0c)) )
         (and (not (xqh)) (not (y6g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bsh)) (not (g0c)) )
         (and (not (zqh)) (not (b7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gsh)) (not (g0c)) )
         (and (not (csh)) (not (g7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jsh)) (not (g0c)) )
         (and (not (hsh)) (not (j7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lsh)) (not (g0c)) )
         (and (not (ksh)) (not (l7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qsh)) (not (g0c)) )
         (and (not (msh)) (not (q7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tsh)) (not (g0c)) )
         (and (not (rsh)) (not (t7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vsh)) (not (g0c)) )
         (and (not (ush)) (not (v7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ysh)) (not (g0c)) )
         (and (not (xsh)) (not (y7g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (brh)) (not (g0c)) )
         (and (not (zsh)) (not (b8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (grh)) (not (y5g)) )
         (and (not (crh)) (not (g8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jrh)) (not (z5g)) )
         (and (not (hrh)) (not (j8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lrh)) (not (b6g)) )
         (and (not (krh)) (not (l8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qrh)) (not (c6g)) )
         (and (not (mrh)) (not (q8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (trh)) (not (g6g)) )
         (and (not (rrh)) (not (t8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vrh)) (not (h6g)) )
         (and (not (urh)) (not (v8g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yrh)) (not (j6g)) )
         (and (not (xrh)) (not (y8g)) ))

    )
  )
  (:action MOVE_P2-1_P3-1
    :precondition  (and 
      (qac)
      (jyc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (qac) (jyc) )
         (and (not (czc)) (not (jyc)) (hyc) (gzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m9c) (hwd) )
         (and (not (bxd)) (not (hwd)) (not (czc)) (not (jyc)) (hyc) (gzc) (gwd) (cxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (gwd)) (not (l9c)) )
         (and (not (bxd)) (not (hwd)) (not (czc)) (not (jyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (kqh) )
         (and (not (bth)) (not (kqh)) (lqh) (zrh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (mqh) )
         (and (not (gth)) (not (mqh)) (qqh) (cth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (rqh) )
         (and (not (jth)) (not (rqh)) (tqh) (hth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (uqh) )
         (and (not (lth)) (not (uqh)) (vqh) (kth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (xqh) )
         (and (not (qth)) (not (xqh)) (yqh) (mth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (zqh) )
         (and (not (tth)) (not (zqh)) (bsh) (rth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (csh) )
         (and (not (vth)) (not (csh)) (gsh) (uth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (hsh) )
         (and (not (yth)) (not (hsh)) (jsh) (xth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (ksh) )
         (and (not (buh)) (not (ksh)) (lsh) (zth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (msh) )
         (and (not (guh)) (not (msh)) (qsh) (cuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (rsh) )
         (and (not (juh)) (not (rsh)) (tsh) (huh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (ush) )
         (and (not (luh)) (not (ush)) (vsh) (kuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (xsh) )
         (and (not (quh)) (not (xsh)) (ysh) (muh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (zsh) )
         (and (not (tuh)) (not (zsh)) (brh) (ruh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (crh) )
         (and (not (vuh)) (not (crh)) (grh) (uuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (hrh) )
         (and (not (yuh)) (not (hrh)) (jrh) (xuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (krh) )
         (and (not (bvh)) (not (krh)) (lrh) (zuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (mrh) )
         (and (not (gvh)) (not (mrh)) (qrh) (cvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (rrh) )
         (and (not (jvh)) (not (rrh)) (trh) (hvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (urh) )
         (and (not (lvh)) (not (urh)) (vrh) (kvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (xrh) )
         (and (not (qvh)) (not (xrh)) (yrh) (mvh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lqh)) (not (l9c)) )
         (and (not (bth)) (not (kqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qqh)) (not (l9c)) )
         (and (not (gth)) (not (mqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tqh)) (not (l9c)) )
         (and (not (jth)) (not (rqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vqh)) (not (l9c)) )
         (and (not (lth)) (not (uqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yqh)) (not (l9c)) )
         (and (not (qth)) (not (xqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bsh)) (not (l9c)) )
         (and (not (tth)) (not (zqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gsh)) (not (l9c)) )
         (and (not (vth)) (not (csh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jsh)) (not (l9c)) )
         (and (not (yth)) (not (hsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lsh)) (not (l9c)) )
         (and (not (buh)) (not (ksh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qsh)) (not (l9c)) )
         (and (not (guh)) (not (msh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tsh)) (not (l9c)) )
         (and (not (juh)) (not (rsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vsh)) (not (l9c)) )
         (and (not (luh)) (not (ush)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ysh)) (not (l9c)) )
         (and (not (quh)) (not (xsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (brh)) (not (l9c)) )
         (and (not (tuh)) (not (zsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (grh)) (not (l9c)) )
         (and (not (vuh)) (not (crh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jrh)) (not (l9c)) )
         (and (not (yuh)) (not (hrh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lrh)) (not (l9c)) )
         (and (not (bvh)) (not (krh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qrh)) (not (l9c)) )
         (and (not (gvh)) (not (mrh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (trh)) (not (l9c)) )
         (and (not (jvh)) (not (rrh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vrh)) (not (l9c)) )
         (and (not (lvh)) (not (urh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yrh)) (not (l9c)) )
         (and (not (qvh)) (not (xrh)) ))

    )
  )
  (:action MOVE_P3-1_P2-1
    :precondition  (and 
      (lbc)
      (gzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (lbc) (gzc) )
         (and (not (gzc)) (not (hyc)) (jyc) (czc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k0c) (cxd) )
         (and (not (cxd)) (not (gwd)) (not (gzc)) (not (hyc)) (jyc) (czc) (hwd) (bxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (bxd)) (not (j0c)) )
         (and (not (cxd)) (not (gwd)) (not (gzc)) (not (hyc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (zrh) )
         (and (not (zrh)) (not (lqh)) (kqh) (bth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (cth) )
         (and (not (cth)) (not (qqh)) (mqh) (gth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (hth) )
         (and (not (hth)) (not (tqh)) (rqh) (jth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (kth) )
         (and (not (kth)) (not (vqh)) (uqh) (lth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (mth) )
         (and (not (mth)) (not (yqh)) (xqh) (qth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (rth) )
         (and (not (rth)) (not (bsh)) (zqh) (tth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (uth) )
         (and (not (uth)) (not (gsh)) (csh) (vth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (xth) )
         (and (not (xth)) (not (jsh)) (hsh) (yth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (zth) )
         (and (not (zth)) (not (lsh)) (ksh) (buh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (cuh) )
         (and (not (cuh)) (not (qsh)) (msh) (guh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (huh) )
         (and (not (huh)) (not (tsh)) (rsh) (juh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (kuh) )
         (and (not (kuh)) (not (vsh)) (ush) (luh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (muh) )
         (and (not (muh)) (not (ysh)) (xsh) (quh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (ruh) )
         (and (not (ruh)) (not (brh)) (zsh) (tuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (uuh) )
         (and (not (uuh)) (not (grh)) (crh) (vuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (xuh) )
         (and (not (xuh)) (not (jrh)) (hrh) (yuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (zuh) )
         (and (not (zuh)) (not (lrh)) (krh) (bvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (cvh) )
         (and (not (cvh)) (not (qrh)) (mrh) (gvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (hvh) )
         (and (not (hvh)) (not (trh)) (rrh) (jvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k0c) (kvh) )
         (and (not (kvh)) (not (vrh)) (urh) (lvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (xph) (mvh) )
         (and (not (mvh)) (not (yrh)) (xrh) (qvh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bth)) (not (j0c)) )
         (and (not (zrh)) (not (lqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gth)) (not (j0c)) )
         (and (not (cth)) (not (qqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jth)) (not (j0c)) )
         (and (not (hth)) (not (tqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lth)) (not (j0c)) )
         (and (not (kth)) (not (vqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qth)) (not (j0c)) )
         (and (not (mth)) (not (yqh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tth)) (not (j0c)) )
         (and (not (rth)) (not (bsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vth)) (not (j0c)) )
         (and (not (uth)) (not (gsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yth)) (not (j0c)) )
         (and (not (xth)) (not (jsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (buh)) (not (j0c)) )
         (and (not (zth)) (not (lsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (guh)) (not (j0c)) )
         (and (not (cuh)) (not (qsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (juh)) (not (j0c)) )
         (and (not (huh)) (not (tsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (luh)) (not (j0c)) )
         (and (not (kuh)) (not (vsh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (quh)) (not (j0c)) )
         (and (not (muh)) (not (ysh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tuh)) (not (j0c)) )
         (and (not (ruh)) (not (brh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vuh)) (not (yph)) )
         (and (not (uuh)) (not (grh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yuh)) (not (zph)) )
         (and (not (xuh)) (not (jrh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bvh)) (not (bqh)) )
         (and (not (zuh)) (not (lrh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gvh)) (not (cqh)) )
         (and (not (cvh)) (not (qrh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jvh)) (not (gqh)) )
         (and (not (hvh)) (not (trh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lvh)) (not (hqh)) )
         (and (not (kvh)) (not (vrh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qvh)) (not (jqh)) )
         (and (not (mvh)) (not (yrh)) ))

    )
  )
  (:action MOVE_P3-1_P3-2
    :precondition  (and 
      (lac)
      (gzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (lac) (gzc) )
         (and (not (hzc)) (not (gzc)) (czc) (jzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (k9c) (cxd) )
         (and (not (gxd)) (not (cxd)) (not (hzc)) (not (gzc)) (czc) (jzc) (bxd) (hxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (bxd)) (not (j9c)) )
         (and (not (gxd)) (not (cxd)) (not (hzc)) (not (gzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (zrh) )
         (and (not (zrh)) (not (b9g)) (z8g) (bth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (cth) )
         (and (not (cth)) (not (g9g)) (c9g) (gth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (hth) )
         (and (not (hth)) (not (j9g)) (h9g) (jth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (kth) )
         (and (not (kth)) (not (l9g)) (k9g) (lth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (mth) )
         (and (not (mth)) (not (q9g)) (m9g) (qth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (rth) )
         (and (not (rth)) (not (t9g)) (r9g) (tth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (uth) )
         (and (not (uth)) (not (v9g)) (u9g) (vth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (xth) )
         (and (not (xth)) (not (y9g)) (x9g) (yth) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (zth) )
         (and (not (zth)) (not (b0g)) (z9g) (buh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (cuh) )
         (and (not (cuh)) (not (g0g)) (c0g) (guh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (huh) )
         (and (not (huh)) (not (j0g)) (h0g) (juh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (kuh) )
         (and (not (kuh)) (not (l0g)) (k0g) (luh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (muh) )
         (and (not (muh)) (not (q0g)) (m0g) (quh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (ruh) )
         (and (not (ruh)) (not (t0g)) (r0g) (tuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (uuh) )
         (and (not (uuh)) (not (v0g)) (u0g) (vuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (xuh) )
         (and (not (xuh)) (not (y0g)) (x0g) (yuh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (zuh) )
         (and (not (zuh)) (not (bah)) (z0g) (bvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (cvh) )
         (and (not (cvh)) (not (gah)) (cah) (gvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (hvh) )
         (and (not (hvh)) (not (jah)) (hah) (jvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (kvh) )
         (and (not (kvh)) (not (lah)) (kah) (lvh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (k9c) (mvh) )
         (and (not (mvh)) (not (qah)) (mah) (qvh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bth)) (not (j9c)) )
         (and (not (zrh)) (not (b9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gth)) (not (j9c)) )
         (and (not (cth)) (not (g9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jth)) (not (j9c)) )
         (and (not (hth)) (not (j9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lth)) (not (j9c)) )
         (and (not (kth)) (not (l9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qth)) (not (j9c)) )
         (and (not (mth)) (not (q9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tth)) (not (j9c)) )
         (and (not (rth)) (not (t9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vth)) (not (j9c)) )
         (and (not (uth)) (not (v9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yth)) (not (j9c)) )
         (and (not (xth)) (not (y9g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (buh)) (not (j9c)) )
         (and (not (zth)) (not (b0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (guh)) (not (j9c)) )
         (and (not (cuh)) (not (g0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (juh)) (not (j9c)) )
         (and (not (huh)) (not (j0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (luh)) (not (j9c)) )
         (and (not (kuh)) (not (l0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (quh)) (not (j9c)) )
         (and (not (muh)) (not (q0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tuh)) (not (j9c)) )
         (and (not (ruh)) (not (t0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vuh)) (not (j9c)) )
         (and (not (uuh)) (not (v0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yuh)) (not (j9c)) )
         (and (not (xuh)) (not (y0g)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bvh)) (not (j9c)) )
         (and (not (zuh)) (not (bah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gvh)) (not (j9c)) )
         (and (not (cvh)) (not (gah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jvh)) (not (j9c)) )
         (and (not (hvh)) (not (jah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lvh)) (not (j9c)) )
         (and (not (kvh)) (not (lah)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qvh)) (not (j9c)) )
         (and (not (mvh)) (not (qah)) ))

    )
  )
  (:action MOVE_P3-1_P4-1
    :precondition  (and 
      (t0b)
      (gzc)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t0b) (gzc) )
         (and (not (zzc)) (not (gzc)) (czc) (b1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r8c) (cxd) )
         (and (not (yxd)) (not (cxd)) (not (zzc)) (not (gzc)) (czc) (b1c) (bxd) (zxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (bxd)) (not (q8c)) )
         (and (not (yxd)) (not (cxd)) (not (zzc)) (not (gzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (zrh) )
         (and (not (qwh)) (not (zrh)) (bth) (mwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (cth) )
         (and (not (twh)) (not (cth)) (gth) (rwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (hth) )
         (and (not (vwh)) (not (hth)) (jth) (uwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (kth) )
         (and (not (ywh)) (not (kth)) (lth) (xwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (mth) )
         (and (not (bxh)) (not (mth)) (qth) (zwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (rth) )
         (and (not (gxh)) (not (rth)) (tth) (cxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (uth) )
         (and (not (jxh)) (not (uth)) (vth) (hxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (xth) )
         (and (not (lxh)) (not (xth)) (yth) (kxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (zth) )
         (and (not (qxh)) (not (zth)) (buh) (mxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (cuh) )
         (and (not (txh)) (not (cuh)) (guh) (rxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (huh) )
         (and (not (vxh)) (not (huh)) (juh) (uxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (kuh) )
         (and (not (yxh)) (not (kuh)) (luh) (xxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (muh) )
         (and (not (byh)) (not (muh)) (quh) (zxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (ruh) (zvh) )
         (and (not (gyh)) (not (ruh)) (tuh) (cyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (uuh) )
         (and (not (jyh)) (not (uuh)) (vuh) (hyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (xuh) )
         (and (not (lyh)) (not (xuh)) (yuh) (kyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (zuh) )
         (and (not (qyh)) (not (zuh)) (bvh) (myh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (cvh) )
         (and (not (tyh)) (not (cvh)) (gvh) (ryh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (hvh) )
         (and (not (vyh)) (not (hvh)) (jvh) (uyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (kvh) )
         (and (not (yyh)) (not (kvh)) (lvh) (xyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (mvh) )
         (and (not (bzh)) (not (mvh)) (qvh) (zyh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bth)) (not (q8c)) )
         (and (not (qwh)) (not (zrh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gth)) (not (q8c)) )
         (and (not (twh)) (not (cth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jth)) (not (q8c)) )
         (and (not (vwh)) (not (hth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lth)) (not (q8c)) )
         (and (not (ywh)) (not (kth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qth)) (not (q8c)) )
         (and (not (bxh)) (not (mth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tth)) (not (q8c)) )
         (and (not (gxh)) (not (rth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vth)) (not (q8c)) )
         (and (not (jxh)) (not (uth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bwh)) (not (yth)) )
         (and (not (lxh)) (not (xth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (cwh)) (not (buh)) )
         (and (not (qxh)) (not (zth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gwh)) (not (guh)) )
         (and (not (txh)) (not (cuh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (hwh)) (not (juh)) )
         (and (not (vxh)) (not (huh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jwh)) (not (luh)) )
         (and (not (yxh)) (not (kuh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (kwh)) (not (quh)) )
         (and (not (byh)) (not (muh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lwh)) (not (tuh)) )
         (and (not (gyh)) (not (ruh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vuh)) (not (q8c)) )
         (and (not (jyh)) (not (uuh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yuh)) (not (q8c)) )
         (and (not (lyh)) (not (xuh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bvh)) (not (q8c)) )
         (and (not (qyh)) (not (zuh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gvh)) (not (q8c)) )
         (and (not (tyh)) (not (cvh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jvh)) (not (q8c)) )
         (and (not (vyh)) (not (hvh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lvh)) (not (q8c)) )
         (and (not (yyh)) (not (kvh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qvh)) (not (q8c)) )
         (and (not (bzh)) (not (mvh)) ))

    )
  )
  (:action MOVE_P4-1_P3-1
    :precondition  (and 
      (qac)
      (b1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (qac) (b1c) )
         (and (not (b1c)) (not (czc)) (gzc) (zzc) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m9c) (zxd) )
         (and (not (zxd)) (not (bxd)) (not (b1c)) (not (czc)) (gzc) (zzc) (cxd) (yxd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yxd)) (not (l9c)) )
         (and (not (zxd)) (not (bxd)) (not (b1c)) (not (czc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (mwh) )
         (and (not (mwh)) (not (bth)) (zrh) (qwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (rwh) )
         (and (not (rwh)) (not (gth)) (cth) (twh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (uwh) )
         (and (not (uwh)) (not (jth)) (hth) (vwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (xwh) )
         (and (not (xwh)) (not (lth)) (kth) (ywh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (zwh) )
         (and (not (zwh)) (not (qth)) (mth) (bxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (cxh) )
         (and (not (cxh)) (not (tth)) (rth) (gxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (hxh) )
         (and (not (hxh)) (not (vth)) (uth) (jxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (kxh) )
         (and (not (kxh)) (not (yth)) (xth) (lxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (mxh) )
         (and (not (mxh)) (not (buh)) (zth) (qxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (rxh) )
         (and (not (rxh)) (not (guh)) (cuh) (txh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (uxh) )
         (and (not (uxh)) (not (juh)) (huh) (vxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (xxh) )
         (and (not (xxh)) (not (luh)) (kuh) (yxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (zxh) )
         (and (not (zxh)) (not (quh)) (muh) (byh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (cyh) )
         (and (not (cyh)) (not (tuh)) (ruh) (gyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (hyh) )
         (and (not (hyh)) (not (vuh)) (uuh) (jyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (kyh) )
         (and (not (kyh)) (not (yuh)) (xuh) (lyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (myh) )
         (and (not (myh)) (not (bvh)) (zuh) (qyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (ryh) )
         (and (not (ryh)) (not (gvh)) (cvh) (tyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (uyh) )
         (and (not (uyh)) (not (jvh)) (hvh) (vyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (xyh) )
         (and (not (xyh)) (not (lvh)) (kvh) (yyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m9c) (zyh) )
         (and (not (zyh)) (not (qvh)) (mvh) (bzh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwh)) (not (l9c)) )
         (and (not (mwh)) (not (bth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twh)) (not (l9c)) )
         (and (not (rwh)) (not (gth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vwh)) (not (l9c)) )
         (and (not (uwh)) (not (jth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywh)) (not (l9c)) )
         (and (not (xwh)) (not (lth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxh)) (not (l9c)) )
         (and (not (zwh)) (not (qth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxh)) (not (l9c)) )
         (and (not (cxh)) (not (tth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxh)) (not (l9c)) )
         (and (not (hxh)) (not (vth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxh)) (not (l9c)) )
         (and (not (kxh)) (not (yth)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxh)) (not (l9c)) )
         (and (not (mxh)) (not (buh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txh)) (not (l9c)) )
         (and (not (rxh)) (not (guh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxh)) (not (l9c)) )
         (and (not (uxh)) (not (juh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxh)) (not (l9c)) )
         (and (not (xxh)) (not (luh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (byh)) (not (l9c)) )
         (and (not (zxh)) (not (quh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gyh)) (not (l9c)) )
         (and (not (cyh)) (not (tuh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jyh)) (not (l9c)) )
         (and (not (hyh)) (not (vuh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lyh)) (not (l9c)) )
         (and (not (kyh)) (not (yuh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qyh)) (not (l9c)) )
         (and (not (myh)) (not (bvh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tyh)) (not (l9c)) )
         (and (not (ryh)) (not (gvh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vyh)) (not (l9c)) )
         (and (not (uyh)) (not (jvh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yyh)) (not (l9c)) )
         (and (not (xyh)) (not (lvh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bzh)) (not (l9c)) )
         (and (not (zyh)) (not (qvh)) ))

    )
  )
  (:action MOVE_P4-1_P4-2
    :precondition  (and 
      (q0b)
      (b1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (q0b) (b1c) )
         (and (not (c1c)) (not (b1c)) (zzc) (g1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (m8c) (zxd) )
         (and (not (byd)) (not (zxd)) (not (c1c)) (not (b1c)) (zzc) (g1c) (yxd) (cyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yxd)) (not (l8c)) )
         (and (not (byd)) (not (zxd)) (not (c1c)) (not (b1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (mwh) )
         (and (not (mwh)) (not (qbh)) (mbh) (qwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (rwh) )
         (and (not (rwh)) (not (tbh)) (rbh) (twh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (uwh) )
         (and (not (uwh)) (not (vbh)) (ubh) (vwh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (xwh) )
         (and (not (xwh)) (not (ybh)) (xbh) (ywh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (zwh) )
         (and (not (zwh)) (not (bch)) (zbh) (bxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (cxh) )
         (and (not (cxh)) (not (gch)) (cch) (gxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (hxh) )
         (and (not (hxh)) (not (jch)) (hch) (jxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (kxh) )
         (and (not (kxh)) (not (lch)) (kch) (lxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (mxh) )
         (and (not (mxh)) (not (qch)) (mch) (qxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (rxh) )
         (and (not (rxh)) (not (tch)) (rch) (txh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (uxh) )
         (and (not (uxh)) (not (vch)) (uch) (vxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (xxh) )
         (and (not (xxh)) (not (ych)) (xch) (yxh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (yah) (zxh) )
         (and (not (zxh)) (not (bdh)) (zch) (byh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (cyh) )
         (and (not (cyh)) (not (gdh)) (cdh) (gyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (hyh) )
         (and (not (hyh)) (not (jdh)) (hdh) (jyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (kyh) )
         (and (not (kyh)) (not (ldh)) (kdh) (lyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (myh) )
         (and (not (myh)) (not (qdh)) (mdh) (qyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (ryh) )
         (and (not (ryh)) (not (tdh)) (rdh) (tyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (uyh) )
         (and (not (uyh)) (not (vdh)) (udh) (vyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (xyh) )
         (and (not (xyh)) (not (ydh)) (xdh) (yyh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (m8c) (zyh) )
         (and (not (zyh)) (not (beh)) (zdh) (bzh) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwh)) (not (l8c)) )
         (and (not (mwh)) (not (qbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twh)) (not (l8c)) )
         (and (not (rwh)) (not (tbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vwh)) (not (l8c)) )
         (and (not (uwh)) (not (vbh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywh)) (not (l8c)) )
         (and (not (xwh)) (not (ybh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxh)) (not (l8c)) )
         (and (not (zwh)) (not (bch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxh)) (not (l8c)) )
         (and (not (cxh)) (not (gch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxh)) (not (l8c)) )
         (and (not (hxh)) (not (jch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxh)) (not (bbh)) )
         (and (not (kxh)) (not (lch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxh)) (not (cbh)) )
         (and (not (mxh)) (not (qch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txh)) (not (gbh)) )
         (and (not (rxh)) (not (tch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxh)) (not (hbh)) )
         (and (not (uxh)) (not (vch)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxh)) (not (jbh)) )
         (and (not (xxh)) (not (ych)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (byh)) (not (kbh)) )
         (and (not (zxh)) (not (bdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gyh)) (not (lbh)) )
         (and (not (cyh)) (not (gdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jyh)) (not (l8c)) )
         (and (not (hyh)) (not (jdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lyh)) (not (l8c)) )
         (and (not (kyh)) (not (ldh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qyh)) (not (l8c)) )
         (and (not (myh)) (not (qdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tyh)) (not (l8c)) )
         (and (not (ryh)) (not (tdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vyh)) (not (l8c)) )
         (and (not (uyh)) (not (vdh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yyh)) (not (l8c)) )
         (and (not (xyh)) (not (ydh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bzh)) (not (l8c)) )
         (and (not (zyh)) (not (beh)) ))

    )
  )
  (:action MOVE_P4-1_P5-1
    :precondition  (and 
      (v9b)
      (b1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v9b) (b1c) )
         (and (not (x1c)) (not (b1c)) (zzc) (y1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u7c) (zxd) )
         (and (not (vyd)) (not (zxd)) (not (x1c)) (not (b1c)) (zzc) (y1c) (yxd) (xyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (yxd)) (not (t7c)) )
         (and (not (vyd)) (not (zxd)) (not (x1c)) (not (b1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (mwh) )
         (and (not (gzh)) (not (mwh)) (qwh) (czh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (rwh) )
         (and (not (jzh)) (not (rwh)) (twh) (hzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (uwh) )
         (and (not (lzh)) (not (uwh)) (vwh) (kzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (xwh) )
         (and (not (qzh)) (not (xwh)) (ywh) (mzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (zwh) )
         (and (not (tzh)) (not (zwh)) (bxh) (rzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (cxh) )
         (and (not (vzh)) (not (cxh)) (gxh) (uzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (hxh) )
         (and (not (yzh)) (not (hxh)) (jxh) (xzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (kxh) )
         (and (not (b1h)) (not (kxh)) (lxh) (zzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (mxh) )
         (and (not (g1h)) (not (mxh)) (qxh) (c1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (rxh) )
         (and (not (j1h)) (not (rxh)) (txh) (h1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (uxh) )
         (and (not (l1h)) (not (uxh)) (vxh) (k1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (xxh) )
         (and (not (q1h)) (not (xxh)) (yxh) (m1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (zxh) )
         (and (not (t1h)) (not (zxh)) (byh) (r1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (cyh) )
         (and (not (v1h)) (not (cyh)) (gyh) (u1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (hyh) )
         (and (not (y1h)) (not (hyh)) (jyh) (x1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (kyh) )
         (and (not (b2h)) (not (kyh)) (lyh) (z1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (myh) )
         (and (not (g2h)) (not (myh)) (qyh) (c2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (ryh) )
         (and (not (j2h)) (not (ryh)) (tyh) (h2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (uyh) )
         (and (not (l2h)) (not (uyh)) (vyh) (k2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (xyh) )
         (and (not (q2h)) (not (xyh)) (yyh) (m2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (zyh) )
         (and (not (t2h)) (not (zyh)) (bzh) (r2h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qwh)) (not (t7c)) )
         (and (not (gzh)) (not (mwh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (twh)) (not (t7c)) )
         (and (not (jzh)) (not (rwh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vwh)) (not (t7c)) )
         (and (not (lzh)) (not (uwh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (ywh)) (not (t7c)) )
         (and (not (qzh)) (not (xwh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bxh)) (not (t7c)) )
         (and (not (tzh)) (not (zwh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gxh)) (not (t7c)) )
         (and (not (vzh)) (not (cxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jxh)) (not (t7c)) )
         (and (not (yzh)) (not (hxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lxh)) (not (t7c)) )
         (and (not (b1h)) (not (kxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qxh)) (not (t7c)) )
         (and (not (g1h)) (not (mxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (txh)) (not (t7c)) )
         (and (not (j1h)) (not (rxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vxh)) (not (t7c)) )
         (and (not (l1h)) (not (uxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yxh)) (not (t7c)) )
         (and (not (q1h)) (not (xxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (byh)) (not (t7c)) )
         (and (not (t1h)) (not (zxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gyh)) (not (t7c)) )
         (and (not (v1h)) (not (cyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jyh)) (not (t7c)) )
         (and (not (y1h)) (not (hyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lyh)) (not (t7c)) )
         (and (not (b2h)) (not (kyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qyh)) (not (t7c)) )
         (and (not (g2h)) (not (myh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tyh)) (not (t7c)) )
         (and (not (j2h)) (not (ryh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vyh)) (not (t7c)) )
         (and (not (l2h)) (not (uyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yyh)) (not (t7c)) )
         (and (not (q2h)) (not (xyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (bzh)) (not (t7c)) )
         (and (not (t2h)) (not (zyh)) ))

    )
  )
  (:action MOVE_P5-1_P4-1
    :precondition  (and 
      (t0b)
      (y1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t0b) (y1c) )
         (and (not (y1c)) (not (zzc)) (b1c) (x1c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r8c) (xyd) )
         (and (not (xyd)) (not (yxd)) (not (y1c)) (not (zzc)) (b1c) (x1c) (zxd) (vyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vyd)) (not (q8c)) )
         (and (not (xyd)) (not (yxd)) (not (y1c)) (not (zzc)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (czh) )
         (and (not (czh)) (not (qwh)) (mwh) (gzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (hzh) )
         (and (not (hzh)) (not (twh)) (rwh) (jzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (kzh) )
         (and (not (kzh)) (not (vwh)) (uwh) (lzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (mzh) )
         (and (not (mzh)) (not (ywh)) (xwh) (qzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (rzh) )
         (and (not (rzh)) (not (bxh)) (zwh) (tzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (uzh) )
         (and (not (uzh)) (not (gxh)) (cxh) (vzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (xzh) )
         (and (not (xzh)) (not (jxh)) (hxh) (yzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (zzh) )
         (and (not (zzh)) (not (lxh)) (kxh) (b1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (c1h) )
         (and (not (c1h)) (not (qxh)) (mxh) (g1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (h1h) )
         (and (not (h1h)) (not (txh)) (rxh) (j1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (k1h) )
         (and (not (k1h)) (not (vxh)) (uxh) (l1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (m1h) )
         (and (not (m1h)) (not (yxh)) (xxh) (q1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (r1h) )
         (and (not (r1h)) (not (byh)) (zxh) (t1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (zvh) (u1h) )
         (and (not (u1h)) (not (gyh)) (cyh) (v1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (x1h) )
         (and (not (x1h)) (not (jyh)) (hyh) (y1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (z1h) )
         (and (not (z1h)) (not (lyh)) (kyh) (b2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (c2h) )
         (and (not (c2h)) (not (qyh)) (myh) (g2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (h2h) )
         (and (not (h2h)) (not (tyh)) (ryh) (j2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (k2h) )
         (and (not (k2h)) (not (vyh)) (uyh) (l2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (m2h) )
         (and (not (m2h)) (not (yyh)) (xyh) (q2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r8c) (r2h) )
         (and (not (r2h)) (not (bzh)) (zyh) (t2h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gzh)) (not (q8c)) )
         (and (not (czh)) (not (qwh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jzh)) (not (q8c)) )
         (and (not (hzh)) (not (twh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lzh)) (not (q8c)) )
         (and (not (kzh)) (not (vwh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qzh)) (not (q8c)) )
         (and (not (mzh)) (not (ywh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tzh)) (not (q8c)) )
         (and (not (rzh)) (not (bxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vzh)) (not (q8c)) )
         (and (not (uzh)) (not (gxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yzh)) (not (q8c)) )
         (and (not (xzh)) (not (jxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1h)) (not (bwh)) )
         (and (not (zzh)) (not (lxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1h)) (not (cwh)) )
         (and (not (c1h)) (not (qxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1h)) (not (gwh)) )
         (and (not (h1h)) (not (txh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1h)) (not (hwh)) )
         (and (not (k1h)) (not (vxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1h)) (not (jwh)) )
         (and (not (m1h)) (not (yxh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1h)) (not (kwh)) )
         (and (not (r1h)) (not (byh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1h)) (not (lwh)) )
         (and (not (u1h)) (not (gyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1h)) (not (q8c)) )
         (and (not (x1h)) (not (jyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2h)) (not (q8c)) )
         (and (not (z1h)) (not (lyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2h)) (not (q8c)) )
         (and (not (c2h)) (not (qyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2h)) (not (q8c)) )
         (and (not (h2h)) (not (tyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2h)) (not (q8c)) )
         (and (not (k2h)) (not (vyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2h)) (not (q8c)) )
         (and (not (m2h)) (not (yyh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2h)) (not (q8c)) )
         (and (not (r2h)) (not (bzh)) ))

    )
  )
  (:action MOVE_P5-1_P5-2
    :precondition  (and 
      (t9b)
      (y1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (t9b) (y1c) )
         (and (not (z1c)) (not (y1c)) (x1c) (b2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (r7c) (xyd) )
         (and (not (yyd)) (not (xyd)) (not (z1c)) (not (y1c)) (x1c) (b2c) (vyd) (zyd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vyd)) (not (q7c)) )
         (and (not (yyd)) (not (xyd)) (not (z1c)) (not (y1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (czh) )
         (and (not (czh)) (not (geh)) (ceh) (gzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (hzh) )
         (and (not (hzh)) (not (jeh)) (heh) (jzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (kzh) )
         (and (not (kzh)) (not (leh)) (keh) (lzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (mzh) )
         (and (not (mzh)) (not (qeh)) (meh) (qzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (rzh) )
         (and (not (rzh)) (not (teh)) (reh) (tzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (uzh) )
         (and (not (uzh)) (not (veh)) (ueh) (vzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (xzh) )
         (and (not (xzh)) (not (yeh)) (xeh) (yzh) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (zzh) )
         (and (not (zzh)) (not (bfh)) (zeh) (b1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (c1h) )
         (and (not (c1h)) (not (gfh)) (cfh) (g1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (h1h) )
         (and (not (h1h)) (not (jfh)) (hfh) (j1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (k1h) )
         (and (not (k1h)) (not (lfh)) (kfh) (l1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (m1h) )
         (and (not (m1h)) (not (qfh)) (mfh) (q1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (r1h) )
         (and (not (r1h)) (not (tfh)) (rfh) (t1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (u1h) )
         (and (not (u1h)) (not (vfh)) (ufh) (v1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (x1h) )
         (and (not (x1h)) (not (yfh)) (xfh) (y1h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (z1h) )
         (and (not (z1h)) (not (bgh)) (zfh) (b2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (c2h) )
         (and (not (c2h)) (not (ggh)) (cgh) (g2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (h2h) )
         (and (not (h2h)) (not (jgh)) (hgh) (j2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (k2h) )
         (and (not (k2h)) (not (lgh)) (kgh) (l2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (m2h) )
         (and (not (m2h)) (not (qgh)) (mgh) (q2h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (r7c) (r2h) )
         (and (not (r2h)) (not (tgh)) (rgh) (t2h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (gzh)) (not (q7c)) )
         (and (not (czh)) (not (geh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (jzh)) (not (q7c)) )
         (and (not (hzh)) (not (jeh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (lzh)) (not (q7c)) )
         (and (not (kzh)) (not (leh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (qzh)) (not (q7c)) )
         (and (not (mzh)) (not (qeh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (tzh)) (not (q7c)) )
         (and (not (rzh)) (not (teh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (vzh)) (not (q7c)) )
         (and (not (uzh)) (not (veh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (yzh)) (not (q7c)) )
         (and (not (xzh)) (not (yeh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1h)) (not (q7c)) )
         (and (not (zzh)) (not (bfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1h)) (not (q7c)) )
         (and (not (c1h)) (not (gfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1h)) (not (q7c)) )
         (and (not (h1h)) (not (jfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1h)) (not (q7c)) )
         (and (not (k1h)) (not (lfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1h)) (not (q7c)) )
         (and (not (m1h)) (not (qfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1h)) (not (q7c)) )
         (and (not (r1h)) (not (tfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1h)) (not (q7c)) )
         (and (not (u1h)) (not (vfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1h)) (not (q7c)) )
         (and (not (x1h)) (not (yfh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2h)) (not (q7c)) )
         (and (not (z1h)) (not (bgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2h)) (not (q7c)) )
         (and (not (c2h)) (not (ggh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2h)) (not (q7c)) )
         (and (not (h2h)) (not (jgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2h)) (not (q7c)) )
         (and (not (k2h)) (not (lgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2h)) (not (q7c)) )
         (and (not (m2h)) (not (qgh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2h)) (not (q7c)) )
         (and (not (r2h)) (not (tgh)) ))

    )
  )
  (:action MOVE_P5-1_P6-1
    :precondition  (and 
      (y8b)
      (y1c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y8b) (y1c) )
         (and (not (u2c)) (not (y1c)) (x1c) (v2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x6c) (xyd) )
         (and (not (tzd)) (not (xyd)) (not (u2c)) (not (y1c)) (x1c) (v2c) (vyd) (uzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (vyd)) (not (v6c)) )
         (and (not (tzd)) (not (xyd)) (not (u2c)) (not (y1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (czh) )
         (and (not (t3h)) (not (czh)) (gzh) (r3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (hzh) )
         (and (not (v3h)) (not (hzh)) (jzh) (u3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (kzh) )
         (and (not (y3h)) (not (kzh)) (lzh) (x3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (mzh) )
         (and (not (b4h)) (not (mzh)) (qzh) (z3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (rzh) )
         (and (not (g4h)) (not (rzh)) (tzh) (c4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (uzh) )
         (and (not (j4h)) (not (uzh)) (vzh) (h4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (xzh) (c3h) )
         (and (not (l4h)) (not (xzh)) (yzh) (k4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (zzh) )
         (and (not (q4h)) (not (zzh)) (b1h) (m4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (c1h) )
         (and (not (t4h)) (not (c1h)) (g1h) (r4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (h1h) )
         (and (not (v4h)) (not (h1h)) (j1h) (u4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (k1h) )
         (and (not (y4h)) (not (k1h)) (l1h) (x4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (m1h) )
         (and (not (b5h)) (not (m1h)) (q1h) (z4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (r1h) )
         (and (not (g5h)) (not (r1h)) (t1h) (c5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (u1h) )
         (and (not (j5h)) (not (u1h)) (v1h) (h5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (x1h) )
         (and (not (l5h)) (not (x1h)) (y1h) (k5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (z1h) )
         (and (not (q5h)) (not (z1h)) (b2h) (m5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (c2h) )
         (and (not (t5h)) (not (c2h)) (g2h) (r5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (h2h) )
         (and (not (v5h)) (not (h2h)) (j2h) (u5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (k2h) )
         (and (not (y5h)) (not (k2h)) (l2h) (x5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (m2h) )
         (and (not (b6h)) (not (m2h)) (q2h) (z5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (r2h) )
         (and (not (g6h)) (not (r2h)) (t2h) (c6h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g3h)) (not (gzh)) )
         (and (not (t3h)) (not (czh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (h3h)) (not (jzh)) )
         (and (not (v3h)) (not (hzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j3h)) (not (lzh)) )
         (and (not (y3h)) (not (kzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (k3h)) (not (qzh)) )
         (and (not (b4h)) (not (mzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l3h)) (not (tzh)) )
         (and (not (g4h)) (not (rzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (m3h)) (not (vzh)) )
         (and (not (j4h)) (not (uzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q3h)) (not (yzh)) )
         (and (not (l4h)) (not (xzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b1h)) (not (v6c)) )
         (and (not (q4h)) (not (zzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g1h)) (not (v6c)) )
         (and (not (t4h)) (not (c1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j1h)) (not (v6c)) )
         (and (not (v4h)) (not (h1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l1h)) (not (v6c)) )
         (and (not (y4h)) (not (k1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q1h)) (not (v6c)) )
         (and (not (b5h)) (not (m1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t1h)) (not (v6c)) )
         (and (not (g5h)) (not (r1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v1h)) (not (v6c)) )
         (and (not (j5h)) (not (u1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y1h)) (not (v6c)) )
         (and (not (l5h)) (not (x1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b2h)) (not (v6c)) )
         (and (not (q5h)) (not (z1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g2h)) (not (v6c)) )
         (and (not (t5h)) (not (c2h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j2h)) (not (v6c)) )
         (and (not (v5h)) (not (h2h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l2h)) (not (v6c)) )
         (and (not (y5h)) (not (k2h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q2h)) (not (v6c)) )
         (and (not (b6h)) (not (m2h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t2h)) (not (v6c)) )
         (and (not (g6h)) (not (r2h)) ))

    )
  )
  (:action MOVE_P6-1_P5-1
    :precondition  (and 
      (v9b)
      (v2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v9b) (v2c) )
         (and (not (v2c)) (not (x1c)) (y1c) (u2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u7c) (uzd) )
         (and (not (uzd)) (not (vyd)) (not (v2c)) (not (x1c)) (y1c) (u2c) (xyd) (tzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (tzd)) (not (t7c)) )
         (and (not (uzd)) (not (vyd)) (not (v2c)) (not (x1c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (r3h) )
         (and (not (r3h)) (not (gzh)) (czh) (t3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (u3h) )
         (and (not (u3h)) (not (jzh)) (hzh) (v3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (x3h) )
         (and (not (x3h)) (not (lzh)) (kzh) (y3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (z3h) )
         (and (not (z3h)) (not (qzh)) (mzh) (b4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (c4h) )
         (and (not (c4h)) (not (tzh)) (rzh) (g4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (h4h) )
         (and (not (h4h)) (not (vzh)) (uzh) (j4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (k4h) )
         (and (not (k4h)) (not (yzh)) (xzh) (l4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (m4h) )
         (and (not (m4h)) (not (b1h)) (zzh) (q4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (r4h) )
         (and (not (r4h)) (not (g1h)) (c1h) (t4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (u4h) )
         (and (not (u4h)) (not (j1h)) (h1h) (v4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (x4h) )
         (and (not (x4h)) (not (l1h)) (k1h) (y4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (z4h) )
         (and (not (z4h)) (not (q1h)) (m1h) (b5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (c5h) )
         (and (not (c5h)) (not (t1h)) (r1h) (g5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (h5h) )
         (and (not (h5h)) (not (v1h)) (u1h) (j5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (k5h) )
         (and (not (k5h)) (not (y1h)) (x1h) (l5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (m5h) )
         (and (not (m5h)) (not (b2h)) (z1h) (q5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (r5h) )
         (and (not (r5h)) (not (g2h)) (c2h) (t5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (u5h) )
         (and (not (u5h)) (not (j2h)) (h2h) (v5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (x5h) )
         (and (not (x5h)) (not (l2h)) (k2h) (y5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (z5h) )
         (and (not (z5h)) (not (q2h)) (m2h) (b6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u7c) (c6h) )
         (and (not (c6h)) (not (t2h)) (r2h) (g6h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3h)) (not (t7c)) )
         (and (not (r3h)) (not (gzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3h)) (not (t7c)) )
         (and (not (u3h)) (not (jzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3h)) (not (t7c)) )
         (and (not (x3h)) (not (lzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4h)) (not (t7c)) )
         (and (not (z3h)) (not (qzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4h)) (not (t7c)) )
         (and (not (c4h)) (not (tzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4h)) (not (t7c)) )
         (and (not (h4h)) (not (vzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4h)) (not (t7c)) )
         (and (not (k4h)) (not (yzh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4h)) (not (t7c)) )
         (and (not (m4h)) (not (b1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4h)) (not (t7c)) )
         (and (not (r4h)) (not (g1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4h)) (not (t7c)) )
         (and (not (u4h)) (not (j1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4h)) (not (t7c)) )
         (and (not (x4h)) (not (l1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5h)) (not (t7c)) )
         (and (not (z4h)) (not (q1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5h)) (not (t7c)) )
         (and (not (c5h)) (not (t1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5h)) (not (t7c)) )
         (and (not (h5h)) (not (v1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5h)) (not (t7c)) )
         (and (not (k5h)) (not (y1h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q5h)) (not (t7c)) )
         (and (not (m5h)) (not (b2h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t5h)) (not (t7c)) )
         (and (not (r5h)) (not (g2h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v5h)) (not (t7c)) )
         (and (not (u5h)) (not (j2h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5h)) (not (t7c)) )
         (and (not (x5h)) (not (l2h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6h)) (not (t7c)) )
         (and (not (z5h)) (not (q2h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6h)) (not (t7c)) )
         (and (not (c6h)) (not (t2h)) ))

    )
  )
  (:action MOVE_P6-1_P6-2
    :precondition  (and 
      (v8b)
      (v2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (v8b) (v2c) )
         (and (not (x2c)) (not (v2c)) (u2c) (y2c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (u6c) (uzd) )
         (and (not (vzd)) (not (uzd)) (not (x2c)) (not (v2c)) (u2c) (y2c) (tzd) (xzd) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (tzd)) (not (t6c)) )
         (and (not (vzd)) (not (uzd)) (not (x2c)) (not (v2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (r3h) )
         (and (not (r3h)) (not (thh)) (rhh) (t3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (u3h) )
         (and (not (u3h)) (not (vhh)) (uhh) (v3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (x3h) )
         (and (not (x3h)) (not (yhh)) (xhh) (y3h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (z3h) )
         (and (not (z3h)) (not (bih)) (zhh) (b4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (c4h) )
         (and (not (c4h)) (not (gih)) (cih) (g4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (bhh) (h4h) )
         (and (not (h4h)) (not (jih)) (hih) (j4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (k4h) )
         (and (not (k4h)) (not (lih)) (kih) (l4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (m4h) )
         (and (not (m4h)) (not (qih)) (mih) (q4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (r4h) )
         (and (not (r4h)) (not (tih)) (rih) (t4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (u4h) )
         (and (not (u4h)) (not (vih)) (uih) (v4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (x4h) )
         (and (not (x4h)) (not (yih)) (xih) (y4h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (z4h) )
         (and (not (z4h)) (not (bjh)) (zih) (b5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (c5h) )
         (and (not (c5h)) (not (gjh)) (cjh) (g5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (h5h) )
         (and (not (h5h)) (not (jjh)) (hjh) (j5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (k5h) )
         (and (not (k5h)) (not (ljh)) (kjh) (l5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (m5h) )
         (and (not (m5h)) (not (qjh)) (mjh) (q5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (r5h) )
         (and (not (r5h)) (not (tjh)) (rjh) (t5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (u5h) )
         (and (not (u5h)) (not (vjh)) (ujh) (v5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (x5h) )
         (and (not (x5h)) (not (yjh)) (xjh) (y5h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (z5h) )
         (and (not (z5h)) (not (bkh)) (zjh) (b6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (u6c) (c6h) )
         (and (not (c6h)) (not (gkh)) (ckh) (g6h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3h)) (not (ghh)) )
         (and (not (r3h)) (not (thh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3h)) (not (hhh)) )
         (and (not (u3h)) (not (vhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3h)) (not (jhh)) )
         (and (not (x3h)) (not (yhh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4h)) (not (khh)) )
         (and (not (z3h)) (not (bih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4h)) (not (lhh)) )
         (and (not (c4h)) (not (gih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4h)) (not (mhh)) )
         (and (not (h4h)) (not (jih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4h)) (not (qhh)) )
         (and (not (k4h)) (not (lih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4h)) (not (t6c)) )
         (and (not (m4h)) (not (qih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4h)) (not (t6c)) )
         (and (not (r4h)) (not (tih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4h)) (not (t6c)) )
         (and (not (u4h)) (not (vih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4h)) (not (t6c)) )
         (and (not (x4h)) (not (yih)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5h)) (not (t6c)) )
         (and (not (z4h)) (not (bjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5h)) (not (t6c)) )
         (and (not (c5h)) (not (gjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5h)) (not (t6c)) )
         (and (not (h5h)) (not (jjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5h)) (not (t6c)) )
         (and (not (k5h)) (not (ljh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q5h)) (not (t6c)) )
         (and (not (m5h)) (not (qjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t5h)) (not (t6c)) )
         (and (not (r5h)) (not (tjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v5h)) (not (t6c)) )
         (and (not (u5h)) (not (vjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5h)) (not (t6c)) )
         (and (not (x5h)) (not (yjh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6h)) (not (t6c)) )
         (and (not (z5h)) (not (bkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6h)) (not (t6c)) )
         (and (not (c6h)) (not (gkh)) ))

    )
  )
  (:action MOVE_P6-1_P7-1
    :precondition  (and 
      (b8b)
      (v2c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (b8b) (v2c) )
         (and (not (r3c)) (not (v2c)) (u2c) (t3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (z5c) (uzd) )
         (and (not (q1d)) (not (uzd)) (not (r3c)) (not (v2c)) (u2c) (t3c) (tzd) (r1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (tzd)) (not (y5c)) )
         (and (not (q1d)) (not (uzd)) (not (r3c)) (not (v2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (r3h) )
         (and (not (j6h)) (not (r3h)) (t3h) (h6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (u3h) )
         (and (not (l6h)) (not (u3h)) (v3h) (k6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (x3h) )
         (and (not (q6h)) (not (x3h)) (y3h) (m6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (z3h) )
         (and (not (t6h)) (not (z3h)) (b4h) (r6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (c4h) )
         (and (not (v6h)) (not (c4h)) (g4h) (u6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (h4h) )
         (and (not (y6h)) (not (h4h)) (j4h) (x6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (k4h) )
         (and (not (b7h)) (not (k4h)) (l4h) (z6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (m4h) )
         (and (not (g7h)) (not (m4h)) (q4h) (c7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (r4h) )
         (and (not (j7h)) (not (r4h)) (t4h) (h7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (u4h) )
         (and (not (l7h)) (not (u4h)) (v4h) (k7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (x4h) )
         (and (not (q7h)) (not (x4h)) (y4h) (m7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (z4h) )
         (and (not (t7h)) (not (z4h)) (b5h) (r7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (c5h) )
         (and (not (v7h)) (not (c5h)) (g5h) (u7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (h5h) )
         (and (not (y7h)) (not (h5h)) (j5h) (x7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (k5h) )
         (and (not (b8h)) (not (k5h)) (l5h) (z7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (m5h) )
         (and (not (g8h)) (not (m5h)) (q5h) (c8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (r5h) )
         (and (not (j8h)) (not (r5h)) (t5h) (h8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (u5h) )
         (and (not (l8h)) (not (u5h)) (v5h) (k8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (x5h) )
         (and (not (q8h)) (not (x5h)) (y5h) (m8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (z5h) )
         (and (not (t8h)) (not (z5h)) (b6h) (r8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (z5c) (c6h) )
         (and (not (v8h)) (not (c6h)) (g6h) (u8h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t3h)) (not (y5c)) )
         (and (not (j6h)) (not (r3h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v3h)) (not (y5c)) )
         (and (not (l6h)) (not (u3h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y3h)) (not (y5c)) )
         (and (not (q6h)) (not (x3h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b4h)) (not (y5c)) )
         (and (not (t6h)) (not (z3h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g4h)) (not (y5c)) )
         (and (not (v6h)) (not (c4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j4h)) (not (y5c)) )
         (and (not (y6h)) (not (h4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l4h)) (not (y5c)) )
         (and (not (b7h)) (not (k4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q4h)) (not (y5c)) )
         (and (not (g7h)) (not (m4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t4h)) (not (y5c)) )
         (and (not (j7h)) (not (r4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v4h)) (not (y5c)) )
         (and (not (l7h)) (not (u4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y4h)) (not (y5c)) )
         (and (not (q7h)) (not (x4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b5h)) (not (y5c)) )
         (and (not (t7h)) (not (z4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g5h)) (not (y5c)) )
         (and (not (v7h)) (not (c5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j5h)) (not (y5c)) )
         (and (not (y7h)) (not (h5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l5h)) (not (y5c)) )
         (and (not (b8h)) (not (k5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q5h)) (not (y5c)) )
         (and (not (g8h)) (not (m5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t5h)) (not (y5c)) )
         (and (not (j8h)) (not (r5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v5h)) (not (y5c)) )
         (and (not (l8h)) (not (u5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y5h)) (not (y5c)) )
         (and (not (q8h)) (not (x5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b6h)) (not (y5c)) )
         (and (not (t8h)) (not (z5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g6h)) (not (y5c)) )
         (and (not (v8h)) (not (c6h)) ))

    )
  )
  (:action MOVE_P7-1_P6-1
    :precondition  (and 
      (y8b)
      (t3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y8b) (t3c) )
         (and (not (t3c)) (not (u2c)) (v2c) (r3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x6c) (r1d) )
         (and (not (r1d)) (not (tzd)) (not (t3c)) (not (u2c)) (v2c) (r3c) (uzd) (q1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (q1d)) (not (v6c)) )
         (and (not (r1d)) (not (tzd)) (not (t3c)) (not (u2c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (h6h) )
         (and (not (h6h)) (not (t3h)) (r3h) (j6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (k6h) )
         (and (not (k6h)) (not (v3h)) (u3h) (l6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (m6h) )
         (and (not (m6h)) (not (y3h)) (x3h) (q6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (r6h) )
         (and (not (r6h)) (not (b4h)) (z3h) (t6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (u6h) )
         (and (not (u6h)) (not (g4h)) (c4h) (v6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (x6h) )
         (and (not (x6h)) (not (j4h)) (h4h) (y6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (c3h) (z6h) )
         (and (not (z6h)) (not (l4h)) (k4h) (b7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (c7h) )
         (and (not (c7h)) (not (q4h)) (m4h) (g7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (h7h) )
         (and (not (h7h)) (not (t4h)) (r4h) (j7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (k7h) )
         (and (not (k7h)) (not (v4h)) (u4h) (l7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (m7h) )
         (and (not (m7h)) (not (y4h)) (x4h) (q7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (r7h) )
         (and (not (r7h)) (not (b5h)) (z4h) (t7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (u7h) )
         (and (not (u7h)) (not (g5h)) (c5h) (v7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (x7h) )
         (and (not (x7h)) (not (j5h)) (h5h) (y7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (z7h) )
         (and (not (z7h)) (not (l5h)) (k5h) (b8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (c8h) )
         (and (not (c8h)) (not (q5h)) (m5h) (g8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (h8h) )
         (and (not (h8h)) (not (t5h)) (r5h) (j8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (k8h) )
         (and (not (k8h)) (not (v5h)) (u5h) (l8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (m8h) )
         (and (not (m8h)) (not (y5h)) (x5h) (q8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (r8h) )
         (and (not (r8h)) (not (b6h)) (z5h) (t8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x6c) (u8h) )
         (and (not (u8h)) (not (g6h)) (c6h) (v8h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6h)) (not (g3h)) )
         (and (not (h6h)) (not (t3h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6h)) (not (h3h)) )
         (and (not (k6h)) (not (v3h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6h)) (not (j3h)) )
         (and (not (m6h)) (not (y3h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6h)) (not (k3h)) )
         (and (not (r6h)) (not (b4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6h)) (not (l3h)) )
         (and (not (u6h)) (not (g4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6h)) (not (m3h)) )
         (and (not (x6h)) (not (j4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7h)) (not (q3h)) )
         (and (not (z6h)) (not (l4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7h)) (not (v6c)) )
         (and (not (c7h)) (not (q4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7h)) (not (v6c)) )
         (and (not (h7h)) (not (t4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7h)) (not (v6c)) )
         (and (not (k7h)) (not (v4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7h)) (not (v6c)) )
         (and (not (m7h)) (not (y4h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7h)) (not (v6c)) )
         (and (not (r7h)) (not (b5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7h)) (not (v6c)) )
         (and (not (u7h)) (not (g5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7h)) (not (v6c)) )
         (and (not (x7h)) (not (j5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8h)) (not (v6c)) )
         (and (not (z7h)) (not (l5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8h)) (not (v6c)) )
         (and (not (c8h)) (not (q5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8h)) (not (v6c)) )
         (and (not (h8h)) (not (t5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l8h)) (not (v6c)) )
         (and (not (k8h)) (not (v5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8h)) (not (v6c)) )
         (and (not (m8h)) (not (y5h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8h)) (not (v6c)) )
         (and (not (r8h)) (not (b6h)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8h)) (not (v6c)) )
         (and (not (u8h)) (not (g6h)) ))

    )
  )
  (:action MOVE_P7-1_P7-2
    :precondition  (and 
      (y7b)
      (t3c)
    )
    :effect  (and 
      ; mC -> mL & -m-L     (m_0)
      (when  (and (y7b) (t3c) )
         (and (not (u3c)) (not (t3c)) (r3c) (v3c) ))

      ; kC -> kL & -k-L     (k_0)
      (when  (and (x5c) (r1d) )
         (and (not (t1d)) (not (r1d)) (not (u3c)) (not (t3c)) (r3c) (v3c) (q1d) (u1d) ))

      ; -k-C -> -k-L        (k_0)
      (when  (and (not (q1d)) (not (v5c)) )
         (and (not (t1d)) (not (r1d)) (not (u3c)) (not (t3c)) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (h6h) )
         (and (not (h6h)) (not (jkh)) (hkh) (j6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (k6h) )
         (and (not (k6h)) (not (lkh)) (kkh) (l6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (m6h) )
         (and (not (m6h)) (not (qkh)) (mkh) (q6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (r6h) )
         (and (not (r6h)) (not (tkh)) (rkh) (t6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (u6h) )
         (and (not (u6h)) (not (vkh)) (ukh) (v6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (x6h) )
         (and (not (x6h)) (not (ykh)) (xkh) (y6h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (z6h) )
         (and (not (z6h)) (not (blh)) (zkh) (b7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (c7h) )
         (and (not (c7h)) (not (glh)) (clh) (g7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (h7h) )
         (and (not (h7h)) (not (jlh)) (hlh) (j7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (k7h) )
         (and (not (k7h)) (not (llh)) (klh) (l7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (m7h) )
         (and (not (m7h)) (not (qlh)) (mlh) (q7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (r7h) )
         (and (not (r7h)) (not (tlh)) (rlh) (t7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (u7h) )
         (and (not (u7h)) (not (vlh)) (ulh) (v7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (x7h) )
         (and (not (x7h)) (not (ylh)) (xlh) (y7h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (z7h) )
         (and (not (z7h)) (not (bmh)) (zlh) (b8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (c8h) )
         (and (not (c8h)) (not (gmh)) (cmh) (g8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (h8h) )
         (and (not (h8h)) (not (jmh)) (hmh) (j8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (k8h) )
         (and (not (k8h)) (not (lmh)) (kmh) (l8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (m8h) )
         (and (not (m8h)) (not (qmh)) (mmh) (q8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (r8h) )
         (and (not (r8h)) (not (tmh)) (rmh) (t8h) ))

      ; K Ci//tagi -> KL//tag, tagi maximal. K Ci//tagi -> KL//tag, tagi maximal
      (when  (and (x5c) (u8h) )
         (and (not (u8h)) (not (vmh)) (umh) (v8h) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j6h)) (not (v5c)) )
         (and (not (h6h)) (not (jkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l6h)) (not (v5c)) )
         (and (not (k6h)) (not (lkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q6h)) (not (v5c)) )
         (and (not (m6h)) (not (qkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t6h)) (not (v5c)) )
         (and (not (r6h)) (not (tkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v6h)) (not (v5c)) )
         (and (not (u6h)) (not (vkh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y6h)) (not (v5c)) )
         (and (not (x6h)) (not (ykh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b7h)) (not (v5c)) )
         (and (not (z6h)) (not (blh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g7h)) (not (v5c)) )
         (and (not (c7h)) (not (glh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j7h)) (not (v5c)) )
         (and (not (h7h)) (not (jlh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l7h)) (not (v5c)) )
         (and (not (k7h)) (not (llh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q7h)) (not (v5c)) )
         (and (not (m7h)) (not (qlh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t7h)) (not (v5c)) )
         (and (not (r7h)) (not (tlh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v7h)) (not (v5c)) )
         (and (not (u7h)) (not (vlh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (y7h)) (not (v5c)) )
         (and (not (x7h)) (not (ylh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (b8h)) (not (v5c)) )
         (and (not (z7h)) (not (bmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (g8h)) (not (v5c)) )
         (and (not (c8h)) (not (gmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (j8h)) (not (v5c)) )
         (and (not (h8h)) (not (jmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (l8h)) (not (v5c)) )
         (and (not (k8h)) (not (lmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (q8h)) (not (v5c)) )
         (and (not (m8h)) (not (qmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (t8h)) (not (v5c)) )
         (and (not (r8h)) (not (tmh)) ))

      ; -K -Ci//tagi -> -K-L//tag, all tagi maximal. -K -Ci//tagi -> -K-L//tag, all tagi maximal
      (when  (and (not (v8h)) (not (v5c)) )
         (and (not (u8h)) (not (vmh)) ))

    )
  )
  (:action closure_merge_OPENED_P6-7___1
    :effect 
      ; merge l//xi
      (when  (and (uhg) (vhg) (xhg) (yhg) (zhg) (big) (cig) )
         (and (not (qig)) (not (mig)) (not (lig)) (not (kig)) (not (jig)) (not (hig)) (not (gig)) (not (c8b)) (g8b) (c6c) (uhg) (vhg) (xhg) (yhg) (zhg) (big) (cig) ))

  )
  (:action closure_merge_OPENED_P6-7___2
    :effect 
      ; merge l//xi
      (when  (and (S_x8h) (S_y8h) (S_z8h) (S_b9h) (S_c9h) (S_g9h) (S_h9h) )
         (and (not (qig)) (not (mig)) (not (lig)) (not (kig)) (not (jig)) (not (hig)) (not (gig)) (not (c8b)) (g8b) (c6c) (uhg) (vhg) (xhg) (yhg) (zhg) (big) (cig) ))

  )
  (:action closure_add_sl__OPENED_P6-7___3
    :effect  (and 
      ; 
      (when (uhg) 
        (S_x8h) )

      ; 
      (when (b6c) 
        (S_x8h) )

      ; 
      (when (vhg) 
        (S_y8h) )

      ; 
      (when (g6c) 
        (S_y8h) )

      ; 
      (when (xhg) 
        (S_z8h) )

      ; 
      (when (j6c) 
        (S_z8h) )

      ; 
      (when (yhg) 
        (S_b9h) )

      ; 
      (when (l6c) 
        (S_b9h) )

      ; 
      (when (zhg) 
        (S_c9h) )

      ; 
      (when (q6c) 
        (S_c9h) )

      ; 
      (when (big) 
        (S_g9h) )

      ; 
      (when (t6c) 
        (S_g9h) )

      ; 
      (when (cig) 
        (S_h9h) )

      ; 
      (when (v6c) 
        (S_h9h) )

    )
  )
  (:action closure_merge_OPENED_P6-6___1
    :effect 
      ; merge l//xi
      (when  (and (heg) (jeg) (keg) (leg) (meg) (qeg) (reg) )
         (and (not (bfg)) (not (zeg)) (not (yeg)) (not (xeg)) (not (veg)) (not (ueg)) (not (teg)) (not (h8b)) (j8b) (h6c) (heg) (jeg) (keg) (leg) (meg) (qeg) (reg) ))

  )
  (:action closure_merge_OPENED_P6-6___2
    :effect 
      ; merge l//xi
      (when  (and (S_j9h) (S_k9h) (S_l9h) (S_m9h) (S_q9h) (S_r9h) (S_t9h) )
         (and (not (bfg)) (not (zeg)) (not (yeg)) (not (xeg)) (not (veg)) (not (ueg)) (not (teg)) (not (h8b)) (j8b) (h6c) (heg) (jeg) (keg) (leg) (meg) (qeg) (reg) ))

  )
  (:action closure_add_sl__OPENED_P6-6___3
    :effect  (and 
      ; 
      (when (heg) 
        (S_j9h) )

      ; 
      (when (b6c) 
        (S_j9h) )

      ; 
      (when (jeg) 
        (S_k9h) )

      ; 
      (when (g6c) 
        (S_k9h) )

      ; 
      (when (keg) 
        (S_l9h) )

      ; 
      (when (j6c) 
        (S_l9h) )

      ; 
      (when (leg) 
        (S_m9h) )

      ; 
      (when (l6c) 
        (S_m9h) )

      ; 
      (when (meg) 
        (S_q9h) )

      ; 
      (when (q6c) 
        (S_q9h) )

      ; 
      (when (qeg) 
        (S_r9h) )

      ; 
      (when (t6c) 
        (S_r9h) )

      ; 
      (when (reg) 
        (S_t9h) )

      ; 
      (when (v6c) 
        (S_t9h) )

    )
  )
  (:action closure_merge_OPENED_P6-5___1
    :effect 
      ; merge l//xi
      (when  (and (uag) (vag) (xag) (yag) (zag) (bbg) (cbg) )
         (and (not (qbg)) (not (mbg)) (not (lbg)) (not (kbg)) (not (jbg)) (not (hbg)) (not (gbg)) (not (k8b)) (l8b) (k6c) (uag) (vag) (xag) (yag) (zag) (bbg) (cbg) ))

  )
  (:action closure_merge_OPENED_P6-5___2
    :effect 
      ; merge l//xi
      (when  (and (S_u9h) (S_v9h) (S_x9h) (S_y9h) (S_z9h) (S_b0h) (S_c0h) )
         (and (not (qbg)) (not (mbg)) (not (lbg)) (not (kbg)) (not (jbg)) (not (hbg)) (not (gbg)) (not (k8b)) (l8b) (k6c) (uag) (vag) (xag) (yag) (zag) (bbg) (cbg) ))

  )
  (:action closure_add_sl__OPENED_P6-5___3
    :effect  (and 
      ; 
      (when (uag) 
        (S_u9h) )

      ; 
      (when (b6c) 
        (S_u9h) )

      ; 
      (when (vag) 
        (S_v9h) )

      ; 
      (when (g6c) 
        (S_v9h) )

      ; 
      (when (xag) 
        (S_x9h) )

      ; 
      (when (j6c) 
        (S_x9h) )

      ; 
      (when (yag) 
        (S_y9h) )

      ; 
      (when (l6c) 
        (S_y9h) )

      ; 
      (when (zag) 
        (S_z9h) )

      ; 
      (when (q6c) 
        (S_z9h) )

      ; 
      (when (bbg) 
        (S_b0h) )

      ; 
      (when (t6c) 
        (S_b0h) )

      ; 
      (when (cbg) 
        (S_c0h) )

      ; 
      (when (v6c) 
        (S_c0h) )

    )
  )
  (:action closure_merge_OPENED_P6-4___1
    :effect 
      ; merge l//xi
      (when  (and (h8f) (j8f) (k8f) (l8f) (m8f) (q8f) (r8f) )
         (and (not (b9f)) (not (z8f)) (not (y8f)) (not (x8f)) (not (v8f)) (not (u8f)) (not (t8f)) (not (m8b)) (q8b) (m6c) (h8f) (j8f) (k8f) (l8f) (m8f) (q8f) (r8f) ))

  )
  (:action closure_merge_OPENED_P6-4___2
    :effect 
      ; merge l//xi
      (when  (and (S_g0h) (S_h0h) (S_j0h) (S_k0h) (S_l0h) (S_m0h) (S_q0h) )
         (and (not (b9f)) (not (z8f)) (not (y8f)) (not (x8f)) (not (v8f)) (not (u8f)) (not (t8f)) (not (m8b)) (q8b) (m6c) (h8f) (j8f) (k8f) (l8f) (m8f) (q8f) (r8f) ))

  )
  (:action closure_add_sl__OPENED_P6-4___3
    :effect  (and 
      ; 
      (when (h8f) 
        (S_g0h) )

      ; 
      (when (b6c) 
        (S_g0h) )

      ; 
      (when (j8f) 
        (S_h0h) )

      ; 
      (when (g6c) 
        (S_h0h) )

      ; 
      (when (k8f) 
        (S_j0h) )

      ; 
      (when (j6c) 
        (S_j0h) )

      ; 
      (when (l8f) 
        (S_k0h) )

      ; 
      (when (l6c) 
        (S_k0h) )

      ; 
      (when (m8f) 
        (S_l0h) )

      ; 
      (when (q6c) 
        (S_l0h) )

      ; 
      (when (q8f) 
        (S_m0h) )

      ; 
      (when (t6c) 
        (S_m0h) )

      ; 
      (when (r8f) 
        (S_q0h) )

      ; 
      (when (v6c) 
        (S_q0h) )

    )
  )
  (:action closure_merge_OPENED_P6-3___1
    :effect 
      ; merge l//xi
      (when  (and (hlg) (jlg) (klg) (llg) (mlg) (qlg) (rlg) )
         (and (not (bmg)) (not (zlg)) (not (ylg)) (not (xlg)) (not (vlg)) (not (ulg)) (not (tlg)) (not (r8b)) (t8b) (r6c) (hlg) (jlg) (klg) (llg) (mlg) (qlg) (rlg) ))

  )
  (:action closure_merge_OPENED_P6-3___2
    :effect 
      ; merge l//xi
      (when  (and (S_r0h) (S_t0h) (S_u0h) (S_v0h) (S_x0h) (S_y0h) (S_z0h) )
         (and (not (bmg)) (not (zlg)) (not (ylg)) (not (xlg)) (not (vlg)) (not (ulg)) (not (tlg)) (not (r8b)) (t8b) (r6c) (hlg) (jlg) (klg) (llg) (mlg) (qlg) (rlg) ))

  )
  (:action closure_add_sl__OPENED_P6-3___3
    :effect  (and 
      ; 
      (when (hlg) 
        (S_r0h) )

      ; 
      (when (b6c) 
        (S_r0h) )

      ; 
      (when (jlg) 
        (S_t0h) )

      ; 
      (when (g6c) 
        (S_t0h) )

      ; 
      (when (klg) 
        (S_u0h) )

      ; 
      (when (j6c) 
        (S_u0h) )

      ; 
      (when (llg) 
        (S_v0h) )

      ; 
      (when (l6c) 
        (S_v0h) )

      ; 
      (when (mlg) 
        (S_x0h) )

      ; 
      (when (q6c) 
        (S_x0h) )

      ; 
      (when (qlg) 
        (S_y0h) )

      ; 
      (when (t6c) 
        (S_y0h) )

      ; 
      (when (rlg) 
        (S_z0h) )

      ; 
      (when (v6c) 
        (S_z0h) )

    )
  )
  (:action closure_merge_OPENED_P6-2___1
    :effect 
      ; merge l//xi
      (when  (and (ugh) (vgh) (xgh) (ygh) (zgh) (bhh) (chh) )
         (and (not (qhh)) (not (mhh)) (not (lhh)) (not (khh)) (not (jhh)) (not (hhh)) (not (ghh)) (not (u8b)) (v8b) (u6c) (ugh) (vgh) (xgh) (ygh) (zgh) (bhh) (chh) ))

  )
  (:action closure_merge_OPENED_P6-2___2
    :effect 
      ; merge l//xi
      (when  (and (S_bai) (S_cai) (S_gai) (S_hai) (S_jai) (S_kai) (S_lai) )
         (and (not (qhh)) (not (mhh)) (not (lhh)) (not (khh)) (not (jhh)) (not (hhh)) (not (ghh)) (not (u8b)) (v8b) (u6c) (ugh) (vgh) (xgh) (ygh) (zgh) (bhh) (chh) ))

  )
  (:action closure_add_sl__OPENED_P6-2___3
    :effect  (and 
      ; 
      (when (ugh) 
        (S_bai) )

      ; 
      (when (b6c) 
        (S_bai) )

      ; 
      (when (vgh) 
        (S_cai) )

      ; 
      (when (g6c) 
        (S_cai) )

      ; 
      (when (xgh) 
        (S_gai) )

      ; 
      (when (j6c) 
        (S_gai) )

      ; 
      (when (ygh) 
        (S_hai) )

      ; 
      (when (l6c) 
        (S_hai) )

      ; 
      (when (zgh) 
        (S_jai) )

      ; 
      (when (q6c) 
        (S_jai) )

      ; 
      (when (bhh) 
        (S_kai) )

      ; 
      (when (t6c) 
        (S_kai) )

      ; 
      (when (chh) 
        (S_lai) )

      ; 
      (when (v6c) 
        (S_lai) )

    )
  )
  (:action closure_merge_OPENED_P6-1___1
    :effect 
      ; merge l//xi
      (when  (and (u2h) (v2h) (x2h) (y2h) (z2h) (b3h) (c3h) )
         (and (not (q3h)) (not (m3h)) (not (l3h)) (not (k3h)) (not (j3h)) (not (h3h)) (not (g3h)) (not (x8b)) (y8b) (x6c) (u2h) (v2h) (x2h) (y2h) (z2h) (b3h) (c3h) ))

  )
  (:action closure_merge_OPENED_P6-1___2
    :effect 
      ; merge l//xi
      (when  (and (S_mai) (S_qai) (S_rai) (S_tai) (S_uai) (S_vai) (S_xai) )
         (and (not (q3h)) (not (m3h)) (not (l3h)) (not (k3h)) (not (j3h)) (not (h3h)) (not (g3h)) (not (x8b)) (y8b) (x6c) (u2h) (v2h) (x2h) (y2h) (z2h) (b3h) (c3h) ))

  )
  (:action closure_add_sl__OPENED_P6-1___3
    :effect  (and 
      ; 
      (when (u2h) 
        (S_mai) )

      ; 
      (when (b6c) 
        (S_mai) )

      ; 
      (when (v2h) 
        (S_qai) )

      ; 
      (when (g6c) 
        (S_qai) )

      ; 
      (when (x2h) 
        (S_rai) )

      ; 
      (when (j6c) 
        (S_rai) )

      ; 
      (when (y2h) 
        (S_tai) )

      ; 
      (when (l6c) 
        (S_tai) )

      ; 
      (when (z2h) 
        (S_uai) )

      ; 
      (when (q6c) 
        (S_uai) )

      ; 
      (when (b3h) 
        (S_vai) )

      ; 
      (when (t6c) 
        (S_vai) )

      ; 
      (when (c3h) 
        (S_xai) )

      ; 
      (when (v6c) 
        (S_xai) )

    )
  )
  (:action closure_merge_OPENED_P4-7___1
    :effect 
      ; merge l//xi
      (when  (and (cnf) (gnf) (hnf) (jnf) (knf) (lnf) (mnf) )
         (and (not (ynf)) (not (xnf)) (not (vnf)) (not (unf)) (not (tnf)) (not (rnf)) (not (qnf)) (not (x9b)) (y9b) (x7c) (cnf) (gnf) (hnf) (jnf) (knf) (lnf) (mnf) ))

  )
  (:action closure_merge_OPENED_P4-7___2
    :effect 
      ; merge l//xi
      (when  (and (S_yai) (S_zai) (S_bbi) (S_cbi) (S_gbi) (S_hbi) (S_jbi) )
         (and (not (ynf)) (not (xnf)) (not (vnf)) (not (unf)) (not (tnf)) (not (rnf)) (not (qnf)) (not (x9b)) (y9b) (x7c) (cnf) (gnf) (hnf) (jnf) (knf) (lnf) (mnf) ))

  )
  (:action closure_add_sl__OPENED_P4-7___3
    :effect  (and 
      ; 
      (when (cnf) 
        (S_yai) )

      ; 
      (when (v7c) 
        (S_yai) )

      ; 
      (when (gnf) 
        (S_zai) )

      ; 
      (when (y7c) 
        (S_zai) )

      ; 
      (when (hnf) 
        (S_bbi) )

      ; 
      (when (b8c) 
        (S_bbi) )

      ; 
      (when (jnf) 
        (S_cbi) )

      ; 
      (when (g8c) 
        (S_cbi) )

      ; 
      (when (knf) 
        (S_gbi) )

      ; 
      (when (j8c) 
        (S_gbi) )

      ; 
      (when (lnf) 
        (S_hbi) )

      ; 
      (when (l8c) 
        (S_hbi) )

      ; 
      (when (mnf) 
        (S_jbi) )

      ; 
      (when (q8c) 
        (S_jbi) )

    )
  )
  (:action closure_merge_OPENED_P4-6___1
    :effect 
      ; merge l//xi
      (when  (and (rjf) (tjf) (ujf) (vjf) (xjf) (yjf) (zjf) )
         (and (not (lkf)) (not (kkf)) (not (jkf)) (not (hkf)) (not (gkf)) (not (ckf)) (not (bkf)) (not (z9b)) (b0b) (z7c) (rjf) (tjf) (ujf) (vjf) (xjf) (yjf) (zjf) ))

  )
  (:action closure_merge_OPENED_P4-6___2
    :effect 
      ; merge l//xi
      (when  (and (S_kbi) (S_lbi) (S_mbi) (S_qbi) (S_rbi) (S_tbi) (S_ubi) )
         (and (not (lkf)) (not (kkf)) (not (jkf)) (not (hkf)) (not (gkf)) (not (ckf)) (not (bkf)) (not (z9b)) (b0b) (z7c) (rjf) (tjf) (ujf) (vjf) (xjf) (yjf) (zjf) ))

  )
  (:action closure_add_sl__OPENED_P4-6___3
    :effect  (and 
      ; 
      (when (rjf) 
        (S_kbi) )

      ; 
      (when (v7c) 
        (S_kbi) )

      ; 
      (when (tjf) 
        (S_lbi) )

      ; 
      (when (y7c) 
        (S_lbi) )

      ; 
      (when (ujf) 
        (S_mbi) )

      ; 
      (when (b8c) 
        (S_mbi) )

      ; 
      (when (vjf) 
        (S_qbi) )

      ; 
      (when (g8c) 
        (S_qbi) )

      ; 
      (when (xjf) 
        (S_rbi) )

      ; 
      (when (j8c) 
        (S_rbi) )

      ; 
      (when (yjf) 
        (S_tbi) )

      ; 
      (when (l8c) 
        (S_tbi) )

      ; 
      (when (zjf) 
        (S_ubi) )

      ; 
      (when (q8c) 
        (S_ubi) )

    )
  )
  (:action closure_merge_OPENED_P4-5___1
    :effect 
      ; merge l//xi
      (when  (and (cgf) (ggf) (hgf) (jgf) (kgf) (lgf) (mgf) )
         (and (not (ygf)) (not (xgf)) (not (vgf)) (not (ugf)) (not (tgf)) (not (rgf)) (not (qgf)) (not (c0b)) (g0b) (c8c) (cgf) (ggf) (hgf) (jgf) (kgf) (lgf) (mgf) ))

  )
  (:action closure_merge_OPENED_P4-5___2
    :effect 
      ; merge l//xi
      (when  (and (S_vbi) (S_xbi) (S_ybi) (S_zbi) (S_bci) (S_cci) (S_gci) )
         (and (not (ygf)) (not (xgf)) (not (vgf)) (not (ugf)) (not (tgf)) (not (rgf)) (not (qgf)) (not (c0b)) (g0b) (c8c) (cgf) (ggf) (hgf) (jgf) (kgf) (lgf) (mgf) ))

  )
  (:action closure_add_sl__OPENED_P4-5___3
    :effect  (and 
      ; 
      (when (cgf) 
        (S_vbi) )

      ; 
      (when (v7c) 
        (S_vbi) )

      ; 
      (when (ggf) 
        (S_xbi) )

      ; 
      (when (y7c) 
        (S_xbi) )

      ; 
      (when (hgf) 
        (S_ybi) )

      ; 
      (when (b8c) 
        (S_ybi) )

      ; 
      (when (jgf) 
        (S_zbi) )

      ; 
      (when (g8c) 
        (S_zbi) )

      ; 
      (when (kgf) 
        (S_bci) )

      ; 
      (when (j8c) 
        (S_bci) )

      ; 
      (when (lgf) 
        (S_cci) )

      ; 
      (when (l8c) 
        (S_cci) )

      ; 
      (when (mgf) 
        (S_gci) )

      ; 
      (when (q8c) 
        (S_gci) )

    )
  )
  (:action closure_merge_OPENED_P4-4___1
    :effect 
      ; merge l//xi
      (when  (and (rcf) (tcf) (ucf) (vcf) (xcf) (ycf) (zcf) )
         (and (not (ldf)) (not (kdf)) (not (jdf)) (not (hdf)) (not (gdf)) (not (cdf)) (not (bdf)) (not (h0b)) (j0b) (h8c) (rcf) (tcf) (ucf) (vcf) (xcf) (ycf) (zcf) ))

  )
  (:action closure_merge_OPENED_P4-4___2
    :effect 
      ; merge l//xi
      (when  (and (S_hci) (S_jci) (S_kci) (S_lci) (S_mci) (S_qci) (S_rci) )
         (and (not (ldf)) (not (kdf)) (not (jdf)) (not (hdf)) (not (gdf)) (not (cdf)) (not (bdf)) (not (h0b)) (j0b) (h8c) (rcf) (tcf) (ucf) (vcf) (xcf) (ycf) (zcf) ))

  )
  (:action closure_add_sl__OPENED_P4-4___3
    :effect  (and 
      ; 
      (when (rcf) 
        (S_hci) )

      ; 
      (when (v7c) 
        (S_hci) )

      ; 
      (when (tcf) 
        (S_jci) )

      ; 
      (when (y7c) 
        (S_jci) )

      ; 
      (when (ucf) 
        (S_kci) )

      ; 
      (when (b8c) 
        (S_kci) )

      ; 
      (when (vcf) 
        (S_lci) )

      ; 
      (when (g8c) 
        (S_lci) )

      ; 
      (when (xcf) 
        (S_mci) )

      ; 
      (when (j8c) 
        (S_mci) )

      ; 
      (when (ycf) 
        (S_qci) )

      ; 
      (when (l8c) 
        (S_qci) )

      ; 
      (when (zcf) 
        (S_rci) )

      ; 
      (when (q8c) 
        (S_rci) )

    )
  )
  (:action closure_merge_OPENED_P4-3___1
    :effect 
      ; merge l//xi
      (when  (and (rqf) (tqf) (uqf) (vqf) (xqf) (yqf) (zqf) )
         (and (not (lsf)) (not (ksf)) (not (jsf)) (not (hsf)) (not (gsf)) (not (csf)) (not (bsf)) (not (k0b)) (l0b) (k8c) (rqf) (tqf) (uqf) (vqf) (xqf) (yqf) (zqf) ))

  )
  (:action closure_merge_OPENED_P4-3___2
    :effect 
      ; merge l//xi
      (when  (and (S_tci) (S_uci) (S_vci) (S_xci) (S_yci) (S_zci) (S_bdi) )
         (and (not (lsf)) (not (ksf)) (not (jsf)) (not (hsf)) (not (gsf)) (not (csf)) (not (bsf)) (not (k0b)) (l0b) (k8c) (rqf) (tqf) (uqf) (vqf) (xqf) (yqf) (zqf) ))

  )
  (:action closure_add_sl__OPENED_P4-3___3
    :effect  (and 
      ; 
      (when (rqf) 
        (S_tci) )

      ; 
      (when (v7c) 
        (S_tci) )

      ; 
      (when (tqf) 
        (S_uci) )

      ; 
      (when (y7c) 
        (S_uci) )

      ; 
      (when (uqf) 
        (S_vci) )

      ; 
      (when (b8c) 
        (S_vci) )

      ; 
      (when (vqf) 
        (S_xci) )

      ; 
      (when (g8c) 
        (S_xci) )

      ; 
      (when (xqf) 
        (S_yci) )

      ; 
      (when (j8c) 
        (S_yci) )

      ; 
      (when (yqf) 
        (S_zci) )

      ; 
      (when (l8c) 
        (S_zci) )

      ; 
      (when (zqf) 
        (S_bdi) )

      ; 
      (when (q8c) 
        (S_bdi) )

    )
  )
  (:action closure_merge_OPENED_P4-2___1
    :effect 
      ; merge l//xi
      (when  (and (rah) (tah) (uah) (vah) (xah) (yah) (zah) )
         (and (not (lbh)) (not (kbh)) (not (jbh)) (not (hbh)) (not (gbh)) (not (cbh)) (not (bbh)) (not (m0b)) (q0b) (m8c) (rah) (tah) (uah) (vah) (xah) (yah) (zah) ))

  )
  (:action closure_merge_OPENED_P4-2___2
    :effect 
      ; merge l//xi
      (when  (and (S_cdi) (S_gdi) (S_hdi) (S_jdi) (S_kdi) (S_ldi) (S_mdi) )
         (and (not (lbh)) (not (kbh)) (not (jbh)) (not (hbh)) (not (gbh)) (not (cbh)) (not (bbh)) (not (m0b)) (q0b) (m8c) (rah) (tah) (uah) (vah) (xah) (yah) (zah) ))

  )
  (:action closure_add_sl__OPENED_P4-2___3
    :effect  (and 
      ; 
      (when (rah) 
        (S_cdi) )

      ; 
      (when (v7c) 
        (S_cdi) )

      ; 
      (when (tah) 
        (S_gdi) )

      ; 
      (when (y7c) 
        (S_gdi) )

      ; 
      (when (uah) 
        (S_hdi) )

      ; 
      (when (b8c) 
        (S_hdi) )

      ; 
      (when (vah) 
        (S_jdi) )

      ; 
      (when (g8c) 
        (S_jdi) )

      ; 
      (when (xah) 
        (S_kdi) )

      ; 
      (when (j8c) 
        (S_kdi) )

      ; 
      (when (yah) 
        (S_ldi) )

      ; 
      (when (l8c) 
        (S_ldi) )

      ; 
      (when (zah) 
        (S_mdi) )

      ; 
      (when (q8c) 
        (S_mdi) )

    )
  )
  (:action closure_merge_OPENED_P4-1___1
    :effect 
      ; merge l//xi
      (when  (and (rvh) (tvh) (uvh) (vvh) (xvh) (yvh) (zvh) )
         (and (not (lwh)) (not (kwh)) (not (jwh)) (not (hwh)) (not (gwh)) (not (cwh)) (not (bwh)) (not (r0b)) (t0b) (r8c) (rvh) (tvh) (uvh) (vvh) (xvh) (yvh) (zvh) ))

  )
  (:action closure_merge_OPENED_P4-1___2
    :effect 
      ; merge l//xi
      (when  (and (S_qdi) (S_rdi) (S_tdi) (S_udi) (S_vdi) (S_xdi) (S_ydi) )
         (and (not (lwh)) (not (kwh)) (not (jwh)) (not (hwh)) (not (gwh)) (not (cwh)) (not (bwh)) (not (r0b)) (t0b) (r8c) (rvh) (tvh) (uvh) (vvh) (xvh) (yvh) (zvh) ))

  )
  (:action closure_add_sl__OPENED_P4-1___3
    :effect  (and 
      ; 
      (when (rvh) 
        (S_qdi) )

      ; 
      (when (v7c) 
        (S_qdi) )

      ; 
      (when (tvh) 
        (S_rdi) )

      ; 
      (when (y7c) 
        (S_rdi) )

      ; 
      (when (uvh) 
        (S_tdi) )

      ; 
      (when (b8c) 
        (S_tdi) )

      ; 
      (when (vvh) 
        (S_udi) )

      ; 
      (when (g8c) 
        (S_udi) )

      ; 
      (when (xvh) 
        (S_vdi) )

      ; 
      (when (j8c) 
        (S_vdi) )

      ; 
      (when (yvh) 
        (S_xdi) )

      ; 
      (when (l8c) 
        (S_xdi) )

      ; 
      (when (zvh) 
        (S_ydi) )

      ; 
      (when (q8c) 
        (S_ydi) )

    )
  )
  (:action closure_merge_OPENED_P2-7___1
    :effect 
      ; merge l//xi
      (when  (and (mre) (qre) (rre) (tre) (ure) (vre) (xre) )
         (and (not (jte)) (not (hte)) (not (gte)) (not (cte)) (not (bte)) (not (zre)) (not (yre)) (not (rac)) (tac) (r9c) (mre) (qre) (rre) (tre) (ure) (vre) (xre) ))

  )
  (:action closure_merge_OPENED_P2-7___2
    :effect 
      ; merge l//xi
      (when  (and (S_zdi) (S_bei) (S_cei) (S_gei) (S_hei) (S_jei) (S_kei) )
         (and (not (jte)) (not (hte)) (not (gte)) (not (cte)) (not (bte)) (not (zre)) (not (yre)) (not (rac)) (tac) (r9c) (mre) (qre) (rre) (tre) (ure) (vre) (xre) ))

  )
  (:action closure_add_sl__OPENED_P2-7___3
    :effect  (and 
      ; 
      (when (mre) 
        (S_zdi) )

      ; 
      (when (q9c) 
        (S_zdi) )

      ; 
      (when (qre) 
        (S_bei) )

      ; 
      (when (t9c) 
        (S_bei) )

      ; 
      (when (rre) 
        (S_cei) )

      ; 
      (when (v9c) 
        (S_cei) )

      ; 
      (when (tre) 
        (S_gei) )

      ; 
      (when (y9c) 
        (S_gei) )

      ; 
      (when (ure) 
        (S_hei) )

      ; 
      (when (b0c) 
        (S_hei) )

      ; 
      (when (vre) 
        (S_jei) )

      ; 
      (when (g0c) 
        (S_jei) )

      ; 
      (when (xre) 
        (S_kei) )

      ; 
      (when (j0c) 
        (S_kei) )

    )
  )
  (:action closure_merge_OPENED_P2-6___1
    :effect 
      ; merge l//xi
      (when  (and (zoe) (bpe) (cpe) (gpe) (hpe) (jpe) (kpe) )
         (and (not (vpe)) (not (upe)) (not (tpe)) (not (rpe)) (not (qpe)) (not (mpe)) (not (lpe)) (not (uac)) (vac) (u9c) (zoe) (bpe) (cpe) (gpe) (hpe) (jpe) (kpe) ))

  )
  (:action closure_merge_OPENED_P2-6___2
    :effect 
      ; merge l//xi
      (when  (and (S_lei) (S_mei) (S_qei) (S_rei) (S_tei) (S_uei) (S_vei) )
         (and (not (vpe)) (not (upe)) (not (tpe)) (not (rpe)) (not (qpe)) (not (mpe)) (not (lpe)) (not (uac)) (vac) (u9c) (zoe) (bpe) (cpe) (gpe) (hpe) (jpe) (kpe) ))

  )
  (:action closure_add_sl__OPENED_P2-6___3
    :effect  (and 
      ; 
      (when (zoe) 
        (S_lei) )

      ; 
      (when (q9c) 
        (S_lei) )

      ; 
      (when (bpe) 
        (S_mei) )

      ; 
      (when (t9c) 
        (S_mei) )

      ; 
      (when (cpe) 
        (S_qei) )

      ; 
      (when (v9c) 
        (S_qei) )

      ; 
      (when (gpe) 
        (S_rei) )

      ; 
      (when (y9c) 
        (S_rei) )

      ; 
      (when (hpe) 
        (S_tei) )

      ; 
      (when (b0c) 
        (S_tei) )

      ; 
      (when (jpe) 
        (S_uei) )

      ; 
      (when (g0c) 
        (S_uei) )

      ; 
      (when (kpe) 
        (S_vei) )

      ; 
      (when (j0c) 
        (S_vei) )

    )
  )
  (:action closure_merge_OPENED_P2-5___1
    :effect 
      ; merge l//xi
      (when  (and (xie) (yie) (zie) (bje) (cje) (gje) (hje) )
         (and (not (tje)) (not (rje)) (not (qje)) (not (mje)) (not (lje)) (not (kje)) (not (jje)) (not (xac)) (yac) (x9c) (xie) (yie) (zie) (bje) (cje) (gje) (hje) ))

  )
  (:action closure_merge_OPENED_P2-5___2
    :effect 
      ; merge l//xi
      (when  (and (S_xei) (S_yei) (S_zei) (S_bfi) (S_cfi) (S_gfi) (S_hfi) )
         (and (not (tje)) (not (rje)) (not (qje)) (not (mje)) (not (lje)) (not (kje)) (not (jje)) (not (xac)) (yac) (x9c) (xie) (yie) (zie) (bje) (cje) (gje) (hje) ))

  )
  (:action closure_add_sl__OPENED_P2-5___3
    :effect  (and 
      ; 
      (when (xie) 
        (S_xei) )

      ; 
      (when (q9c) 
        (S_xei) )

      ; 
      (when (yie) 
        (S_yei) )

      ; 
      (when (t9c) 
        (S_yei) )

      ; 
      (when (zie) 
        (S_zei) )

      ; 
      (when (v9c) 
        (S_zei) )

      ; 
      (when (bje) 
        (S_bfi) )

      ; 
      (when (y9c) 
        (S_bfi) )

      ; 
      (when (cje) 
        (S_cfi) )

      ; 
      (when (b0c) 
        (S_cfi) )

      ; 
      (when (gje) 
        (S_gfi) )

      ; 
      (when (g0c) 
        (S_gfi) )

      ; 
      (when (hje) 
        (S_hfi) )

      ; 
      (when (j0c) 
        (S_hfi) )

    )
  )
  (:action closure_merge_OPENED_P2-4___1
    :effect 
      ; merge l//xi
      (when  (and (uce) (vce) (xce) (yce) (zce) (bde) (cde) )
         (and (not (qde)) (not (mde)) (not (lde)) (not (kde)) (not (jde)) (not (hde)) (not (gde)) (not (zac)) (bbc) (z9c) (uce) (vce) (xce) (yce) (zce) (bde) (cde) ))

  )
  (:action closure_merge_OPENED_P2-4___2
    :effect 
      ; merge l//xi
      (when  (and (S_jfi) (S_kfi) (S_lfi) (S_mfi) (S_qfi) (S_rfi) (S_tfi) )
         (and (not (qde)) (not (mde)) (not (lde)) (not (kde)) (not (jde)) (not (hde)) (not (gde)) (not (zac)) (bbc) (z9c) (uce) (vce) (xce) (yce) (zce) (bde) (cde) ))

  )
  (:action closure_add_sl__OPENED_P2-4___3
    :effect  (and 
      ; 
      (when (uce) 
        (S_jfi) )

      ; 
      (when (q9c) 
        (S_jfi) )

      ; 
      (when (vce) 
        (S_kfi) )

      ; 
      (when (t9c) 
        (S_kfi) )

      ; 
      (when (xce) 
        (S_lfi) )

      ; 
      (when (v9c) 
        (S_lfi) )

      ; 
      (when (yce) 
        (S_mfi) )

      ; 
      (when (y9c) 
        (S_mfi) )

      ; 
      (when (zce) 
        (S_qfi) )

      ; 
      (when (b0c) 
        (S_qfi) )

      ; 
      (when (bde) 
        (S_rfi) )

      ; 
      (when (g0c) 
        (S_rfi) )

      ; 
      (when (cde) 
        (S_tfi) )

      ; 
      (when (j0c) 
        (S_tfi) )

    )
  )
  (:action closure_merge_OPENED_P2-3___1
    :effect 
      ; merge l//xi
      (when  (and (zve) (bwe) (cwe) (gwe) (hwe) (jwe) (kwe) )
         (and (not (vwe)) (not (uwe)) (not (twe)) (not (rwe)) (not (qwe)) (not (mwe)) (not (lwe)) (not (cbc)) (gbc) (c0c) (zve) (bwe) (cwe) (gwe) (hwe) (jwe) (kwe) ))

  )
  (:action closure_merge_OPENED_P2-3___2
    :effect 
      ; merge l//xi
      (when  (and (S_ufi) (S_vfi) (S_xfi) (S_yfi) (S_zfi) (S_bgi) (S_cgi) )
         (and (not (vwe)) (not (uwe)) (not (twe)) (not (rwe)) (not (qwe)) (not (mwe)) (not (lwe)) (not (cbc)) (gbc) (c0c) (zve) (bwe) (cwe) (gwe) (hwe) (jwe) (kwe) ))

  )
  (:action closure_add_sl__OPENED_P2-3___3
    :effect  (and 
      ; 
      (when (zve) 
        (S_ufi) )

      ; 
      (when (q9c) 
        (S_ufi) )

      ; 
      (when (bwe) 
        (S_vfi) )

      ; 
      (when (t9c) 
        (S_vfi) )

      ; 
      (when (cwe) 
        (S_xfi) )

      ; 
      (when (v9c) 
        (S_xfi) )

      ; 
      (when (gwe) 
        (S_yfi) )

      ; 
      (when (y9c) 
        (S_yfi) )

      ; 
      (when (hwe) 
        (S_zfi) )

      ; 
      (when (b0c) 
        (S_zfi) )

      ; 
      (when (jwe) 
        (S_bgi) )

      ; 
      (when (g0c) 
        (S_bgi) )

      ; 
      (when (kwe) 
        (S_cgi) )

      ; 
      (when (j0c) 
        (S_cgi) )

    )
  )
  (:action closure_merge_OPENED_P2-2___1
    :effect 
      ; merge l//xi
      (when  (and (m5g) (q5g) (r5g) (t5g) (u5g) (v5g) (x5g) )
         (and (not (j6g)) (not (h6g)) (not (g6g)) (not (c6g)) (not (b6g)) (not (z5g)) (not (y5g)) (not (hbc)) (jbc) (h0c) (m5g) (q5g) (r5g) (t5g) (u5g) (v5g) (x5g) ))

  )
  (:action closure_merge_OPENED_P2-2___2
    :effect 
      ; merge l//xi
      (when  (and (S_ggi) (S_hgi) (S_jgi) (S_kgi) (S_lgi) (S_mgi) (S_qgi) )
         (and (not (j6g)) (not (h6g)) (not (g6g)) (not (c6g)) (not (b6g)) (not (z5g)) (not (y5g)) (not (hbc)) (jbc) (h0c) (m5g) (q5g) (r5g) (t5g) (u5g) (v5g) (x5g) ))

  )
  (:action closure_add_sl__OPENED_P2-2___3
    :effect  (and 
      ; 
      (when (m5g) 
        (S_ggi) )

      ; 
      (when (q9c) 
        (S_ggi) )

      ; 
      (when (q5g) 
        (S_hgi) )

      ; 
      (when (t9c) 
        (S_hgi) )

      ; 
      (when (r5g) 
        (S_jgi) )

      ; 
      (when (v9c) 
        (S_jgi) )

      ; 
      (when (t5g) 
        (S_kgi) )

      ; 
      (when (y9c) 
        (S_kgi) )

      ; 
      (when (u5g) 
        (S_lgi) )

      ; 
      (when (b0c) 
        (S_lgi) )

      ; 
      (when (v5g) 
        (S_mgi) )

      ; 
      (when (g0c) 
        (S_mgi) )

      ; 
      (when (x5g) 
        (S_qgi) )

      ; 
      (when (j0c) 
        (S_qgi) )

    )
  )
  (:action closure_merge_OPENED_P2-1___1
    :effect 
      ; merge l//xi
      (when  (and (mph) (qph) (rph) (tph) (uph) (vph) (xph) )
         (and (not (jqh)) (not (hqh)) (not (gqh)) (not (cqh)) (not (bqh)) (not (zph)) (not (yph)) (not (kbc)) (lbc) (k0c) (mph) (qph) (rph) (tph) (uph) (vph) (xph) ))

  )
  (:action closure_merge_OPENED_P2-1___2
    :effect 
      ; merge l//xi
      (when  (and (S_rgi) (S_tgi) (S_ugi) (S_vgi) (S_xgi) (S_ygi) (S_zgi) )
         (and (not (jqh)) (not (hqh)) (not (gqh)) (not (cqh)) (not (bqh)) (not (zph)) (not (yph)) (not (kbc)) (lbc) (k0c) (mph) (qph) (rph) (tph) (uph) (vph) (xph) ))

  )
  (:action closure_add_sl__OPENED_P2-1___3
    :effect  (and 
      ; 
      (when (mph) 
        (S_rgi) )

      ; 
      (when (q9c) 
        (S_rgi) )

      ; 
      (when (qph) 
        (S_tgi) )

      ; 
      (when (t9c) 
        (S_tgi) )

      ; 
      (when (rph) 
        (S_ugi) )

      ; 
      (when (v9c) 
        (S_ugi) )

      ; 
      (when (tph) 
        (S_vgi) )

      ; 
      (when (y9c) 
        (S_vgi) )

      ; 
      (when (uph) 
        (S_xgi) )

      ; 
      (when (b0c) 
        (S_xgi) )

      ; 
      (when (vph) 
        (S_ygi) )

      ; 
      (when (g0c) 
        (S_ygi) )

      ; 
      (when (xph) 
        (S_zgi) )

      ; 
      (when (j0c) 
        (S_zgi) )

    )
  )
  (:action closure_merge_AT_P1-4___1
    :effect 
      ; merge l//xi
      (when  (and (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) )
         (and (not (l8d)) (not (j8d)) (not (g8d)) (not (b8d)) (not (y7d)) (not (v7d)) (not (t7d)) (not (q7d)) (not (l7d)) (not (j7d)) (not (g7d)) (not (b7d)) (not (y6d)) (not (v6d)) (not (t6d)) (not (q6d)) (not (l6d)) (not (j6d)) (not (g6d)) (not (b6d)) (not (y5d)) (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

  )
  (:action closure_merge_AT_P1-4___2
    :effect 
      ; merge l//xi
      (when  (and (S_bhi) (S_chi) (S_ghi) (S_hhi) (S_jhi) (S_khi) (S_lhi) )
         (and (not (l8d)) (not (j8d)) (not (g8d)) (not (b8d)) (not (y7d)) (not (v7d)) (not (t7d)) (not (q7d)) (not (l7d)) (not (j7d)) (not (g7d)) (not (b7d)) (not (y6d)) (not (v6d)) (not (t6d)) (not (q6d)) (not (l6d)) (not (j6d)) (not (g6d)) (not (b6d)) (not (y5d)) (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

  )
  (:action closure_add_sl__AT_P1-4___3
    :effect  (and 
      ; 
      (when (x5d) 
        (S_bhi) )

      ; 
      (when (b6c) 
        (S_bhi) )

      ; 
      (when (z5d) 
        (S_chi) )

      ; 
      (when (g6c) 
        (S_chi) )

      ; 
      (when (c6d) 
        (S_ghi) )

      ; 
      (when (j6c) 
        (S_ghi) )

      ; 
      (when (h6d) 
        (S_hhi) )

      ; 
      (when (l6c) 
        (S_hhi) )

      ; 
      (when (k6d) 
        (S_jhi) )

      ; 
      (when (q6c) 
        (S_jhi) )

      ; 
      (when (m6d) 
        (S_khi) )

      ; 
      (when (t6c) 
        (S_khi) )

      ; 
      (when (r6d) 
        (S_lhi) )

      ; 
      (when (v6c) 
        (S_lhi) )

    )
  )
  (:action closure_merge_AT_P1-4___4
    :effect 
      ; merge l//xi
      (when  (and (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) )
         (and (not (l8d)) (not (j8d)) (not (g8d)) (not (b8d)) (not (y7d)) (not (v7d)) (not (t7d)) (not (q7d)) (not (l7d)) (not (j7d)) (not (g7d)) (not (b7d)) (not (y6d)) (not (v6d)) (not (t6d)) (not (q6d)) (not (l6d)) (not (j6d)) (not (g6d)) (not (b6d)) (not (y5d)) (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

  )
  (:action closure_merge_AT_P1-4___5
    :effect 
      ; merge l//xi
      (when  (and (S_mhi) (S_qhi) (S_rhi) (S_thi) (S_uhi) (S_vhi) (S_xhi) )
         (and (not (l8d)) (not (j8d)) (not (g8d)) (not (b8d)) (not (y7d)) (not (v7d)) (not (t7d)) (not (q7d)) (not (l7d)) (not (j7d)) (not (g7d)) (not (b7d)) (not (y6d)) (not (v6d)) (not (t6d)) (not (q6d)) (not (l6d)) (not (j6d)) (not (g6d)) (not (b6d)) (not (y5d)) (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

  )
  (:action closure_add_sl__AT_P1-4___6
    :effect  (and 
      ; 
      (when (u6d) 
        (S_mhi) )

      ; 
      (when (v7c) 
        (S_mhi) )

      ; 
      (when (x6d) 
        (S_qhi) )

      ; 
      (when (y7c) 
        (S_qhi) )

      ; 
      (when (z6d) 
        (S_rhi) )

      ; 
      (when (b8c) 
        (S_rhi) )

      ; 
      (when (c7d) 
        (S_thi) )

      ; 
      (when (g8c) 
        (S_thi) )

      ; 
      (when (h7d) 
        (S_uhi) )

      ; 
      (when (j8c) 
        (S_uhi) )

      ; 
      (when (k7d) 
        (S_vhi) )

      ; 
      (when (l8c) 
        (S_vhi) )

      ; 
      (when (m7d) 
        (S_xhi) )

      ; 
      (when (q8c) 
        (S_xhi) )

    )
  )
  (:action closure_merge_AT_P1-4___7
    :effect 
      ; merge l//xi
      (when  (and (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) )
         (and (not (l8d)) (not (j8d)) (not (g8d)) (not (b8d)) (not (y7d)) (not (v7d)) (not (t7d)) (not (q7d)) (not (l7d)) (not (j7d)) (not (g7d)) (not (b7d)) (not (y6d)) (not (v6d)) (not (t6d)) (not (q6d)) (not (l6d)) (not (j6d)) (not (g6d)) (not (b6d)) (not (y5d)) (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

  )
  (:action closure_merge_AT_P1-4___8
    :effect 
      ; merge l//xi
      (when  (and (S_yhi) (S_zhi) (S_bii) (S_cii) (S_gii) (S_hii) (S_jii) )
         (and (not (l8d)) (not (j8d)) (not (g8d)) (not (b8d)) (not (y7d)) (not (v7d)) (not (t7d)) (not (q7d)) (not (l7d)) (not (j7d)) (not (g7d)) (not (b7d)) (not (y6d)) (not (v6d)) (not (t6d)) (not (q6d)) (not (l6d)) (not (j6d)) (not (g6d)) (not (b6d)) (not (y5d)) (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

  )
  (:action closure_add_sl__AT_P1-4___9
    :effect  (and 
      ; 
      (when (r7d) 
        (S_yhi) )

      ; 
      (when (q9c) 
        (S_yhi) )

      ; 
      (when (u7d) 
        (S_zhi) )

      ; 
      (when (t9c) 
        (S_zhi) )

      ; 
      (when (x7d) 
        (S_bii) )

      ; 
      (when (v9c) 
        (S_bii) )

      ; 
      (when (z7d) 
        (S_cii) )

      ; 
      (when (y9c) 
        (S_cii) )

      ; 
      (when (c8d) 
        (S_gii) )

      ; 
      (when (b0c) 
        (S_gii) )

      ; 
      (when (h8d) 
        (S_hii) )

      ; 
      (when (g0c) 
        (S_hii) )

      ; 
      (when (k8d) 
        (S_jii) )

      ; 
      (when (j0c) 
        (S_jii) )

    )
  )
  (:action closure_merge_AT_P1-1___1
    :effect 
      ; merge l//xi
      (when  (and (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) )
         (and (not (lph)) (not (jph)) (not (gph)) (not (bph)) (not (yoh)) (not (voh)) (not (toh)) (not (qoh)) (not (loh)) (not (joh)) (not (goh)) (not (boh)) (not (ynh)) (not (vnh)) (not (tnh)) (not (qnh)) (not (lnh)) (not (jnh)) (not (gnh)) (not (bnh)) (not (ymh)) (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

  )
  (:action closure_merge_AT_P1-1___2
    :effect 
      ; merge l//xi
      (when  (and (S_kii) (S_lii) (S_mii) (S_qii) (S_rii) (S_tii) (S_uii) )
         (and (not (lph)) (not (jph)) (not (gph)) (not (bph)) (not (yoh)) (not (voh)) (not (toh)) (not (qoh)) (not (loh)) (not (joh)) (not (goh)) (not (boh)) (not (ynh)) (not (vnh)) (not (tnh)) (not (qnh)) (not (lnh)) (not (jnh)) (not (gnh)) (not (bnh)) (not (ymh)) (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

  )
  (:action closure_add_sl__AT_P1-1___3
    :effect  (and 
      ; 
      (when (xmh) 
        (S_kii) )

      ; 
      (when (b6c) 
        (S_kii) )

      ; 
      (when (zmh) 
        (S_lii) )

      ; 
      (when (g6c) 
        (S_lii) )

      ; 
      (when (cnh) 
        (S_mii) )

      ; 
      (when (j6c) 
        (S_mii) )

      ; 
      (when (hnh) 
        (S_qii) )

      ; 
      (when (l6c) 
        (S_qii) )

      ; 
      (when (knh) 
        (S_rii) )

      ; 
      (when (q6c) 
        (S_rii) )

      ; 
      (when (mnh) 
        (S_tii) )

      ; 
      (when (t6c) 
        (S_tii) )

      ; 
      (when (rnh) 
        (S_uii) )

      ; 
      (when (v6c) 
        (S_uii) )

    )
  )
  (:action closure_merge_AT_P1-1___4
    :effect 
      ; merge l//xi
      (when  (and (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) )
         (and (not (lph)) (not (jph)) (not (gph)) (not (bph)) (not (yoh)) (not (voh)) (not (toh)) (not (qoh)) (not (loh)) (not (joh)) (not (goh)) (not (boh)) (not (ynh)) (not (vnh)) (not (tnh)) (not (qnh)) (not (lnh)) (not (jnh)) (not (gnh)) (not (bnh)) (not (ymh)) (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

  )
  (:action closure_merge_AT_P1-1___5
    :effect 
      ; merge l//xi
      (when  (and (S_vii) (S_xii) (S_yii) (S_zii) (S_bji) (S_cji) (S_gji) )
         (and (not (lph)) (not (jph)) (not (gph)) (not (bph)) (not (yoh)) (not (voh)) (not (toh)) (not (qoh)) (not (loh)) (not (joh)) (not (goh)) (not (boh)) (not (ynh)) (not (vnh)) (not (tnh)) (not (qnh)) (not (lnh)) (not (jnh)) (not (gnh)) (not (bnh)) (not (ymh)) (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

  )
  (:action closure_add_sl__AT_P1-1___6
    :effect  (and 
      ; 
      (when (unh) 
        (S_vii) )

      ; 
      (when (v7c) 
        (S_vii) )

      ; 
      (when (xnh) 
        (S_xii) )

      ; 
      (when (y7c) 
        (S_xii) )

      ; 
      (when (znh) 
        (S_yii) )

      ; 
      (when (b8c) 
        (S_yii) )

      ; 
      (when (coh) 
        (S_zii) )

      ; 
      (when (g8c) 
        (S_zii) )

      ; 
      (when (hoh) 
        (S_bji) )

      ; 
      (when (j8c) 
        (S_bji) )

      ; 
      (when (koh) 
        (S_cji) )

      ; 
      (when (l8c) 
        (S_cji) )

      ; 
      (when (moh) 
        (S_gji) )

      ; 
      (when (q8c) 
        (S_gji) )

    )
  )
  (:action closure_merge_AT_P1-1___7
    :effect 
      ; merge l//xi
      (when  (and (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) )
         (and (not (lph)) (not (jph)) (not (gph)) (not (bph)) (not (yoh)) (not (voh)) (not (toh)) (not (qoh)) (not (loh)) (not (joh)) (not (goh)) (not (boh)) (not (ynh)) (not (vnh)) (not (tnh)) (not (qnh)) (not (lnh)) (not (jnh)) (not (gnh)) (not (bnh)) (not (ymh)) (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

  )
  (:action closure_merge_AT_P1-1___8
    :effect 
      ; merge l//xi
      (when  (and (S_hji) (S_jji) (S_kji) (S_lji) (S_mji) (S_qji) (S_rji) )
         (and (not (lph)) (not (jph)) (not (gph)) (not (bph)) (not (yoh)) (not (voh)) (not (toh)) (not (qoh)) (not (loh)) (not (joh)) (not (goh)) (not (boh)) (not (ynh)) (not (vnh)) (not (tnh)) (not (qnh)) (not (lnh)) (not (jnh)) (not (gnh)) (not (bnh)) (not (ymh)) (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

  )
  (:action closure_add_sl__AT_P1-1___9
    :effect  (and 
      ; 
      (when (roh) 
        (S_hji) )

      ; 
      (when (q9c) 
        (S_hji) )

      ; 
      (when (uoh) 
        (S_jji) )

      ; 
      (when (t9c) 
        (S_jji) )

      ; 
      (when (xoh) 
        (S_kji) )

      ; 
      (when (v9c) 
        (S_kji) )

      ; 
      (when (zoh) 
        (S_lji) )

      ; 
      (when (y9c) 
        (S_lji) )

      ; 
      (when (cph) 
        (S_mji) )

      ; 
      (when (b0c) 
        (S_mji) )

      ; 
      (when (hph) 
        (S_qji) )

      ; 
      (when (g0c) 
        (S_qji) )

      ; 
      (when (kph) 
        (S_rji) )

      ; 
      (when (j0c) 
        (S_rji) )

    )
  )
  (:action closure_merge_AT_P1-2___1
    :effect 
      ; merge l//xi
      (when  (and (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) )
         (and (not (l5g)) (not (j5g)) (not (g5g)) (not (b5g)) (not (y4g)) (not (v4g)) (not (t4g)) (not (q4g)) (not (l4g)) (not (j4g)) (not (g4g)) (not (b4g)) (not (y3g)) (not (v3g)) (not (t3g)) (not (q3g)) (not (l3g)) (not (j3g)) (not (g3g)) (not (b3g)) (not (y2g)) (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

  )
  (:action closure_merge_AT_P1-2___2
    :effect 
      ; merge l//xi
      (when  (and (S_tji) (S_uji) (S_vji) (S_xji) (S_yji) (S_zji) (S_bki) )
         (and (not (l5g)) (not (j5g)) (not (g5g)) (not (b5g)) (not (y4g)) (not (v4g)) (not (t4g)) (not (q4g)) (not (l4g)) (not (j4g)) (not (g4g)) (not (b4g)) (not (y3g)) (not (v3g)) (not (t3g)) (not (q3g)) (not (l3g)) (not (j3g)) (not (g3g)) (not (b3g)) (not (y2g)) (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

  )
  (:action closure_add_sl__AT_P1-2___3
    :effect  (and 
      ; 
      (when (x2g) 
        (S_tji) )

      ; 
      (when (b6c) 
        (S_tji) )

      ; 
      (when (z2g) 
        (S_uji) )

      ; 
      (when (g6c) 
        (S_uji) )

      ; 
      (when (c3g) 
        (S_vji) )

      ; 
      (when (j6c) 
        (S_vji) )

      ; 
      (when (h3g) 
        (S_xji) )

      ; 
      (when (l6c) 
        (S_xji) )

      ; 
      (when (k3g) 
        (S_yji) )

      ; 
      (when (q6c) 
        (S_yji) )

      ; 
      (when (m3g) 
        (S_zji) )

      ; 
      (when (t6c) 
        (S_zji) )

      ; 
      (when (r3g) 
        (S_bki) )

      ; 
      (when (v6c) 
        (S_bki) )

    )
  )
  (:action closure_merge_AT_P1-2___4
    :effect 
      ; merge l//xi
      (when  (and (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) )
         (and (not (l5g)) (not (j5g)) (not (g5g)) (not (b5g)) (not (y4g)) (not (v4g)) (not (t4g)) (not (q4g)) (not (l4g)) (not (j4g)) (not (g4g)) (not (b4g)) (not (y3g)) (not (v3g)) (not (t3g)) (not (q3g)) (not (l3g)) (not (j3g)) (not (g3g)) (not (b3g)) (not (y2g)) (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

  )
  (:action closure_merge_AT_P1-2___5
    :effect 
      ; merge l//xi
      (when  (and (S_cki) (S_gki) (S_hki) (S_jki) (S_kki) (S_lki) (S_mki) )
         (and (not (l5g)) (not (j5g)) (not (g5g)) (not (b5g)) (not (y4g)) (not (v4g)) (not (t4g)) (not (q4g)) (not (l4g)) (not (j4g)) (not (g4g)) (not (b4g)) (not (y3g)) (not (v3g)) (not (t3g)) (not (q3g)) (not (l3g)) (not (j3g)) (not (g3g)) (not (b3g)) (not (y2g)) (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

  )
  (:action closure_add_sl__AT_P1-2___6
    :effect  (and 
      ; 
      (when (u3g) 
        (S_cki) )

      ; 
      (when (v7c) 
        (S_cki) )

      ; 
      (when (x3g) 
        (S_gki) )

      ; 
      (when (y7c) 
        (S_gki) )

      ; 
      (when (z3g) 
        (S_hki) )

      ; 
      (when (b8c) 
        (S_hki) )

      ; 
      (when (c4g) 
        (S_jki) )

      ; 
      (when (g8c) 
        (S_jki) )

      ; 
      (when (h4g) 
        (S_kki) )

      ; 
      (when (j8c) 
        (S_kki) )

      ; 
      (when (k4g) 
        (S_lki) )

      ; 
      (when (l8c) 
        (S_lki) )

      ; 
      (when (m4g) 
        (S_mki) )

      ; 
      (when (q8c) 
        (S_mki) )

    )
  )
  (:action closure_merge_AT_P1-2___7
    :effect 
      ; merge l//xi
      (when  (and (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) )
         (and (not (l5g)) (not (j5g)) (not (g5g)) (not (b5g)) (not (y4g)) (not (v4g)) (not (t4g)) (not (q4g)) (not (l4g)) (not (j4g)) (not (g4g)) (not (b4g)) (not (y3g)) (not (v3g)) (not (t3g)) (not (q3g)) (not (l3g)) (not (j3g)) (not (g3g)) (not (b3g)) (not (y2g)) (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

  )
  (:action closure_merge_AT_P1-2___8
    :effect 
      ; merge l//xi
      (when  (and (S_qki) (S_rki) (S_tki) (S_uki) (S_vki) (S_xki) (S_yki) )
         (and (not (l5g)) (not (j5g)) (not (g5g)) (not (b5g)) (not (y4g)) (not (v4g)) (not (t4g)) (not (q4g)) (not (l4g)) (not (j4g)) (not (g4g)) (not (b4g)) (not (y3g)) (not (v3g)) (not (t3g)) (not (q3g)) (not (l3g)) (not (j3g)) (not (g3g)) (not (b3g)) (not (y2g)) (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

  )
  (:action closure_add_sl__AT_P1-2___9
    :effect  (and 
      ; 
      (when (r4g) 
        (S_qki) )

      ; 
      (when (q9c) 
        (S_qki) )

      ; 
      (when (u4g) 
        (S_rki) )

      ; 
      (when (t9c) 
        (S_rki) )

      ; 
      (when (x4g) 
        (S_tki) )

      ; 
      (when (v9c) 
        (S_tki) )

      ; 
      (when (z4g) 
        (S_uki) )

      ; 
      (when (y9c) 
        (S_uki) )

      ; 
      (when (c5g) 
        (S_vki) )

      ; 
      (when (b0c) 
        (S_vki) )

      ; 
      (when (h5g) 
        (S_xki) )

      ; 
      (when (g0c) 
        (S_xki) )

      ; 
      (when (k5g) 
        (S_yki) )

      ; 
      (when (j0c) 
        (S_yki) )

    )
  )
  (:action closure_merge_AT_P1-3___1
    :effect 
      ; merge l//xi
      (when  (and (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) )
         (and (not (bae)) (not (y0d)) (not (v0d)) (not (t0d)) (not (q0d)) (not (l0d)) (not (j0d)) (not (g0d)) (not (b0d)) (not (y9d)) (not (v9d)) (not (t9d)) (not (q9d)) (not (l9d)) (not (j9d)) (not (g9d)) (not (b9d)) (not (y8d)) (not (v8d)) (not (t8d)) (not (q8d)) (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

  )
  (:action closure_merge_AT_P1-3___2
    :effect 
      ; merge l//xi
      (when  (and (S_zki) (S_bli) (S_cli) (S_gli) (S_hli) (S_jli) (S_kli) )
         (and (not (bae)) (not (y0d)) (not (v0d)) (not (t0d)) (not (q0d)) (not (l0d)) (not (j0d)) (not (g0d)) (not (b0d)) (not (y9d)) (not (v9d)) (not (t9d)) (not (q9d)) (not (l9d)) (not (j9d)) (not (g9d)) (not (b9d)) (not (y8d)) (not (v8d)) (not (t8d)) (not (q8d)) (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

  )
  (:action closure_add_sl__AT_P1-3___3
    :effect  (and 
      ; 
      (when (m8d) 
        (S_zki) )

      ; 
      (when (b6c) 
        (S_zki) )

      ; 
      (when (r8d) 
        (S_bli) )

      ; 
      (when (g6c) 
        (S_bli) )

      ; 
      (when (u8d) 
        (S_cli) )

      ; 
      (when (j6c) 
        (S_cli) )

      ; 
      (when (x8d) 
        (S_gli) )

      ; 
      (when (l6c) 
        (S_gli) )

      ; 
      (when (z8d) 
        (S_hli) )

      ; 
      (when (q6c) 
        (S_hli) )

      ; 
      (when (c9d) 
        (S_jli) )

      ; 
      (when (t6c) 
        (S_jli) )

      ; 
      (when (h9d) 
        (S_kli) )

      ; 
      (when (v6c) 
        (S_kli) )

    )
  )
  (:action closure_merge_AT_P1-3___4
    :effect 
      ; merge l//xi
      (when  (and (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) )
         (and (not (bae)) (not (y0d)) (not (v0d)) (not (t0d)) (not (q0d)) (not (l0d)) (not (j0d)) (not (g0d)) (not (b0d)) (not (y9d)) (not (v9d)) (not (t9d)) (not (q9d)) (not (l9d)) (not (j9d)) (not (g9d)) (not (b9d)) (not (y8d)) (not (v8d)) (not (t8d)) (not (q8d)) (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

  )
  (:action closure_merge_AT_P1-3___5
    :effect 
      ; merge l//xi
      (when  (and (S_lli) (S_mli) (S_qli) (S_rli) (S_tli) (S_uli) (S_vli) )
         (and (not (bae)) (not (y0d)) (not (v0d)) (not (t0d)) (not (q0d)) (not (l0d)) (not (j0d)) (not (g0d)) (not (b0d)) (not (y9d)) (not (v9d)) (not (t9d)) (not (q9d)) (not (l9d)) (not (j9d)) (not (g9d)) (not (b9d)) (not (y8d)) (not (v8d)) (not (t8d)) (not (q8d)) (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

  )
  (:action closure_add_sl__AT_P1-3___6
    :effect  (and 
      ; 
      (when (k9d) 
        (S_lli) )

      ; 
      (when (v7c) 
        (S_lli) )

      ; 
      (when (m9d) 
        (S_mli) )

      ; 
      (when (y7c) 
        (S_mli) )

      ; 
      (when (r9d) 
        (S_qli) )

      ; 
      (when (b8c) 
        (S_qli) )

      ; 
      (when (u9d) 
        (S_rli) )

      ; 
      (when (g8c) 
        (S_rli) )

      ; 
      (when (x9d) 
        (S_tli) )

      ; 
      (when (j8c) 
        (S_tli) )

      ; 
      (when (z9d) 
        (S_uli) )

      ; 
      (when (l8c) 
        (S_uli) )

      ; 
      (when (c0d) 
        (S_vli) )

      ; 
      (when (q8c) 
        (S_vli) )

    )
  )
  (:action closure_merge_AT_P1-3___7
    :effect 
      ; merge l//xi
      (when  (and (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) )
         (and (not (bae)) (not (y0d)) (not (v0d)) (not (t0d)) (not (q0d)) (not (l0d)) (not (j0d)) (not (g0d)) (not (b0d)) (not (y9d)) (not (v9d)) (not (t9d)) (not (q9d)) (not (l9d)) (not (j9d)) (not (g9d)) (not (b9d)) (not (y8d)) (not (v8d)) (not (t8d)) (not (q8d)) (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

  )
  (:action closure_merge_AT_P1-3___8
    :effect 
      ; merge l//xi
      (when  (and (S_xli) (S_yli) (S_zli) (S_bmi) (S_cmi) (S_gmi) (S_hmi) )
         (and (not (bae)) (not (y0d)) (not (v0d)) (not (t0d)) (not (q0d)) (not (l0d)) (not (j0d)) (not (g0d)) (not (b0d)) (not (y9d)) (not (v9d)) (not (t9d)) (not (q9d)) (not (l9d)) (not (j9d)) (not (g9d)) (not (b9d)) (not (y8d)) (not (v8d)) (not (t8d)) (not (q8d)) (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

  )
  (:action closure_add_sl__AT_P1-3___9
    :effect  (and 
      ; 
      (when (h0d) 
        (S_xli) )

      ; 
      (when (q9c) 
        (S_xli) )

      ; 
      (when (k0d) 
        (S_yli) )

      ; 
      (when (t9c) 
        (S_yli) )

      ; 
      (when (m0d) 
        (S_zli) )

      ; 
      (when (v9c) 
        (S_zli) )

      ; 
      (when (r0d) 
        (S_bmi) )

      ; 
      (when (y9c) 
        (S_bmi) )

      ; 
      (when (u0d) 
        (S_cmi) )

      ; 
      (when (b0c) 
        (S_cmi) )

      ; 
      (when (x0d) 
        (S_gmi) )

      ; 
      (when (g0c) 
        (S_gmi) )

      ; 
      (when (z0d) 
        (S_hmi) )

      ; 
      (when (j0c) 
        (S_hmi) )

    )
  )
  (:action closure_merge_AT_P1-5___1
    :effect 
      ; merge l//xi
      (when  (and (cae) (hae) (kae) (mae) (rae) (uae) (xae) )
         (and (not (tce)) (not (qce)) (not (lce)) (not (jce)) (not (gce)) (not (bce)) (not (ybe)) (not (vbe)) (not (tbe)) (not (qbe)) (not (lbe)) (not (jbe)) (not (gbe)) (not (bbe)) (not (yae)) (not (vae)) (not (tae)) (not (qae)) (not (lae)) (not (jae)) (not (gae)) (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

  )
  (:action closure_merge_AT_P1-5___2
    :effect 
      ; merge l//xi
      (when  (and (S_jmi) (S_kmi) (S_lmi) (S_mmi) (S_qmi) (S_rmi) (S_tmi) )
         (and (not (tce)) (not (qce)) (not (lce)) (not (jce)) (not (gce)) (not (bce)) (not (ybe)) (not (vbe)) (not (tbe)) (not (qbe)) (not (lbe)) (not (jbe)) (not (gbe)) (not (bbe)) (not (yae)) (not (vae)) (not (tae)) (not (qae)) (not (lae)) (not (jae)) (not (gae)) (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

  )
  (:action closure_add_sl__AT_P1-5___3
    :effect  (and 
      ; 
      (when (cae) 
        (S_jmi) )

      ; 
      (when (b6c) 
        (S_jmi) )

      ; 
      (when (hae) 
        (S_kmi) )

      ; 
      (when (g6c) 
        (S_kmi) )

      ; 
      (when (kae) 
        (S_lmi) )

      ; 
      (when (j6c) 
        (S_lmi) )

      ; 
      (when (mae) 
        (S_mmi) )

      ; 
      (when (l6c) 
        (S_mmi) )

      ; 
      (when (rae) 
        (S_qmi) )

      ; 
      (when (q6c) 
        (S_qmi) )

      ; 
      (when (uae) 
        (S_rmi) )

      ; 
      (when (t6c) 
        (S_rmi) )

      ; 
      (when (xae) 
        (S_tmi) )

      ; 
      (when (v6c) 
        (S_tmi) )

    )
  )
  (:action closure_merge_AT_P1-5___4
    :effect 
      ; merge l//xi
      (when  (and (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) )
         (and (not (tce)) (not (qce)) (not (lce)) (not (jce)) (not (gce)) (not (bce)) (not (ybe)) (not (vbe)) (not (tbe)) (not (qbe)) (not (lbe)) (not (jbe)) (not (gbe)) (not (bbe)) (not (yae)) (not (vae)) (not (tae)) (not (qae)) (not (lae)) (not (jae)) (not (gae)) (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

  )
  (:action closure_merge_AT_P1-5___5
    :effect 
      ; merge l//xi
      (when  (and (S_umi) (S_vmi) (S_xmi) (S_ymi) (S_zmi) (S_bni) (S_cni) )
         (and (not (tce)) (not (qce)) (not (lce)) (not (jce)) (not (gce)) (not (bce)) (not (ybe)) (not (vbe)) (not (tbe)) (not (qbe)) (not (lbe)) (not (jbe)) (not (gbe)) (not (bbe)) (not (yae)) (not (vae)) (not (tae)) (not (qae)) (not (lae)) (not (jae)) (not (gae)) (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

  )
  (:action closure_add_sl__AT_P1-5___6
    :effect  (and 
      ; 
      (when (zae) 
        (S_umi) )

      ; 
      (when (v7c) 
        (S_umi) )

      ; 
      (when (cbe) 
        (S_vmi) )

      ; 
      (when (y7c) 
        (S_vmi) )

      ; 
      (when (hbe) 
        (S_xmi) )

      ; 
      (when (b8c) 
        (S_xmi) )

      ; 
      (when (kbe) 
        (S_ymi) )

      ; 
      (when (g8c) 
        (S_ymi) )

      ; 
      (when (mbe) 
        (S_zmi) )

      ; 
      (when (j8c) 
        (S_zmi) )

      ; 
      (when (rbe) 
        (S_bni) )

      ; 
      (when (l8c) 
        (S_bni) )

      ; 
      (when (ube) 
        (S_cni) )

      ; 
      (when (q8c) 
        (S_cni) )

    )
  )
  (:action closure_merge_AT_P1-5___7
    :effect 
      ; merge l//xi
      (when  (and (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) )
         (and (not (tce)) (not (qce)) (not (lce)) (not (jce)) (not (gce)) (not (bce)) (not (ybe)) (not (vbe)) (not (tbe)) (not (qbe)) (not (lbe)) (not (jbe)) (not (gbe)) (not (bbe)) (not (yae)) (not (vae)) (not (tae)) (not (qae)) (not (lae)) (not (jae)) (not (gae)) (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

  )
  (:action closure_merge_AT_P1-5___8
    :effect 
      ; merge l//xi
      (when  (and (S_gni) (S_hni) (S_jni) (S_kni) (S_lni) (S_mni) (S_qni) )
         (and (not (tce)) (not (qce)) (not (lce)) (not (jce)) (not (gce)) (not (bce)) (not (ybe)) (not (vbe)) (not (tbe)) (not (qbe)) (not (lbe)) (not (jbe)) (not (gbe)) (not (bbe)) (not (yae)) (not (vae)) (not (tae)) (not (qae)) (not (lae)) (not (jae)) (not (gae)) (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

  )
  (:action closure_add_sl__AT_P1-5___9
    :effect  (and 
      ; 
      (when (xbe) 
        (S_gni) )

      ; 
      (when (q9c) 
        (S_gni) )

      ; 
      (when (zbe) 
        (S_hni) )

      ; 
      (when (t9c) 
        (S_hni) )

      ; 
      (when (cce) 
        (S_jni) )

      ; 
      (when (v9c) 
        (S_jni) )

      ; 
      (when (hce) 
        (S_kni) )

      ; 
      (when (y9c) 
        (S_kni) )

      ; 
      (when (kce) 
        (S_lni) )

      ; 
      (when (b0c) 
        (S_lni) )

      ; 
      (when (mce) 
        (S_mni) )

      ; 
      (when (g0c) 
        (S_mni) )

      ; 
      (when (rce) 
        (S_qni) )

      ; 
      (when (j0c) 
        (S_qni) )

    )
  )
  (:action closure_merge_AT_P1-6___1
    :effect 
      ; merge l//xi
      (when  (and (hge) (kge) (mge) (rge) (uge) (xge) (zge) )
         (and (not (vie)) (not (tie)) (not (qie)) (not (lie)) (not (jie)) (not (gie)) (not (bie)) (not (yhe)) (not (vhe)) (not (the)) (not (qhe)) (not (lhe)) (not (jhe)) (not (ghe)) (not (bhe)) (not (yge)) (not (vge)) (not (tge)) (not (qge)) (not (lge)) (not (jge)) (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

  )
  (:action closure_merge_AT_P1-6___2
    :effect 
      ; merge l//xi
      (when  (and (S_rni) (S_tni) (S_uni) (S_vni) (S_xni) (S_yni) (S_zni) )
         (and (not (vie)) (not (tie)) (not (qie)) (not (lie)) (not (jie)) (not (gie)) (not (bie)) (not (yhe)) (not (vhe)) (not (the)) (not (qhe)) (not (lhe)) (not (jhe)) (not (ghe)) (not (bhe)) (not (yge)) (not (vge)) (not (tge)) (not (qge)) (not (lge)) (not (jge)) (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

  )
  (:action closure_add_sl__AT_P1-6___3
    :effect  (and 
      ; 
      (when (hge) 
        (S_rni) )

      ; 
      (when (b6c) 
        (S_rni) )

      ; 
      (when (kge) 
        (S_tni) )

      ; 
      (when (g6c) 
        (S_tni) )

      ; 
      (when (mge) 
        (S_uni) )

      ; 
      (when (j6c) 
        (S_uni) )

      ; 
      (when (rge) 
        (S_vni) )

      ; 
      (when (l6c) 
        (S_vni) )

      ; 
      (when (uge) 
        (S_xni) )

      ; 
      (when (q6c) 
        (S_xni) )

      ; 
      (when (xge) 
        (S_yni) )

      ; 
      (when (t6c) 
        (S_yni) )

      ; 
      (when (zge) 
        (S_zni) )

      ; 
      (when (v6c) 
        (S_zni) )

    )
  )
  (:action closure_merge_AT_P1-6___4
    :effect 
      ; merge l//xi
      (when  (and (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) )
         (and (not (vie)) (not (tie)) (not (qie)) (not (lie)) (not (jie)) (not (gie)) (not (bie)) (not (yhe)) (not (vhe)) (not (the)) (not (qhe)) (not (lhe)) (not (jhe)) (not (ghe)) (not (bhe)) (not (yge)) (not (vge)) (not (tge)) (not (qge)) (not (lge)) (not (jge)) (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

  )
  (:action closure_merge_AT_P1-6___5
    :effect 
      ; merge l//xi
      (when  (and (S_boi) (S_coi) (S_goi) (S_hoi) (S_joi) (S_koi) (S_loi) )
         (and (not (vie)) (not (tie)) (not (qie)) (not (lie)) (not (jie)) (not (gie)) (not (bie)) (not (yhe)) (not (vhe)) (not (the)) (not (qhe)) (not (lhe)) (not (jhe)) (not (ghe)) (not (bhe)) (not (yge)) (not (vge)) (not (tge)) (not (qge)) (not (lge)) (not (jge)) (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

  )
  (:action closure_add_sl__AT_P1-6___6
    :effect  (and 
      ; 
      (when (che) 
        (S_boi) )

      ; 
      (when (v7c) 
        (S_boi) )

      ; 
      (when (hhe) 
        (S_coi) )

      ; 
      (when (y7c) 
        (S_coi) )

      ; 
      (when (khe) 
        (S_goi) )

      ; 
      (when (b8c) 
        (S_goi) )

      ; 
      (when (mhe) 
        (S_hoi) )

      ; 
      (when (g8c) 
        (S_hoi) )

      ; 
      (when (rhe) 
        (S_joi) )

      ; 
      (when (j8c) 
        (S_joi) )

      ; 
      (when (uhe) 
        (S_koi) )

      ; 
      (when (l8c) 
        (S_koi) )

      ; 
      (when (xhe) 
        (S_loi) )

      ; 
      (when (q8c) 
        (S_loi) )

    )
  )
  (:action closure_merge_AT_P1-6___7
    :effect 
      ; merge l//xi
      (when  (and (zhe) (cie) (hie) (kie) (mie) (rie) (uie) )
         (and (not (vie)) (not (tie)) (not (qie)) (not (lie)) (not (jie)) (not (gie)) (not (bie)) (not (yhe)) (not (vhe)) (not (the)) (not (qhe)) (not (lhe)) (not (jhe)) (not (ghe)) (not (bhe)) (not (yge)) (not (vge)) (not (tge)) (not (qge)) (not (lge)) (not (jge)) (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

  )
  (:action closure_merge_AT_P1-6___8
    :effect 
      ; merge l//xi
      (when  (and (S_moi) (S_qoi) (S_roi) (S_toi) (S_uoi) (S_voi) (S_xoi) )
         (and (not (vie)) (not (tie)) (not (qie)) (not (lie)) (not (jie)) (not (gie)) (not (bie)) (not (yhe)) (not (vhe)) (not (the)) (not (qhe)) (not (lhe)) (not (jhe)) (not (ghe)) (not (bhe)) (not (yge)) (not (vge)) (not (tge)) (not (qge)) (not (lge)) (not (jge)) (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

  )
  (:action closure_add_sl__AT_P1-6___9
    :effect  (and 
      ; 
      (when (zhe) 
        (S_moi) )

      ; 
      (when (q9c) 
        (S_moi) )

      ; 
      (when (cie) 
        (S_qoi) )

      ; 
      (when (t9c) 
        (S_qoi) )

      ; 
      (when (hie) 
        (S_roi) )

      ; 
      (when (v9c) 
        (S_roi) )

      ; 
      (when (kie) 
        (S_toi) )

      ; 
      (when (y9c) 
        (S_toi) )

      ; 
      (when (mie) 
        (S_uoi) )

      ; 
      (when (b0c) 
        (S_uoi) )

      ; 
      (when (rie) 
        (S_voi) )

      ; 
      (when (g0c) 
        (S_voi) )

      ; 
      (when (uie) 
        (S_xoi) )

      ; 
      (when (j0c) 
        (S_xoi) )

    )
  )
  (:action closure_merge_AT_P1-7___1
    :effect 
      ; merge l//xi
      (when  (and (kme) (mme) (rme) (ume) (xme) (zme) (cne) )
         (and (not (yoe)) (not (voe)) (not (toe)) (not (qoe)) (not (loe)) (not (joe)) (not (goe)) (not (boe)) (not (yne)) (not (vne)) (not (tne)) (not (qne)) (not (lne)) (not (jne)) (not (gne)) (not (bne)) (not (yme)) (not (vme)) (not (tme)) (not (qme)) (not (lme)) (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

  )
  (:action closure_merge_AT_P1-7___2
    :effect 
      ; merge l//xi
      (when  (and (S_yoi) (S_zoi) (S_bpi) (S_cpi) (S_gpi) (S_hpi) (S_jpi) )
         (and (not (yoe)) (not (voe)) (not (toe)) (not (qoe)) (not (loe)) (not (joe)) (not (goe)) (not (boe)) (not (yne)) (not (vne)) (not (tne)) (not (qne)) (not (lne)) (not (jne)) (not (gne)) (not (bne)) (not (yme)) (not (vme)) (not (tme)) (not (qme)) (not (lme)) (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

  )
  (:action closure_add_sl__AT_P1-7___3
    :effect  (and 
      ; 
      (when (kme) 
        (S_yoi) )

      ; 
      (when (b6c) 
        (S_yoi) )

      ; 
      (when (mme) 
        (S_zoi) )

      ; 
      (when (g6c) 
        (S_zoi) )

      ; 
      (when (rme) 
        (S_bpi) )

      ; 
      (when (j6c) 
        (S_bpi) )

      ; 
      (when (ume) 
        (S_cpi) )

      ; 
      (when (l6c) 
        (S_cpi) )

      ; 
      (when (xme) 
        (S_gpi) )

      ; 
      (when (q6c) 
        (S_gpi) )

      ; 
      (when (zme) 
        (S_hpi) )

      ; 
      (when (t6c) 
        (S_hpi) )

      ; 
      (when (cne) 
        (S_jpi) )

      ; 
      (when (v6c) 
        (S_jpi) )

    )
  )
  (:action closure_merge_AT_P1-7___4
    :effect 
      ; merge l//xi
      (when  (and (hne) (kne) (mne) (rne) (une) (xne) (zne) )
         (and (not (yoe)) (not (voe)) (not (toe)) (not (qoe)) (not (loe)) (not (joe)) (not (goe)) (not (boe)) (not (yne)) (not (vne)) (not (tne)) (not (qne)) (not (lne)) (not (jne)) (not (gne)) (not (bne)) (not (yme)) (not (vme)) (not (tme)) (not (qme)) (not (lme)) (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

  )
  (:action closure_merge_AT_P1-7___5
    :effect 
      ; merge l//xi
      (when  (and (S_kpi) (S_lpi) (S_mpi) (S_qpi) (S_rpi) (S_tpi) (S_upi) )
         (and (not (yoe)) (not (voe)) (not (toe)) (not (qoe)) (not (loe)) (not (joe)) (not (goe)) (not (boe)) (not (yne)) (not (vne)) (not (tne)) (not (qne)) (not (lne)) (not (jne)) (not (gne)) (not (bne)) (not (yme)) (not (vme)) (not (tme)) (not (qme)) (not (lme)) (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

  )
  (:action closure_add_sl__AT_P1-7___6
    :effect  (and 
      ; 
      (when (hne) 
        (S_kpi) )

      ; 
      (when (v7c) 
        (S_kpi) )

      ; 
      (when (kne) 
        (S_lpi) )

      ; 
      (when (y7c) 
        (S_lpi) )

      ; 
      (when (mne) 
        (S_mpi) )

      ; 
      (when (b8c) 
        (S_mpi) )

      ; 
      (when (rne) 
        (S_qpi) )

      ; 
      (when (g8c) 
        (S_qpi) )

      ; 
      (when (une) 
        (S_rpi) )

      ; 
      (when (j8c) 
        (S_rpi) )

      ; 
      (when (xne) 
        (S_tpi) )

      ; 
      (when (l8c) 
        (S_tpi) )

      ; 
      (when (zne) 
        (S_upi) )

      ; 
      (when (q8c) 
        (S_upi) )

    )
  )
  (:action closure_merge_AT_P1-7___7
    :effect 
      ; merge l//xi
      (when  (and (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) )
         (and (not (yoe)) (not (voe)) (not (toe)) (not (qoe)) (not (loe)) (not (joe)) (not (goe)) (not (boe)) (not (yne)) (not (vne)) (not (tne)) (not (qne)) (not (lne)) (not (jne)) (not (gne)) (not (bne)) (not (yme)) (not (vme)) (not (tme)) (not (qme)) (not (lme)) (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

  )
  (:action closure_merge_AT_P1-7___8
    :effect 
      ; merge l//xi
      (when  (and (S_vpi) (S_xpi) (S_ypi) (S_zpi) (S_bqi) (S_cqi) (S_gqi) )
         (and (not (yoe)) (not (voe)) (not (toe)) (not (qoe)) (not (loe)) (not (joe)) (not (goe)) (not (boe)) (not (yne)) (not (vne)) (not (tne)) (not (qne)) (not (lne)) (not (jne)) (not (gne)) (not (bne)) (not (yme)) (not (vme)) (not (tme)) (not (qme)) (not (lme)) (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

  )
  (:action closure_add_sl__AT_P1-7___9
    :effect  (and 
      ; 
      (when (coe) 
        (S_vpi) )

      ; 
      (when (q9c) 
        (S_vpi) )

      ; 
      (when (hoe) 
        (S_xpi) )

      ; 
      (when (t9c) 
        (S_xpi) )

      ; 
      (when (koe) 
        (S_ypi) )

      ; 
      (when (v9c) 
        (S_ypi) )

      ; 
      (when (moe) 
        (S_zpi) )

      ; 
      (when (y9c) 
        (S_zpi) )

      ; 
      (when (roe) 
        (S_bqi) )

      ; 
      (when (b0c) 
        (S_bqi) )

      ; 
      (when (uoe) 
        (S_cqi) )

      ; 
      (when (g0c) 
        (S_cqi) )

      ; 
      (when (xoe) 
        (S_gqi) )

      ; 
      (when (j0c) 
        (S_gqi) )

    )
  )
  (:action closure_merge_AT_P2-1___1
    :effect 
      ; merge l//xi
      (when  (and (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) )
         (and (not (yrh)) (not (vrh)) (not (trh)) (not (qrh)) (not (lrh)) (not (jrh)) (not (grh)) (not (brh)) (not (ysh)) (not (vsh)) (not (tsh)) (not (qsh)) (not (lsh)) (not (jsh)) (not (gsh)) (not (bsh)) (not (yqh)) (not (vqh)) (not (tqh)) (not (qqh)) (not (lqh)) (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

  )
  (:action closure_merge_AT_P2-1___2
    :effect 
      ; merge l//xi
      (when  (and (S_hqi) (S_jqi) (S_kqi) (S_lqi) (S_mqi) (S_qqi) (S_rqi) )
         (and (not (yrh)) (not (vrh)) (not (trh)) (not (qrh)) (not (lrh)) (not (jrh)) (not (grh)) (not (brh)) (not (ysh)) (not (vsh)) (not (tsh)) (not (qsh)) (not (lsh)) (not (jsh)) (not (gsh)) (not (bsh)) (not (yqh)) (not (vqh)) (not (tqh)) (not (qqh)) (not (lqh)) (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

  )
  (:action closure_add_sl__AT_P2-1___3
    :effect  (and 
      ; 
      (when (kqh) 
        (S_hqi) )

      ; 
      (when (b6c) 
        (S_hqi) )

      ; 
      (when (mqh) 
        (S_jqi) )

      ; 
      (when (g6c) 
        (S_jqi) )

      ; 
      (when (rqh) 
        (S_kqi) )

      ; 
      (when (j6c) 
        (S_kqi) )

      ; 
      (when (uqh) 
        (S_lqi) )

      ; 
      (when (l6c) 
        (S_lqi) )

      ; 
      (when (xqh) 
        (S_mqi) )

      ; 
      (when (q6c) 
        (S_mqi) )

      ; 
      (when (zqh) 
        (S_qqi) )

      ; 
      (when (t6c) 
        (S_qqi) )

      ; 
      (when (csh) 
        (S_rqi) )

      ; 
      (when (v6c) 
        (S_rqi) )

    )
  )
  (:action closure_merge_AT_P2-1___4
    :effect 
      ; merge l//xi
      (when  (and (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) )
         (and (not (yrh)) (not (vrh)) (not (trh)) (not (qrh)) (not (lrh)) (not (jrh)) (not (grh)) (not (brh)) (not (ysh)) (not (vsh)) (not (tsh)) (not (qsh)) (not (lsh)) (not (jsh)) (not (gsh)) (not (bsh)) (not (yqh)) (not (vqh)) (not (tqh)) (not (qqh)) (not (lqh)) (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

  )
  (:action closure_merge_AT_P2-1___5
    :effect 
      ; merge l//xi
      (when  (and (S_tqi) (S_uqi) (S_vqi) (S_xqi) (S_yqi) (S_zqi) (S_bsi) )
         (and (not (yrh)) (not (vrh)) (not (trh)) (not (qrh)) (not (lrh)) (not (jrh)) (not (grh)) (not (brh)) (not (ysh)) (not (vsh)) (not (tsh)) (not (qsh)) (not (lsh)) (not (jsh)) (not (gsh)) (not (bsh)) (not (yqh)) (not (vqh)) (not (tqh)) (not (qqh)) (not (lqh)) (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

  )
  (:action closure_add_sl__AT_P2-1___6
    :effect  (and 
      ; 
      (when (hsh) 
        (S_tqi) )

      ; 
      (when (v7c) 
        (S_tqi) )

      ; 
      (when (ksh) 
        (S_uqi) )

      ; 
      (when (y7c) 
        (S_uqi) )

      ; 
      (when (msh) 
        (S_vqi) )

      ; 
      (when (b8c) 
        (S_vqi) )

      ; 
      (when (rsh) 
        (S_xqi) )

      ; 
      (when (g8c) 
        (S_xqi) )

      ; 
      (when (ush) 
        (S_yqi) )

      ; 
      (when (j8c) 
        (S_yqi) )

      ; 
      (when (xsh) 
        (S_zqi) )

      ; 
      (when (l8c) 
        (S_zqi) )

      ; 
      (when (zsh) 
        (S_bsi) )

      ; 
      (when (q8c) 
        (S_bsi) )

    )
  )
  (:action closure_merge_AT_P2-1___7
    :effect 
      ; merge l//xi
      (when  (and (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) )
         (and (not (yrh)) (not (vrh)) (not (trh)) (not (qrh)) (not (lrh)) (not (jrh)) (not (grh)) (not (brh)) (not (ysh)) (not (vsh)) (not (tsh)) (not (qsh)) (not (lsh)) (not (jsh)) (not (gsh)) (not (bsh)) (not (yqh)) (not (vqh)) (not (tqh)) (not (qqh)) (not (lqh)) (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

  )
  (:action closure_merge_AT_P2-1___8
    :effect 
      ; merge l//xi
      (when  (and (S_csi) (S_gsi) (S_hsi) (S_jsi) (S_ksi) (S_lsi) (S_msi) )
         (and (not (yrh)) (not (vrh)) (not (trh)) (not (qrh)) (not (lrh)) (not (jrh)) (not (grh)) (not (brh)) (not (ysh)) (not (vsh)) (not (tsh)) (not (qsh)) (not (lsh)) (not (jsh)) (not (gsh)) (not (bsh)) (not (yqh)) (not (vqh)) (not (tqh)) (not (qqh)) (not (lqh)) (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

  )
  (:action closure_add_sl__AT_P2-1___9
    :effect  (and 
      ; 
      (when (crh) 
        (S_csi) )

      ; 
      (when (q9c) 
        (S_csi) )

      ; 
      (when (hrh) 
        (S_gsi) )

      ; 
      (when (t9c) 
        (S_gsi) )

      ; 
      (when (krh) 
        (S_hsi) )

      ; 
      (when (v9c) 
        (S_hsi) )

      ; 
      (when (mrh) 
        (S_jsi) )

      ; 
      (when (y9c) 
        (S_jsi) )

      ; 
      (when (rrh) 
        (S_ksi) )

      ; 
      (when (b0c) 
        (S_ksi) )

      ; 
      (when (urh) 
        (S_lsi) )

      ; 
      (when (g0c) 
        (S_lsi) )

      ; 
      (when (xrh) 
        (S_msi) )

      ; 
      (when (j0c) 
        (S_msi) )

    )
  )
  (:action closure_merge_AT_P2-2___1
    :effect 
      ; merge l//xi
      (when  (and (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) )
         (and (not (y8g)) (not (v8g)) (not (t8g)) (not (q8g)) (not (l8g)) (not (j8g)) (not (g8g)) (not (b8g)) (not (y7g)) (not (v7g)) (not (t7g)) (not (q7g)) (not (l7g)) (not (j7g)) (not (g7g)) (not (b7g)) (not (y6g)) (not (v6g)) (not (t6g)) (not (q6g)) (not (l6g)) (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

  )
  (:action closure_merge_AT_P2-2___2
    :effect 
      ; merge l//xi
      (when  (and (S_qsi) (S_rsi) (S_tsi) (S_usi) (S_vsi) (S_xsi) (S_ysi) )
         (and (not (y8g)) (not (v8g)) (not (t8g)) (not (q8g)) (not (l8g)) (not (j8g)) (not (g8g)) (not (b8g)) (not (y7g)) (not (v7g)) (not (t7g)) (not (q7g)) (not (l7g)) (not (j7g)) (not (g7g)) (not (b7g)) (not (y6g)) (not (v6g)) (not (t6g)) (not (q6g)) (not (l6g)) (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

  )
  (:action closure_add_sl__AT_P2-2___3
    :effect  (and 
      ; 
      (when (k6g) 
        (S_qsi) )

      ; 
      (when (b6c) 
        (S_qsi) )

      ; 
      (when (m6g) 
        (S_rsi) )

      ; 
      (when (g6c) 
        (S_rsi) )

      ; 
      (when (r6g) 
        (S_tsi) )

      ; 
      (when (j6c) 
        (S_tsi) )

      ; 
      (when (u6g) 
        (S_usi) )

      ; 
      (when (l6c) 
        (S_usi) )

      ; 
      (when (x6g) 
        (S_vsi) )

      ; 
      (when (q6c) 
        (S_vsi) )

      ; 
      (when (z6g) 
        (S_xsi) )

      ; 
      (when (t6c) 
        (S_xsi) )

      ; 
      (when (c7g) 
        (S_ysi) )

      ; 
      (when (v6c) 
        (S_ysi) )

    )
  )
  (:action closure_merge_AT_P2-2___4
    :effect 
      ; merge l//xi
      (when  (and (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) )
         (and (not (y8g)) (not (v8g)) (not (t8g)) (not (q8g)) (not (l8g)) (not (j8g)) (not (g8g)) (not (b8g)) (not (y7g)) (not (v7g)) (not (t7g)) (not (q7g)) (not (l7g)) (not (j7g)) (not (g7g)) (not (b7g)) (not (y6g)) (not (v6g)) (not (t6g)) (not (q6g)) (not (l6g)) (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

  )
  (:action closure_merge_AT_P2-2___5
    :effect 
      ; merge l//xi
      (when  (and (S_zsi) (S_bri) (S_cri) (S_gri) (S_hri) (S_jri) (S_kri) )
         (and (not (y8g)) (not (v8g)) (not (t8g)) (not (q8g)) (not (l8g)) (not (j8g)) (not (g8g)) (not (b8g)) (not (y7g)) (not (v7g)) (not (t7g)) (not (q7g)) (not (l7g)) (not (j7g)) (not (g7g)) (not (b7g)) (not (y6g)) (not (v6g)) (not (t6g)) (not (q6g)) (not (l6g)) (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

  )
  (:action closure_add_sl__AT_P2-2___6
    :effect  (and 
      ; 
      (when (h7g) 
        (S_zsi) )

      ; 
      (when (v7c) 
        (S_zsi) )

      ; 
      (when (k7g) 
        (S_bri) )

      ; 
      (when (y7c) 
        (S_bri) )

      ; 
      (when (m7g) 
        (S_cri) )

      ; 
      (when (b8c) 
        (S_cri) )

      ; 
      (when (r7g) 
        (S_gri) )

      ; 
      (when (g8c) 
        (S_gri) )

      ; 
      (when (u7g) 
        (S_hri) )

      ; 
      (when (j8c) 
        (S_hri) )

      ; 
      (when (x7g) 
        (S_jri) )

      ; 
      (when (l8c) 
        (S_jri) )

      ; 
      (when (z7g) 
        (S_kri) )

      ; 
      (when (q8c) 
        (S_kri) )

    )
  )
  (:action closure_merge_AT_P2-2___7
    :effect 
      ; merge l//xi
      (when  (and (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) )
         (and (not (y8g)) (not (v8g)) (not (t8g)) (not (q8g)) (not (l8g)) (not (j8g)) (not (g8g)) (not (b8g)) (not (y7g)) (not (v7g)) (not (t7g)) (not (q7g)) (not (l7g)) (not (j7g)) (not (g7g)) (not (b7g)) (not (y6g)) (not (v6g)) (not (t6g)) (not (q6g)) (not (l6g)) (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

  )
  (:action closure_merge_AT_P2-2___8
    :effect 
      ; merge l//xi
      (when  (and (S_lri) (S_mri) (S_qri) (S_rri) (S_tri) (S_uri) (S_vri) )
         (and (not (y8g)) (not (v8g)) (not (t8g)) (not (q8g)) (not (l8g)) (not (j8g)) (not (g8g)) (not (b8g)) (not (y7g)) (not (v7g)) (not (t7g)) (not (q7g)) (not (l7g)) (not (j7g)) (not (g7g)) (not (b7g)) (not (y6g)) (not (v6g)) (not (t6g)) (not (q6g)) (not (l6g)) (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

  )
  (:action closure_add_sl__AT_P2-2___9
    :effect  (and 
      ; 
      (when (c8g) 
        (S_lri) )

      ; 
      (when (q9c) 
        (S_lri) )

      ; 
      (when (h8g) 
        (S_mri) )

      ; 
      (when (t9c) 
        (S_mri) )

      ; 
      (when (k8g) 
        (S_qri) )

      ; 
      (when (v9c) 
        (S_qri) )

      ; 
      (when (m8g) 
        (S_rri) )

      ; 
      (when (y9c) 
        (S_rri) )

      ; 
      (when (r8g) 
        (S_tri) )

      ; 
      (when (b0c) 
        (S_tri) )

      ; 
      (when (u8g) 
        (S_uri) )

      ; 
      (when (g0c) 
        (S_uri) )

      ; 
      (when (x8g) 
        (S_vri) )

      ; 
      (when (j0c) 
        (S_vri) )

    )
  )
  (:action closure_merge_AT_P2-3___1
    :effect 
      ; merge l//xi
      (when  (and (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) )
         (and (not (lze)) (not (jze)) (not (gze)) (not (bze)) (not (yye)) (not (vye)) (not (tye)) (not (qye)) (not (lye)) (not (jye)) (not (gye)) (not (bye)) (not (yxe)) (not (vxe)) (not (txe)) (not (qxe)) (not (lxe)) (not (jxe)) (not (gxe)) (not (bxe)) (not (ywe)) (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

  )
  (:action closure_merge_AT_P2-3___2
    :effect 
      ; merge l//xi
      (when  (and (S_xri) (S_yri) (S_zri) (S_bti) (S_cti) (S_gti) (S_hti) )
         (and (not (lze)) (not (jze)) (not (gze)) (not (bze)) (not (yye)) (not (vye)) (not (tye)) (not (qye)) (not (lye)) (not (jye)) (not (gye)) (not (bye)) (not (yxe)) (not (vxe)) (not (txe)) (not (qxe)) (not (lxe)) (not (jxe)) (not (gxe)) (not (bxe)) (not (ywe)) (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

  )
  (:action closure_add_sl__AT_P2-3___3
    :effect  (and 
      ; 
      (when (xwe) 
        (S_xri) )

      ; 
      (when (b6c) 
        (S_xri) )

      ; 
      (when (zwe) 
        (S_yri) )

      ; 
      (when (g6c) 
        (S_yri) )

      ; 
      (when (cxe) 
        (S_zri) )

      ; 
      (when (j6c) 
        (S_zri) )

      ; 
      (when (hxe) 
        (S_bti) )

      ; 
      (when (l6c) 
        (S_bti) )

      ; 
      (when (kxe) 
        (S_cti) )

      ; 
      (when (q6c) 
        (S_cti) )

      ; 
      (when (mxe) 
        (S_gti) )

      ; 
      (when (t6c) 
        (S_gti) )

      ; 
      (when (rxe) 
        (S_hti) )

      ; 
      (when (v6c) 
        (S_hti) )

    )
  )
  (:action closure_merge_AT_P2-3___4
    :effect 
      ; merge l//xi
      (when  (and (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) )
         (and (not (lze)) (not (jze)) (not (gze)) (not (bze)) (not (yye)) (not (vye)) (not (tye)) (not (qye)) (not (lye)) (not (jye)) (not (gye)) (not (bye)) (not (yxe)) (not (vxe)) (not (txe)) (not (qxe)) (not (lxe)) (not (jxe)) (not (gxe)) (not (bxe)) (not (ywe)) (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

  )
  (:action closure_merge_AT_P2-3___5
    :effect 
      ; merge l//xi
      (when  (and (S_jti) (S_kti) (S_lti) (S_mti) (S_qti) (S_rti) (S_tti) )
         (and (not (lze)) (not (jze)) (not (gze)) (not (bze)) (not (yye)) (not (vye)) (not (tye)) (not (qye)) (not (lye)) (not (jye)) (not (gye)) (not (bye)) (not (yxe)) (not (vxe)) (not (txe)) (not (qxe)) (not (lxe)) (not (jxe)) (not (gxe)) (not (bxe)) (not (ywe)) (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

  )
  (:action closure_add_sl__AT_P2-3___6
    :effect  (and 
      ; 
      (when (uxe) 
        (S_jti) )

      ; 
      (when (v7c) 
        (S_jti) )

      ; 
      (when (xxe) 
        (S_kti) )

      ; 
      (when (y7c) 
        (S_kti) )

      ; 
      (when (zxe) 
        (S_lti) )

      ; 
      (when (b8c) 
        (S_lti) )

      ; 
      (when (cye) 
        (S_mti) )

      ; 
      (when (g8c) 
        (S_mti) )

      ; 
      (when (hye) 
        (S_qti) )

      ; 
      (when (j8c) 
        (S_qti) )

      ; 
      (when (kye) 
        (S_rti) )

      ; 
      (when (l8c) 
        (S_rti) )

      ; 
      (when (mye) 
        (S_tti) )

      ; 
      (when (q8c) 
        (S_tti) )

    )
  )
  (:action closure_merge_AT_P2-3___7
    :effect 
      ; merge l//xi
      (when  (and (rye) (uye) (xye) (zye) (cze) (hze) (kze) )
         (and (not (lze)) (not (jze)) (not (gze)) (not (bze)) (not (yye)) (not (vye)) (not (tye)) (not (qye)) (not (lye)) (not (jye)) (not (gye)) (not (bye)) (not (yxe)) (not (vxe)) (not (txe)) (not (qxe)) (not (lxe)) (not (jxe)) (not (gxe)) (not (bxe)) (not (ywe)) (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

  )
  (:action closure_merge_AT_P2-3___8
    :effect 
      ; merge l//xi
      (when  (and (S_uti) (S_vti) (S_xti) (S_yti) (S_zti) (S_bui) (S_cui) )
         (and (not (lze)) (not (jze)) (not (gze)) (not (bze)) (not (yye)) (not (vye)) (not (tye)) (not (qye)) (not (lye)) (not (jye)) (not (gye)) (not (bye)) (not (yxe)) (not (vxe)) (not (txe)) (not (qxe)) (not (lxe)) (not (jxe)) (not (gxe)) (not (bxe)) (not (ywe)) (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

  )
  (:action closure_add_sl__AT_P2-3___9
    :effect  (and 
      ; 
      (when (rye) 
        (S_uti) )

      ; 
      (when (q9c) 
        (S_uti) )

      ; 
      (when (uye) 
        (S_vti) )

      ; 
      (when (t9c) 
        (S_vti) )

      ; 
      (when (xye) 
        (S_xti) )

      ; 
      (when (v9c) 
        (S_xti) )

      ; 
      (when (zye) 
        (S_yti) )

      ; 
      (when (y9c) 
        (S_yti) )

      ; 
      (when (cze) 
        (S_zti) )

      ; 
      (when (b0c) 
        (S_zti) )

      ; 
      (when (hze) 
        (S_bui) )

      ; 
      (when (g0c) 
        (S_bui) )

      ; 
      (when (kze) 
        (S_cui) )

      ; 
      (when (j0c) 
        (S_cui) )

    )
  )
  (:action closure_merge_AT_P2-4___1
    :effect 
      ; merge l//xi
      (when  (and (rde) (ude) (xde) (zde) (cee) (hee) (kee) )
         (and (not (gge)) (not (bge)) (not (yfe)) (not (vfe)) (not (tfe)) (not (qfe)) (not (lfe)) (not (jfe)) (not (gfe)) (not (bfe)) (not (yee)) (not (vee)) (not (tee)) (not (qee)) (not (lee)) (not (jee)) (not (gee)) (not (bee)) (not (yde)) (not (vde)) (not (tde)) (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

  )
  (:action closure_merge_AT_P2-4___2
    :effect 
      ; merge l//xi
      (when  (and (S_gui) (S_hui) (S_jui) (S_kui) (S_lui) (S_mui) (S_qui) )
         (and (not (gge)) (not (bge)) (not (yfe)) (not (vfe)) (not (tfe)) (not (qfe)) (not (lfe)) (not (jfe)) (not (gfe)) (not (bfe)) (not (yee)) (not (vee)) (not (tee)) (not (qee)) (not (lee)) (not (jee)) (not (gee)) (not (bee)) (not (yde)) (not (vde)) (not (tde)) (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

  )
  (:action closure_add_sl__AT_P2-4___3
    :effect  (and 
      ; 
      (when (rde) 
        (S_gui) )

      ; 
      (when (b6c) 
        (S_gui) )

      ; 
      (when (ude) 
        (S_hui) )

      ; 
      (when (g6c) 
        (S_hui) )

      ; 
      (when (xde) 
        (S_jui) )

      ; 
      (when (j6c) 
        (S_jui) )

      ; 
      (when (zde) 
        (S_kui) )

      ; 
      (when (l6c) 
        (S_kui) )

      ; 
      (when (cee) 
        (S_lui) )

      ; 
      (when (q6c) 
        (S_lui) )

      ; 
      (when (hee) 
        (S_mui) )

      ; 
      (when (t6c) 
        (S_mui) )

      ; 
      (when (kee) 
        (S_qui) )

      ; 
      (when (v6c) 
        (S_qui) )

    )
  )
  (:action closure_merge_AT_P2-4___4
    :effect 
      ; merge l//xi
      (when  (and (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) )
         (and (not (gge)) (not (bge)) (not (yfe)) (not (vfe)) (not (tfe)) (not (qfe)) (not (lfe)) (not (jfe)) (not (gfe)) (not (bfe)) (not (yee)) (not (vee)) (not (tee)) (not (qee)) (not (lee)) (not (jee)) (not (gee)) (not (bee)) (not (yde)) (not (vde)) (not (tde)) (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

  )
  (:action closure_merge_AT_P2-4___5
    :effect 
      ; merge l//xi
      (when  (and (S_rui) (S_tui) (S_uui) (S_vui) (S_xui) (S_yui) (S_zui) )
         (and (not (gge)) (not (bge)) (not (yfe)) (not (vfe)) (not (tfe)) (not (qfe)) (not (lfe)) (not (jfe)) (not (gfe)) (not (bfe)) (not (yee)) (not (vee)) (not (tee)) (not (qee)) (not (lee)) (not (jee)) (not (gee)) (not (bee)) (not (yde)) (not (vde)) (not (tde)) (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

  )
  (:action closure_add_sl__AT_P2-4___6
    :effect  (and 
      ; 
      (when (mee) 
        (S_rui) )

      ; 
      (when (v7c) 
        (S_rui) )

      ; 
      (when (ree) 
        (S_tui) )

      ; 
      (when (y7c) 
        (S_tui) )

      ; 
      (when (uee) 
        (S_uui) )

      ; 
      (when (b8c) 
        (S_uui) )

      ; 
      (when (xee) 
        (S_vui) )

      ; 
      (when (g8c) 
        (S_vui) )

      ; 
      (when (zee) 
        (S_xui) )

      ; 
      (when (j8c) 
        (S_xui) )

      ; 
      (when (cfe) 
        (S_yui) )

      ; 
      (when (l8c) 
        (S_yui) )

      ; 
      (when (hfe) 
        (S_zui) )

      ; 
      (when (q8c) 
        (S_zui) )

    )
  )
  (:action closure_merge_AT_P2-4___7
    :effect 
      ; merge l//xi
      (when  (and (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) )
         (and (not (gge)) (not (bge)) (not (yfe)) (not (vfe)) (not (tfe)) (not (qfe)) (not (lfe)) (not (jfe)) (not (gfe)) (not (bfe)) (not (yee)) (not (vee)) (not (tee)) (not (qee)) (not (lee)) (not (jee)) (not (gee)) (not (bee)) (not (yde)) (not (vde)) (not (tde)) (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

  )
  (:action closure_merge_AT_P2-4___8
    :effect 
      ; merge l//xi
      (when  (and (S_bvi) (S_cvi) (S_gvi) (S_hvi) (S_jvi) (S_kvi) (S_lvi) )
         (and (not (gge)) (not (bge)) (not (yfe)) (not (vfe)) (not (tfe)) (not (qfe)) (not (lfe)) (not (jfe)) (not (gfe)) (not (bfe)) (not (yee)) (not (vee)) (not (tee)) (not (qee)) (not (lee)) (not (jee)) (not (gee)) (not (bee)) (not (yde)) (not (vde)) (not (tde)) (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

  )
  (:action closure_add_sl__AT_P2-4___9
    :effect  (and 
      ; 
      (when (kfe) 
        (S_bvi) )

      ; 
      (when (q9c) 
        (S_bvi) )

      ; 
      (when (mfe) 
        (S_cvi) )

      ; 
      (when (t9c) 
        (S_cvi) )

      ; 
      (when (rfe) 
        (S_gvi) )

      ; 
      (when (v9c) 
        (S_gvi) )

      ; 
      (when (ufe) 
        (S_hvi) )

      ; 
      (when (y9c) 
        (S_hvi) )

      ; 
      (when (xfe) 
        (S_jvi) )

      ; 
      (when (b0c) 
        (S_jvi) )

      ; 
      (when (zfe) 
        (S_kvi) )

      ; 
      (when (g0c) 
        (S_kvi) )

      ; 
      (when (cge) 
        (S_lvi) )

      ; 
      (when (j0c) 
        (S_lvi) )

    )
  )
  (:action closure_merge_AT_P2-5___1
    :effect 
      ; merge l//xi
      (when  (and (uje) (xje) (zje) (cke) (hke) (kke) (mke) )
         (and (not (jme)) (not (gme)) (not (bme)) (not (yle)) (not (vle)) (not (tle)) (not (qle)) (not (lle)) (not (jle)) (not (gle)) (not (ble)) (not (yke)) (not (vke)) (not (tke)) (not (qke)) (not (lke)) (not (jke)) (not (gke)) (not (bke)) (not (yje)) (not (vje)) (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

  )
  (:action closure_merge_AT_P2-5___2
    :effect 
      ; merge l//xi
      (when  (and (S_mvi) (S_qvi) (S_rvi) (S_tvi) (S_uvi) (S_vvi) (S_xvi) )
         (and (not (jme)) (not (gme)) (not (bme)) (not (yle)) (not (vle)) (not (tle)) (not (qle)) (not (lle)) (not (jle)) (not (gle)) (not (ble)) (not (yke)) (not (vke)) (not (tke)) (not (qke)) (not (lke)) (not (jke)) (not (gke)) (not (bke)) (not (yje)) (not (vje)) (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

  )
  (:action closure_add_sl__AT_P2-5___3
    :effect  (and 
      ; 
      (when (uje) 
        (S_mvi) )

      ; 
      (when (b6c) 
        (S_mvi) )

      ; 
      (when (xje) 
        (S_qvi) )

      ; 
      (when (g6c) 
        (S_qvi) )

      ; 
      (when (zje) 
        (S_rvi) )

      ; 
      (when (j6c) 
        (S_rvi) )

      ; 
      (when (cke) 
        (S_tvi) )

      ; 
      (when (l6c) 
        (S_tvi) )

      ; 
      (when (hke) 
        (S_uvi) )

      ; 
      (when (q6c) 
        (S_uvi) )

      ; 
      (when (kke) 
        (S_vvi) )

      ; 
      (when (t6c) 
        (S_vvi) )

      ; 
      (when (mke) 
        (S_xvi) )

      ; 
      (when (v6c) 
        (S_xvi) )

    )
  )
  (:action closure_merge_AT_P2-5___4
    :effect 
      ; merge l//xi
      (when  (and (rke) (uke) (xke) (zke) (cle) (hle) (kle) )
         (and (not (jme)) (not (gme)) (not (bme)) (not (yle)) (not (vle)) (not (tle)) (not (qle)) (not (lle)) (not (jle)) (not (gle)) (not (ble)) (not (yke)) (not (vke)) (not (tke)) (not (qke)) (not (lke)) (not (jke)) (not (gke)) (not (bke)) (not (yje)) (not (vje)) (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

  )
  (:action closure_merge_AT_P2-5___5
    :effect 
      ; merge l//xi
      (when  (and (S_yvi) (S_zvi) (S_bwi) (S_cwi) (S_gwi) (S_hwi) (S_jwi) )
         (and (not (jme)) (not (gme)) (not (bme)) (not (yle)) (not (vle)) (not (tle)) (not (qle)) (not (lle)) (not (jle)) (not (gle)) (not (ble)) (not (yke)) (not (vke)) (not (tke)) (not (qke)) (not (lke)) (not (jke)) (not (gke)) (not (bke)) (not (yje)) (not (vje)) (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

  )
  (:action closure_add_sl__AT_P2-5___6
    :effect  (and 
      ; 
      (when (rke) 
        (S_yvi) )

      ; 
      (when (v7c) 
        (S_yvi) )

      ; 
      (when (uke) 
        (S_zvi) )

      ; 
      (when (y7c) 
        (S_zvi) )

      ; 
      (when (xke) 
        (S_bwi) )

      ; 
      (when (b8c) 
        (S_bwi) )

      ; 
      (when (zke) 
        (S_cwi) )

      ; 
      (when (g8c) 
        (S_cwi) )

      ; 
      (when (cle) 
        (S_gwi) )

      ; 
      (when (j8c) 
        (S_gwi) )

      ; 
      (when (hle) 
        (S_hwi) )

      ; 
      (when (l8c) 
        (S_hwi) )

      ; 
      (when (kle) 
        (S_jwi) )

      ; 
      (when (q8c) 
        (S_jwi) )

    )
  )
  (:action closure_merge_AT_P2-5___7
    :effect 
      ; merge l//xi
      (when  (and (mle) (rle) (ule) (xle) (zle) (cme) (hme) )
         (and (not (jme)) (not (gme)) (not (bme)) (not (yle)) (not (vle)) (not (tle)) (not (qle)) (not (lle)) (not (jle)) (not (gle)) (not (ble)) (not (yke)) (not (vke)) (not (tke)) (not (qke)) (not (lke)) (not (jke)) (not (gke)) (not (bke)) (not (yje)) (not (vje)) (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

  )
  (:action closure_merge_AT_P2-5___8
    :effect 
      ; merge l//xi
      (when  (and (S_kwi) (S_lwi) (S_mwi) (S_qwi) (S_rwi) (S_twi) (S_uwi) )
         (and (not (jme)) (not (gme)) (not (bme)) (not (yle)) (not (vle)) (not (tle)) (not (qle)) (not (lle)) (not (jle)) (not (gle)) (not (ble)) (not (yke)) (not (vke)) (not (tke)) (not (qke)) (not (lke)) (not (jke)) (not (gke)) (not (bke)) (not (yje)) (not (vje)) (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

  )
  (:action closure_add_sl__AT_P2-5___9
    :effect  (and 
      ; 
      (when (mle) 
        (S_kwi) )

      ; 
      (when (q9c) 
        (S_kwi) )

      ; 
      (when (rle) 
        (S_lwi) )

      ; 
      (when (t9c) 
        (S_lwi) )

      ; 
      (when (ule) 
        (S_mwi) )

      ; 
      (when (v9c) 
        (S_mwi) )

      ; 
      (when (xle) 
        (S_qwi) )

      ; 
      (when (y9c) 
        (S_qwi) )

      ; 
      (when (zle) 
        (S_rwi) )

      ; 
      (when (b0c) 
        (S_rwi) )

      ; 
      (when (cme) 
        (S_twi) )

      ; 
      (when (g0c) 
        (S_twi) )

      ; 
      (when (hme) 
        (S_uwi) )

      ; 
      (when (j0c) 
        (S_uwi) )

    )
  )
  (:action closure_merge_AT_P2-6___1
    :effect 
      ; merge l//xi
      (when  (and (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) )
         (and (not (lre)) (not (jre)) (not (gre)) (not (bre)) (not (yse)) (not (vse)) (not (tse)) (not (qse)) (not (lse)) (not (jse)) (not (gse)) (not (bse)) (not (yqe)) (not (vqe)) (not (tqe)) (not (qqe)) (not (lqe)) (not (jqe)) (not (gqe)) (not (bqe)) (not (ype)) (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

  )
  (:action closure_merge_AT_P2-6___2
    :effect 
      ; merge l//xi
      (when  (and (S_vwi) (S_xwi) (S_ywi) (S_zwi) (S_bxi) (S_cxi) (S_gxi) )
         (and (not (lre)) (not (jre)) (not (gre)) (not (bre)) (not (yse)) (not (vse)) (not (tse)) (not (qse)) (not (lse)) (not (jse)) (not (gse)) (not (bse)) (not (yqe)) (not (vqe)) (not (tqe)) (not (qqe)) (not (lqe)) (not (jqe)) (not (gqe)) (not (bqe)) (not (ype)) (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

  )
  (:action closure_add_sl__AT_P2-6___3
    :effect  (and 
      ; 
      (when (xpe) 
        (S_vwi) )

      ; 
      (when (b6c) 
        (S_vwi) )

      ; 
      (when (zpe) 
        (S_xwi) )

      ; 
      (when (g6c) 
        (S_xwi) )

      ; 
      (when (cqe) 
        (S_ywi) )

      ; 
      (when (j6c) 
        (S_ywi) )

      ; 
      (when (hqe) 
        (S_zwi) )

      ; 
      (when (l6c) 
        (S_zwi) )

      ; 
      (when (kqe) 
        (S_bxi) )

      ; 
      (when (q6c) 
        (S_bxi) )

      ; 
      (when (mqe) 
        (S_cxi) )

      ; 
      (when (t6c) 
        (S_cxi) )

      ; 
      (when (rqe) 
        (S_gxi) )

      ; 
      (when (v6c) 
        (S_gxi) )

    )
  )
  (:action closure_merge_AT_P2-6___4
    :effect 
      ; merge l//xi
      (when  (and (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) )
         (and (not (lre)) (not (jre)) (not (gre)) (not (bre)) (not (yse)) (not (vse)) (not (tse)) (not (qse)) (not (lse)) (not (jse)) (not (gse)) (not (bse)) (not (yqe)) (not (vqe)) (not (tqe)) (not (qqe)) (not (lqe)) (not (jqe)) (not (gqe)) (not (bqe)) (not (ype)) (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

  )
  (:action closure_merge_AT_P2-6___5
    :effect 
      ; merge l//xi
      (when  (and (S_hxi) (S_jxi) (S_kxi) (S_lxi) (S_mxi) (S_qxi) (S_rxi) )
         (and (not (lre)) (not (jre)) (not (gre)) (not (bre)) (not (yse)) (not (vse)) (not (tse)) (not (qse)) (not (lse)) (not (jse)) (not (gse)) (not (bse)) (not (yqe)) (not (vqe)) (not (tqe)) (not (qqe)) (not (lqe)) (not (jqe)) (not (gqe)) (not (bqe)) (not (ype)) (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

  )
  (:action closure_add_sl__AT_P2-6___6
    :effect  (and 
      ; 
      (when (uqe) 
        (S_hxi) )

      ; 
      (when (v7c) 
        (S_hxi) )

      ; 
      (when (xqe) 
        (S_jxi) )

      ; 
      (when (y7c) 
        (S_jxi) )

      ; 
      (when (zqe) 
        (S_kxi) )

      ; 
      (when (b8c) 
        (S_kxi) )

      ; 
      (when (cse) 
        (S_lxi) )

      ; 
      (when (g8c) 
        (S_lxi) )

      ; 
      (when (hse) 
        (S_mxi) )

      ; 
      (when (j8c) 
        (S_mxi) )

      ; 
      (when (kse) 
        (S_qxi) )

      ; 
      (when (l8c) 
        (S_qxi) )

      ; 
      (when (mse) 
        (S_rxi) )

      ; 
      (when (q8c) 
        (S_rxi) )

    )
  )
  (:action closure_merge_AT_P2-6___7
    :effect 
      ; merge l//xi
      (when  (and (rse) (use) (xse) (zse) (cre) (hre) (kre) )
         (and (not (lre)) (not (jre)) (not (gre)) (not (bre)) (not (yse)) (not (vse)) (not (tse)) (not (qse)) (not (lse)) (not (jse)) (not (gse)) (not (bse)) (not (yqe)) (not (vqe)) (not (tqe)) (not (qqe)) (not (lqe)) (not (jqe)) (not (gqe)) (not (bqe)) (not (ype)) (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

  )
  (:action closure_merge_AT_P2-6___8
    :effect 
      ; merge l//xi
      (when  (and (S_txi) (S_uxi) (S_vxi) (S_xxi) (S_yxi) (S_zxi) (S_byi) )
         (and (not (lre)) (not (jre)) (not (gre)) (not (bre)) (not (yse)) (not (vse)) (not (tse)) (not (qse)) (not (lse)) (not (jse)) (not (gse)) (not (bse)) (not (yqe)) (not (vqe)) (not (tqe)) (not (qqe)) (not (lqe)) (not (jqe)) (not (gqe)) (not (bqe)) (not (ype)) (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

  )
  (:action closure_add_sl__AT_P2-6___9
    :effect  (and 
      ; 
      (when (rse) 
        (S_txi) )

      ; 
      (when (q9c) 
        (S_txi) )

      ; 
      (when (use) 
        (S_uxi) )

      ; 
      (when (t9c) 
        (S_uxi) )

      ; 
      (when (xse) 
        (S_vxi) )

      ; 
      (when (v9c) 
        (S_vxi) )

      ; 
      (when (zse) 
        (S_xxi) )

      ; 
      (when (y9c) 
        (S_xxi) )

      ; 
      (when (cre) 
        (S_yxi) )

      ; 
      (when (b0c) 
        (S_yxi) )

      ; 
      (when (hre) 
        (S_zxi) )

      ; 
      (when (g0c) 
        (S_zxi) )

      ; 
      (when (kre) 
        (S_byi) )

      ; 
      (when (j0c) 
        (S_byi) )

    )
  )
  (:action closure_merge_AT_P2-7___1
    :effect 
      ; merge l//xi
      (when  (and (kte) (mte) (rte) (ute) (xte) (zte) (cue) )
         (and (not (yve)) (not (vve)) (not (tve)) (not (qve)) (not (lve)) (not (jve)) (not (gve)) (not (bve)) (not (yue)) (not (vue)) (not (tue)) (not (que)) (not (lue)) (not (jue)) (not (gue)) (not (bue)) (not (yte)) (not (vte)) (not (tte)) (not (qte)) (not (lte)) (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

  )
  (:action closure_merge_AT_P2-7___2
    :effect 
      ; merge l//xi
      (when  (and (S_cyi) (S_gyi) (S_hyi) (S_jyi) (S_kyi) (S_lyi) (S_myi) )
         (and (not (yve)) (not (vve)) (not (tve)) (not (qve)) (not (lve)) (not (jve)) (not (gve)) (not (bve)) (not (yue)) (not (vue)) (not (tue)) (not (que)) (not (lue)) (not (jue)) (not (gue)) (not (bue)) (not (yte)) (not (vte)) (not (tte)) (not (qte)) (not (lte)) (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

  )
  (:action closure_add_sl__AT_P2-7___3
    :effect  (and 
      ; 
      (when (kte) 
        (S_cyi) )

      ; 
      (when (b6c) 
        (S_cyi) )

      ; 
      (when (mte) 
        (S_gyi) )

      ; 
      (when (g6c) 
        (S_gyi) )

      ; 
      (when (rte) 
        (S_hyi) )

      ; 
      (when (j6c) 
        (S_hyi) )

      ; 
      (when (ute) 
        (S_jyi) )

      ; 
      (when (l6c) 
        (S_jyi) )

      ; 
      (when (xte) 
        (S_kyi) )

      ; 
      (when (q6c) 
        (S_kyi) )

      ; 
      (when (zte) 
        (S_lyi) )

      ; 
      (when (t6c) 
        (S_lyi) )

      ; 
      (when (cue) 
        (S_myi) )

      ; 
      (when (v6c) 
        (S_myi) )

    )
  )
  (:action closure_merge_AT_P2-7___4
    :effect 
      ; merge l//xi
      (when  (and (hue) (kue) (mue) (rue) (uue) (xue) (zue) )
         (and (not (yve)) (not (vve)) (not (tve)) (not (qve)) (not (lve)) (not (jve)) (not (gve)) (not (bve)) (not (yue)) (not (vue)) (not (tue)) (not (que)) (not (lue)) (not (jue)) (not (gue)) (not (bue)) (not (yte)) (not (vte)) (not (tte)) (not (qte)) (not (lte)) (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

  )
  (:action closure_merge_AT_P2-7___5
    :effect 
      ; merge l//xi
      (when  (and (S_qyi) (S_ryi) (S_tyi) (S_uyi) (S_vyi) (S_xyi) (S_yyi) )
         (and (not (yve)) (not (vve)) (not (tve)) (not (qve)) (not (lve)) (not (jve)) (not (gve)) (not (bve)) (not (yue)) (not (vue)) (not (tue)) (not (que)) (not (lue)) (not (jue)) (not (gue)) (not (bue)) (not (yte)) (not (vte)) (not (tte)) (not (qte)) (not (lte)) (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

  )
  (:action closure_add_sl__AT_P2-7___6
    :effect  (and 
      ; 
      (when (hue) 
        (S_qyi) )

      ; 
      (when (v7c) 
        (S_qyi) )

      ; 
      (when (kue) 
        (S_ryi) )

      ; 
      (when (y7c) 
        (S_ryi) )

      ; 
      (when (mue) 
        (S_tyi) )

      ; 
      (when (b8c) 
        (S_tyi) )

      ; 
      (when (rue) 
        (S_uyi) )

      ; 
      (when (g8c) 
        (S_uyi) )

      ; 
      (when (uue) 
        (S_vyi) )

      ; 
      (when (j8c) 
        (S_vyi) )

      ; 
      (when (xue) 
        (S_xyi) )

      ; 
      (when (l8c) 
        (S_xyi) )

      ; 
      (when (zue) 
        (S_yyi) )

      ; 
      (when (q8c) 
        (S_yyi) )

    )
  )
  (:action closure_merge_AT_P2-7___7
    :effect 
      ; merge l//xi
      (when  (and (cve) (hve) (kve) (mve) (rve) (uve) (xve) )
         (and (not (yve)) (not (vve)) (not (tve)) (not (qve)) (not (lve)) (not (jve)) (not (gve)) (not (bve)) (not (yue)) (not (vue)) (not (tue)) (not (que)) (not (lue)) (not (jue)) (not (gue)) (not (bue)) (not (yte)) (not (vte)) (not (tte)) (not (qte)) (not (lte)) (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

  )
  (:action closure_merge_AT_P2-7___8
    :effect 
      ; merge l//xi
      (when  (and (S_zyi) (S_bzi) (S_czi) (S_gzi) (S_hzi) (S_jzi) (S_kzi) )
         (and (not (yve)) (not (vve)) (not (tve)) (not (qve)) (not (lve)) (not (jve)) (not (gve)) (not (bve)) (not (yue)) (not (vue)) (not (tue)) (not (que)) (not (lue)) (not (jue)) (not (gue)) (not (bue)) (not (yte)) (not (vte)) (not (tte)) (not (qte)) (not (lte)) (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

  )
  (:action closure_add_sl__AT_P2-7___9
    :effect  (and 
      ; 
      (when (cve) 
        (S_zyi) )

      ; 
      (when (q9c) 
        (S_zyi) )

      ; 
      (when (hve) 
        (S_bzi) )

      ; 
      (when (t9c) 
        (S_bzi) )

      ; 
      (when (kve) 
        (S_czi) )

      ; 
      (when (v9c) 
        (S_czi) )

      ; 
      (when (mve) 
        (S_gzi) )

      ; 
      (when (y9c) 
        (S_gzi) )

      ; 
      (when (rve) 
        (S_hzi) )

      ; 
      (when (b0c) 
        (S_hzi) )

      ; 
      (when (uve) 
        (S_jzi) )

      ; 
      (when (g0c) 
        (S_jzi) )

      ; 
      (when (xve) 
        (S_kzi) )

      ; 
      (when (j0c) 
        (S_kzi) )

    )
  )
  (:action closure_merge_AT_P3-1___1
    :effect 
      ; merge l//xi
      (when  (and (zrh) (cth) (hth) (kth) (mth) (rth) (uth) )
         (and (not (qvh)) (not (lvh)) (not (jvh)) (not (gvh)) (not (bvh)) (not (yuh)) (not (vuh)) (not (tuh)) (not (quh)) (not (luh)) (not (juh)) (not (guh)) (not (buh)) (not (yth)) (not (vth)) (not (tth)) (not (qth)) (not (lth)) (not (jth)) (not (gth)) (not (bth)) (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

  )
  (:action closure_merge_AT_P3-1___2
    :effect 
      ; merge l//xi
      (when  (and (S_lzi) (S_mzi) (S_qzi) (S_rzi) (S_tzi) (S_uzi) (S_vzi) )
         (and (not (qvh)) (not (lvh)) (not (jvh)) (not (gvh)) (not (bvh)) (not (yuh)) (not (vuh)) (not (tuh)) (not (quh)) (not (luh)) (not (juh)) (not (guh)) (not (buh)) (not (yth)) (not (vth)) (not (tth)) (not (qth)) (not (lth)) (not (jth)) (not (gth)) (not (bth)) (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

  )
  (:action closure_add_sl__AT_P3-1___3
    :effect  (and 
      ; 
      (when (zrh) 
        (S_lzi) )

      ; 
      (when (b6c) 
        (S_lzi) )

      ; 
      (when (cth) 
        (S_mzi) )

      ; 
      (when (g6c) 
        (S_mzi) )

      ; 
      (when (hth) 
        (S_qzi) )

      ; 
      (when (j6c) 
        (S_qzi) )

      ; 
      (when (kth) 
        (S_rzi) )

      ; 
      (when (l6c) 
        (S_rzi) )

      ; 
      (when (mth) 
        (S_tzi) )

      ; 
      (when (q6c) 
        (S_tzi) )

      ; 
      (when (rth) 
        (S_uzi) )

      ; 
      (when (t6c) 
        (S_uzi) )

      ; 
      (when (uth) 
        (S_vzi) )

      ; 
      (when (v6c) 
        (S_vzi) )

    )
  )
  (:action closure_merge_AT_P3-1___4
    :effect 
      ; merge l//xi
      (when  (and (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) )
         (and (not (qvh)) (not (lvh)) (not (jvh)) (not (gvh)) (not (bvh)) (not (yuh)) (not (vuh)) (not (tuh)) (not (quh)) (not (luh)) (not (juh)) (not (guh)) (not (buh)) (not (yth)) (not (vth)) (not (tth)) (not (qth)) (not (lth)) (not (jth)) (not (gth)) (not (bth)) (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

  )
  (:action closure_merge_AT_P3-1___5
    :effect 
      ; merge l//xi
      (when  (and (S_xzi) (S_yzi) (S_zzi) (S_b1i) (S_c1i) (S_g1i) (S_h1i) )
         (and (not (qvh)) (not (lvh)) (not (jvh)) (not (gvh)) (not (bvh)) (not (yuh)) (not (vuh)) (not (tuh)) (not (quh)) (not (luh)) (not (juh)) (not (guh)) (not (buh)) (not (yth)) (not (vth)) (not (tth)) (not (qth)) (not (lth)) (not (jth)) (not (gth)) (not (bth)) (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

  )
  (:action closure_add_sl__AT_P3-1___6
    :effect  (and 
      ; 
      (when (xth) 
        (S_xzi) )

      ; 
      (when (v7c) 
        (S_xzi) )

      ; 
      (when (zth) 
        (S_yzi) )

      ; 
      (when (y7c) 
        (S_yzi) )

      ; 
      (when (cuh) 
        (S_zzi) )

      ; 
      (when (b8c) 
        (S_zzi) )

      ; 
      (when (huh) 
        (S_b1i) )

      ; 
      (when (g8c) 
        (S_b1i) )

      ; 
      (when (kuh) 
        (S_c1i) )

      ; 
      (when (j8c) 
        (S_c1i) )

      ; 
      (when (muh) 
        (S_g1i) )

      ; 
      (when (l8c) 
        (S_g1i) )

      ; 
      (when (ruh) 
        (S_h1i) )

      ; 
      (when (q8c) 
        (S_h1i) )

    )
  )
  (:action closure_merge_AT_P3-1___7
    :effect 
      ; merge l//xi
      (when  (and (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) )
         (and (not (qvh)) (not (lvh)) (not (jvh)) (not (gvh)) (not (bvh)) (not (yuh)) (not (vuh)) (not (tuh)) (not (quh)) (not (luh)) (not (juh)) (not (guh)) (not (buh)) (not (yth)) (not (vth)) (not (tth)) (not (qth)) (not (lth)) (not (jth)) (not (gth)) (not (bth)) (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

  )
  (:action closure_merge_AT_P3-1___8
    :effect 
      ; merge l//xi
      (when  (and (S_j1i) (S_k1i) (S_l1i) (S_m1i) (S_q1i) (S_r1i) (S_t1i) )
         (and (not (qvh)) (not (lvh)) (not (jvh)) (not (gvh)) (not (bvh)) (not (yuh)) (not (vuh)) (not (tuh)) (not (quh)) (not (luh)) (not (juh)) (not (guh)) (not (buh)) (not (yth)) (not (vth)) (not (tth)) (not (qth)) (not (lth)) (not (jth)) (not (gth)) (not (bth)) (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

  )
  (:action closure_add_sl__AT_P3-1___9
    :effect  (and 
      ; 
      (when (uuh) 
        (S_j1i) )

      ; 
      (when (q9c) 
        (S_j1i) )

      ; 
      (when (xuh) 
        (S_k1i) )

      ; 
      (when (t9c) 
        (S_k1i) )

      ; 
      (when (zuh) 
        (S_l1i) )

      ; 
      (when (v9c) 
        (S_l1i) )

      ; 
      (when (cvh) 
        (S_m1i) )

      ; 
      (when (y9c) 
        (S_m1i) )

      ; 
      (when (hvh) 
        (S_q1i) )

      ; 
      (when (b0c) 
        (S_q1i) )

      ; 
      (when (kvh) 
        (S_r1i) )

      ; 
      (when (g0c) 
        (S_r1i) )

      ; 
      (when (mvh) 
        (S_t1i) )

      ; 
      (when (j0c) 
        (S_t1i) )

    )
  )
  (:action closure_merge_AT_P3-2___1
    :effect 
      ; merge l//xi
      (when  (and (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) )
         (and (not (qah)) (not (lah)) (not (jah)) (not (gah)) (not (bah)) (not (y0g)) (not (v0g)) (not (t0g)) (not (q0g)) (not (l0g)) (not (j0g)) (not (g0g)) (not (b0g)) (not (y9g)) (not (v9g)) (not (t9g)) (not (q9g)) (not (l9g)) (not (j9g)) (not (g9g)) (not (b9g)) (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

  )
  (:action closure_merge_AT_P3-2___2
    :effect 
      ; merge l//xi
      (when  (and (S_u1i) (S_v1i) (S_x1i) (S_y1i) (S_z1i) (S_b2i) (S_c2i) )
         (and (not (qah)) (not (lah)) (not (jah)) (not (gah)) (not (bah)) (not (y0g)) (not (v0g)) (not (t0g)) (not (q0g)) (not (l0g)) (not (j0g)) (not (g0g)) (not (b0g)) (not (y9g)) (not (v9g)) (not (t9g)) (not (q9g)) (not (l9g)) (not (j9g)) (not (g9g)) (not (b9g)) (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

  )
  (:action closure_add_sl__AT_P3-2___3
    :effect  (and 
      ; 
      (when (z8g) 
        (S_u1i) )

      ; 
      (when (b6c) 
        (S_u1i) )

      ; 
      (when (c9g) 
        (S_v1i) )

      ; 
      (when (g6c) 
        (S_v1i) )

      ; 
      (when (h9g) 
        (S_x1i) )

      ; 
      (when (j6c) 
        (S_x1i) )

      ; 
      (when (k9g) 
        (S_y1i) )

      ; 
      (when (l6c) 
        (S_y1i) )

      ; 
      (when (m9g) 
        (S_z1i) )

      ; 
      (when (q6c) 
        (S_z1i) )

      ; 
      (when (r9g) 
        (S_b2i) )

      ; 
      (when (t6c) 
        (S_b2i) )

      ; 
      (when (u9g) 
        (S_c2i) )

      ; 
      (when (v6c) 
        (S_c2i) )

    )
  )
  (:action closure_merge_AT_P3-2___4
    :effect 
      ; merge l//xi
      (when  (and (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) )
         (and (not (qah)) (not (lah)) (not (jah)) (not (gah)) (not (bah)) (not (y0g)) (not (v0g)) (not (t0g)) (not (q0g)) (not (l0g)) (not (j0g)) (not (g0g)) (not (b0g)) (not (y9g)) (not (v9g)) (not (t9g)) (not (q9g)) (not (l9g)) (not (j9g)) (not (g9g)) (not (b9g)) (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

  )
  (:action closure_merge_AT_P3-2___5
    :effect 
      ; merge l//xi
      (when  (and (S_g2i) (S_h2i) (S_j2i) (S_k2i) (S_l2i) (S_m2i) (S_q2i) )
         (and (not (qah)) (not (lah)) (not (jah)) (not (gah)) (not (bah)) (not (y0g)) (not (v0g)) (not (t0g)) (not (q0g)) (not (l0g)) (not (j0g)) (not (g0g)) (not (b0g)) (not (y9g)) (not (v9g)) (not (t9g)) (not (q9g)) (not (l9g)) (not (j9g)) (not (g9g)) (not (b9g)) (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

  )
  (:action closure_add_sl__AT_P3-2___6
    :effect  (and 
      ; 
      (when (x9g) 
        (S_g2i) )

      ; 
      (when (v7c) 
        (S_g2i) )

      ; 
      (when (z9g) 
        (S_h2i) )

      ; 
      (when (y7c) 
        (S_h2i) )

      ; 
      (when (c0g) 
        (S_j2i) )

      ; 
      (when (b8c) 
        (S_j2i) )

      ; 
      (when (h0g) 
        (S_k2i) )

      ; 
      (when (g8c) 
        (S_k2i) )

      ; 
      (when (k0g) 
        (S_l2i) )

      ; 
      (when (j8c) 
        (S_l2i) )

      ; 
      (when (m0g) 
        (S_m2i) )

      ; 
      (when (l8c) 
        (S_m2i) )

      ; 
      (when (r0g) 
        (S_q2i) )

      ; 
      (when (q8c) 
        (S_q2i) )

    )
  )
  (:action closure_merge_AT_P3-2___7
    :effect 
      ; merge l//xi
      (when  (and (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) )
         (and (not (qah)) (not (lah)) (not (jah)) (not (gah)) (not (bah)) (not (y0g)) (not (v0g)) (not (t0g)) (not (q0g)) (not (l0g)) (not (j0g)) (not (g0g)) (not (b0g)) (not (y9g)) (not (v9g)) (not (t9g)) (not (q9g)) (not (l9g)) (not (j9g)) (not (g9g)) (not (b9g)) (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

  )
  (:action closure_merge_AT_P3-2___8
    :effect 
      ; merge l//xi
      (when  (and (S_r2i) (S_t2i) (S_u2i) (S_v2i) (S_x2i) (S_y2i) (S_z2i) )
         (and (not (qah)) (not (lah)) (not (jah)) (not (gah)) (not (bah)) (not (y0g)) (not (v0g)) (not (t0g)) (not (q0g)) (not (l0g)) (not (j0g)) (not (g0g)) (not (b0g)) (not (y9g)) (not (v9g)) (not (t9g)) (not (q9g)) (not (l9g)) (not (j9g)) (not (g9g)) (not (b9g)) (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

  )
  (:action closure_add_sl__AT_P3-2___9
    :effect  (and 
      ; 
      (when (u0g) 
        (S_r2i) )

      ; 
      (when (q9c) 
        (S_r2i) )

      ; 
      (when (x0g) 
        (S_t2i) )

      ; 
      (when (t9c) 
        (S_t2i) )

      ; 
      (when (z0g) 
        (S_u2i) )

      ; 
      (when (v9c) 
        (S_u2i) )

      ; 
      (when (cah) 
        (S_v2i) )

      ; 
      (when (y9c) 
        (S_v2i) )

      ; 
      (when (hah) 
        (S_x2i) )

      ; 
      (when (b0c) 
        (S_x2i) )

      ; 
      (when (kah) 
        (S_y2i) )

      ; 
      (when (g0c) 
        (S_y2i) )

      ; 
      (when (mah) 
        (S_z2i) )

      ; 
      (when (j0c) 
        (S_z2i) )

    )
  )
  (:action closure_merge_AT_P3-3___1
    :effect 
      ; merge l//xi
      (when  (and (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) )
         (and (not (qcf)) (not (lcf)) (not (jcf)) (not (gcf)) (not (bcf)) (not (ybf)) (not (vbf)) (not (tbf)) (not (qbf)) (not (lbf)) (not (jbf)) (not (gbf)) (not (bbf)) (not (yaf)) (not (vaf)) (not (taf)) (not (qaf)) (not (laf)) (not (jaf)) (not (gaf)) (not (baf)) (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

  )
  (:action closure_merge_AT_P3-3___2
    :effect 
      ; merge l//xi
      (when  (and (S_b3i) (S_c3i) (S_g3i) (S_h3i) (S_j3i) (S_k3i) (S_l3i) )
         (and (not (qcf)) (not (lcf)) (not (jcf)) (not (gcf)) (not (bcf)) (not (ybf)) (not (vbf)) (not (tbf)) (not (qbf)) (not (lbf)) (not (jbf)) (not (gbf)) (not (bbf)) (not (yaf)) (not (vaf)) (not (taf)) (not (qaf)) (not (laf)) (not (jaf)) (not (gaf)) (not (baf)) (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

  )
  (:action closure_add_sl__AT_P3-3___3
    :effect  (and 
      ; 
      (when (z0e) 
        (S_b3i) )

      ; 
      (when (b6c) 
        (S_b3i) )

      ; 
      (when (caf) 
        (S_c3i) )

      ; 
      (when (g6c) 
        (S_c3i) )

      ; 
      (when (haf) 
        (S_g3i) )

      ; 
      (when (j6c) 
        (S_g3i) )

      ; 
      (when (kaf) 
        (S_h3i) )

      ; 
      (when (l6c) 
        (S_h3i) )

      ; 
      (when (maf) 
        (S_j3i) )

      ; 
      (when (q6c) 
        (S_j3i) )

      ; 
      (when (raf) 
        (S_k3i) )

      ; 
      (when (t6c) 
        (S_k3i) )

      ; 
      (when (uaf) 
        (S_l3i) )

      ; 
      (when (v6c) 
        (S_l3i) )

    )
  )
  (:action closure_merge_AT_P3-3___4
    :effect 
      ; merge l//xi
      (when  (and (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) )
         (and (not (qcf)) (not (lcf)) (not (jcf)) (not (gcf)) (not (bcf)) (not (ybf)) (not (vbf)) (not (tbf)) (not (qbf)) (not (lbf)) (not (jbf)) (not (gbf)) (not (bbf)) (not (yaf)) (not (vaf)) (not (taf)) (not (qaf)) (not (laf)) (not (jaf)) (not (gaf)) (not (baf)) (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

  )
  (:action closure_merge_AT_P3-3___5
    :effect 
      ; merge l//xi
      (when  (and (S_m3i) (S_q3i) (S_r3i) (S_t3i) (S_u3i) (S_v3i) (S_x3i) )
         (and (not (qcf)) (not (lcf)) (not (jcf)) (not (gcf)) (not (bcf)) (not (ybf)) (not (vbf)) (not (tbf)) (not (qbf)) (not (lbf)) (not (jbf)) (not (gbf)) (not (bbf)) (not (yaf)) (not (vaf)) (not (taf)) (not (qaf)) (not (laf)) (not (jaf)) (not (gaf)) (not (baf)) (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

  )
  (:action closure_add_sl__AT_P3-3___6
    :effect  (and 
      ; 
      (when (xaf) 
        (S_m3i) )

      ; 
      (when (v7c) 
        (S_m3i) )

      ; 
      (when (zaf) 
        (S_q3i) )

      ; 
      (when (y7c) 
        (S_q3i) )

      ; 
      (when (cbf) 
        (S_r3i) )

      ; 
      (when (b8c) 
        (S_r3i) )

      ; 
      (when (hbf) 
        (S_t3i) )

      ; 
      (when (g8c) 
        (S_t3i) )

      ; 
      (when (kbf) 
        (S_u3i) )

      ; 
      (when (j8c) 
        (S_u3i) )

      ; 
      (when (mbf) 
        (S_v3i) )

      ; 
      (when (l8c) 
        (S_v3i) )

      ; 
      (when (rbf) 
        (S_x3i) )

      ; 
      (when (q8c) 
        (S_x3i) )

    )
  )
  (:action closure_merge_AT_P3-3___7
    :effect 
      ; merge l//xi
      (when  (and (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) )
         (and (not (qcf)) (not (lcf)) (not (jcf)) (not (gcf)) (not (bcf)) (not (ybf)) (not (vbf)) (not (tbf)) (not (qbf)) (not (lbf)) (not (jbf)) (not (gbf)) (not (bbf)) (not (yaf)) (not (vaf)) (not (taf)) (not (qaf)) (not (laf)) (not (jaf)) (not (gaf)) (not (baf)) (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

  )
  (:action closure_merge_AT_P3-3___8
    :effect 
      ; merge l//xi
      (when  (and (S_y3i) (S_z3i) (S_b4i) (S_c4i) (S_g4i) (S_h4i) (S_j4i) )
         (and (not (qcf)) (not (lcf)) (not (jcf)) (not (gcf)) (not (bcf)) (not (ybf)) (not (vbf)) (not (tbf)) (not (qbf)) (not (lbf)) (not (jbf)) (not (gbf)) (not (bbf)) (not (yaf)) (not (vaf)) (not (taf)) (not (qaf)) (not (laf)) (not (jaf)) (not (gaf)) (not (baf)) (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

  )
  (:action closure_add_sl__AT_P3-3___9
    :effect  (and 
      ; 
      (when (ubf) 
        (S_y3i) )

      ; 
      (when (q9c) 
        (S_y3i) )

      ; 
      (when (xbf) 
        (S_z3i) )

      ; 
      (when (t9c) 
        (S_z3i) )

      ; 
      (when (zbf) 
        (S_b4i) )

      ; 
      (when (v9c) 
        (S_b4i) )

      ; 
      (when (ccf) 
        (S_c4i) )

      ; 
      (when (y9c) 
        (S_c4i) )

      ; 
      (when (hcf) 
        (S_g4i) )

      ; 
      (when (b0c) 
        (S_g4i) )

      ; 
      (when (kcf) 
        (S_h4i) )

      ; 
      (when (g0c) 
        (S_h4i) )

      ; 
      (when (mcf) 
        (S_j4i) )

      ; 
      (when (j0c) 
        (S_j4i) )

    )
  )
  (:action closure_merge_AT_P3-4___1
    :effect 
      ; merge l//xi
      (when  (and (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) )
         (and (not (b3e)) (not (y2e)) (not (v2e)) (not (t2e)) (not (q2e)) (not (l2e)) (not (j2e)) (not (g2e)) (not (b2e)) (not (y1e)) (not (v1e)) (not (t1e)) (not (q1e)) (not (l1e)) (not (j1e)) (not (g1e)) (not (b1e)) (not (yze)) (not (vze)) (not (tze)) (not (qze)) (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

  )
  (:action closure_merge_AT_P3-4___2
    :effect 
      ; merge l//xi
      (when  (and (S_k4i) (S_l4i) (S_m4i) (S_q4i) (S_r4i) (S_t4i) (S_u4i) )
         (and (not (b3e)) (not (y2e)) (not (v2e)) (not (t2e)) (not (q2e)) (not (l2e)) (not (j2e)) (not (g2e)) (not (b2e)) (not (y1e)) (not (v1e)) (not (t1e)) (not (q1e)) (not (l1e)) (not (j1e)) (not (g1e)) (not (b1e)) (not (yze)) (not (vze)) (not (tze)) (not (qze)) (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

  )
  (:action closure_add_sl__AT_P3-4___3
    :effect  (and 
      ; 
      (when (mze) 
        (S_k4i) )

      ; 
      (when (b6c) 
        (S_k4i) )

      ; 
      (when (rze) 
        (S_l4i) )

      ; 
      (when (g6c) 
        (S_l4i) )

      ; 
      (when (uze) 
        (S_m4i) )

      ; 
      (when (j6c) 
        (S_m4i) )

      ; 
      (when (xze) 
        (S_q4i) )

      ; 
      (when (l6c) 
        (S_q4i) )

      ; 
      (when (zze) 
        (S_r4i) )

      ; 
      (when (q6c) 
        (S_r4i) )

      ; 
      (when (c1e) 
        (S_t4i) )

      ; 
      (when (t6c) 
        (S_t4i) )

      ; 
      (when (h1e) 
        (S_u4i) )

      ; 
      (when (v6c) 
        (S_u4i) )

    )
  )
  (:action closure_merge_AT_P3-4___4
    :effect 
      ; merge l//xi
      (when  (and (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) )
         (and (not (b3e)) (not (y2e)) (not (v2e)) (not (t2e)) (not (q2e)) (not (l2e)) (not (j2e)) (not (g2e)) (not (b2e)) (not (y1e)) (not (v1e)) (not (t1e)) (not (q1e)) (not (l1e)) (not (j1e)) (not (g1e)) (not (b1e)) (not (yze)) (not (vze)) (not (tze)) (not (qze)) (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

  )
  (:action closure_merge_AT_P3-4___5
    :effect 
      ; merge l//xi
      (when  (and (S_v4i) (S_x4i) (S_y4i) (S_z4i) (S_b5i) (S_c5i) (S_g5i) )
         (and (not (b3e)) (not (y2e)) (not (v2e)) (not (t2e)) (not (q2e)) (not (l2e)) (not (j2e)) (not (g2e)) (not (b2e)) (not (y1e)) (not (v1e)) (not (t1e)) (not (q1e)) (not (l1e)) (not (j1e)) (not (g1e)) (not (b1e)) (not (yze)) (not (vze)) (not (tze)) (not (qze)) (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

  )
  (:action closure_add_sl__AT_P3-4___6
    :effect  (and 
      ; 
      (when (k1e) 
        (S_v4i) )

      ; 
      (when (v7c) 
        (S_v4i) )

      ; 
      (when (m1e) 
        (S_x4i) )

      ; 
      (when (y7c) 
        (S_x4i) )

      ; 
      (when (r1e) 
        (S_y4i) )

      ; 
      (when (b8c) 
        (S_y4i) )

      ; 
      (when (u1e) 
        (S_z4i) )

      ; 
      (when (g8c) 
        (S_z4i) )

      ; 
      (when (x1e) 
        (S_b5i) )

      ; 
      (when (j8c) 
        (S_b5i) )

      ; 
      (when (z1e) 
        (S_c5i) )

      ; 
      (when (l8c) 
        (S_c5i) )

      ; 
      (when (c2e) 
        (S_g5i) )

      ; 
      (when (q8c) 
        (S_g5i) )

    )
  )
  (:action closure_merge_AT_P3-4___7
    :effect 
      ; merge l//xi
      (when  (and (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) )
         (and (not (b3e)) (not (y2e)) (not (v2e)) (not (t2e)) (not (q2e)) (not (l2e)) (not (j2e)) (not (g2e)) (not (b2e)) (not (y1e)) (not (v1e)) (not (t1e)) (not (q1e)) (not (l1e)) (not (j1e)) (not (g1e)) (not (b1e)) (not (yze)) (not (vze)) (not (tze)) (not (qze)) (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

  )
  (:action closure_merge_AT_P3-4___8
    :effect 
      ; merge l//xi
      (when  (and (S_h5i) (S_j5i) (S_k5i) (S_l5i) (S_m5i) (S_q5i) (S_r5i) )
         (and (not (b3e)) (not (y2e)) (not (v2e)) (not (t2e)) (not (q2e)) (not (l2e)) (not (j2e)) (not (g2e)) (not (b2e)) (not (y1e)) (not (v1e)) (not (t1e)) (not (q1e)) (not (l1e)) (not (j1e)) (not (g1e)) (not (b1e)) (not (yze)) (not (vze)) (not (tze)) (not (qze)) (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

  )
  (:action closure_add_sl__AT_P3-4___9
    :effect  (and 
      ; 
      (when (h2e) 
        (S_h5i) )

      ; 
      (when (q9c) 
        (S_h5i) )

      ; 
      (when (k2e) 
        (S_j5i) )

      ; 
      (when (t9c) 
        (S_j5i) )

      ; 
      (when (m2e) 
        (S_k5i) )

      ; 
      (when (v9c) 
        (S_k5i) )

      ; 
      (when (r2e) 
        (S_l5i) )

      ; 
      (when (y9c) 
        (S_l5i) )

      ; 
      (when (u2e) 
        (S_m5i) )

      ; 
      (when (b0c) 
        (S_m5i) )

      ; 
      (when (x2e) 
        (S_q5i) )

      ; 
      (when (g0c) 
        (S_q5i) )

      ; 
      (when (z2e) 
        (S_r5i) )

      ; 
      (when (j0c) 
        (S_r5i) )

    )
  )
  (:action closure_merge_AT_P3-5___1
    :effect 
      ; merge l//xi
      (when  (and (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) )
         (and (not (t5e)) (not (q5e)) (not (l5e)) (not (j5e)) (not (g5e)) (not (b5e)) (not (y4e)) (not (v4e)) (not (t4e)) (not (q4e)) (not (l4e)) (not (j4e)) (not (g4e)) (not (b4e)) (not (y3e)) (not (v3e)) (not (t3e)) (not (q3e)) (not (l3e)) (not (j3e)) (not (g3e)) (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

  )
  (:action closure_merge_AT_P3-5___2
    :effect 
      ; merge l//xi
      (when  (and (S_t5i) (S_u5i) (S_v5i) (S_x5i) (S_y5i) (S_z5i) (S_b6i) )
         (and (not (t5e)) (not (q5e)) (not (l5e)) (not (j5e)) (not (g5e)) (not (b5e)) (not (y4e)) (not (v4e)) (not (t4e)) (not (q4e)) (not (l4e)) (not (j4e)) (not (g4e)) (not (b4e)) (not (y3e)) (not (v3e)) (not (t3e)) (not (q3e)) (not (l3e)) (not (j3e)) (not (g3e)) (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

  )
  (:action closure_add_sl__AT_P3-5___3
    :effect  (and 
      ; 
      (when (c3e) 
        (S_t5i) )

      ; 
      (when (b6c) 
        (S_t5i) )

      ; 
      (when (h3e) 
        (S_u5i) )

      ; 
      (when (g6c) 
        (S_u5i) )

      ; 
      (when (k3e) 
        (S_v5i) )

      ; 
      (when (j6c) 
        (S_v5i) )

      ; 
      (when (m3e) 
        (S_x5i) )

      ; 
      (when (l6c) 
        (S_x5i) )

      ; 
      (when (r3e) 
        (S_y5i) )

      ; 
      (when (q6c) 
        (S_y5i) )

      ; 
      (when (u3e) 
        (S_z5i) )

      ; 
      (when (t6c) 
        (S_z5i) )

      ; 
      (when (x3e) 
        (S_b6i) )

      ; 
      (when (v6c) 
        (S_b6i) )

    )
  )
  (:action closure_merge_AT_P3-5___4
    :effect 
      ; merge l//xi
      (when  (and (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) )
         (and (not (t5e)) (not (q5e)) (not (l5e)) (not (j5e)) (not (g5e)) (not (b5e)) (not (y4e)) (not (v4e)) (not (t4e)) (not (q4e)) (not (l4e)) (not (j4e)) (not (g4e)) (not (b4e)) (not (y3e)) (not (v3e)) (not (t3e)) (not (q3e)) (not (l3e)) (not (j3e)) (not (g3e)) (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

  )
  (:action closure_merge_AT_P3-5___5
    :effect 
      ; merge l//xi
      (when  (and (S_c6i) (S_g6i) (S_h6i) (S_j6i) (S_k6i) (S_l6i) (S_m6i) )
         (and (not (t5e)) (not (q5e)) (not (l5e)) (not (j5e)) (not (g5e)) (not (b5e)) (not (y4e)) (not (v4e)) (not (t4e)) (not (q4e)) (not (l4e)) (not (j4e)) (not (g4e)) (not (b4e)) (not (y3e)) (not (v3e)) (not (t3e)) (not (q3e)) (not (l3e)) (not (j3e)) (not (g3e)) (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

  )
  (:action closure_add_sl__AT_P3-5___6
    :effect  (and 
      ; 
      (when (z3e) 
        (S_c6i) )

      ; 
      (when (v7c) 
        (S_c6i) )

      ; 
      (when (c4e) 
        (S_g6i) )

      ; 
      (when (y7c) 
        (S_g6i) )

      ; 
      (when (h4e) 
        (S_h6i) )

      ; 
      (when (b8c) 
        (S_h6i) )

      ; 
      (when (k4e) 
        (S_j6i) )

      ; 
      (when (g8c) 
        (S_j6i) )

      ; 
      (when (m4e) 
        (S_k6i) )

      ; 
      (when (j8c) 
        (S_k6i) )

      ; 
      (when (r4e) 
        (S_l6i) )

      ; 
      (when (l8c) 
        (S_l6i) )

      ; 
      (when (u4e) 
        (S_m6i) )

      ; 
      (when (q8c) 
        (S_m6i) )

    )
  )
  (:action closure_merge_AT_P3-5___7
    :effect 
      ; merge l//xi
      (when  (and (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) )
         (and (not (t5e)) (not (q5e)) (not (l5e)) (not (j5e)) (not (g5e)) (not (b5e)) (not (y4e)) (not (v4e)) (not (t4e)) (not (q4e)) (not (l4e)) (not (j4e)) (not (g4e)) (not (b4e)) (not (y3e)) (not (v3e)) (not (t3e)) (not (q3e)) (not (l3e)) (not (j3e)) (not (g3e)) (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

  )
  (:action closure_merge_AT_P3-5___8
    :effect 
      ; merge l//xi
      (when  (and (S_q6i) (S_r6i) (S_t6i) (S_u6i) (S_v6i) (S_x6i) (S_y6i) )
         (and (not (t5e)) (not (q5e)) (not (l5e)) (not (j5e)) (not (g5e)) (not (b5e)) (not (y4e)) (not (v4e)) (not (t4e)) (not (q4e)) (not (l4e)) (not (j4e)) (not (g4e)) (not (b4e)) (not (y3e)) (not (v3e)) (not (t3e)) (not (q3e)) (not (l3e)) (not (j3e)) (not (g3e)) (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

  )
  (:action closure_add_sl__AT_P3-5___9
    :effect  (and 
      ; 
      (when (x4e) 
        (S_q6i) )

      ; 
      (when (q9c) 
        (S_q6i) )

      ; 
      (when (z4e) 
        (S_r6i) )

      ; 
      (when (t9c) 
        (S_r6i) )

      ; 
      (when (c5e) 
        (S_t6i) )

      ; 
      (when (v9c) 
        (S_t6i) )

      ; 
      (when (h5e) 
        (S_u6i) )

      ; 
      (when (y9c) 
        (S_u6i) )

      ; 
      (when (k5e) 
        (S_v6i) )

      ; 
      (when (b0c) 
        (S_v6i) )

      ; 
      (when (m5e) 
        (S_x6i) )

      ; 
      (when (g0c) 
        (S_x6i) )

      ; 
      (when (r5e) 
        (S_y6i) )

      ; 
      (when (j0c) 
        (S_y6i) )

    )
  )
  (:action closure_merge_AT_P3-6___1
    :effect 
      ; merge l//xi
      (when  (and (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) )
         (and (not (j8e)) (not (g8e)) (not (b8e)) (not (y7e)) (not (v7e)) (not (t7e)) (not (q7e)) (not (l7e)) (not (j7e)) (not (g7e)) (not (b7e)) (not (y6e)) (not (v6e)) (not (t6e)) (not (q6e)) (not (l6e)) (not (j6e)) (not (g6e)) (not (b6e)) (not (y5e)) (not (v5e)) (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

  )
  (:action closure_merge_AT_P3-6___2
    :effect 
      ; merge l//xi
      (when  (and (S_z6i) (S_b7i) (S_c7i) (S_g7i) (S_h7i) (S_j7i) (S_k7i) )
         (and (not (j8e)) (not (g8e)) (not (b8e)) (not (y7e)) (not (v7e)) (not (t7e)) (not (q7e)) (not (l7e)) (not (j7e)) (not (g7e)) (not (b7e)) (not (y6e)) (not (v6e)) (not (t6e)) (not (q6e)) (not (l6e)) (not (j6e)) (not (g6e)) (not (b6e)) (not (y5e)) (not (v5e)) (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

  )
  (:action closure_add_sl__AT_P3-6___3
    :effect  (and 
      ; 
      (when (u5e) 
        (S_z6i) )

      ; 
      (when (b6c) 
        (S_z6i) )

      ; 
      (when (x5e) 
        (S_b7i) )

      ; 
      (when (g6c) 
        (S_b7i) )

      ; 
      (when (z5e) 
        (S_c7i) )

      ; 
      (when (j6c) 
        (S_c7i) )

      ; 
      (when (c6e) 
        (S_g7i) )

      ; 
      (when (l6c) 
        (S_g7i) )

      ; 
      (when (h6e) 
        (S_h7i) )

      ; 
      (when (q6c) 
        (S_h7i) )

      ; 
      (when (k6e) 
        (S_j7i) )

      ; 
      (when (t6c) 
        (S_j7i) )

      ; 
      (when (m6e) 
        (S_k7i) )

      ; 
      (when (v6c) 
        (S_k7i) )

    )
  )
  (:action closure_merge_AT_P3-6___4
    :effect 
      ; merge l//xi
      (when  (and (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) )
         (and (not (j8e)) (not (g8e)) (not (b8e)) (not (y7e)) (not (v7e)) (not (t7e)) (not (q7e)) (not (l7e)) (not (j7e)) (not (g7e)) (not (b7e)) (not (y6e)) (not (v6e)) (not (t6e)) (not (q6e)) (not (l6e)) (not (j6e)) (not (g6e)) (not (b6e)) (not (y5e)) (not (v5e)) (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

  )
  (:action closure_merge_AT_P3-6___5
    :effect 
      ; merge l//xi
      (when  (and (S_l7i) (S_m7i) (S_q7i) (S_r7i) (S_t7i) (S_u7i) (S_v7i) )
         (and (not (j8e)) (not (g8e)) (not (b8e)) (not (y7e)) (not (v7e)) (not (t7e)) (not (q7e)) (not (l7e)) (not (j7e)) (not (g7e)) (not (b7e)) (not (y6e)) (not (v6e)) (not (t6e)) (not (q6e)) (not (l6e)) (not (j6e)) (not (g6e)) (not (b6e)) (not (y5e)) (not (v5e)) (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

  )
  (:action closure_add_sl__AT_P3-6___6
    :effect  (and 
      ; 
      (when (r6e) 
        (S_l7i) )

      ; 
      (when (v7c) 
        (S_l7i) )

      ; 
      (when (u6e) 
        (S_m7i) )

      ; 
      (when (y7c) 
        (S_m7i) )

      ; 
      (when (x6e) 
        (S_q7i) )

      ; 
      (when (b8c) 
        (S_q7i) )

      ; 
      (when (z6e) 
        (S_r7i) )

      ; 
      (when (g8c) 
        (S_r7i) )

      ; 
      (when (c7e) 
        (S_t7i) )

      ; 
      (when (j8c) 
        (S_t7i) )

      ; 
      (when (h7e) 
        (S_u7i) )

      ; 
      (when (l8c) 
        (S_u7i) )

      ; 
      (when (k7e) 
        (S_v7i) )

      ; 
      (when (q8c) 
        (S_v7i) )

    )
  )
  (:action closure_merge_AT_P3-6___7
    :effect 
      ; merge l//xi
      (when  (and (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) )
         (and (not (j8e)) (not (g8e)) (not (b8e)) (not (y7e)) (not (v7e)) (not (t7e)) (not (q7e)) (not (l7e)) (not (j7e)) (not (g7e)) (not (b7e)) (not (y6e)) (not (v6e)) (not (t6e)) (not (q6e)) (not (l6e)) (not (j6e)) (not (g6e)) (not (b6e)) (not (y5e)) (not (v5e)) (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

  )
  (:action closure_merge_AT_P3-6___8
    :effect 
      ; merge l//xi
      (when  (and (S_x7i) (S_y7i) (S_z7i) (S_b8i) (S_c8i) (S_g8i) (S_h8i) )
         (and (not (j8e)) (not (g8e)) (not (b8e)) (not (y7e)) (not (v7e)) (not (t7e)) (not (q7e)) (not (l7e)) (not (j7e)) (not (g7e)) (not (b7e)) (not (y6e)) (not (v6e)) (not (t6e)) (not (q6e)) (not (l6e)) (not (j6e)) (not (g6e)) (not (b6e)) (not (y5e)) (not (v5e)) (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

  )
  (:action closure_add_sl__AT_P3-6___9
    :effect  (and 
      ; 
      (when (m7e) 
        (S_x7i) )

      ; 
      (when (q9c) 
        (S_x7i) )

      ; 
      (when (r7e) 
        (S_y7i) )

      ; 
      (when (t9c) 
        (S_y7i) )

      ; 
      (when (u7e) 
        (S_z7i) )

      ; 
      (when (v9c) 
        (S_z7i) )

      ; 
      (when (x7e) 
        (S_b8i) )

      ; 
      (when (y9c) 
        (S_b8i) )

      ; 
      (when (z7e) 
        (S_c8i) )

      ; 
      (when (b0c) 
        (S_c8i) )

      ; 
      (when (c8e) 
        (S_g8i) )

      ; 
      (when (g0c) 
        (S_g8i) )

      ; 
      (when (h8e) 
        (S_h8i) )

      ; 
      (when (j0c) 
        (S_h8i) )

    )
  )
  (:action closure_merge_AT_P3-7___1
    :effect 
      ; merge l//xi
      (when  (and (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) )
         (and (not (y0e)) (not (v0e)) (not (t0e)) (not (q0e)) (not (l0e)) (not (j0e)) (not (g0e)) (not (b0e)) (not (y9e)) (not (v9e)) (not (t9e)) (not (q9e)) (not (l9e)) (not (j9e)) (not (g9e)) (not (b9e)) (not (y8e)) (not (v8e)) (not (t8e)) (not (q8e)) (not (l8e)) (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

  )
  (:action closure_merge_AT_P3-7___2
    :effect 
      ; merge l//xi
      (when  (and (S_j8i) (S_k8i) (S_l8i) (S_m8i) (S_q8i) (S_r8i) (S_t8i) )
         (and (not (y0e)) (not (v0e)) (not (t0e)) (not (q0e)) (not (l0e)) (not (j0e)) (not (g0e)) (not (b0e)) (not (y9e)) (not (v9e)) (not (t9e)) (not (q9e)) (not (l9e)) (not (j9e)) (not (g9e)) (not (b9e)) (not (y8e)) (not (v8e)) (not (t8e)) (not (q8e)) (not (l8e)) (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

  )
  (:action closure_add_sl__AT_P3-7___3
    :effect  (and 
      ; 
      (when (k8e) 
        (S_j8i) )

      ; 
      (when (b6c) 
        (S_j8i) )

      ; 
      (when (m8e) 
        (S_k8i) )

      ; 
      (when (g6c) 
        (S_k8i) )

      ; 
      (when (r8e) 
        (S_l8i) )

      ; 
      (when (j6c) 
        (S_l8i) )

      ; 
      (when (u8e) 
        (S_m8i) )

      ; 
      (when (l6c) 
        (S_m8i) )

      ; 
      (when (x8e) 
        (S_q8i) )

      ; 
      (when (q6c) 
        (S_q8i) )

      ; 
      (when (z8e) 
        (S_r8i) )

      ; 
      (when (t6c) 
        (S_r8i) )

      ; 
      (when (c9e) 
        (S_t8i) )

      ; 
      (when (v6c) 
        (S_t8i) )

    )
  )
  (:action closure_merge_AT_P3-7___4
    :effect 
      ; merge l//xi
      (when  (and (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) )
         (and (not (y0e)) (not (v0e)) (not (t0e)) (not (q0e)) (not (l0e)) (not (j0e)) (not (g0e)) (not (b0e)) (not (y9e)) (not (v9e)) (not (t9e)) (not (q9e)) (not (l9e)) (not (j9e)) (not (g9e)) (not (b9e)) (not (y8e)) (not (v8e)) (not (t8e)) (not (q8e)) (not (l8e)) (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

  )
  (:action closure_merge_AT_P3-7___5
    :effect 
      ; merge l//xi
      (when  (and (S_u8i) (S_v8i) (S_x8i) (S_y8i) (S_z8i) (S_b9i) (S_c9i) )
         (and (not (y0e)) (not (v0e)) (not (t0e)) (not (q0e)) (not (l0e)) (not (j0e)) (not (g0e)) (not (b0e)) (not (y9e)) (not (v9e)) (not (t9e)) (not (q9e)) (not (l9e)) (not (j9e)) (not (g9e)) (not (b9e)) (not (y8e)) (not (v8e)) (not (t8e)) (not (q8e)) (not (l8e)) (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

  )
  (:action closure_add_sl__AT_P3-7___6
    :effect  (and 
      ; 
      (when (h9e) 
        (S_u8i) )

      ; 
      (when (v7c) 
        (S_u8i) )

      ; 
      (when (k9e) 
        (S_v8i) )

      ; 
      (when (y7c) 
        (S_v8i) )

      ; 
      (when (m9e) 
        (S_x8i) )

      ; 
      (when (b8c) 
        (S_x8i) )

      ; 
      (when (r9e) 
        (S_y8i) )

      ; 
      (when (g8c) 
        (S_y8i) )

      ; 
      (when (u9e) 
        (S_z8i) )

      ; 
      (when (j8c) 
        (S_z8i) )

      ; 
      (when (x9e) 
        (S_b9i) )

      ; 
      (when (l8c) 
        (S_b9i) )

      ; 
      (when (z9e) 
        (S_c9i) )

      ; 
      (when (q8c) 
        (S_c9i) )

    )
  )
  (:action closure_merge_AT_P3-7___7
    :effect 
      ; merge l//xi
      (when  (and (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) )
         (and (not (y0e)) (not (v0e)) (not (t0e)) (not (q0e)) (not (l0e)) (not (j0e)) (not (g0e)) (not (b0e)) (not (y9e)) (not (v9e)) (not (t9e)) (not (q9e)) (not (l9e)) (not (j9e)) (not (g9e)) (not (b9e)) (not (y8e)) (not (v8e)) (not (t8e)) (not (q8e)) (not (l8e)) (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

  )
  (:action closure_merge_AT_P3-7___8
    :effect 
      ; merge l//xi
      (when  (and (S_g9i) (S_h9i) (S_j9i) (S_k9i) (S_l9i) (S_m9i) (S_q9i) )
         (and (not (y0e)) (not (v0e)) (not (t0e)) (not (q0e)) (not (l0e)) (not (j0e)) (not (g0e)) (not (b0e)) (not (y9e)) (not (v9e)) (not (t9e)) (not (q9e)) (not (l9e)) (not (j9e)) (not (g9e)) (not (b9e)) (not (y8e)) (not (v8e)) (not (t8e)) (not (q8e)) (not (l8e)) (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

  )
  (:action closure_add_sl__AT_P3-7___9
    :effect  (and 
      ; 
      (when (c0e) 
        (S_g9i) )

      ; 
      (when (q9c) 
        (S_g9i) )

      ; 
      (when (h0e) 
        (S_h9i) )

      ; 
      (when (t9c) 
        (S_h9i) )

      ; 
      (when (k0e) 
        (S_j9i) )

      ; 
      (when (v9c) 
        (S_j9i) )

      ; 
      (when (m0e) 
        (S_k9i) )

      ; 
      (when (y9c) 
        (S_k9i) )

      ; 
      (when (r0e) 
        (S_l9i) )

      ; 
      (when (b0c) 
        (S_l9i) )

      ; 
      (when (u0e) 
        (S_m9i) )

      ; 
      (when (g0c) 
        (S_m9i) )

      ; 
      (when (x0e) 
        (S_q9i) )

      ; 
      (when (j0c) 
        (S_q9i) )

    )
  )
  (:action closure_merge_AT_P4-1___1
    :effect 
      ; merge l//xi
      (when  (and (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) )
         (and (not (bzh)) (not (yyh)) (not (vyh)) (not (tyh)) (not (qyh)) (not (lyh)) (not (jyh)) (not (gyh)) (not (byh)) (not (yxh)) (not (vxh)) (not (txh)) (not (qxh)) (not (lxh)) (not (jxh)) (not (gxh)) (not (bxh)) (not (ywh)) (not (vwh)) (not (twh)) (not (qwh)) (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

  )
  (:action closure_merge_AT_P4-1___2
    :effect 
      ; merge l//xi
      (when  (and (S_r9i) (S_t9i) (S_u9i) (S_v9i) (S_x9i) (S_y9i) (S_z9i) )
         (and (not (bzh)) (not (yyh)) (not (vyh)) (not (tyh)) (not (qyh)) (not (lyh)) (not (jyh)) (not (gyh)) (not (byh)) (not (yxh)) (not (vxh)) (not (txh)) (not (qxh)) (not (lxh)) (not (jxh)) (not (gxh)) (not (bxh)) (not (ywh)) (not (vwh)) (not (twh)) (not (qwh)) (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

  )
  (:action closure_add_sl__AT_P4-1___3
    :effect  (and 
      ; 
      (when (mwh) 
        (S_r9i) )

      ; 
      (when (b6c) 
        (S_r9i) )

      ; 
      (when (rwh) 
        (S_t9i) )

      ; 
      (when (g6c) 
        (S_t9i) )

      ; 
      (when (uwh) 
        (S_u9i) )

      ; 
      (when (j6c) 
        (S_u9i) )

      ; 
      (when (xwh) 
        (S_v9i) )

      ; 
      (when (l6c) 
        (S_v9i) )

      ; 
      (when (zwh) 
        (S_x9i) )

      ; 
      (when (q6c) 
        (S_x9i) )

      ; 
      (when (cxh) 
        (S_y9i) )

      ; 
      (when (t6c) 
        (S_y9i) )

      ; 
      (when (hxh) 
        (S_z9i) )

      ; 
      (when (v6c) 
        (S_z9i) )

    )
  )
  (:action closure_merge_AT_P4-1___4
    :effect 
      ; merge l//xi
      (when  (and (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) )
         (and (not (bzh)) (not (yyh)) (not (vyh)) (not (tyh)) (not (qyh)) (not (lyh)) (not (jyh)) (not (gyh)) (not (byh)) (not (yxh)) (not (vxh)) (not (txh)) (not (qxh)) (not (lxh)) (not (jxh)) (not (gxh)) (not (bxh)) (not (ywh)) (not (vwh)) (not (twh)) (not (qwh)) (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

  )
  (:action closure_merge_AT_P4-1___5
    :effect 
      ; merge l//xi
      (when  (and (S_b0i) (S_c0i) (S_g0i) (S_h0i) (S_j0i) (S_k0i) (S_l0i) )
         (and (not (bzh)) (not (yyh)) (not (vyh)) (not (tyh)) (not (qyh)) (not (lyh)) (not (jyh)) (not (gyh)) (not (byh)) (not (yxh)) (not (vxh)) (not (txh)) (not (qxh)) (not (lxh)) (not (jxh)) (not (gxh)) (not (bxh)) (not (ywh)) (not (vwh)) (not (twh)) (not (qwh)) (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

  )
  (:action closure_add_sl__AT_P4-1___6
    :effect  (and 
      ; 
      (when (kxh) 
        (S_b0i) )

      ; 
      (when (v7c) 
        (S_b0i) )

      ; 
      (when (mxh) 
        (S_c0i) )

      ; 
      (when (y7c) 
        (S_c0i) )

      ; 
      (when (rxh) 
        (S_g0i) )

      ; 
      (when (b8c) 
        (S_g0i) )

      ; 
      (when (uxh) 
        (S_h0i) )

      ; 
      (when (g8c) 
        (S_h0i) )

      ; 
      (when (xxh) 
        (S_j0i) )

      ; 
      (when (j8c) 
        (S_j0i) )

      ; 
      (when (zxh) 
        (S_k0i) )

      ; 
      (when (l8c) 
        (S_k0i) )

      ; 
      (when (cyh) 
        (S_l0i) )

      ; 
      (when (q8c) 
        (S_l0i) )

    )
  )
  (:action closure_merge_AT_P4-1___7
    :effect 
      ; merge l//xi
      (when  (and (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) )
         (and (not (bzh)) (not (yyh)) (not (vyh)) (not (tyh)) (not (qyh)) (not (lyh)) (not (jyh)) (not (gyh)) (not (byh)) (not (yxh)) (not (vxh)) (not (txh)) (not (qxh)) (not (lxh)) (not (jxh)) (not (gxh)) (not (bxh)) (not (ywh)) (not (vwh)) (not (twh)) (not (qwh)) (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

  )
  (:action closure_merge_AT_P4-1___8
    :effect 
      ; merge l//xi
      (when  (and (S_m0i) (S_q0i) (S_r0i) (S_t0i) (S_u0i) (S_v0i) (S_x0i) )
         (and (not (bzh)) (not (yyh)) (not (vyh)) (not (tyh)) (not (qyh)) (not (lyh)) (not (jyh)) (not (gyh)) (not (byh)) (not (yxh)) (not (vxh)) (not (txh)) (not (qxh)) (not (lxh)) (not (jxh)) (not (gxh)) (not (bxh)) (not (ywh)) (not (vwh)) (not (twh)) (not (qwh)) (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

  )
  (:action closure_add_sl__AT_P4-1___9
    :effect  (and 
      ; 
      (when (hyh) 
        (S_m0i) )

      ; 
      (when (q9c) 
        (S_m0i) )

      ; 
      (when (kyh) 
        (S_q0i) )

      ; 
      (when (t9c) 
        (S_q0i) )

      ; 
      (when (myh) 
        (S_r0i) )

      ; 
      (when (v9c) 
        (S_r0i) )

      ; 
      (when (ryh) 
        (S_t0i) )

      ; 
      (when (y9c) 
        (S_t0i) )

      ; 
      (when (uyh) 
        (S_u0i) )

      ; 
      (when (b0c) 
        (S_u0i) )

      ; 
      (when (xyh) 
        (S_v0i) )

      ; 
      (when (g0c) 
        (S_v0i) )

      ; 
      (when (zyh) 
        (S_x0i) )

      ; 
      (when (j0c) 
        (S_x0i) )

    )
  )
  (:action closure_merge_AT_P4-2___1
    :effect 
      ; merge l//xi
      (when  (and (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) )
         (and (not (beh)) (not (ydh)) (not (vdh)) (not (tdh)) (not (qdh)) (not (ldh)) (not (jdh)) (not (gdh)) (not (bdh)) (not (ych)) (not (vch)) (not (tch)) (not (qch)) (not (lch)) (not (jch)) (not (gch)) (not (bch)) (not (ybh)) (not (vbh)) (not (tbh)) (not (qbh)) (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

  )
  (:action closure_merge_AT_P4-2___2
    :effect 
      ; merge l//xi
      (when  (and (S_y0i) (S_z0i) (S_baj) (S_caj) (S_gaj) (S_haj) (S_jaj) )
         (and (not (beh)) (not (ydh)) (not (vdh)) (not (tdh)) (not (qdh)) (not (ldh)) (not (jdh)) (not (gdh)) (not (bdh)) (not (ych)) (not (vch)) (not (tch)) (not (qch)) (not (lch)) (not (jch)) (not (gch)) (not (bch)) (not (ybh)) (not (vbh)) (not (tbh)) (not (qbh)) (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

  )
  (:action closure_add_sl__AT_P4-2___3
    :effect  (and 
      ; 
      (when (mbh) 
        (S_y0i) )

      ; 
      (when (b6c) 
        (S_y0i) )

      ; 
      (when (rbh) 
        (S_z0i) )

      ; 
      (when (g6c) 
        (S_z0i) )

      ; 
      (when (ubh) 
        (S_baj) )

      ; 
      (when (j6c) 
        (S_baj) )

      ; 
      (when (xbh) 
        (S_caj) )

      ; 
      (when (l6c) 
        (S_caj) )

      ; 
      (when (zbh) 
        (S_gaj) )

      ; 
      (when (q6c) 
        (S_gaj) )

      ; 
      (when (cch) 
        (S_haj) )

      ; 
      (when (t6c) 
        (S_haj) )

      ; 
      (when (hch) 
        (S_jaj) )

      ; 
      (when (v6c) 
        (S_jaj) )

    )
  )
  (:action closure_merge_AT_P4-2___4
    :effect 
      ; merge l//xi
      (when  (and (kch) (mch) (rch) (uch) (xch) (zch) (cdh) )
         (and (not (beh)) (not (ydh)) (not (vdh)) (not (tdh)) (not (qdh)) (not (ldh)) (not (jdh)) (not (gdh)) (not (bdh)) (not (ych)) (not (vch)) (not (tch)) (not (qch)) (not (lch)) (not (jch)) (not (gch)) (not (bch)) (not (ybh)) (not (vbh)) (not (tbh)) (not (qbh)) (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

  )
  (:action closure_merge_AT_P4-2___5
    :effect 
      ; merge l//xi
      (when  (and (S_kaj) (S_laj) (S_maj) (S_qaj) (S_raj) (S_taj) (S_uaj) )
         (and (not (beh)) (not (ydh)) (not (vdh)) (not (tdh)) (not (qdh)) (not (ldh)) (not (jdh)) (not (gdh)) (not (bdh)) (not (ych)) (not (vch)) (not (tch)) (not (qch)) (not (lch)) (not (jch)) (not (gch)) (not (bch)) (not (ybh)) (not (vbh)) (not (tbh)) (not (qbh)) (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

  )
  (:action closure_add_sl__AT_P4-2___6
    :effect  (and 
      ; 
      (when (kch) 
        (S_kaj) )

      ; 
      (when (v7c) 
        (S_kaj) )

      ; 
      (when (mch) 
        (S_laj) )

      ; 
      (when (y7c) 
        (S_laj) )

      ; 
      (when (rch) 
        (S_maj) )

      ; 
      (when (b8c) 
        (S_maj) )

      ; 
      (when (uch) 
        (S_qaj) )

      ; 
      (when (g8c) 
        (S_qaj) )

      ; 
      (when (xch) 
        (S_raj) )

      ; 
      (when (j8c) 
        (S_raj) )

      ; 
      (when (zch) 
        (S_taj) )

      ; 
      (when (l8c) 
        (S_taj) )

      ; 
      (when (cdh) 
        (S_uaj) )

      ; 
      (when (q8c) 
        (S_uaj) )

    )
  )
  (:action closure_merge_AT_P4-2___7
    :effect 
      ; merge l//xi
      (when  (and (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) )
         (and (not (beh)) (not (ydh)) (not (vdh)) (not (tdh)) (not (qdh)) (not (ldh)) (not (jdh)) (not (gdh)) (not (bdh)) (not (ych)) (not (vch)) (not (tch)) (not (qch)) (not (lch)) (not (jch)) (not (gch)) (not (bch)) (not (ybh)) (not (vbh)) (not (tbh)) (not (qbh)) (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

  )
  (:action closure_merge_AT_P4-2___8
    :effect 
      ; merge l//xi
      (when  (and (S_vaj) (S_xaj) (S_yaj) (S_zaj) (S_bbj) (S_cbj) (S_gbj) )
         (and (not (beh)) (not (ydh)) (not (vdh)) (not (tdh)) (not (qdh)) (not (ldh)) (not (jdh)) (not (gdh)) (not (bdh)) (not (ych)) (not (vch)) (not (tch)) (not (qch)) (not (lch)) (not (jch)) (not (gch)) (not (bch)) (not (ybh)) (not (vbh)) (not (tbh)) (not (qbh)) (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

  )
  (:action closure_add_sl__AT_P4-2___9
    :effect  (and 
      ; 
      (when (hdh) 
        (S_vaj) )

      ; 
      (when (q9c) 
        (S_vaj) )

      ; 
      (when (kdh) 
        (S_xaj) )

      ; 
      (when (t9c) 
        (S_xaj) )

      ; 
      (when (mdh) 
        (S_yaj) )

      ; 
      (when (v9c) 
        (S_yaj) )

      ; 
      (when (rdh) 
        (S_zaj) )

      ; 
      (when (y9c) 
        (S_zaj) )

      ; 
      (when (udh) 
        (S_bbj) )

      ; 
      (when (b0c) 
        (S_bbj) )

      ; 
      (when (xdh) 
        (S_cbj) )

      ; 
      (when (g0c) 
        (S_cbj) )

      ; 
      (when (zdh) 
        (S_gbj) )

      ; 
      (when (j0c) 
        (S_gbj) )

    )
  )
  (:action closure_merge_AT_P4-3___1
    :effect 
      ; merge l//xi
      (when  (and (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) )
         (and (not (buf)) (not (ytf)) (not (vtf)) (not (ttf)) (not (qtf)) (not (ltf)) (not (jtf)) (not (gtf)) (not (btf)) (not (yrf)) (not (vrf)) (not (trf)) (not (qrf)) (not (lrf)) (not (jrf)) (not (grf)) (not (brf)) (not (ysf)) (not (vsf)) (not (tsf)) (not (qsf)) (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

  )
  (:action closure_merge_AT_P4-3___2
    :effect 
      ; merge l//xi
      (when  (and (S_hbj) (S_jbj) (S_kbj) (S_lbj) (S_mbj) (S_qbj) (S_rbj) )
         (and (not (buf)) (not (ytf)) (not (vtf)) (not (ttf)) (not (qtf)) (not (ltf)) (not (jtf)) (not (gtf)) (not (btf)) (not (yrf)) (not (vrf)) (not (trf)) (not (qrf)) (not (lrf)) (not (jrf)) (not (grf)) (not (brf)) (not (ysf)) (not (vsf)) (not (tsf)) (not (qsf)) (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

  )
  (:action closure_add_sl__AT_P4-3___3
    :effect  (and 
      ; 
      (when (msf) 
        (S_hbj) )

      ; 
      (when (b6c) 
        (S_hbj) )

      ; 
      (when (rsf) 
        (S_jbj) )

      ; 
      (when (g6c) 
        (S_jbj) )

      ; 
      (when (usf) 
        (S_kbj) )

      ; 
      (when (j6c) 
        (S_kbj) )

      ; 
      (when (xsf) 
        (S_lbj) )

      ; 
      (when (l6c) 
        (S_lbj) )

      ; 
      (when (zsf) 
        (S_mbj) )

      ; 
      (when (q6c) 
        (S_mbj) )

      ; 
      (when (crf) 
        (S_qbj) )

      ; 
      (when (t6c) 
        (S_qbj) )

      ; 
      (when (hrf) 
        (S_rbj) )

      ; 
      (when (v6c) 
        (S_rbj) )

    )
  )
  (:action closure_merge_AT_P4-3___4
    :effect 
      ; merge l//xi
      (when  (and (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) )
         (and (not (buf)) (not (ytf)) (not (vtf)) (not (ttf)) (not (qtf)) (not (ltf)) (not (jtf)) (not (gtf)) (not (btf)) (not (yrf)) (not (vrf)) (not (trf)) (not (qrf)) (not (lrf)) (not (jrf)) (not (grf)) (not (brf)) (not (ysf)) (not (vsf)) (not (tsf)) (not (qsf)) (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

  )
  (:action closure_merge_AT_P4-3___5
    :effect 
      ; merge l//xi
      (when  (and (S_tbj) (S_ubj) (S_vbj) (S_xbj) (S_ybj) (S_zbj) (S_bcj) )
         (and (not (buf)) (not (ytf)) (not (vtf)) (not (ttf)) (not (qtf)) (not (ltf)) (not (jtf)) (not (gtf)) (not (btf)) (not (yrf)) (not (vrf)) (not (trf)) (not (qrf)) (not (lrf)) (not (jrf)) (not (grf)) (not (brf)) (not (ysf)) (not (vsf)) (not (tsf)) (not (qsf)) (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

  )
  (:action closure_add_sl__AT_P4-3___6
    :effect  (and 
      ; 
      (when (krf) 
        (S_tbj) )

      ; 
      (when (v7c) 
        (S_tbj) )

      ; 
      (when (mrf) 
        (S_ubj) )

      ; 
      (when (y7c) 
        (S_ubj) )

      ; 
      (when (rrf) 
        (S_vbj) )

      ; 
      (when (b8c) 
        (S_vbj) )

      ; 
      (when (urf) 
        (S_xbj) )

      ; 
      (when (g8c) 
        (S_xbj) )

      ; 
      (when (xrf) 
        (S_ybj) )

      ; 
      (when (j8c) 
        (S_ybj) )

      ; 
      (when (zrf) 
        (S_zbj) )

      ; 
      (when (l8c) 
        (S_zbj) )

      ; 
      (when (ctf) 
        (S_bcj) )

      ; 
      (when (q8c) 
        (S_bcj) )

    )
  )
  (:action closure_merge_AT_P4-3___7
    :effect 
      ; merge l//xi
      (when  (and (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) )
         (and (not (buf)) (not (ytf)) (not (vtf)) (not (ttf)) (not (qtf)) (not (ltf)) (not (jtf)) (not (gtf)) (not (btf)) (not (yrf)) (not (vrf)) (not (trf)) (not (qrf)) (not (lrf)) (not (jrf)) (not (grf)) (not (brf)) (not (ysf)) (not (vsf)) (not (tsf)) (not (qsf)) (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

  )
  (:action closure_merge_AT_P4-3___8
    :effect 
      ; merge l//xi
      (when  (and (S_ccj) (S_gcj) (S_hcj) (S_jcj) (S_kcj) (S_lcj) (S_mcj) )
         (and (not (buf)) (not (ytf)) (not (vtf)) (not (ttf)) (not (qtf)) (not (ltf)) (not (jtf)) (not (gtf)) (not (btf)) (not (yrf)) (not (vrf)) (not (trf)) (not (qrf)) (not (lrf)) (not (jrf)) (not (grf)) (not (brf)) (not (ysf)) (not (vsf)) (not (tsf)) (not (qsf)) (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

  )
  (:action closure_add_sl__AT_P4-3___9
    :effect  (and 
      ; 
      (when (htf) 
        (S_ccj) )

      ; 
      (when (q9c) 
        (S_ccj) )

      ; 
      (when (ktf) 
        (S_gcj) )

      ; 
      (when (t9c) 
        (S_gcj) )

      ; 
      (when (mtf) 
        (S_hcj) )

      ; 
      (when (v9c) 
        (S_hcj) )

      ; 
      (when (rtf) 
        (S_jcj) )

      ; 
      (when (y9c) 
        (S_jcj) )

      ; 
      (when (utf) 
        (S_kcj) )

      ; 
      (when (b0c) 
        (S_kcj) )

      ; 
      (when (xtf) 
        (S_lcj) )

      ; 
      (when (g0c) 
        (S_lcj) )

      ; 
      (when (ztf) 
        (S_mcj) )

      ; 
      (when (j0c) 
        (S_mcj) )

    )
  )
  (:action closure_merge_AT_P4-4___1
    :effect 
      ; merge l//xi
      (when  (and (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) )
         (and (not (bgf)) (not (yff)) (not (vff)) (not (tff)) (not (qff)) (not (lff)) (not (jff)) (not (gff)) (not (bff)) (not (yef)) (not (vef)) (not (tef)) (not (qef)) (not (lef)) (not (jef)) (not (gef)) (not (bef)) (not (ydf)) (not (vdf)) (not (tdf)) (not (qdf)) (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

  )
  (:action closure_merge_AT_P4-4___2
    :effect 
      ; merge l//xi
      (when  (and (S_qcj) (S_rcj) (S_tcj) (S_ucj) (S_vcj) (S_xcj) (S_ycj) )
         (and (not (bgf)) (not (yff)) (not (vff)) (not (tff)) (not (qff)) (not (lff)) (not (jff)) (not (gff)) (not (bff)) (not (yef)) (not (vef)) (not (tef)) (not (qef)) (not (lef)) (not (jef)) (not (gef)) (not (bef)) (not (ydf)) (not (vdf)) (not (tdf)) (not (qdf)) (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

  )
  (:action closure_add_sl__AT_P4-4___3
    :effect  (and 
      ; 
      (when (mdf) 
        (S_qcj) )

      ; 
      (when (b6c) 
        (S_qcj) )

      ; 
      (when (rdf) 
        (S_rcj) )

      ; 
      (when (g6c) 
        (S_rcj) )

      ; 
      (when (udf) 
        (S_tcj) )

      ; 
      (when (j6c) 
        (S_tcj) )

      ; 
      (when (xdf) 
        (S_ucj) )

      ; 
      (when (l6c) 
        (S_ucj) )

      ; 
      (when (zdf) 
        (S_vcj) )

      ; 
      (when (q6c) 
        (S_vcj) )

      ; 
      (when (cef) 
        (S_xcj) )

      ; 
      (when (t6c) 
        (S_xcj) )

      ; 
      (when (hef) 
        (S_ycj) )

      ; 
      (when (v6c) 
        (S_ycj) )

    )
  )
  (:action closure_merge_AT_P4-4___4
    :effect 
      ; merge l//xi
      (when  (and (kef) (mef) (ref) (uef) (xef) (zef) (cff) )
         (and (not (bgf)) (not (yff)) (not (vff)) (not (tff)) (not (qff)) (not (lff)) (not (jff)) (not (gff)) (not (bff)) (not (yef)) (not (vef)) (not (tef)) (not (qef)) (not (lef)) (not (jef)) (not (gef)) (not (bef)) (not (ydf)) (not (vdf)) (not (tdf)) (not (qdf)) (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

  )
  (:action closure_merge_AT_P4-4___5
    :effect 
      ; merge l//xi
      (when  (and (S_zcj) (S_bdj) (S_cdj) (S_gdj) (S_hdj) (S_jdj) (S_kdj) )
         (and (not (bgf)) (not (yff)) (not (vff)) (not (tff)) (not (qff)) (not (lff)) (not (jff)) (not (gff)) (not (bff)) (not (yef)) (not (vef)) (not (tef)) (not (qef)) (not (lef)) (not (jef)) (not (gef)) (not (bef)) (not (ydf)) (not (vdf)) (not (tdf)) (not (qdf)) (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

  )
  (:action closure_add_sl__AT_P4-4___6
    :effect  (and 
      ; 
      (when (kef) 
        (S_zcj) )

      ; 
      (when (v7c) 
        (S_zcj) )

      ; 
      (when (mef) 
        (S_bdj) )

      ; 
      (when (y7c) 
        (S_bdj) )

      ; 
      (when (ref) 
        (S_cdj) )

      ; 
      (when (b8c) 
        (S_cdj) )

      ; 
      (when (uef) 
        (S_gdj) )

      ; 
      (when (g8c) 
        (S_gdj) )

      ; 
      (when (xef) 
        (S_hdj) )

      ; 
      (when (j8c) 
        (S_hdj) )

      ; 
      (when (zef) 
        (S_jdj) )

      ; 
      (when (l8c) 
        (S_jdj) )

      ; 
      (when (cff) 
        (S_kdj) )

      ; 
      (when (q8c) 
        (S_kdj) )

    )
  )
  (:action closure_merge_AT_P4-4___7
    :effect 
      ; merge l//xi
      (when  (and (hff) (kff) (mff) (rff) (uff) (xff) (zff) )
         (and (not (bgf)) (not (yff)) (not (vff)) (not (tff)) (not (qff)) (not (lff)) (not (jff)) (not (gff)) (not (bff)) (not (yef)) (not (vef)) (not (tef)) (not (qef)) (not (lef)) (not (jef)) (not (gef)) (not (bef)) (not (ydf)) (not (vdf)) (not (tdf)) (not (qdf)) (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

  )
  (:action closure_merge_AT_P4-4___8
    :effect 
      ; merge l//xi
      (when  (and (S_ldj) (S_mdj) (S_qdj) (S_rdj) (S_tdj) (S_udj) (S_vdj) )
         (and (not (bgf)) (not (yff)) (not (vff)) (not (tff)) (not (qff)) (not (lff)) (not (jff)) (not (gff)) (not (bff)) (not (yef)) (not (vef)) (not (tef)) (not (qef)) (not (lef)) (not (jef)) (not (gef)) (not (bef)) (not (ydf)) (not (vdf)) (not (tdf)) (not (qdf)) (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

  )
  (:action closure_add_sl__AT_P4-4___9
    :effect  (and 
      ; 
      (when (hff) 
        (S_ldj) )

      ; 
      (when (q9c) 
        (S_ldj) )

      ; 
      (when (kff) 
        (S_mdj) )

      ; 
      (when (t9c) 
        (S_mdj) )

      ; 
      (when (mff) 
        (S_qdj) )

      ; 
      (when (v9c) 
        (S_qdj) )

      ; 
      (when (rff) 
        (S_rdj) )

      ; 
      (when (y9c) 
        (S_rdj) )

      ; 
      (when (uff) 
        (S_tdj) )

      ; 
      (when (b0c) 
        (S_tdj) )

      ; 
      (when (xff) 
        (S_udj) )

      ; 
      (when (g0c) 
        (S_udj) )

      ; 
      (when (zff) 
        (S_vdj) )

      ; 
      (when (j0c) 
        (S_vdj) )

    )
  )
  (:action closure_merge_AT_P4-5___1
    :effect 
      ; merge l//xi
      (when  (and (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) )
         (and (not (qjf)) (not (ljf)) (not (jjf)) (not (gjf)) (not (bjf)) (not (yif)) (not (vif)) (not (tif)) (not (qif)) (not (lif)) (not (jif)) (not (gif)) (not (bif)) (not (yhf)) (not (vhf)) (not (thf)) (not (qhf)) (not (lhf)) (not (jhf)) (not (ghf)) (not (bhf)) (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

  )
  (:action closure_merge_AT_P4-5___2
    :effect 
      ; merge l//xi
      (when  (and (S_xdj) (S_ydj) (S_zdj) (S_bej) (S_cej) (S_gej) (S_hej) )
         (and (not (qjf)) (not (ljf)) (not (jjf)) (not (gjf)) (not (bjf)) (not (yif)) (not (vif)) (not (tif)) (not (qif)) (not (lif)) (not (jif)) (not (gif)) (not (bif)) (not (yhf)) (not (vhf)) (not (thf)) (not (qhf)) (not (lhf)) (not (jhf)) (not (ghf)) (not (bhf)) (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

  )
  (:action closure_add_sl__AT_P4-5___3
    :effect  (and 
      ; 
      (when (zgf) 
        (S_xdj) )

      ; 
      (when (b6c) 
        (S_xdj) )

      ; 
      (when (chf) 
        (S_ydj) )

      ; 
      (when (g6c) 
        (S_ydj) )

      ; 
      (when (hhf) 
        (S_zdj) )

      ; 
      (when (j6c) 
        (S_zdj) )

      ; 
      (when (khf) 
        (S_bej) )

      ; 
      (when (l6c) 
        (S_bej) )

      ; 
      (when (mhf) 
        (S_cej) )

      ; 
      (when (q6c) 
        (S_cej) )

      ; 
      (when (rhf) 
        (S_gej) )

      ; 
      (when (t6c) 
        (S_gej) )

      ; 
      (when (uhf) 
        (S_hej) )

      ; 
      (when (v6c) 
        (S_hej) )

    )
  )
  (:action closure_merge_AT_P4-5___4
    :effect 
      ; merge l//xi
      (when  (and (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) )
         (and (not (qjf)) (not (ljf)) (not (jjf)) (not (gjf)) (not (bjf)) (not (yif)) (not (vif)) (not (tif)) (not (qif)) (not (lif)) (not (jif)) (not (gif)) (not (bif)) (not (yhf)) (not (vhf)) (not (thf)) (not (qhf)) (not (lhf)) (not (jhf)) (not (ghf)) (not (bhf)) (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

  )
  (:action closure_merge_AT_P4-5___5
    :effect 
      ; merge l//xi
      (when  (and (S_jej) (S_kej) (S_lej) (S_mej) (S_qej) (S_rej) (S_tej) )
         (and (not (qjf)) (not (ljf)) (not (jjf)) (not (gjf)) (not (bjf)) (not (yif)) (not (vif)) (not (tif)) (not (qif)) (not (lif)) (not (jif)) (not (gif)) (not (bif)) (not (yhf)) (not (vhf)) (not (thf)) (not (qhf)) (not (lhf)) (not (jhf)) (not (ghf)) (not (bhf)) (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

  )
  (:action closure_add_sl__AT_P4-5___6
    :effect  (and 
      ; 
      (when (xhf) 
        (S_jej) )

      ; 
      (when (v7c) 
        (S_jej) )

      ; 
      (when (zhf) 
        (S_kej) )

      ; 
      (when (y7c) 
        (S_kej) )

      ; 
      (when (cif) 
        (S_lej) )

      ; 
      (when (b8c) 
        (S_lej) )

      ; 
      (when (hif) 
        (S_mej) )

      ; 
      (when (g8c) 
        (S_mej) )

      ; 
      (when (kif) 
        (S_qej) )

      ; 
      (when (j8c) 
        (S_qej) )

      ; 
      (when (mif) 
        (S_rej) )

      ; 
      (when (l8c) 
        (S_rej) )

      ; 
      (when (rif) 
        (S_tej) )

      ; 
      (when (q8c) 
        (S_tej) )

    )
  )
  (:action closure_merge_AT_P4-5___7
    :effect 
      ; merge l//xi
      (when  (and (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) )
         (and (not (qjf)) (not (ljf)) (not (jjf)) (not (gjf)) (not (bjf)) (not (yif)) (not (vif)) (not (tif)) (not (qif)) (not (lif)) (not (jif)) (not (gif)) (not (bif)) (not (yhf)) (not (vhf)) (not (thf)) (not (qhf)) (not (lhf)) (not (jhf)) (not (ghf)) (not (bhf)) (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

  )
  (:action closure_merge_AT_P4-5___8
    :effect 
      ; merge l//xi
      (when  (and (S_uej) (S_vej) (S_xej) (S_yej) (S_zej) (S_bfj) (S_cfj) )
         (and (not (qjf)) (not (ljf)) (not (jjf)) (not (gjf)) (not (bjf)) (not (yif)) (not (vif)) (not (tif)) (not (qif)) (not (lif)) (not (jif)) (not (gif)) (not (bif)) (not (yhf)) (not (vhf)) (not (thf)) (not (qhf)) (not (lhf)) (not (jhf)) (not (ghf)) (not (bhf)) (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

  )
  (:action closure_add_sl__AT_P4-5___9
    :effect  (and 
      ; 
      (when (uif) 
        (S_uej) )

      ; 
      (when (q9c) 
        (S_uej) )

      ; 
      (when (xif) 
        (S_vej) )

      ; 
      (when (t9c) 
        (S_vej) )

      ; 
      (when (zif) 
        (S_xej) )

      ; 
      (when (v9c) 
        (S_xej) )

      ; 
      (when (cjf) 
        (S_yej) )

      ; 
      (when (y9c) 
        (S_yej) )

      ; 
      (when (hjf) 
        (S_zej) )

      ; 
      (when (b0c) 
        (S_zej) )

      ; 
      (when (kjf) 
        (S_bfj) )

      ; 
      (when (g0c) 
        (S_bfj) )

      ; 
      (when (mjf) 
        (S_cfj) )

      ; 
      (when (j0c) 
        (S_cfj) )

    )
  )
  (:action closure_merge_AT_P4-6___1
    :effect 
      ; merge l//xi
      (when  (and (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) )
         (and (not (bnf)) (not (ymf)) (not (vmf)) (not (tmf)) (not (qmf)) (not (lmf)) (not (jmf)) (not (gmf)) (not (bmf)) (not (ylf)) (not (vlf)) (not (tlf)) (not (qlf)) (not (llf)) (not (jlf)) (not (glf)) (not (blf)) (not (ykf)) (not (vkf)) (not (tkf)) (not (qkf)) (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

  )
  (:action closure_merge_AT_P4-6___2
    :effect 
      ; merge l//xi
      (when  (and (S_gfj) (S_hfj) (S_jfj) (S_kfj) (S_lfj) (S_mfj) (S_qfj) )
         (and (not (bnf)) (not (ymf)) (not (vmf)) (not (tmf)) (not (qmf)) (not (lmf)) (not (jmf)) (not (gmf)) (not (bmf)) (not (ylf)) (not (vlf)) (not (tlf)) (not (qlf)) (not (llf)) (not (jlf)) (not (glf)) (not (blf)) (not (ykf)) (not (vkf)) (not (tkf)) (not (qkf)) (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

  )
  (:action closure_add_sl__AT_P4-6___3
    :effect  (and 
      ; 
      (when (mkf) 
        (S_gfj) )

      ; 
      (when (b6c) 
        (S_gfj) )

      ; 
      (when (rkf) 
        (S_hfj) )

      ; 
      (when (g6c) 
        (S_hfj) )

      ; 
      (when (ukf) 
        (S_jfj) )

      ; 
      (when (j6c) 
        (S_jfj) )

      ; 
      (when (xkf) 
        (S_kfj) )

      ; 
      (when (l6c) 
        (S_kfj) )

      ; 
      (when (zkf) 
        (S_lfj) )

      ; 
      (when (q6c) 
        (S_lfj) )

      ; 
      (when (clf) 
        (S_mfj) )

      ; 
      (when (t6c) 
        (S_mfj) )

      ; 
      (when (hlf) 
        (S_qfj) )

      ; 
      (when (v6c) 
        (S_qfj) )

    )
  )
  (:action closure_merge_AT_P4-6___4
    :effect 
      ; merge l//xi
      (when  (and (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) )
         (and (not (bnf)) (not (ymf)) (not (vmf)) (not (tmf)) (not (qmf)) (not (lmf)) (not (jmf)) (not (gmf)) (not (bmf)) (not (ylf)) (not (vlf)) (not (tlf)) (not (qlf)) (not (llf)) (not (jlf)) (not (glf)) (not (blf)) (not (ykf)) (not (vkf)) (not (tkf)) (not (qkf)) (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

  )
  (:action closure_merge_AT_P4-6___5
    :effect 
      ; merge l//xi
      (when  (and (S_rfj) (S_tfj) (S_ufj) (S_vfj) (S_xfj) (S_yfj) (S_zfj) )
         (and (not (bnf)) (not (ymf)) (not (vmf)) (not (tmf)) (not (qmf)) (not (lmf)) (not (jmf)) (not (gmf)) (not (bmf)) (not (ylf)) (not (vlf)) (not (tlf)) (not (qlf)) (not (llf)) (not (jlf)) (not (glf)) (not (blf)) (not (ykf)) (not (vkf)) (not (tkf)) (not (qkf)) (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

  )
  (:action closure_add_sl__AT_P4-6___6
    :effect  (and 
      ; 
      (when (klf) 
        (S_rfj) )

      ; 
      (when (v7c) 
        (S_rfj) )

      ; 
      (when (mlf) 
        (S_tfj) )

      ; 
      (when (y7c) 
        (S_tfj) )

      ; 
      (when (rlf) 
        (S_ufj) )

      ; 
      (when (b8c) 
        (S_ufj) )

      ; 
      (when (ulf) 
        (S_vfj) )

      ; 
      (when (g8c) 
        (S_vfj) )

      ; 
      (when (xlf) 
        (S_xfj) )

      ; 
      (when (j8c) 
        (S_xfj) )

      ; 
      (when (zlf) 
        (S_yfj) )

      ; 
      (when (l8c) 
        (S_yfj) )

      ; 
      (when (cmf) 
        (S_zfj) )

      ; 
      (when (q8c) 
        (S_zfj) )

    )
  )
  (:action closure_merge_AT_P4-6___7
    :effect 
      ; merge l//xi
      (when  (and (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) )
         (and (not (bnf)) (not (ymf)) (not (vmf)) (not (tmf)) (not (qmf)) (not (lmf)) (not (jmf)) (not (gmf)) (not (bmf)) (not (ylf)) (not (vlf)) (not (tlf)) (not (qlf)) (not (llf)) (not (jlf)) (not (glf)) (not (blf)) (not (ykf)) (not (vkf)) (not (tkf)) (not (qkf)) (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

  )
  (:action closure_merge_AT_P4-6___8
    :effect 
      ; merge l//xi
      (when  (and (S_bgj) (S_cgj) (S_ggj) (S_hgj) (S_jgj) (S_kgj) (S_lgj) )
         (and (not (bnf)) (not (ymf)) (not (vmf)) (not (tmf)) (not (qmf)) (not (lmf)) (not (jmf)) (not (gmf)) (not (bmf)) (not (ylf)) (not (vlf)) (not (tlf)) (not (qlf)) (not (llf)) (not (jlf)) (not (glf)) (not (blf)) (not (ykf)) (not (vkf)) (not (tkf)) (not (qkf)) (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

  )
  (:action closure_add_sl__AT_P4-6___9
    :effect  (and 
      ; 
      (when (hmf) 
        (S_bgj) )

      ; 
      (when (q9c) 
        (S_bgj) )

      ; 
      (when (kmf) 
        (S_cgj) )

      ; 
      (when (t9c) 
        (S_cgj) )

      ; 
      (when (mmf) 
        (S_ggj) )

      ; 
      (when (v9c) 
        (S_ggj) )

      ; 
      (when (rmf) 
        (S_hgj) )

      ; 
      (when (y9c) 
        (S_hgj) )

      ; 
      (when (umf) 
        (S_jgj) )

      ; 
      (when (b0c) 
        (S_jgj) )

      ; 
      (when (xmf) 
        (S_kgj) )

      ; 
      (when (g0c) 
        (S_kgj) )

      ; 
      (when (zmf) 
        (S_lgj) )

      ; 
      (when (j0c) 
        (S_lgj) )

    )
  )
  (:action closure_merge_AT_P4-7___1
    :effect 
      ; merge l//xi
      (when  (and (znf) (cof) (hof) (kof) (mof) (rof) (uof) )
         (and (not (qqf)) (not (lqf)) (not (jqf)) (not (gqf)) (not (bqf)) (not (ypf)) (not (vpf)) (not (tpf)) (not (qpf)) (not (lpf)) (not (jpf)) (not (gpf)) (not (bpf)) (not (yof)) (not (vof)) (not (tof)) (not (qof)) (not (lof)) (not (jof)) (not (gof)) (not (bof)) (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

  )
  (:action closure_merge_AT_P4-7___2
    :effect 
      ; merge l//xi
      (when  (and (S_mgj) (S_qgj) (S_rgj) (S_tgj) (S_ugj) (S_vgj) (S_xgj) )
         (and (not (qqf)) (not (lqf)) (not (jqf)) (not (gqf)) (not (bqf)) (not (ypf)) (not (vpf)) (not (tpf)) (not (qpf)) (not (lpf)) (not (jpf)) (not (gpf)) (not (bpf)) (not (yof)) (not (vof)) (not (tof)) (not (qof)) (not (lof)) (not (jof)) (not (gof)) (not (bof)) (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

  )
  (:action closure_add_sl__AT_P4-7___3
    :effect  (and 
      ; 
      (when (znf) 
        (S_mgj) )

      ; 
      (when (b6c) 
        (S_mgj) )

      ; 
      (when (cof) 
        (S_qgj) )

      ; 
      (when (g6c) 
        (S_qgj) )

      ; 
      (when (hof) 
        (S_rgj) )

      ; 
      (when (j6c) 
        (S_rgj) )

      ; 
      (when (kof) 
        (S_tgj) )

      ; 
      (when (l6c) 
        (S_tgj) )

      ; 
      (when (mof) 
        (S_ugj) )

      ; 
      (when (q6c) 
        (S_ugj) )

      ; 
      (when (rof) 
        (S_vgj) )

      ; 
      (when (t6c) 
        (S_vgj) )

      ; 
      (when (uof) 
        (S_xgj) )

      ; 
      (when (v6c) 
        (S_xgj) )

    )
  )
  (:action closure_merge_AT_P4-7___4
    :effect 
      ; merge l//xi
      (when  (and (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) )
         (and (not (qqf)) (not (lqf)) (not (jqf)) (not (gqf)) (not (bqf)) (not (ypf)) (not (vpf)) (not (tpf)) (not (qpf)) (not (lpf)) (not (jpf)) (not (gpf)) (not (bpf)) (not (yof)) (not (vof)) (not (tof)) (not (qof)) (not (lof)) (not (jof)) (not (gof)) (not (bof)) (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

  )
  (:action closure_merge_AT_P4-7___5
    :effect 
      ; merge l//xi
      (when  (and (S_ygj) (S_zgj) (S_bhj) (S_chj) (S_ghj) (S_hhj) (S_jhj) )
         (and (not (qqf)) (not (lqf)) (not (jqf)) (not (gqf)) (not (bqf)) (not (ypf)) (not (vpf)) (not (tpf)) (not (qpf)) (not (lpf)) (not (jpf)) (not (gpf)) (not (bpf)) (not (yof)) (not (vof)) (not (tof)) (not (qof)) (not (lof)) (not (jof)) (not (gof)) (not (bof)) (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

  )
  (:action closure_add_sl__AT_P4-7___6
    :effect  (and 
      ; 
      (when (xof) 
        (S_ygj) )

      ; 
      (when (v7c) 
        (S_ygj) )

      ; 
      (when (zof) 
        (S_zgj) )

      ; 
      (when (y7c) 
        (S_zgj) )

      ; 
      (when (cpf) 
        (S_bhj) )

      ; 
      (when (b8c) 
        (S_bhj) )

      ; 
      (when (hpf) 
        (S_chj) )

      ; 
      (when (g8c) 
        (S_chj) )

      ; 
      (when (kpf) 
        (S_ghj) )

      ; 
      (when (j8c) 
        (S_ghj) )

      ; 
      (when (mpf) 
        (S_hhj) )

      ; 
      (when (l8c) 
        (S_hhj) )

      ; 
      (when (rpf) 
        (S_jhj) )

      ; 
      (when (q8c) 
        (S_jhj) )

    )
  )
  (:action closure_merge_AT_P4-7___7
    :effect 
      ; merge l//xi
      (when  (and (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) )
         (and (not (qqf)) (not (lqf)) (not (jqf)) (not (gqf)) (not (bqf)) (not (ypf)) (not (vpf)) (not (tpf)) (not (qpf)) (not (lpf)) (not (jpf)) (not (gpf)) (not (bpf)) (not (yof)) (not (vof)) (not (tof)) (not (qof)) (not (lof)) (not (jof)) (not (gof)) (not (bof)) (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

  )
  (:action closure_merge_AT_P4-7___8
    :effect 
      ; merge l//xi
      (when  (and (S_khj) (S_lhj) (S_mhj) (S_qhj) (S_rhj) (S_thj) (S_uhj) )
         (and (not (qqf)) (not (lqf)) (not (jqf)) (not (gqf)) (not (bqf)) (not (ypf)) (not (vpf)) (not (tpf)) (not (qpf)) (not (lpf)) (not (jpf)) (not (gpf)) (not (bpf)) (not (yof)) (not (vof)) (not (tof)) (not (qof)) (not (lof)) (not (jof)) (not (gof)) (not (bof)) (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

  )
  (:action closure_add_sl__AT_P4-7___9
    :effect  (and 
      ; 
      (when (upf) 
        (S_khj) )

      ; 
      (when (q9c) 
        (S_khj) )

      ; 
      (when (xpf) 
        (S_lhj) )

      ; 
      (when (t9c) 
        (S_lhj) )

      ; 
      (when (zpf) 
        (S_mhj) )

      ; 
      (when (v9c) 
        (S_mhj) )

      ; 
      (when (cqf) 
        (S_qhj) )

      ; 
      (when (y9c) 
        (S_qhj) )

      ; 
      (when (hqf) 
        (S_rhj) )

      ; 
      (when (b0c) 
        (S_rhj) )

      ; 
      (when (kqf) 
        (S_thj) )

      ; 
      (when (g0c) 
        (S_thj) )

      ; 
      (when (mqf) 
        (S_uhj) )

      ; 
      (when (j0c) 
        (S_uhj) )

    )
  )
  (:action closure_merge_AT_P5-1___1
    :effect 
      ; merge l//xi
      (when  (and (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) )
         (and (not (t2h)) (not (q2h)) (not (l2h)) (not (j2h)) (not (g2h)) (not (b2h)) (not (y1h)) (not (v1h)) (not (t1h)) (not (q1h)) (not (l1h)) (not (j1h)) (not (g1h)) (not (b1h)) (not (yzh)) (not (vzh)) (not (tzh)) (not (qzh)) (not (lzh)) (not (jzh)) (not (gzh)) (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

  )
  (:action closure_merge_AT_P5-1___2
    :effect 
      ; merge l//xi
      (when  (and (S_vhj) (S_xhj) (S_yhj) (S_zhj) (S_bij) (S_cij) (S_gij) )
         (and (not (t2h)) (not (q2h)) (not (l2h)) (not (j2h)) (not (g2h)) (not (b2h)) (not (y1h)) (not (v1h)) (not (t1h)) (not (q1h)) (not (l1h)) (not (j1h)) (not (g1h)) (not (b1h)) (not (yzh)) (not (vzh)) (not (tzh)) (not (qzh)) (not (lzh)) (not (jzh)) (not (gzh)) (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

  )
  (:action closure_add_sl__AT_P5-1___3
    :effect  (and 
      ; 
      (when (czh) 
        (S_vhj) )

      ; 
      (when (b6c) 
        (S_vhj) )

      ; 
      (when (hzh) 
        (S_xhj) )

      ; 
      (when (g6c) 
        (S_xhj) )

      ; 
      (when (kzh) 
        (S_yhj) )

      ; 
      (when (j6c) 
        (S_yhj) )

      ; 
      (when (mzh) 
        (S_zhj) )

      ; 
      (when (l6c) 
        (S_zhj) )

      ; 
      (when (rzh) 
        (S_bij) )

      ; 
      (when (q6c) 
        (S_bij) )

      ; 
      (when (uzh) 
        (S_cij) )

      ; 
      (when (t6c) 
        (S_cij) )

      ; 
      (when (xzh) 
        (S_gij) )

      ; 
      (when (v6c) 
        (S_gij) )

    )
  )
  (:action closure_merge_AT_P5-1___4
    :effect 
      ; merge l//xi
      (when  (and (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) )
         (and (not (t2h)) (not (q2h)) (not (l2h)) (not (j2h)) (not (g2h)) (not (b2h)) (not (y1h)) (not (v1h)) (not (t1h)) (not (q1h)) (not (l1h)) (not (j1h)) (not (g1h)) (not (b1h)) (not (yzh)) (not (vzh)) (not (tzh)) (not (qzh)) (not (lzh)) (not (jzh)) (not (gzh)) (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

  )
  (:action closure_merge_AT_P5-1___5
    :effect 
      ; merge l//xi
      (when  (and (S_hij) (S_jij) (S_kij) (S_lij) (S_mij) (S_qij) (S_rij) )
         (and (not (t2h)) (not (q2h)) (not (l2h)) (not (j2h)) (not (g2h)) (not (b2h)) (not (y1h)) (not (v1h)) (not (t1h)) (not (q1h)) (not (l1h)) (not (j1h)) (not (g1h)) (not (b1h)) (not (yzh)) (not (vzh)) (not (tzh)) (not (qzh)) (not (lzh)) (not (jzh)) (not (gzh)) (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

  )
  (:action closure_add_sl__AT_P5-1___6
    :effect  (and 
      ; 
      (when (zzh) 
        (S_hij) )

      ; 
      (when (v7c) 
        (S_hij) )

      ; 
      (when (c1h) 
        (S_jij) )

      ; 
      (when (y7c) 
        (S_jij) )

      ; 
      (when (h1h) 
        (S_kij) )

      ; 
      (when (b8c) 
        (S_kij) )

      ; 
      (when (k1h) 
        (S_lij) )

      ; 
      (when (g8c) 
        (S_lij) )

      ; 
      (when (m1h) 
        (S_mij) )

      ; 
      (when (j8c) 
        (S_mij) )

      ; 
      (when (r1h) 
        (S_qij) )

      ; 
      (when (l8c) 
        (S_qij) )

      ; 
      (when (u1h) 
        (S_rij) )

      ; 
      (when (q8c) 
        (S_rij) )

    )
  )
  (:action closure_merge_AT_P5-1___7
    :effect 
      ; merge l//xi
      (when  (and (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) )
         (and (not (t2h)) (not (q2h)) (not (l2h)) (not (j2h)) (not (g2h)) (not (b2h)) (not (y1h)) (not (v1h)) (not (t1h)) (not (q1h)) (not (l1h)) (not (j1h)) (not (g1h)) (not (b1h)) (not (yzh)) (not (vzh)) (not (tzh)) (not (qzh)) (not (lzh)) (not (jzh)) (not (gzh)) (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

  )
  (:action closure_merge_AT_P5-1___8
    :effect 
      ; merge l//xi
      (when  (and (S_tij) (S_uij) (S_vij) (S_xij) (S_yij) (S_zij) (S_bjj) )
         (and (not (t2h)) (not (q2h)) (not (l2h)) (not (j2h)) (not (g2h)) (not (b2h)) (not (y1h)) (not (v1h)) (not (t1h)) (not (q1h)) (not (l1h)) (not (j1h)) (not (g1h)) (not (b1h)) (not (yzh)) (not (vzh)) (not (tzh)) (not (qzh)) (not (lzh)) (not (jzh)) (not (gzh)) (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

  )
  (:action closure_add_sl__AT_P5-1___9
    :effect  (and 
      ; 
      (when (x1h) 
        (S_tij) )

      ; 
      (when (q9c) 
        (S_tij) )

      ; 
      (when (z1h) 
        (S_uij) )

      ; 
      (when (t9c) 
        (S_uij) )

      ; 
      (when (c2h) 
        (S_vij) )

      ; 
      (when (v9c) 
        (S_vij) )

      ; 
      (when (h2h) 
        (S_xij) )

      ; 
      (when (y9c) 
        (S_xij) )

      ; 
      (when (k2h) 
        (S_yij) )

      ; 
      (when (b0c) 
        (S_yij) )

      ; 
      (when (m2h) 
        (S_zij) )

      ; 
      (when (g0c) 
        (S_zij) )

      ; 
      (when (r2h) 
        (S_bjj) )

      ; 
      (when (j0c) 
        (S_bjj) )

    )
  )
  (:action closure_merge_AT_P5-2___1
    :effect 
      ; merge l//xi
      (when  (and (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) )
         (and (not (tgh)) (not (qgh)) (not (lgh)) (not (jgh)) (not (ggh)) (not (bgh)) (not (yfh)) (not (vfh)) (not (tfh)) (not (qfh)) (not (lfh)) (not (jfh)) (not (gfh)) (not (bfh)) (not (yeh)) (not (veh)) (not (teh)) (not (qeh)) (not (leh)) (not (jeh)) (not (geh)) (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

  )
  (:action closure_merge_AT_P5-2___2
    :effect 
      ; merge l//xi
      (when  (and (S_cjj) (S_gjj) (S_hjj) (S_jjj) (S_kjj) (S_ljj) (S_mjj) )
         (and (not (tgh)) (not (qgh)) (not (lgh)) (not (jgh)) (not (ggh)) (not (bgh)) (not (yfh)) (not (vfh)) (not (tfh)) (not (qfh)) (not (lfh)) (not (jfh)) (not (gfh)) (not (bfh)) (not (yeh)) (not (veh)) (not (teh)) (not (qeh)) (not (leh)) (not (jeh)) (not (geh)) (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

  )
  (:action closure_add_sl__AT_P5-2___3
    :effect  (and 
      ; 
      (when (ceh) 
        (S_cjj) )

      ; 
      (when (b6c) 
        (S_cjj) )

      ; 
      (when (heh) 
        (S_gjj) )

      ; 
      (when (g6c) 
        (S_gjj) )

      ; 
      (when (keh) 
        (S_hjj) )

      ; 
      (when (j6c) 
        (S_hjj) )

      ; 
      (when (meh) 
        (S_jjj) )

      ; 
      (when (l6c) 
        (S_jjj) )

      ; 
      (when (reh) 
        (S_kjj) )

      ; 
      (when (q6c) 
        (S_kjj) )

      ; 
      (when (ueh) 
        (S_ljj) )

      ; 
      (when (t6c) 
        (S_ljj) )

      ; 
      (when (xeh) 
        (S_mjj) )

      ; 
      (when (v6c) 
        (S_mjj) )

    )
  )
  (:action closure_merge_AT_P5-2___4
    :effect 
      ; merge l//xi
      (when  (and (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) )
         (and (not (tgh)) (not (qgh)) (not (lgh)) (not (jgh)) (not (ggh)) (not (bgh)) (not (yfh)) (not (vfh)) (not (tfh)) (not (qfh)) (not (lfh)) (not (jfh)) (not (gfh)) (not (bfh)) (not (yeh)) (not (veh)) (not (teh)) (not (qeh)) (not (leh)) (not (jeh)) (not (geh)) (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

  )
  (:action closure_merge_AT_P5-2___5
    :effect 
      ; merge l//xi
      (when  (and (S_qjj) (S_rjj) (S_tjj) (S_ujj) (S_vjj) (S_xjj) (S_yjj) )
         (and (not (tgh)) (not (qgh)) (not (lgh)) (not (jgh)) (not (ggh)) (not (bgh)) (not (yfh)) (not (vfh)) (not (tfh)) (not (qfh)) (not (lfh)) (not (jfh)) (not (gfh)) (not (bfh)) (not (yeh)) (not (veh)) (not (teh)) (not (qeh)) (not (leh)) (not (jeh)) (not (geh)) (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

  )
  (:action closure_add_sl__AT_P5-2___6
    :effect  (and 
      ; 
      (when (zeh) 
        (S_qjj) )

      ; 
      (when (v7c) 
        (S_qjj) )

      ; 
      (when (cfh) 
        (S_rjj) )

      ; 
      (when (y7c) 
        (S_rjj) )

      ; 
      (when (hfh) 
        (S_tjj) )

      ; 
      (when (b8c) 
        (S_tjj) )

      ; 
      (when (kfh) 
        (S_ujj) )

      ; 
      (when (g8c) 
        (S_ujj) )

      ; 
      (when (mfh) 
        (S_vjj) )

      ; 
      (when (j8c) 
        (S_vjj) )

      ; 
      (when (rfh) 
        (S_xjj) )

      ; 
      (when (l8c) 
        (S_xjj) )

      ; 
      (when (ufh) 
        (S_yjj) )

      ; 
      (when (q8c) 
        (S_yjj) )

    )
  )
  (:action closure_merge_AT_P5-2___7
    :effect 
      ; merge l//xi
      (when  (and (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) )
         (and (not (tgh)) (not (qgh)) (not (lgh)) (not (jgh)) (not (ggh)) (not (bgh)) (not (yfh)) (not (vfh)) (not (tfh)) (not (qfh)) (not (lfh)) (not (jfh)) (not (gfh)) (not (bfh)) (not (yeh)) (not (veh)) (not (teh)) (not (qeh)) (not (leh)) (not (jeh)) (not (geh)) (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

  )
  (:action closure_merge_AT_P5-2___8
    :effect 
      ; merge l//xi
      (when  (and (S_zjj) (S_bkj) (S_ckj) (S_gkj) (S_hkj) (S_jkj) (S_kkj) )
         (and (not (tgh)) (not (qgh)) (not (lgh)) (not (jgh)) (not (ggh)) (not (bgh)) (not (yfh)) (not (vfh)) (not (tfh)) (not (qfh)) (not (lfh)) (not (jfh)) (not (gfh)) (not (bfh)) (not (yeh)) (not (veh)) (not (teh)) (not (qeh)) (not (leh)) (not (jeh)) (not (geh)) (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

  )
  (:action closure_add_sl__AT_P5-2___9
    :effect  (and 
      ; 
      (when (xfh) 
        (S_zjj) )

      ; 
      (when (q9c) 
        (S_zjj) )

      ; 
      (when (zfh) 
        (S_bkj) )

      ; 
      (when (t9c) 
        (S_bkj) )

      ; 
      (when (cgh) 
        (S_ckj) )

      ; 
      (when (v9c) 
        (S_ckj) )

      ; 
      (when (hgh) 
        (S_gkj) )

      ; 
      (when (y9c) 
        (S_gkj) )

      ; 
      (when (kgh) 
        (S_hkj) )

      ; 
      (when (b0c) 
        (S_hkj) )

      ; 
      (when (mgh) 
        (S_jkj) )

      ; 
      (when (g0c) 
        (S_jkj) )

      ; 
      (when (rgh) 
        (S_kkj) )

      ; 
      (when (j0c) 
        (S_kkj) )

    )
  )
  (:action closure_merge_AT_P5-3___1
    :effect 
      ; merge l//xi
      (when  (and (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) )
         (and (not (g8f)) (not (b8f)) (not (y7f)) (not (v7f)) (not (t7f)) (not (q7f)) (not (l7f)) (not (j7f)) (not (g7f)) (not (b7f)) (not (y6f)) (not (v6f)) (not (t6f)) (not (q6f)) (not (l6f)) (not (j6f)) (not (g6f)) (not (b6f)) (not (y5f)) (not (v5f)) (not (t5f)) (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

  )
  (:action closure_merge_AT_P5-3___2
    :effect 
      ; merge l//xi
      (when  (and (S_lkj) (S_mkj) (S_qkj) (S_rkj) (S_tkj) (S_ukj) (S_vkj) )
         (and (not (g8f)) (not (b8f)) (not (y7f)) (not (v7f)) (not (t7f)) (not (q7f)) (not (l7f)) (not (j7f)) (not (g7f)) (not (b7f)) (not (y6f)) (not (v6f)) (not (t6f)) (not (q6f)) (not (l6f)) (not (j6f)) (not (g6f)) (not (b6f)) (not (y5f)) (not (v5f)) (not (t5f)) (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

  )
  (:action closure_add_sl__AT_P5-3___3
    :effect  (and 
      ; 
      (when (r5f) 
        (S_lkj) )

      ; 
      (when (b6c) 
        (S_lkj) )

      ; 
      (when (u5f) 
        (S_mkj) )

      ; 
      (when (g6c) 
        (S_mkj) )

      ; 
      (when (x5f) 
        (S_qkj) )

      ; 
      (when (j6c) 
        (S_qkj) )

      ; 
      (when (z5f) 
        (S_rkj) )

      ; 
      (when (l6c) 
        (S_rkj) )

      ; 
      (when (c6f) 
        (S_tkj) )

      ; 
      (when (q6c) 
        (S_tkj) )

      ; 
      (when (h6f) 
        (S_ukj) )

      ; 
      (when (t6c) 
        (S_ukj) )

      ; 
      (when (k6f) 
        (S_vkj) )

      ; 
      (when (v6c) 
        (S_vkj) )

    )
  )
  (:action closure_merge_AT_P5-3___4
    :effect 
      ; merge l//xi
      (when  (and (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) )
         (and (not (g8f)) (not (b8f)) (not (y7f)) (not (v7f)) (not (t7f)) (not (q7f)) (not (l7f)) (not (j7f)) (not (g7f)) (not (b7f)) (not (y6f)) (not (v6f)) (not (t6f)) (not (q6f)) (not (l6f)) (not (j6f)) (not (g6f)) (not (b6f)) (not (y5f)) (not (v5f)) (not (t5f)) (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

  )
  (:action closure_merge_AT_P5-3___5
    :effect 
      ; merge l//xi
      (when  (and (S_xkj) (S_ykj) (S_zkj) (S_blj) (S_clj) (S_glj) (S_hlj) )
         (and (not (g8f)) (not (b8f)) (not (y7f)) (not (v7f)) (not (t7f)) (not (q7f)) (not (l7f)) (not (j7f)) (not (g7f)) (not (b7f)) (not (y6f)) (not (v6f)) (not (t6f)) (not (q6f)) (not (l6f)) (not (j6f)) (not (g6f)) (not (b6f)) (not (y5f)) (not (v5f)) (not (t5f)) (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

  )
  (:action closure_add_sl__AT_P5-3___6
    :effect  (and 
      ; 
      (when (m6f) 
        (S_xkj) )

      ; 
      (when (v7c) 
        (S_xkj) )

      ; 
      (when (r6f) 
        (S_ykj) )

      ; 
      (when (y7c) 
        (S_ykj) )

      ; 
      (when (u6f) 
        (S_zkj) )

      ; 
      (when (b8c) 
        (S_zkj) )

      ; 
      (when (x6f) 
        (S_blj) )

      ; 
      (when (g8c) 
        (S_blj) )

      ; 
      (when (z6f) 
        (S_clj) )

      ; 
      (when (j8c) 
        (S_clj) )

      ; 
      (when (c7f) 
        (S_glj) )

      ; 
      (when (l8c) 
        (S_glj) )

      ; 
      (when (h7f) 
        (S_hlj) )

      ; 
      (when (q8c) 
        (S_hlj) )

    )
  )
  (:action closure_merge_AT_P5-3___7
    :effect 
      ; merge l//xi
      (when  (and (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) )
         (and (not (g8f)) (not (b8f)) (not (y7f)) (not (v7f)) (not (t7f)) (not (q7f)) (not (l7f)) (not (j7f)) (not (g7f)) (not (b7f)) (not (y6f)) (not (v6f)) (not (t6f)) (not (q6f)) (not (l6f)) (not (j6f)) (not (g6f)) (not (b6f)) (not (y5f)) (not (v5f)) (not (t5f)) (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

  )
  (:action closure_merge_AT_P5-3___8
    :effect 
      ; merge l//xi
      (when  (and (S_jlj) (S_klj) (S_llj) (S_mlj) (S_qlj) (S_rlj) (S_tlj) )
         (and (not (g8f)) (not (b8f)) (not (y7f)) (not (v7f)) (not (t7f)) (not (q7f)) (not (l7f)) (not (j7f)) (not (g7f)) (not (b7f)) (not (y6f)) (not (v6f)) (not (t6f)) (not (q6f)) (not (l6f)) (not (j6f)) (not (g6f)) (not (b6f)) (not (y5f)) (not (v5f)) (not (t5f)) (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

  )
  (:action closure_add_sl__AT_P5-3___9
    :effect  (and 
      ; 
      (when (k7f) 
        (S_jlj) )

      ; 
      (when (q9c) 
        (S_jlj) )

      ; 
      (when (m7f) 
        (S_klj) )

      ; 
      (when (t9c) 
        (S_klj) )

      ; 
      (when (r7f) 
        (S_llj) )

      ; 
      (when (v9c) 
        (S_llj) )

      ; 
      (when (u7f) 
        (S_mlj) )

      ; 
      (when (y9c) 
        (S_mlj) )

      ; 
      (when (x7f) 
        (S_qlj) )

      ; 
      (when (b0c) 
        (S_qlj) )

      ; 
      (when (z7f) 
        (S_rlj) )

      ; 
      (when (g0c) 
        (S_rlj) )

      ; 
      (when (c8f) 
        (S_tlj) )

      ; 
      (when (j0c) 
        (S_tlj) )

    )
  )
  (:action closure_merge_AT_P5-4___1
    :effect 
      ; merge l//xi
      (when  (and (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) )
         (and (not (twf)) (not (qwf)) (not (lwf)) (not (jwf)) (not (gwf)) (not (bwf)) (not (yvf)) (not (vvf)) (not (tvf)) (not (qvf)) (not (lvf)) (not (jvf)) (not (gvf)) (not (bvf)) (not (yuf)) (not (vuf)) (not (tuf)) (not (quf)) (not (luf)) (not (juf)) (not (guf)) (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

  )
  (:action closure_merge_AT_P5-4___2
    :effect 
      ; merge l//xi
      (when  (and (S_ulj) (S_vlj) (S_xlj) (S_ylj) (S_zlj) (S_bmj) (S_cmj) )
         (and (not (twf)) (not (qwf)) (not (lwf)) (not (jwf)) (not (gwf)) (not (bwf)) (not (yvf)) (not (vvf)) (not (tvf)) (not (qvf)) (not (lvf)) (not (jvf)) (not (gvf)) (not (bvf)) (not (yuf)) (not (vuf)) (not (tuf)) (not (quf)) (not (luf)) (not (juf)) (not (guf)) (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

  )
  (:action closure_add_sl__AT_P5-4___3
    :effect  (and 
      ; 
      (when (cuf) 
        (S_ulj) )

      ; 
      (when (b6c) 
        (S_ulj) )

      ; 
      (when (huf) 
        (S_vlj) )

      ; 
      (when (g6c) 
        (S_vlj) )

      ; 
      (when (kuf) 
        (S_xlj) )

      ; 
      (when (j6c) 
        (S_xlj) )

      ; 
      (when (muf) 
        (S_ylj) )

      ; 
      (when (l6c) 
        (S_ylj) )

      ; 
      (when (ruf) 
        (S_zlj) )

      ; 
      (when (q6c) 
        (S_zlj) )

      ; 
      (when (uuf) 
        (S_bmj) )

      ; 
      (when (t6c) 
        (S_bmj) )

      ; 
      (when (xuf) 
        (S_cmj) )

      ; 
      (when (v6c) 
        (S_cmj) )

    )
  )
  (:action closure_merge_AT_P5-4___4
    :effect 
      ; merge l//xi
      (when  (and (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) )
         (and (not (twf)) (not (qwf)) (not (lwf)) (not (jwf)) (not (gwf)) (not (bwf)) (not (yvf)) (not (vvf)) (not (tvf)) (not (qvf)) (not (lvf)) (not (jvf)) (not (gvf)) (not (bvf)) (not (yuf)) (not (vuf)) (not (tuf)) (not (quf)) (not (luf)) (not (juf)) (not (guf)) (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

  )
  (:action closure_merge_AT_P5-4___5
    :effect 
      ; merge l//xi
      (when  (and (S_gmj) (S_hmj) (S_jmj) (S_kmj) (S_lmj) (S_mmj) (S_qmj) )
         (and (not (twf)) (not (qwf)) (not (lwf)) (not (jwf)) (not (gwf)) (not (bwf)) (not (yvf)) (not (vvf)) (not (tvf)) (not (qvf)) (not (lvf)) (not (jvf)) (not (gvf)) (not (bvf)) (not (yuf)) (not (vuf)) (not (tuf)) (not (quf)) (not (luf)) (not (juf)) (not (guf)) (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

  )
  (:action closure_add_sl__AT_P5-4___6
    :effect  (and 
      ; 
      (when (zuf) 
        (S_gmj) )

      ; 
      (when (v7c) 
        (S_gmj) )

      ; 
      (when (cvf) 
        (S_hmj) )

      ; 
      (when (y7c) 
        (S_hmj) )

      ; 
      (when (hvf) 
        (S_jmj) )

      ; 
      (when (b8c) 
        (S_jmj) )

      ; 
      (when (kvf) 
        (S_kmj) )

      ; 
      (when (g8c) 
        (S_kmj) )

      ; 
      (when (mvf) 
        (S_lmj) )

      ; 
      (when (j8c) 
        (S_lmj) )

      ; 
      (when (rvf) 
        (S_mmj) )

      ; 
      (when (l8c) 
        (S_mmj) )

      ; 
      (when (uvf) 
        (S_qmj) )

      ; 
      (when (q8c) 
        (S_qmj) )

    )
  )
  (:action closure_merge_AT_P5-4___7
    :effect 
      ; merge l//xi
      (when  (and (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) )
         (and (not (twf)) (not (qwf)) (not (lwf)) (not (jwf)) (not (gwf)) (not (bwf)) (not (yvf)) (not (vvf)) (not (tvf)) (not (qvf)) (not (lvf)) (not (jvf)) (not (gvf)) (not (bvf)) (not (yuf)) (not (vuf)) (not (tuf)) (not (quf)) (not (luf)) (not (juf)) (not (guf)) (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

  )
  (:action closure_merge_AT_P5-4___8
    :effect 
      ; merge l//xi
      (when  (and (S_rmj) (S_tmj) (S_umj) (S_vmj) (S_xmj) (S_ymj) (S_zmj) )
         (and (not (twf)) (not (qwf)) (not (lwf)) (not (jwf)) (not (gwf)) (not (bwf)) (not (yvf)) (not (vvf)) (not (tvf)) (not (qvf)) (not (lvf)) (not (jvf)) (not (gvf)) (not (bvf)) (not (yuf)) (not (vuf)) (not (tuf)) (not (quf)) (not (luf)) (not (juf)) (not (guf)) (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

  )
  (:action closure_add_sl__AT_P5-4___9
    :effect  (and 
      ; 
      (when (xvf) 
        (S_rmj) )

      ; 
      (when (q9c) 
        (S_rmj) )

      ; 
      (when (zvf) 
        (S_tmj) )

      ; 
      (when (t9c) 
        (S_tmj) )

      ; 
      (when (cwf) 
        (S_umj) )

      ; 
      (when (v9c) 
        (S_umj) )

      ; 
      (when (hwf) 
        (S_vmj) )

      ; 
      (when (y9c) 
        (S_vmj) )

      ; 
      (when (kwf) 
        (S_xmj) )

      ; 
      (when (b0c) 
        (S_xmj) )

      ; 
      (when (mwf) 
        (S_ymj) )

      ; 
      (when (g0c) 
        (S_ymj) )

      ; 
      (when (rwf) 
        (S_zmj) )

      ; 
      (when (j0c) 
        (S_zmj) )

    )
  )
  (:action closure_merge_AT_P5-5___1
    :effect 
      ; merge l//xi
      (when  (and (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) )
         (and (not (jzf)) (not (gzf)) (not (bzf)) (not (yyf)) (not (vyf)) (not (tyf)) (not (qyf)) (not (lyf)) (not (jyf)) (not (gyf)) (not (byf)) (not (yxf)) (not (vxf)) (not (txf)) (not (qxf)) (not (lxf)) (not (jxf)) (not (gxf)) (not (bxf)) (not (ywf)) (not (vwf)) (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

  )
  (:action closure_merge_AT_P5-5___2
    :effect 
      ; merge l//xi
      (when  (and (S_bnj) (S_cnj) (S_gnj) (S_hnj) (S_jnj) (S_knj) (S_lnj) )
         (and (not (jzf)) (not (gzf)) (not (bzf)) (not (yyf)) (not (vyf)) (not (tyf)) (not (qyf)) (not (lyf)) (not (jyf)) (not (gyf)) (not (byf)) (not (yxf)) (not (vxf)) (not (txf)) (not (qxf)) (not (lxf)) (not (jxf)) (not (gxf)) (not (bxf)) (not (ywf)) (not (vwf)) (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

  )
  (:action closure_add_sl__AT_P5-5___3
    :effect  (and 
      ; 
      (when (uwf) 
        (S_bnj) )

      ; 
      (when (b6c) 
        (S_bnj) )

      ; 
      (when (xwf) 
        (S_cnj) )

      ; 
      (when (g6c) 
        (S_cnj) )

      ; 
      (when (zwf) 
        (S_gnj) )

      ; 
      (when (j6c) 
        (S_gnj) )

      ; 
      (when (cxf) 
        (S_hnj) )

      ; 
      (when (l6c) 
        (S_hnj) )

      ; 
      (when (hxf) 
        (S_jnj) )

      ; 
      (when (q6c) 
        (S_jnj) )

      ; 
      (when (kxf) 
        (S_knj) )

      ; 
      (when (t6c) 
        (S_knj) )

      ; 
      (when (mxf) 
        (S_lnj) )

      ; 
      (when (v6c) 
        (S_lnj) )

    )
  )
  (:action closure_merge_AT_P5-5___4
    :effect 
      ; merge l//xi
      (when  (and (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) )
         (and (not (jzf)) (not (gzf)) (not (bzf)) (not (yyf)) (not (vyf)) (not (tyf)) (not (qyf)) (not (lyf)) (not (jyf)) (not (gyf)) (not (byf)) (not (yxf)) (not (vxf)) (not (txf)) (not (qxf)) (not (lxf)) (not (jxf)) (not (gxf)) (not (bxf)) (not (ywf)) (not (vwf)) (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

  )
  (:action closure_merge_AT_P5-5___5
    :effect 
      ; merge l//xi
      (when  (and (S_mnj) (S_qnj) (S_rnj) (S_tnj) (S_unj) (S_vnj) (S_xnj) )
         (and (not (jzf)) (not (gzf)) (not (bzf)) (not (yyf)) (not (vyf)) (not (tyf)) (not (qyf)) (not (lyf)) (not (jyf)) (not (gyf)) (not (byf)) (not (yxf)) (not (vxf)) (not (txf)) (not (qxf)) (not (lxf)) (not (jxf)) (not (gxf)) (not (bxf)) (not (ywf)) (not (vwf)) (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

  )
  (:action closure_add_sl__AT_P5-5___6
    :effect  (and 
      ; 
      (when (rxf) 
        (S_mnj) )

      ; 
      (when (v7c) 
        (S_mnj) )

      ; 
      (when (uxf) 
        (S_qnj) )

      ; 
      (when (y7c) 
        (S_qnj) )

      ; 
      (when (xxf) 
        (S_rnj) )

      ; 
      (when (b8c) 
        (S_rnj) )

      ; 
      (when (zxf) 
        (S_tnj) )

      ; 
      (when (g8c) 
        (S_tnj) )

      ; 
      (when (cyf) 
        (S_unj) )

      ; 
      (when (j8c) 
        (S_unj) )

      ; 
      (when (hyf) 
        (S_vnj) )

      ; 
      (when (l8c) 
        (S_vnj) )

      ; 
      (when (kyf) 
        (S_xnj) )

      ; 
      (when (q8c) 
        (S_xnj) )

    )
  )
  (:action closure_merge_AT_P5-5___7
    :effect 
      ; merge l//xi
      (when  (and (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) )
         (and (not (jzf)) (not (gzf)) (not (bzf)) (not (yyf)) (not (vyf)) (not (tyf)) (not (qyf)) (not (lyf)) (not (jyf)) (not (gyf)) (not (byf)) (not (yxf)) (not (vxf)) (not (txf)) (not (qxf)) (not (lxf)) (not (jxf)) (not (gxf)) (not (bxf)) (not (ywf)) (not (vwf)) (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

  )
  (:action closure_merge_AT_P5-5___8
    :effect 
      ; merge l//xi
      (when  (and (S_ynj) (S_znj) (S_boj) (S_coj) (S_goj) (S_hoj) (S_joj) )
         (and (not (jzf)) (not (gzf)) (not (bzf)) (not (yyf)) (not (vyf)) (not (tyf)) (not (qyf)) (not (lyf)) (not (jyf)) (not (gyf)) (not (byf)) (not (yxf)) (not (vxf)) (not (txf)) (not (qxf)) (not (lxf)) (not (jxf)) (not (gxf)) (not (bxf)) (not (ywf)) (not (vwf)) (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

  )
  (:action closure_add_sl__AT_P5-5___9
    :effect  (and 
      ; 
      (when (myf) 
        (S_ynj) )

      ; 
      (when (q9c) 
        (S_ynj) )

      ; 
      (when (ryf) 
        (S_znj) )

      ; 
      (when (t9c) 
        (S_znj) )

      ; 
      (when (uyf) 
        (S_boj) )

      ; 
      (when (v9c) 
        (S_boj) )

      ; 
      (when (xyf) 
        (S_coj) )

      ; 
      (when (y9c) 
        (S_coj) )

      ; 
      (when (zyf) 
        (S_goj) )

      ; 
      (when (b0c) 
        (S_goj) )

      ; 
      (when (czf) 
        (S_hoj) )

      ; 
      (when (g0c) 
        (S_hoj) )

      ; 
      (when (hzf) 
        (S_joj) )

      ; 
      (when (j0c) 
        (S_joj) )

    )
  )
  (:action closure_merge_AT_P5-6___1
    :effect 
      ; merge l//xi
      (when  (and (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) )
         (and (not (y2f)) (not (v2f)) (not (t2f)) (not (q2f)) (not (l2f)) (not (j2f)) (not (g2f)) (not (b2f)) (not (y1f)) (not (v1f)) (not (t1f)) (not (q1f)) (not (l1f)) (not (j1f)) (not (g1f)) (not (b1f)) (not (yzf)) (not (vzf)) (not (tzf)) (not (qzf)) (not (lzf)) (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

  )
  (:action closure_merge_AT_P5-6___2
    :effect 
      ; merge l//xi
      (when  (and (S_koj) (S_loj) (S_moj) (S_qoj) (S_roj) (S_toj) (S_uoj) )
         (and (not (y2f)) (not (v2f)) (not (t2f)) (not (q2f)) (not (l2f)) (not (j2f)) (not (g2f)) (not (b2f)) (not (y1f)) (not (v1f)) (not (t1f)) (not (q1f)) (not (l1f)) (not (j1f)) (not (g1f)) (not (b1f)) (not (yzf)) (not (vzf)) (not (tzf)) (not (qzf)) (not (lzf)) (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

  )
  (:action closure_add_sl__AT_P5-6___3
    :effect  (and 
      ; 
      (when (kzf) 
        (S_koj) )

      ; 
      (when (b6c) 
        (S_koj) )

      ; 
      (when (mzf) 
        (S_loj) )

      ; 
      (when (g6c) 
        (S_loj) )

      ; 
      (when (rzf) 
        (S_moj) )

      ; 
      (when (j6c) 
        (S_moj) )

      ; 
      (when (uzf) 
        (S_qoj) )

      ; 
      (when (l6c) 
        (S_qoj) )

      ; 
      (when (xzf) 
        (S_roj) )

      ; 
      (when (q6c) 
        (S_roj) )

      ; 
      (when (zzf) 
        (S_toj) )

      ; 
      (when (t6c) 
        (S_toj) )

      ; 
      (when (c1f) 
        (S_uoj) )

      ; 
      (when (v6c) 
        (S_uoj) )

    )
  )
  (:action closure_merge_AT_P5-6___4
    :effect 
      ; merge l//xi
      (when  (and (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) )
         (and (not (y2f)) (not (v2f)) (not (t2f)) (not (q2f)) (not (l2f)) (not (j2f)) (not (g2f)) (not (b2f)) (not (y1f)) (not (v1f)) (not (t1f)) (not (q1f)) (not (l1f)) (not (j1f)) (not (g1f)) (not (b1f)) (not (yzf)) (not (vzf)) (not (tzf)) (not (qzf)) (not (lzf)) (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

  )
  (:action closure_merge_AT_P5-6___5
    :effect 
      ; merge l//xi
      (when  (and (S_voj) (S_xoj) (S_yoj) (S_zoj) (S_bpj) (S_cpj) (S_gpj) )
         (and (not (y2f)) (not (v2f)) (not (t2f)) (not (q2f)) (not (l2f)) (not (j2f)) (not (g2f)) (not (b2f)) (not (y1f)) (not (v1f)) (not (t1f)) (not (q1f)) (not (l1f)) (not (j1f)) (not (g1f)) (not (b1f)) (not (yzf)) (not (vzf)) (not (tzf)) (not (qzf)) (not (lzf)) (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

  )
  (:action closure_add_sl__AT_P5-6___6
    :effect  (and 
      ; 
      (when (h1f) 
        (S_voj) )

      ; 
      (when (v7c) 
        (S_voj) )

      ; 
      (when (k1f) 
        (S_xoj) )

      ; 
      (when (y7c) 
        (S_xoj) )

      ; 
      (when (m1f) 
        (S_yoj) )

      ; 
      (when (b8c) 
        (S_yoj) )

      ; 
      (when (r1f) 
        (S_zoj) )

      ; 
      (when (g8c) 
        (S_zoj) )

      ; 
      (when (u1f) 
        (S_bpj) )

      ; 
      (when (j8c) 
        (S_bpj) )

      ; 
      (when (x1f) 
        (S_cpj) )

      ; 
      (when (l8c) 
        (S_cpj) )

      ; 
      (when (z1f) 
        (S_gpj) )

      ; 
      (when (q8c) 
        (S_gpj) )

    )
  )
  (:action closure_merge_AT_P5-6___7
    :effect 
      ; merge l//xi
      (when  (and (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) )
         (and (not (y2f)) (not (v2f)) (not (t2f)) (not (q2f)) (not (l2f)) (not (j2f)) (not (g2f)) (not (b2f)) (not (y1f)) (not (v1f)) (not (t1f)) (not (q1f)) (not (l1f)) (not (j1f)) (not (g1f)) (not (b1f)) (not (yzf)) (not (vzf)) (not (tzf)) (not (qzf)) (not (lzf)) (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

  )
  (:action closure_merge_AT_P5-6___8
    :effect 
      ; merge l//xi
      (when  (and (S_hpj) (S_jpj) (S_kpj) (S_lpj) (S_mpj) (S_qpj) (S_rpj) )
         (and (not (y2f)) (not (v2f)) (not (t2f)) (not (q2f)) (not (l2f)) (not (j2f)) (not (g2f)) (not (b2f)) (not (y1f)) (not (v1f)) (not (t1f)) (not (q1f)) (not (l1f)) (not (j1f)) (not (g1f)) (not (b1f)) (not (yzf)) (not (vzf)) (not (tzf)) (not (qzf)) (not (lzf)) (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

  )
  (:action closure_add_sl__AT_P5-6___9
    :effect  (and 
      ; 
      (when (c2f) 
        (S_hpj) )

      ; 
      (when (q9c) 
        (S_hpj) )

      ; 
      (when (h2f) 
        (S_jpj) )

      ; 
      (when (t9c) 
        (S_jpj) )

      ; 
      (when (k2f) 
        (S_kpj) )

      ; 
      (when (v9c) 
        (S_kpj) )

      ; 
      (when (m2f) 
        (S_lpj) )

      ; 
      (when (y9c) 
        (S_lpj) )

      ; 
      (when (r2f) 
        (S_mpj) )

      ; 
      (when (b0c) 
        (S_mpj) )

      ; 
      (when (u2f) 
        (S_qpj) )

      ; 
      (when (g0c) 
        (S_qpj) )

      ; 
      (when (x2f) 
        (S_rpj) )

      ; 
      (when (j0c) 
        (S_rpj) )

    )
  )
  (:action closure_merge_AT_P5-7___1
    :effect 
      ; merge l//xi
      (when  (and (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) )
         (and (not (q5f)) (not (l5f)) (not (j5f)) (not (g5f)) (not (b5f)) (not (y4f)) (not (v4f)) (not (t4f)) (not (q4f)) (not (l4f)) (not (j4f)) (not (g4f)) (not (b4f)) (not (y3f)) (not (v3f)) (not (t3f)) (not (q3f)) (not (l3f)) (not (j3f)) (not (g3f)) (not (b3f)) (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

  )
  (:action closure_merge_AT_P5-7___2
    :effect 
      ; merge l//xi
      (when  (and (S_tpj) (S_upj) (S_vpj) (S_xpj) (S_ypj) (S_zpj) (S_bqj) )
         (and (not (q5f)) (not (l5f)) (not (j5f)) (not (g5f)) (not (b5f)) (not (y4f)) (not (v4f)) (not (t4f)) (not (q4f)) (not (l4f)) (not (j4f)) (not (g4f)) (not (b4f)) (not (y3f)) (not (v3f)) (not (t3f)) (not (q3f)) (not (l3f)) (not (j3f)) (not (g3f)) (not (b3f)) (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

  )
  (:action closure_add_sl__AT_P5-7___3
    :effect  (and 
      ; 
      (when (z2f) 
        (S_tpj) )

      ; 
      (when (b6c) 
        (S_tpj) )

      ; 
      (when (c3f) 
        (S_upj) )

      ; 
      (when (g6c) 
        (S_upj) )

      ; 
      (when (h3f) 
        (S_vpj) )

      ; 
      (when (j6c) 
        (S_vpj) )

      ; 
      (when (k3f) 
        (S_xpj) )

      ; 
      (when (l6c) 
        (S_xpj) )

      ; 
      (when (m3f) 
        (S_ypj) )

      ; 
      (when (q6c) 
        (S_ypj) )

      ; 
      (when (r3f) 
        (S_zpj) )

      ; 
      (when (t6c) 
        (S_zpj) )

      ; 
      (when (u3f) 
        (S_bqj) )

      ; 
      (when (v6c) 
        (S_bqj) )

    )
  )
  (:action closure_merge_AT_P5-7___4
    :effect 
      ; merge l//xi
      (when  (and (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) )
         (and (not (q5f)) (not (l5f)) (not (j5f)) (not (g5f)) (not (b5f)) (not (y4f)) (not (v4f)) (not (t4f)) (not (q4f)) (not (l4f)) (not (j4f)) (not (g4f)) (not (b4f)) (not (y3f)) (not (v3f)) (not (t3f)) (not (q3f)) (not (l3f)) (not (j3f)) (not (g3f)) (not (b3f)) (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

  )
  (:action closure_merge_AT_P5-7___5
    :effect 
      ; merge l//xi
      (when  (and (S_cqj) (S_gqj) (S_hqj) (S_jqj) (S_kqj) (S_lqj) (S_mqj) )
         (and (not (q5f)) (not (l5f)) (not (j5f)) (not (g5f)) (not (b5f)) (not (y4f)) (not (v4f)) (not (t4f)) (not (q4f)) (not (l4f)) (not (j4f)) (not (g4f)) (not (b4f)) (not (y3f)) (not (v3f)) (not (t3f)) (not (q3f)) (not (l3f)) (not (j3f)) (not (g3f)) (not (b3f)) (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

  )
  (:action closure_add_sl__AT_P5-7___6
    :effect  (and 
      ; 
      (when (x3f) 
        (S_cqj) )

      ; 
      (when (v7c) 
        (S_cqj) )

      ; 
      (when (z3f) 
        (S_gqj) )

      ; 
      (when (y7c) 
        (S_gqj) )

      ; 
      (when (c4f) 
        (S_hqj) )

      ; 
      (when (b8c) 
        (S_hqj) )

      ; 
      (when (h4f) 
        (S_jqj) )

      ; 
      (when (g8c) 
        (S_jqj) )

      ; 
      (when (k4f) 
        (S_kqj) )

      ; 
      (when (j8c) 
        (S_kqj) )

      ; 
      (when (m4f) 
        (S_lqj) )

      ; 
      (when (l8c) 
        (S_lqj) )

      ; 
      (when (r4f) 
        (S_mqj) )

      ; 
      (when (q8c) 
        (S_mqj) )

    )
  )
  (:action closure_merge_AT_P5-7___7
    :effect 
      ; merge l//xi
      (when  (and (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) )
         (and (not (q5f)) (not (l5f)) (not (j5f)) (not (g5f)) (not (b5f)) (not (y4f)) (not (v4f)) (not (t4f)) (not (q4f)) (not (l4f)) (not (j4f)) (not (g4f)) (not (b4f)) (not (y3f)) (not (v3f)) (not (t3f)) (not (q3f)) (not (l3f)) (not (j3f)) (not (g3f)) (not (b3f)) (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

  )
  (:action closure_merge_AT_P5-7___8
    :effect 
      ; merge l//xi
      (when  (and (S_qqj) (S_rqj) (S_tqj) (S_uqj) (S_vqj) (S_xqj) (S_yqj) )
         (and (not (q5f)) (not (l5f)) (not (j5f)) (not (g5f)) (not (b5f)) (not (y4f)) (not (v4f)) (not (t4f)) (not (q4f)) (not (l4f)) (not (j4f)) (not (g4f)) (not (b4f)) (not (y3f)) (not (v3f)) (not (t3f)) (not (q3f)) (not (l3f)) (not (j3f)) (not (g3f)) (not (b3f)) (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

  )
  (:action closure_add_sl__AT_P5-7___9
    :effect  (and 
      ; 
      (when (u4f) 
        (S_qqj) )

      ; 
      (when (q9c) 
        (S_qqj) )

      ; 
      (when (x4f) 
        (S_rqj) )

      ; 
      (when (t9c) 
        (S_rqj) )

      ; 
      (when (z4f) 
        (S_tqj) )

      ; 
      (when (v9c) 
        (S_tqj) )

      ; 
      (when (c5f) 
        (S_uqj) )

      ; 
      (when (y9c) 
        (S_uqj) )

      ; 
      (when (h5f) 
        (S_vqj) )

      ; 
      (when (b0c) 
        (S_vqj) )

      ; 
      (when (k5f) 
        (S_xqj) )

      ; 
      (when (g0c) 
        (S_xqj) )

      ; 
      (when (m5f) 
        (S_yqj) )

      ; 
      (when (j0c) 
        (S_yqj) )

    )
  )
  (:action closure_merge_AT_P6-1___1
    :effect 
      ; merge l//xi
      (when  (and (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) )
         (and (not (g6h)) (not (b6h)) (not (y5h)) (not (v5h)) (not (t5h)) (not (q5h)) (not (l5h)) (not (j5h)) (not (g5h)) (not (b5h)) (not (y4h)) (not (v4h)) (not (t4h)) (not (q4h)) (not (l4h)) (not (j4h)) (not (g4h)) (not (b4h)) (not (y3h)) (not (v3h)) (not (t3h)) (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

  )
  (:action closure_merge_AT_P6-1___2
    :effect 
      ; merge l//xi
      (when  (and (S_zqj) (S_bsj) (S_csj) (S_gsj) (S_hsj) (S_jsj) (S_ksj) )
         (and (not (g6h)) (not (b6h)) (not (y5h)) (not (v5h)) (not (t5h)) (not (q5h)) (not (l5h)) (not (j5h)) (not (g5h)) (not (b5h)) (not (y4h)) (not (v4h)) (not (t4h)) (not (q4h)) (not (l4h)) (not (j4h)) (not (g4h)) (not (b4h)) (not (y3h)) (not (v3h)) (not (t3h)) (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

  )
  (:action closure_add_sl__AT_P6-1___3
    :effect  (and 
      ; 
      (when (r3h) 
        (S_zqj) )

      ; 
      (when (b6c) 
        (S_zqj) )

      ; 
      (when (u3h) 
        (S_bsj) )

      ; 
      (when (g6c) 
        (S_bsj) )

      ; 
      (when (x3h) 
        (S_csj) )

      ; 
      (when (j6c) 
        (S_csj) )

      ; 
      (when (z3h) 
        (S_gsj) )

      ; 
      (when (l6c) 
        (S_gsj) )

      ; 
      (when (c4h) 
        (S_hsj) )

      ; 
      (when (q6c) 
        (S_hsj) )

      ; 
      (when (h4h) 
        (S_jsj) )

      ; 
      (when (t6c) 
        (S_jsj) )

      ; 
      (when (k4h) 
        (S_ksj) )

      ; 
      (when (v6c) 
        (S_ksj) )

    )
  )
  (:action closure_merge_AT_P6-1___4
    :effect 
      ; merge l//xi
      (when  (and (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) )
         (and (not (g6h)) (not (b6h)) (not (y5h)) (not (v5h)) (not (t5h)) (not (q5h)) (not (l5h)) (not (j5h)) (not (g5h)) (not (b5h)) (not (y4h)) (not (v4h)) (not (t4h)) (not (q4h)) (not (l4h)) (not (j4h)) (not (g4h)) (not (b4h)) (not (y3h)) (not (v3h)) (not (t3h)) (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

  )
  (:action closure_merge_AT_P6-1___5
    :effect 
      ; merge l//xi
      (when  (and (S_lsj) (S_msj) (S_qsj) (S_rsj) (S_tsj) (S_usj) (S_vsj) )
         (and (not (g6h)) (not (b6h)) (not (y5h)) (not (v5h)) (not (t5h)) (not (q5h)) (not (l5h)) (not (j5h)) (not (g5h)) (not (b5h)) (not (y4h)) (not (v4h)) (not (t4h)) (not (q4h)) (not (l4h)) (not (j4h)) (not (g4h)) (not (b4h)) (not (y3h)) (not (v3h)) (not (t3h)) (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

  )
  (:action closure_add_sl__AT_P6-1___6
    :effect  (and 
      ; 
      (when (m4h) 
        (S_lsj) )

      ; 
      (when (v7c) 
        (S_lsj) )

      ; 
      (when (r4h) 
        (S_msj) )

      ; 
      (when (y7c) 
        (S_msj) )

      ; 
      (when (u4h) 
        (S_qsj) )

      ; 
      (when (b8c) 
        (S_qsj) )

      ; 
      (when (x4h) 
        (S_rsj) )

      ; 
      (when (g8c) 
        (S_rsj) )

      ; 
      (when (z4h) 
        (S_tsj) )

      ; 
      (when (j8c) 
        (S_tsj) )

      ; 
      (when (c5h) 
        (S_usj) )

      ; 
      (when (l8c) 
        (S_usj) )

      ; 
      (when (h5h) 
        (S_vsj) )

      ; 
      (when (q8c) 
        (S_vsj) )

    )
  )
  (:action closure_merge_AT_P6-1___7
    :effect 
      ; merge l//xi
      (when  (and (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) )
         (and (not (g6h)) (not (b6h)) (not (y5h)) (not (v5h)) (not (t5h)) (not (q5h)) (not (l5h)) (not (j5h)) (not (g5h)) (not (b5h)) (not (y4h)) (not (v4h)) (not (t4h)) (not (q4h)) (not (l4h)) (not (j4h)) (not (g4h)) (not (b4h)) (not (y3h)) (not (v3h)) (not (t3h)) (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

  )
  (:action closure_merge_AT_P6-1___8
    :effect 
      ; merge l//xi
      (when  (and (S_xsj) (S_ysj) (S_zsj) (S_brj) (S_crj) (S_grj) (S_hrj) )
         (and (not (g6h)) (not (b6h)) (not (y5h)) (not (v5h)) (not (t5h)) (not (q5h)) (not (l5h)) (not (j5h)) (not (g5h)) (not (b5h)) (not (y4h)) (not (v4h)) (not (t4h)) (not (q4h)) (not (l4h)) (not (j4h)) (not (g4h)) (not (b4h)) (not (y3h)) (not (v3h)) (not (t3h)) (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

  )
  (:action closure_add_sl__AT_P6-1___9
    :effect  (and 
      ; 
      (when (k5h) 
        (S_xsj) )

      ; 
      (when (q9c) 
        (S_xsj) )

      ; 
      (when (m5h) 
        (S_ysj) )

      ; 
      (when (t9c) 
        (S_ysj) )

      ; 
      (when (r5h) 
        (S_zsj) )

      ; 
      (when (v9c) 
        (S_zsj) )

      ; 
      (when (u5h) 
        (S_brj) )

      ; 
      (when (y9c) 
        (S_brj) )

      ; 
      (when (x5h) 
        (S_crj) )

      ; 
      (when (b0c) 
        (S_crj) )

      ; 
      (when (z5h) 
        (S_grj) )

      ; 
      (when (g0c) 
        (S_grj) )

      ; 
      (when (c6h) 
        (S_hrj) )

      ; 
      (when (j0c) 
        (S_hrj) )

    )
  )
  (:action closure_merge_AT_P6-2___1
    :effect 
      ; merge l//xi
      (when  (and (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) )
         (and (not (gkh)) (not (bkh)) (not (yjh)) (not (vjh)) (not (tjh)) (not (qjh)) (not (ljh)) (not (jjh)) (not (gjh)) (not (bjh)) (not (yih)) (not (vih)) (not (tih)) (not (qih)) (not (lih)) (not (jih)) (not (gih)) (not (bih)) (not (yhh)) (not (vhh)) (not (thh)) (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

  )
  (:action closure_merge_AT_P6-2___2
    :effect 
      ; merge l//xi
      (when  (and (S_jrj) (S_krj) (S_lrj) (S_mrj) (S_qrj) (S_rrj) (S_trj) )
         (and (not (gkh)) (not (bkh)) (not (yjh)) (not (vjh)) (not (tjh)) (not (qjh)) (not (ljh)) (not (jjh)) (not (gjh)) (not (bjh)) (not (yih)) (not (vih)) (not (tih)) (not (qih)) (not (lih)) (not (jih)) (not (gih)) (not (bih)) (not (yhh)) (not (vhh)) (not (thh)) (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

  )
  (:action closure_add_sl__AT_P6-2___3
    :effect  (and 
      ; 
      (when (rhh) 
        (S_jrj) )

      ; 
      (when (b6c) 
        (S_jrj) )

      ; 
      (when (uhh) 
        (S_krj) )

      ; 
      (when (g6c) 
        (S_krj) )

      ; 
      (when (xhh) 
        (S_lrj) )

      ; 
      (when (j6c) 
        (S_lrj) )

      ; 
      (when (zhh) 
        (S_mrj) )

      ; 
      (when (l6c) 
        (S_mrj) )

      ; 
      (when (cih) 
        (S_qrj) )

      ; 
      (when (q6c) 
        (S_qrj) )

      ; 
      (when (hih) 
        (S_rrj) )

      ; 
      (when (t6c) 
        (S_rrj) )

      ; 
      (when (kih) 
        (S_trj) )

      ; 
      (when (v6c) 
        (S_trj) )

    )
  )
  (:action closure_merge_AT_P6-2___4
    :effect 
      ; merge l//xi
      (when  (and (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) )
         (and (not (gkh)) (not (bkh)) (not (yjh)) (not (vjh)) (not (tjh)) (not (qjh)) (not (ljh)) (not (jjh)) (not (gjh)) (not (bjh)) (not (yih)) (not (vih)) (not (tih)) (not (qih)) (not (lih)) (not (jih)) (not (gih)) (not (bih)) (not (yhh)) (not (vhh)) (not (thh)) (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

  )
  (:action closure_merge_AT_P6-2___5
    :effect 
      ; merge l//xi
      (when  (and (S_urj) (S_vrj) (S_xrj) (S_yrj) (S_zrj) (S_btj) (S_ctj) )
         (and (not (gkh)) (not (bkh)) (not (yjh)) (not (vjh)) (not (tjh)) (not (qjh)) (not (ljh)) (not (jjh)) (not (gjh)) (not (bjh)) (not (yih)) (not (vih)) (not (tih)) (not (qih)) (not (lih)) (not (jih)) (not (gih)) (not (bih)) (not (yhh)) (not (vhh)) (not (thh)) (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

  )
  (:action closure_add_sl__AT_P6-2___6
    :effect  (and 
      ; 
      (when (mih) 
        (S_urj) )

      ; 
      (when (v7c) 
        (S_urj) )

      ; 
      (when (rih) 
        (S_vrj) )

      ; 
      (when (y7c) 
        (S_vrj) )

      ; 
      (when (uih) 
        (S_xrj) )

      ; 
      (when (b8c) 
        (S_xrj) )

      ; 
      (when (xih) 
        (S_yrj) )

      ; 
      (when (g8c) 
        (S_yrj) )

      ; 
      (when (zih) 
        (S_zrj) )

      ; 
      (when (j8c) 
        (S_zrj) )

      ; 
      (when (cjh) 
        (S_btj) )

      ; 
      (when (l8c) 
        (S_btj) )

      ; 
      (when (hjh) 
        (S_ctj) )

      ; 
      (when (q8c) 
        (S_ctj) )

    )
  )
  (:action closure_merge_AT_P6-2___7
    :effect 
      ; merge l//xi
      (when  (and (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) )
         (and (not (gkh)) (not (bkh)) (not (yjh)) (not (vjh)) (not (tjh)) (not (qjh)) (not (ljh)) (not (jjh)) (not (gjh)) (not (bjh)) (not (yih)) (not (vih)) (not (tih)) (not (qih)) (not (lih)) (not (jih)) (not (gih)) (not (bih)) (not (yhh)) (not (vhh)) (not (thh)) (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

  )
  (:action closure_merge_AT_P6-2___8
    :effect 
      ; merge l//xi
      (when  (and (S_gtj) (S_htj) (S_jtj) (S_ktj) (S_ltj) (S_mtj) (S_qtj) )
         (and (not (gkh)) (not (bkh)) (not (yjh)) (not (vjh)) (not (tjh)) (not (qjh)) (not (ljh)) (not (jjh)) (not (gjh)) (not (bjh)) (not (yih)) (not (vih)) (not (tih)) (not (qih)) (not (lih)) (not (jih)) (not (gih)) (not (bih)) (not (yhh)) (not (vhh)) (not (thh)) (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

  )
  (:action closure_add_sl__AT_P6-2___9
    :effect  (and 
      ; 
      (when (kjh) 
        (S_gtj) )

      ; 
      (when (q9c) 
        (S_gtj) )

      ; 
      (when (mjh) 
        (S_htj) )

      ; 
      (when (t9c) 
        (S_htj) )

      ; 
      (when (rjh) 
        (S_jtj) )

      ; 
      (when (v9c) 
        (S_jtj) )

      ; 
      (when (ujh) 
        (S_ktj) )

      ; 
      (when (y9c) 
        (S_ktj) )

      ; 
      (when (xjh) 
        (S_ltj) )

      ; 
      (when (b0c) 
        (S_ltj) )

      ; 
      (when (zjh) 
        (S_mtj) )

      ; 
      (when (g0c) 
        (S_mtj) )

      ; 
      (when (ckh) 
        (S_qtj) )

      ; 
      (when (j0c) 
        (S_qtj) )

    )
  )
  (:action closure_merge_AT_P6-3___1
    :effect 
      ; merge l//xi
      (when  (and (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) )
         (and (not (tog)) (not (qog)) (not (log)) (not (jog)) (not (gog)) (not (bog)) (not (yng)) (not (vng)) (not (tng)) (not (qng)) (not (lng)) (not (jng)) (not (gng)) (not (bng)) (not (ymg)) (not (vmg)) (not (tmg)) (not (qmg)) (not (lmg)) (not (jmg)) (not (gmg)) (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

  )
  (:action closure_merge_AT_P6-3___2
    :effect 
      ; merge l//xi
      (when  (and (S_rtj) (S_ttj) (S_utj) (S_vtj) (S_xtj) (S_ytj) (S_ztj) )
         (and (not (tog)) (not (qog)) (not (log)) (not (jog)) (not (gog)) (not (bog)) (not (yng)) (not (vng)) (not (tng)) (not (qng)) (not (lng)) (not (jng)) (not (gng)) (not (bng)) (not (ymg)) (not (vmg)) (not (tmg)) (not (qmg)) (not (lmg)) (not (jmg)) (not (gmg)) (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

  )
  (:action closure_add_sl__AT_P6-3___3
    :effect  (and 
      ; 
      (when (cmg) 
        (S_rtj) )

      ; 
      (when (b6c) 
        (S_rtj) )

      ; 
      (when (hmg) 
        (S_ttj) )

      ; 
      (when (g6c) 
        (S_ttj) )

      ; 
      (when (kmg) 
        (S_utj) )

      ; 
      (when (j6c) 
        (S_utj) )

      ; 
      (when (mmg) 
        (S_vtj) )

      ; 
      (when (l6c) 
        (S_vtj) )

      ; 
      (when (rmg) 
        (S_xtj) )

      ; 
      (when (q6c) 
        (S_xtj) )

      ; 
      (when (umg) 
        (S_ytj) )

      ; 
      (when (t6c) 
        (S_ytj) )

      ; 
      (when (xmg) 
        (S_ztj) )

      ; 
      (when (v6c) 
        (S_ztj) )

    )
  )
  (:action closure_merge_AT_P6-3___4
    :effect 
      ; merge l//xi
      (when  (and (zmg) (cng) (hng) (kng) (mng) (rng) (ung) )
         (and (not (tog)) (not (qog)) (not (log)) (not (jog)) (not (gog)) (not (bog)) (not (yng)) (not (vng)) (not (tng)) (not (qng)) (not (lng)) (not (jng)) (not (gng)) (not (bng)) (not (ymg)) (not (vmg)) (not (tmg)) (not (qmg)) (not (lmg)) (not (jmg)) (not (gmg)) (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

  )
  (:action closure_merge_AT_P6-3___5
    :effect 
      ; merge l//xi
      (when  (and (S_buj) (S_cuj) (S_guj) (S_huj) (S_juj) (S_kuj) (S_luj) )
         (and (not (tog)) (not (qog)) (not (log)) (not (jog)) (not (gog)) (not (bog)) (not (yng)) (not (vng)) (not (tng)) (not (qng)) (not (lng)) (not (jng)) (not (gng)) (not (bng)) (not (ymg)) (not (vmg)) (not (tmg)) (not (qmg)) (not (lmg)) (not (jmg)) (not (gmg)) (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

  )
  (:action closure_add_sl__AT_P6-3___6
    :effect  (and 
      ; 
      (when (zmg) 
        (S_buj) )

      ; 
      (when (v7c) 
        (S_buj) )

      ; 
      (when (cng) 
        (S_cuj) )

      ; 
      (when (y7c) 
        (S_cuj) )

      ; 
      (when (hng) 
        (S_guj) )

      ; 
      (when (b8c) 
        (S_guj) )

      ; 
      (when (kng) 
        (S_huj) )

      ; 
      (when (g8c) 
        (S_huj) )

      ; 
      (when (mng) 
        (S_juj) )

      ; 
      (when (j8c) 
        (S_juj) )

      ; 
      (when (rng) 
        (S_kuj) )

      ; 
      (when (l8c) 
        (S_kuj) )

      ; 
      (when (ung) 
        (S_luj) )

      ; 
      (when (q8c) 
        (S_luj) )

    )
  )
  (:action closure_merge_AT_P6-3___7
    :effect 
      ; merge l//xi
      (when  (and (xng) (zng) (cog) (hog) (kog) (mog) (rog) )
         (and (not (tog)) (not (qog)) (not (log)) (not (jog)) (not (gog)) (not (bog)) (not (yng)) (not (vng)) (not (tng)) (not (qng)) (not (lng)) (not (jng)) (not (gng)) (not (bng)) (not (ymg)) (not (vmg)) (not (tmg)) (not (qmg)) (not (lmg)) (not (jmg)) (not (gmg)) (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

  )
  (:action closure_merge_AT_P6-3___8
    :effect 
      ; merge l//xi
      (when  (and (S_muj) (S_quj) (S_ruj) (S_tuj) (S_uuj) (S_vuj) (S_xuj) )
         (and (not (tog)) (not (qog)) (not (log)) (not (jog)) (not (gog)) (not (bog)) (not (yng)) (not (vng)) (not (tng)) (not (qng)) (not (lng)) (not (jng)) (not (gng)) (not (bng)) (not (ymg)) (not (vmg)) (not (tmg)) (not (qmg)) (not (lmg)) (not (jmg)) (not (gmg)) (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

  )
  (:action closure_add_sl__AT_P6-3___9
    :effect  (and 
      ; 
      (when (xng) 
        (S_muj) )

      ; 
      (when (q9c) 
        (S_muj) )

      ; 
      (when (zng) 
        (S_quj) )

      ; 
      (when (t9c) 
        (S_quj) )

      ; 
      (when (cog) 
        (S_ruj) )

      ; 
      (when (v9c) 
        (S_ruj) )

      ; 
      (when (hog) 
        (S_tuj) )

      ; 
      (when (y9c) 
        (S_tuj) )

      ; 
      (when (kog) 
        (S_uuj) )

      ; 
      (when (b0c) 
        (S_uuj) )

      ; 
      (when (mog) 
        (S_vuj) )

      ; 
      (when (g0c) 
        (S_vuj) )

      ; 
      (when (rog) 
        (S_xuj) )

      ; 
      (when (j0c) 
        (S_xuj) )

    )
  )
  (:action closure_merge_AT_P6-4___1
    :effect 
      ; merge l//xi
      (when  (and (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) )
         (and (not (tag)) (not (qag)) (not (lag)) (not (jag)) (not (gag)) (not (bag)) (not (y0f)) (not (v0f)) (not (t0f)) (not (q0f)) (not (l0f)) (not (j0f)) (not (g0f)) (not (b0f)) (not (y9f)) (not (v9f)) (not (t9f)) (not (q9f)) (not (l9f)) (not (j9f)) (not (g9f)) (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

  )
  (:action closure_merge_AT_P6-4___2
    :effect 
      ; merge l//xi
      (when  (and (S_yuj) (S_zuj) (S_bvj) (S_cvj) (S_gvj) (S_hvj) (S_jvj) )
         (and (not (tag)) (not (qag)) (not (lag)) (not (jag)) (not (gag)) (not (bag)) (not (y0f)) (not (v0f)) (not (t0f)) (not (q0f)) (not (l0f)) (not (j0f)) (not (g0f)) (not (b0f)) (not (y9f)) (not (v9f)) (not (t9f)) (not (q9f)) (not (l9f)) (not (j9f)) (not (g9f)) (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

  )
  (:action closure_add_sl__AT_P6-4___3
    :effect  (and 
      ; 
      (when (c9f) 
        (S_yuj) )

      ; 
      (when (b6c) 
        (S_yuj) )

      ; 
      (when (h9f) 
        (S_zuj) )

      ; 
      (when (g6c) 
        (S_zuj) )

      ; 
      (when (k9f) 
        (S_bvj) )

      ; 
      (when (j6c) 
        (S_bvj) )

      ; 
      (when (m9f) 
        (S_cvj) )

      ; 
      (when (l6c) 
        (S_cvj) )

      ; 
      (when (r9f) 
        (S_gvj) )

      ; 
      (when (q6c) 
        (S_gvj) )

      ; 
      (when (u9f) 
        (S_hvj) )

      ; 
      (when (t6c) 
        (S_hvj) )

      ; 
      (when (x9f) 
        (S_jvj) )

      ; 
      (when (v6c) 
        (S_jvj) )

    )
  )
  (:action closure_merge_AT_P6-4___4
    :effect 
      ; merge l//xi
      (when  (and (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) )
         (and (not (tag)) (not (qag)) (not (lag)) (not (jag)) (not (gag)) (not (bag)) (not (y0f)) (not (v0f)) (not (t0f)) (not (q0f)) (not (l0f)) (not (j0f)) (not (g0f)) (not (b0f)) (not (y9f)) (not (v9f)) (not (t9f)) (not (q9f)) (not (l9f)) (not (j9f)) (not (g9f)) (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

  )
  (:action closure_merge_AT_P6-4___5
    :effect 
      ; merge l//xi
      (when  (and (S_kvj) (S_lvj) (S_mvj) (S_qvj) (S_rvj) (S_tvj) (S_uvj) )
         (and (not (tag)) (not (qag)) (not (lag)) (not (jag)) (not (gag)) (not (bag)) (not (y0f)) (not (v0f)) (not (t0f)) (not (q0f)) (not (l0f)) (not (j0f)) (not (g0f)) (not (b0f)) (not (y9f)) (not (v9f)) (not (t9f)) (not (q9f)) (not (l9f)) (not (j9f)) (not (g9f)) (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

  )
  (:action closure_add_sl__AT_P6-4___6
    :effect  (and 
      ; 
      (when (z9f) 
        (S_kvj) )

      ; 
      (when (v7c) 
        (S_kvj) )

      ; 
      (when (c0f) 
        (S_lvj) )

      ; 
      (when (y7c) 
        (S_lvj) )

      ; 
      (when (h0f) 
        (S_mvj) )

      ; 
      (when (b8c) 
        (S_mvj) )

      ; 
      (when (k0f) 
        (S_qvj) )

      ; 
      (when (g8c) 
        (S_qvj) )

      ; 
      (when (m0f) 
        (S_rvj) )

      ; 
      (when (j8c) 
        (S_rvj) )

      ; 
      (when (r0f) 
        (S_tvj) )

      ; 
      (when (l8c) 
        (S_tvj) )

      ; 
      (when (u0f) 
        (S_uvj) )

      ; 
      (when (q8c) 
        (S_uvj) )

    )
  )
  (:action closure_merge_AT_P6-4___7
    :effect 
      ; merge l//xi
      (when  (and (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) )
         (and (not (tag)) (not (qag)) (not (lag)) (not (jag)) (not (gag)) (not (bag)) (not (y0f)) (not (v0f)) (not (t0f)) (not (q0f)) (not (l0f)) (not (j0f)) (not (g0f)) (not (b0f)) (not (y9f)) (not (v9f)) (not (t9f)) (not (q9f)) (not (l9f)) (not (j9f)) (not (g9f)) (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

  )
  (:action closure_merge_AT_P6-4___8
    :effect 
      ; merge l//xi
      (when  (and (S_vvj) (S_xvj) (S_yvj) (S_zvj) (S_bwj) (S_cwj) (S_gwj) )
         (and (not (tag)) (not (qag)) (not (lag)) (not (jag)) (not (gag)) (not (bag)) (not (y0f)) (not (v0f)) (not (t0f)) (not (q0f)) (not (l0f)) (not (j0f)) (not (g0f)) (not (b0f)) (not (y9f)) (not (v9f)) (not (t9f)) (not (q9f)) (not (l9f)) (not (j9f)) (not (g9f)) (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

  )
  (:action closure_add_sl__AT_P6-4___9
    :effect  (and 
      ; 
      (when (x0f) 
        (S_vvj) )

      ; 
      (when (q9c) 
        (S_vvj) )

      ; 
      (when (z0f) 
        (S_xvj) )

      ; 
      (when (t9c) 
        (S_xvj) )

      ; 
      (when (cag) 
        (S_yvj) )

      ; 
      (when (v9c) 
        (S_yvj) )

      ; 
      (when (hag) 
        (S_zvj) )

      ; 
      (when (y9c) 
        (S_zvj) )

      ; 
      (when (kag) 
        (S_bwj) )

      ; 
      (when (b0c) 
        (S_bwj) )

      ; 
      (when (mag) 
        (S_cwj) )

      ; 
      (when (g0c) 
        (S_cwj) )

      ; 
      (when (rag) 
        (S_gwj) )

      ; 
      (when (j0c) 
        (S_gwj) )

    )
  )
  (:action closure_merge_AT_P6-5___1
    :effect 
      ; merge l//xi
      (when  (and (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) )
         (and (not (geg)) (not (beg)) (not (ydg)) (not (vdg)) (not (tdg)) (not (qdg)) (not (ldg)) (not (jdg)) (not (gdg)) (not (bdg)) (not (ycg)) (not (vcg)) (not (tcg)) (not (qcg)) (not (lcg)) (not (jcg)) (not (gcg)) (not (bcg)) (not (ybg)) (not (vbg)) (not (tbg)) (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

  )
  (:action closure_merge_AT_P6-5___2
    :effect 
      ; merge l//xi
      (when  (and (S_hwj) (S_jwj) (S_kwj) (S_lwj) (S_mwj) (S_qwj) (S_rwj) )
         (and (not (geg)) (not (beg)) (not (ydg)) (not (vdg)) (not (tdg)) (not (qdg)) (not (ldg)) (not (jdg)) (not (gdg)) (not (bdg)) (not (ycg)) (not (vcg)) (not (tcg)) (not (qcg)) (not (lcg)) (not (jcg)) (not (gcg)) (not (bcg)) (not (ybg)) (not (vbg)) (not (tbg)) (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

  )
  (:action closure_add_sl__AT_P6-5___3
    :effect  (and 
      ; 
      (when (rbg) 
        (S_hwj) )

      ; 
      (when (b6c) 
        (S_hwj) )

      ; 
      (when (ubg) 
        (S_jwj) )

      ; 
      (when (g6c) 
        (S_jwj) )

      ; 
      (when (xbg) 
        (S_kwj) )

      ; 
      (when (j6c) 
        (S_kwj) )

      ; 
      (when (zbg) 
        (S_lwj) )

      ; 
      (when (l6c) 
        (S_lwj) )

      ; 
      (when (ccg) 
        (S_mwj) )

      ; 
      (when (q6c) 
        (S_mwj) )

      ; 
      (when (hcg) 
        (S_qwj) )

      ; 
      (when (t6c) 
        (S_qwj) )

      ; 
      (when (kcg) 
        (S_rwj) )

      ; 
      (when (v6c) 
        (S_rwj) )

    )
  )
  (:action closure_merge_AT_P6-5___4
    :effect 
      ; merge l//xi
      (when  (and (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) )
         (and (not (geg)) (not (beg)) (not (ydg)) (not (vdg)) (not (tdg)) (not (qdg)) (not (ldg)) (not (jdg)) (not (gdg)) (not (bdg)) (not (ycg)) (not (vcg)) (not (tcg)) (not (qcg)) (not (lcg)) (not (jcg)) (not (gcg)) (not (bcg)) (not (ybg)) (not (vbg)) (not (tbg)) (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

  )
  (:action closure_merge_AT_P6-5___5
    :effect 
      ; merge l//xi
      (when  (and (S_twj) (S_uwj) (S_vwj) (S_xwj) (S_ywj) (S_zwj) (S_bxj) )
         (and (not (geg)) (not (beg)) (not (ydg)) (not (vdg)) (not (tdg)) (not (qdg)) (not (ldg)) (not (jdg)) (not (gdg)) (not (bdg)) (not (ycg)) (not (vcg)) (not (tcg)) (not (qcg)) (not (lcg)) (not (jcg)) (not (gcg)) (not (bcg)) (not (ybg)) (not (vbg)) (not (tbg)) (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

  )
  (:action closure_add_sl__AT_P6-5___6
    :effect  (and 
      ; 
      (when (mcg) 
        (S_twj) )

      ; 
      (when (v7c) 
        (S_twj) )

      ; 
      (when (rcg) 
        (S_uwj) )

      ; 
      (when (y7c) 
        (S_uwj) )

      ; 
      (when (ucg) 
        (S_vwj) )

      ; 
      (when (b8c) 
        (S_vwj) )

      ; 
      (when (xcg) 
        (S_xwj) )

      ; 
      (when (g8c) 
        (S_xwj) )

      ; 
      (when (zcg) 
        (S_ywj) )

      ; 
      (when (j8c) 
        (S_ywj) )

      ; 
      (when (cdg) 
        (S_zwj) )

      ; 
      (when (l8c) 
        (S_zwj) )

      ; 
      (when (hdg) 
        (S_bxj) )

      ; 
      (when (q8c) 
        (S_bxj) )

    )
  )
  (:action closure_merge_AT_P6-5___7
    :effect 
      ; merge l//xi
      (when  (and (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) )
         (and (not (geg)) (not (beg)) (not (ydg)) (not (vdg)) (not (tdg)) (not (qdg)) (not (ldg)) (not (jdg)) (not (gdg)) (not (bdg)) (not (ycg)) (not (vcg)) (not (tcg)) (not (qcg)) (not (lcg)) (not (jcg)) (not (gcg)) (not (bcg)) (not (ybg)) (not (vbg)) (not (tbg)) (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

  )
  (:action closure_merge_AT_P6-5___8
    :effect 
      ; merge l//xi
      (when  (and (S_cxj) (S_gxj) (S_hxj) (S_jxj) (S_kxj) (S_lxj) (S_mxj) )
         (and (not (geg)) (not (beg)) (not (ydg)) (not (vdg)) (not (tdg)) (not (qdg)) (not (ldg)) (not (jdg)) (not (gdg)) (not (bdg)) (not (ycg)) (not (vcg)) (not (tcg)) (not (qcg)) (not (lcg)) (not (jcg)) (not (gcg)) (not (bcg)) (not (ybg)) (not (vbg)) (not (tbg)) (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

  )
  (:action closure_add_sl__AT_P6-5___9
    :effect  (and 
      ; 
      (when (kdg) 
        (S_cxj) )

      ; 
      (when (q9c) 
        (S_cxj) )

      ; 
      (when (mdg) 
        (S_gxj) )

      ; 
      (when (t9c) 
        (S_gxj) )

      ; 
      (when (rdg) 
        (S_hxj) )

      ; 
      (when (v9c) 
        (S_hxj) )

      ; 
      (when (udg) 
        (S_jxj) )

      ; 
      (when (y9c) 
        (S_jxj) )

      ; 
      (when (xdg) 
        (S_kxj) )

      ; 
      (when (b0c) 
        (S_kxj) )

      ; 
      (when (zdg) 
        (S_lxj) )

      ; 
      (when (g0c) 
        (S_lxj) )

      ; 
      (when (ceg) 
        (S_mxj) )

      ; 
      (when (j0c) 
        (S_mxj) )

    )
  )
  (:action closure_merge_AT_P6-6___1
    :effect 
      ; merge l//xi
      (when  (and (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) )
         (and (not (thg)) (not (qhg)) (not (lhg)) (not (jhg)) (not (ghg)) (not (bhg)) (not (ygg)) (not (vgg)) (not (tgg)) (not (qgg)) (not (lgg)) (not (jgg)) (not (ggg)) (not (bgg)) (not (yfg)) (not (vfg)) (not (tfg)) (not (qfg)) (not (lfg)) (not (jfg)) (not (gfg)) (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

  )
  (:action closure_merge_AT_P6-6___2
    :effect 
      ; merge l//xi
      (when  (and (S_qxj) (S_rxj) (S_txj) (S_uxj) (S_vxj) (S_xxj) (S_yxj) )
         (and (not (thg)) (not (qhg)) (not (lhg)) (not (jhg)) (not (ghg)) (not (bhg)) (not (ygg)) (not (vgg)) (not (tgg)) (not (qgg)) (not (lgg)) (not (jgg)) (not (ggg)) (not (bgg)) (not (yfg)) (not (vfg)) (not (tfg)) (not (qfg)) (not (lfg)) (not (jfg)) (not (gfg)) (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

  )
  (:action closure_add_sl__AT_P6-6___3
    :effect  (and 
      ; 
      (when (cfg) 
        (S_qxj) )

      ; 
      (when (b6c) 
        (S_qxj) )

      ; 
      (when (hfg) 
        (S_rxj) )

      ; 
      (when (g6c) 
        (S_rxj) )

      ; 
      (when (kfg) 
        (S_txj) )

      ; 
      (when (j6c) 
        (S_txj) )

      ; 
      (when (mfg) 
        (S_uxj) )

      ; 
      (when (l6c) 
        (S_uxj) )

      ; 
      (when (rfg) 
        (S_vxj) )

      ; 
      (when (q6c) 
        (S_vxj) )

      ; 
      (when (ufg) 
        (S_xxj) )

      ; 
      (when (t6c) 
        (S_xxj) )

      ; 
      (when (xfg) 
        (S_yxj) )

      ; 
      (when (v6c) 
        (S_yxj) )

    )
  )
  (:action closure_merge_AT_P6-6___4
    :effect 
      ; merge l//xi
      (when  (and (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) )
         (and (not (thg)) (not (qhg)) (not (lhg)) (not (jhg)) (not (ghg)) (not (bhg)) (not (ygg)) (not (vgg)) (not (tgg)) (not (qgg)) (not (lgg)) (not (jgg)) (not (ggg)) (not (bgg)) (not (yfg)) (not (vfg)) (not (tfg)) (not (qfg)) (not (lfg)) (not (jfg)) (not (gfg)) (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

  )
  (:action closure_merge_AT_P6-6___5
    :effect 
      ; merge l//xi
      (when  (and (S_zxj) (S_byj) (S_cyj) (S_gyj) (S_hyj) (S_jyj) (S_kyj) )
         (and (not (thg)) (not (qhg)) (not (lhg)) (not (jhg)) (not (ghg)) (not (bhg)) (not (ygg)) (not (vgg)) (not (tgg)) (not (qgg)) (not (lgg)) (not (jgg)) (not (ggg)) (not (bgg)) (not (yfg)) (not (vfg)) (not (tfg)) (not (qfg)) (not (lfg)) (not (jfg)) (not (gfg)) (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

  )
  (:action closure_add_sl__AT_P6-6___6
    :effect  (and 
      ; 
      (when (zfg) 
        (S_zxj) )

      ; 
      (when (v7c) 
        (S_zxj) )

      ; 
      (when (cgg) 
        (S_byj) )

      ; 
      (when (y7c) 
        (S_byj) )

      ; 
      (when (hgg) 
        (S_cyj) )

      ; 
      (when (b8c) 
        (S_cyj) )

      ; 
      (when (kgg) 
        (S_gyj) )

      ; 
      (when (g8c) 
        (S_gyj) )

      ; 
      (when (mgg) 
        (S_hyj) )

      ; 
      (when (j8c) 
        (S_hyj) )

      ; 
      (when (rgg) 
        (S_jyj) )

      ; 
      (when (l8c) 
        (S_jyj) )

      ; 
      (when (ugg) 
        (S_kyj) )

      ; 
      (when (q8c) 
        (S_kyj) )

    )
  )
  (:action closure_merge_AT_P6-6___7
    :effect 
      ; merge l//xi
      (when  (and (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) )
         (and (not (thg)) (not (qhg)) (not (lhg)) (not (jhg)) (not (ghg)) (not (bhg)) (not (ygg)) (not (vgg)) (not (tgg)) (not (qgg)) (not (lgg)) (not (jgg)) (not (ggg)) (not (bgg)) (not (yfg)) (not (vfg)) (not (tfg)) (not (qfg)) (not (lfg)) (not (jfg)) (not (gfg)) (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

  )
  (:action closure_merge_AT_P6-6___8
    :effect 
      ; merge l//xi
      (when  (and (S_lyj) (S_myj) (S_qyj) (S_ryj) (S_tyj) (S_uyj) (S_vyj) )
         (and (not (thg)) (not (qhg)) (not (lhg)) (not (jhg)) (not (ghg)) (not (bhg)) (not (ygg)) (not (vgg)) (not (tgg)) (not (qgg)) (not (lgg)) (not (jgg)) (not (ggg)) (not (bgg)) (not (yfg)) (not (vfg)) (not (tfg)) (not (qfg)) (not (lfg)) (not (jfg)) (not (gfg)) (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

  )
  (:action closure_add_sl__AT_P6-6___9
    :effect  (and 
      ; 
      (when (xgg) 
        (S_lyj) )

      ; 
      (when (q9c) 
        (S_lyj) )

      ; 
      (when (zgg) 
        (S_myj) )

      ; 
      (when (t9c) 
        (S_myj) )

      ; 
      (when (chg) 
        (S_qyj) )

      ; 
      (when (v9c) 
        (S_qyj) )

      ; 
      (when (hhg) 
        (S_ryj) )

      ; 
      (when (y9c) 
        (S_ryj) )

      ; 
      (when (khg) 
        (S_tyj) )

      ; 
      (when (b0c) 
        (S_tyj) )

      ; 
      (when (mhg) 
        (S_uyj) )

      ; 
      (when (g0c) 
        (S_uyj) )

      ; 
      (when (rhg) 
        (S_vyj) )

      ; 
      (when (j0c) 
        (S_vyj) )

    )
  )
  (:action closure_merge_AT_P6-7___1
    :effect 
      ; merge l//xi
      (when  (and (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) )
         (and (not (glg)) (not (blg)) (not (ykg)) (not (vkg)) (not (tkg)) (not (qkg)) (not (lkg)) (not (jkg)) (not (gkg)) (not (bkg)) (not (yjg)) (not (vjg)) (not (tjg)) (not (qjg)) (not (ljg)) (not (jjg)) (not (gjg)) (not (bjg)) (not (yig)) (not (vig)) (not (tig)) (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

  )
  (:action closure_merge_AT_P6-7___2
    :effect 
      ; merge l//xi
      (when  (and (S_xyj) (S_yyj) (S_zyj) (S_bzj) (S_czj) (S_gzj) (S_hzj) )
         (and (not (glg)) (not (blg)) (not (ykg)) (not (vkg)) (not (tkg)) (not (qkg)) (not (lkg)) (not (jkg)) (not (gkg)) (not (bkg)) (not (yjg)) (not (vjg)) (not (tjg)) (not (qjg)) (not (ljg)) (not (jjg)) (not (gjg)) (not (bjg)) (not (yig)) (not (vig)) (not (tig)) (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

  )
  (:action closure_add_sl__AT_P6-7___3
    :effect  (and 
      ; 
      (when (rig) 
        (S_xyj) )

      ; 
      (when (b6c) 
        (S_xyj) )

      ; 
      (when (uig) 
        (S_yyj) )

      ; 
      (when (g6c) 
        (S_yyj) )

      ; 
      (when (xig) 
        (S_zyj) )

      ; 
      (when (j6c) 
        (S_zyj) )

      ; 
      (when (zig) 
        (S_bzj) )

      ; 
      (when (l6c) 
        (S_bzj) )

      ; 
      (when (cjg) 
        (S_czj) )

      ; 
      (when (q6c) 
        (S_czj) )

      ; 
      (when (hjg) 
        (S_gzj) )

      ; 
      (when (t6c) 
        (S_gzj) )

      ; 
      (when (kjg) 
        (S_hzj) )

      ; 
      (when (v6c) 
        (S_hzj) )

    )
  )
  (:action closure_merge_AT_P6-7___4
    :effect 
      ; merge l//xi
      (when  (and (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) )
         (and (not (glg)) (not (blg)) (not (ykg)) (not (vkg)) (not (tkg)) (not (qkg)) (not (lkg)) (not (jkg)) (not (gkg)) (not (bkg)) (not (yjg)) (not (vjg)) (not (tjg)) (not (qjg)) (not (ljg)) (not (jjg)) (not (gjg)) (not (bjg)) (not (yig)) (not (vig)) (not (tig)) (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

  )
  (:action closure_merge_AT_P6-7___5
    :effect 
      ; merge l//xi
      (when  (and (S_jzj) (S_kzj) (S_lzj) (S_mzj) (S_qzj) (S_rzj) (S_tzj) )
         (and (not (glg)) (not (blg)) (not (ykg)) (not (vkg)) (not (tkg)) (not (qkg)) (not (lkg)) (not (jkg)) (not (gkg)) (not (bkg)) (not (yjg)) (not (vjg)) (not (tjg)) (not (qjg)) (not (ljg)) (not (jjg)) (not (gjg)) (not (bjg)) (not (yig)) (not (vig)) (not (tig)) (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

  )
  (:action closure_add_sl__AT_P6-7___6
    :effect  (and 
      ; 
      (when (mjg) 
        (S_jzj) )

      ; 
      (when (v7c) 
        (S_jzj) )

      ; 
      (when (rjg) 
        (S_kzj) )

      ; 
      (when (y7c) 
        (S_kzj) )

      ; 
      (when (ujg) 
        (S_lzj) )

      ; 
      (when (b8c) 
        (S_lzj) )

      ; 
      (when (xjg) 
        (S_mzj) )

      ; 
      (when (g8c) 
        (S_mzj) )

      ; 
      (when (zjg) 
        (S_qzj) )

      ; 
      (when (j8c) 
        (S_qzj) )

      ; 
      (when (ckg) 
        (S_rzj) )

      ; 
      (when (l8c) 
        (S_rzj) )

      ; 
      (when (hkg) 
        (S_tzj) )

      ; 
      (when (q8c) 
        (S_tzj) )

    )
  )
  (:action closure_merge_AT_P6-7___7
    :effect 
      ; merge l//xi
      (when  (and (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) )
         (and (not (glg)) (not (blg)) (not (ykg)) (not (vkg)) (not (tkg)) (not (qkg)) (not (lkg)) (not (jkg)) (not (gkg)) (not (bkg)) (not (yjg)) (not (vjg)) (not (tjg)) (not (qjg)) (not (ljg)) (not (jjg)) (not (gjg)) (not (bjg)) (not (yig)) (not (vig)) (not (tig)) (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

  )
  (:action closure_merge_AT_P6-7___8
    :effect 
      ; merge l//xi
      (when  (and (S_uzj) (S_vzj) (S_xzj) (S_yzj) (S_zzj) (S_b1j) (S_c1j) )
         (and (not (glg)) (not (blg)) (not (ykg)) (not (vkg)) (not (tkg)) (not (qkg)) (not (lkg)) (not (jkg)) (not (gkg)) (not (bkg)) (not (yjg)) (not (vjg)) (not (tjg)) (not (qjg)) (not (ljg)) (not (jjg)) (not (gjg)) (not (bjg)) (not (yig)) (not (vig)) (not (tig)) (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

  )
  (:action closure_add_sl__AT_P6-7___9
    :effect  (and 
      ; 
      (when (kkg) 
        (S_uzj) )

      ; 
      (when (q9c) 
        (S_uzj) )

      ; 
      (when (mkg) 
        (S_vzj) )

      ; 
      (when (t9c) 
        (S_vzj) )

      ; 
      (when (rkg) 
        (S_xzj) )

      ; 
      (when (v9c) 
        (S_xzj) )

      ; 
      (when (ukg) 
        (S_yzj) )

      ; 
      (when (y9c) 
        (S_yzj) )

      ; 
      (when (xkg) 
        (S_zzj) )

      ; 
      (when (b0c) 
        (S_zzj) )

      ; 
      (when (zkg) 
        (S_b1j) )

      ; 
      (when (g0c) 
        (S_b1j) )

      ; 
      (when (clg) 
        (S_c1j) )

      ; 
      (when (j0c) 
        (S_c1j) )

    )
  )
  (:action closure_merge_AT_P7-1___1
    :effect 
      ; merge l//xi
      (when  (and (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) )
         (and (not (v8h)) (not (t8h)) (not (q8h)) (not (l8h)) (not (j8h)) (not (g8h)) (not (b8h)) (not (y7h)) (not (v7h)) (not (t7h)) (not (q7h)) (not (l7h)) (not (j7h)) (not (g7h)) (not (b7h)) (not (y6h)) (not (v6h)) (not (t6h)) (not (q6h)) (not (l6h)) (not (j6h)) (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

  )
  (:action closure_merge_AT_P7-1___2
    :effect 
      ; merge l//xi
      (when  (and (S_g1j) (S_h1j) (S_j1j) (S_k1j) (S_l1j) (S_m1j) (S_q1j) )
         (and (not (v8h)) (not (t8h)) (not (q8h)) (not (l8h)) (not (j8h)) (not (g8h)) (not (b8h)) (not (y7h)) (not (v7h)) (not (t7h)) (not (q7h)) (not (l7h)) (not (j7h)) (not (g7h)) (not (b7h)) (not (y6h)) (not (v6h)) (not (t6h)) (not (q6h)) (not (l6h)) (not (j6h)) (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

  )
  (:action closure_add_sl__AT_P7-1___3
    :effect  (and 
      ; 
      (when (h6h) 
        (S_g1j) )

      ; 
      (when (b6c) 
        (S_g1j) )

      ; 
      (when (k6h) 
        (S_h1j) )

      ; 
      (when (g6c) 
        (S_h1j) )

      ; 
      (when (m6h) 
        (S_j1j) )

      ; 
      (when (j6c) 
        (S_j1j) )

      ; 
      (when (r6h) 
        (S_k1j) )

      ; 
      (when (l6c) 
        (S_k1j) )

      ; 
      (when (u6h) 
        (S_l1j) )

      ; 
      (when (q6c) 
        (S_l1j) )

      ; 
      (when (x6h) 
        (S_m1j) )

      ; 
      (when (t6c) 
        (S_m1j) )

      ; 
      (when (z6h) 
        (S_q1j) )

      ; 
      (when (v6c) 
        (S_q1j) )

    )
  )
  (:action closure_merge_AT_P7-1___4
    :effect 
      ; merge l//xi
      (when  (and (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) )
         (and (not (v8h)) (not (t8h)) (not (q8h)) (not (l8h)) (not (j8h)) (not (g8h)) (not (b8h)) (not (y7h)) (not (v7h)) (not (t7h)) (not (q7h)) (not (l7h)) (not (j7h)) (not (g7h)) (not (b7h)) (not (y6h)) (not (v6h)) (not (t6h)) (not (q6h)) (not (l6h)) (not (j6h)) (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

  )
  (:action closure_merge_AT_P7-1___5
    :effect 
      ; merge l//xi
      (when  (and (S_r1j) (S_t1j) (S_u1j) (S_v1j) (S_x1j) (S_y1j) (S_z1j) )
         (and (not (v8h)) (not (t8h)) (not (q8h)) (not (l8h)) (not (j8h)) (not (g8h)) (not (b8h)) (not (y7h)) (not (v7h)) (not (t7h)) (not (q7h)) (not (l7h)) (not (j7h)) (not (g7h)) (not (b7h)) (not (y6h)) (not (v6h)) (not (t6h)) (not (q6h)) (not (l6h)) (not (j6h)) (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

  )
  (:action closure_add_sl__AT_P7-1___6
    :effect  (and 
      ; 
      (when (c7h) 
        (S_r1j) )

      ; 
      (when (v7c) 
        (S_r1j) )

      ; 
      (when (h7h) 
        (S_t1j) )

      ; 
      (when (y7c) 
        (S_t1j) )

      ; 
      (when (k7h) 
        (S_u1j) )

      ; 
      (when (b8c) 
        (S_u1j) )

      ; 
      (when (m7h) 
        (S_v1j) )

      ; 
      (when (g8c) 
        (S_v1j) )

      ; 
      (when (r7h) 
        (S_x1j) )

      ; 
      (when (j8c) 
        (S_x1j) )

      ; 
      (when (u7h) 
        (S_y1j) )

      ; 
      (when (l8c) 
        (S_y1j) )

      ; 
      (when (x7h) 
        (S_z1j) )

      ; 
      (when (q8c) 
        (S_z1j) )

    )
  )
  (:action closure_merge_AT_P7-1___7
    :effect 
      ; merge l//xi
      (when  (and (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) )
         (and (not (v8h)) (not (t8h)) (not (q8h)) (not (l8h)) (not (j8h)) (not (g8h)) (not (b8h)) (not (y7h)) (not (v7h)) (not (t7h)) (not (q7h)) (not (l7h)) (not (j7h)) (not (g7h)) (not (b7h)) (not (y6h)) (not (v6h)) (not (t6h)) (not (q6h)) (not (l6h)) (not (j6h)) (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

  )
  (:action closure_merge_AT_P7-1___8
    :effect 
      ; merge l//xi
      (when  (and (S_b2j) (S_c2j) (S_g2j) (S_h2j) (S_j2j) (S_k2j) (S_l2j) )
         (and (not (v8h)) (not (t8h)) (not (q8h)) (not (l8h)) (not (j8h)) (not (g8h)) (not (b8h)) (not (y7h)) (not (v7h)) (not (t7h)) (not (q7h)) (not (l7h)) (not (j7h)) (not (g7h)) (not (b7h)) (not (y6h)) (not (v6h)) (not (t6h)) (not (q6h)) (not (l6h)) (not (j6h)) (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

  )
  (:action closure_add_sl__AT_P7-1___9
    :effect  (and 
      ; 
      (when (z7h) 
        (S_b2j) )

      ; 
      (when (q9c) 
        (S_b2j) )

      ; 
      (when (c8h) 
        (S_c2j) )

      ; 
      (when (t9c) 
        (S_c2j) )

      ; 
      (when (h8h) 
        (S_g2j) )

      ; 
      (when (v9c) 
        (S_g2j) )

      ; 
      (when (k8h) 
        (S_h2j) )

      ; 
      (when (y9c) 
        (S_h2j) )

      ; 
      (when (m8h) 
        (S_j2j) )

      ; 
      (when (b0c) 
        (S_j2j) )

      ; 
      (when (r8h) 
        (S_k2j) )

      ; 
      (when (g0c) 
        (S_k2j) )

      ; 
      (when (u8h) 
        (S_l2j) )

      ; 
      (when (j0c) 
        (S_l2j) )

    )
  )
  (:action closure_merge_AT_P7-2___1
    :effect 
      ; merge l//xi
      (when  (and (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) )
         (and (not (vmh)) (not (tmh)) (not (qmh)) (not (lmh)) (not (jmh)) (not (gmh)) (not (bmh)) (not (ylh)) (not (vlh)) (not (tlh)) (not (qlh)) (not (llh)) (not (jlh)) (not (glh)) (not (blh)) (not (ykh)) (not (vkh)) (not (tkh)) (not (qkh)) (not (lkh)) (not (jkh)) (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

  )
  (:action closure_merge_AT_P7-2___2
    :effect 
      ; merge l//xi
      (when  (and (S_m2j) (S_q2j) (S_r2j) (S_t2j) (S_u2j) (S_v2j) (S_x2j) )
         (and (not (vmh)) (not (tmh)) (not (qmh)) (not (lmh)) (not (jmh)) (not (gmh)) (not (bmh)) (not (ylh)) (not (vlh)) (not (tlh)) (not (qlh)) (not (llh)) (not (jlh)) (not (glh)) (not (blh)) (not (ykh)) (not (vkh)) (not (tkh)) (not (qkh)) (not (lkh)) (not (jkh)) (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

  )
  (:action closure_add_sl__AT_P7-2___3
    :effect  (and 
      ; 
      (when (hkh) 
        (S_m2j) )

      ; 
      (when (b6c) 
        (S_m2j) )

      ; 
      (when (kkh) 
        (S_q2j) )

      ; 
      (when (g6c) 
        (S_q2j) )

      ; 
      (when (mkh) 
        (S_r2j) )

      ; 
      (when (j6c) 
        (S_r2j) )

      ; 
      (when (rkh) 
        (S_t2j) )

      ; 
      (when (l6c) 
        (S_t2j) )

      ; 
      (when (ukh) 
        (S_u2j) )

      ; 
      (when (q6c) 
        (S_u2j) )

      ; 
      (when (xkh) 
        (S_v2j) )

      ; 
      (when (t6c) 
        (S_v2j) )

      ; 
      (when (zkh) 
        (S_x2j) )

      ; 
      (when (v6c) 
        (S_x2j) )

    )
  )
  (:action closure_merge_AT_P7-2___4
    :effect 
      ; merge l//xi
      (when  (and (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) )
         (and (not (vmh)) (not (tmh)) (not (qmh)) (not (lmh)) (not (jmh)) (not (gmh)) (not (bmh)) (not (ylh)) (not (vlh)) (not (tlh)) (not (qlh)) (not (llh)) (not (jlh)) (not (glh)) (not (blh)) (not (ykh)) (not (vkh)) (not (tkh)) (not (qkh)) (not (lkh)) (not (jkh)) (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

  )
  (:action closure_merge_AT_P7-2___5
    :effect 
      ; merge l//xi
      (when  (and (S_y2j) (S_z2j) (S_b3j) (S_c3j) (S_g3j) (S_h3j) (S_j3j) )
         (and (not (vmh)) (not (tmh)) (not (qmh)) (not (lmh)) (not (jmh)) (not (gmh)) (not (bmh)) (not (ylh)) (not (vlh)) (not (tlh)) (not (qlh)) (not (llh)) (not (jlh)) (not (glh)) (not (blh)) (not (ykh)) (not (vkh)) (not (tkh)) (not (qkh)) (not (lkh)) (not (jkh)) (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

  )
  (:action closure_add_sl__AT_P7-2___6
    :effect  (and 
      ; 
      (when (clh) 
        (S_y2j) )

      ; 
      (when (v7c) 
        (S_y2j) )

      ; 
      (when (hlh) 
        (S_z2j) )

      ; 
      (when (y7c) 
        (S_z2j) )

      ; 
      (when (klh) 
        (S_b3j) )

      ; 
      (when (b8c) 
        (S_b3j) )

      ; 
      (when (mlh) 
        (S_c3j) )

      ; 
      (when (g8c) 
        (S_c3j) )

      ; 
      (when (rlh) 
        (S_g3j) )

      ; 
      (when (j8c) 
        (S_g3j) )

      ; 
      (when (ulh) 
        (S_h3j) )

      ; 
      (when (l8c) 
        (S_h3j) )

      ; 
      (when (xlh) 
        (S_j3j) )

      ; 
      (when (q8c) 
        (S_j3j) )

    )
  )
  (:action closure_merge_AT_P7-2___7
    :effect 
      ; merge l//xi
      (when  (and (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) )
         (and (not (vmh)) (not (tmh)) (not (qmh)) (not (lmh)) (not (jmh)) (not (gmh)) (not (bmh)) (not (ylh)) (not (vlh)) (not (tlh)) (not (qlh)) (not (llh)) (not (jlh)) (not (glh)) (not (blh)) (not (ykh)) (not (vkh)) (not (tkh)) (not (qkh)) (not (lkh)) (not (jkh)) (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

  )
  (:action closure_merge_AT_P7-2___8
    :effect 
      ; merge l//xi
      (when  (and (S_k3j) (S_l3j) (S_m3j) (S_q3j) (S_r3j) (S_t3j) (S_u3j) )
         (and (not (vmh)) (not (tmh)) (not (qmh)) (not (lmh)) (not (jmh)) (not (gmh)) (not (bmh)) (not (ylh)) (not (vlh)) (not (tlh)) (not (qlh)) (not (llh)) (not (jlh)) (not (glh)) (not (blh)) (not (ykh)) (not (vkh)) (not (tkh)) (not (qkh)) (not (lkh)) (not (jkh)) (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

  )
  (:action closure_add_sl__AT_P7-2___9
    :effect  (and 
      ; 
      (when (zlh) 
        (S_k3j) )

      ; 
      (when (q9c) 
        (S_k3j) )

      ; 
      (when (cmh) 
        (S_l3j) )

      ; 
      (when (t9c) 
        (S_l3j) )

      ; 
      (when (hmh) 
        (S_m3j) )

      ; 
      (when (v9c) 
        (S_m3j) )

      ; 
      (when (kmh) 
        (S_q3j) )

      ; 
      (when (y9c) 
        (S_q3j) )

      ; 
      (when (mmh) 
        (S_r3j) )

      ; 
      (when (b0c) 
        (S_r3j) )

      ; 
      (when (rmh) 
        (S_t3j) )

      ; 
      (when (g0c) 
        (S_t3j) )

      ; 
      (when (umh) 
        (S_u3j) )

      ; 
      (when (j0c) 
        (S_u3j) )

    )
  )
  (:action closure_merge_AT_P7-3___1
    :effect 
      ; merge l//xi
      (when  (and (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) )
         (and (not (v2g)) (not (t2g)) (not (q2g)) (not (l2g)) (not (j2g)) (not (g2g)) (not (b2g)) (not (y1g)) (not (v1g)) (not (t1g)) (not (q1g)) (not (l1g)) (not (j1g)) (not (g1g)) (not (b1g)) (not (yzg)) (not (vzg)) (not (tzg)) (not (qzg)) (not (lzg)) (not (jzg)) (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

  )
  (:action closure_merge_AT_P7-3___2
    :effect 
      ; merge l//xi
      (when  (and (S_v3j) (S_x3j) (S_y3j) (S_z3j) (S_b4j) (S_c4j) (S_g4j) )
         (and (not (v2g)) (not (t2g)) (not (q2g)) (not (l2g)) (not (j2g)) (not (g2g)) (not (b2g)) (not (y1g)) (not (v1g)) (not (t1g)) (not (q1g)) (not (l1g)) (not (j1g)) (not (g1g)) (not (b1g)) (not (yzg)) (not (vzg)) (not (tzg)) (not (qzg)) (not (lzg)) (not (jzg)) (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

  )
  (:action closure_add_sl__AT_P7-3___3
    :effect  (and 
      ; 
      (when (hzg) 
        (S_v3j) )

      ; 
      (when (b6c) 
        (S_v3j) )

      ; 
      (when (kzg) 
        (S_x3j) )

      ; 
      (when (g6c) 
        (S_x3j) )

      ; 
      (when (mzg) 
        (S_y3j) )

      ; 
      (when (j6c) 
        (S_y3j) )

      ; 
      (when (rzg) 
        (S_z3j) )

      ; 
      (when (l6c) 
        (S_z3j) )

      ; 
      (when (uzg) 
        (S_b4j) )

      ; 
      (when (q6c) 
        (S_b4j) )

      ; 
      (when (xzg) 
        (S_c4j) )

      ; 
      (when (t6c) 
        (S_c4j) )

      ; 
      (when (zzg) 
        (S_g4j) )

      ; 
      (when (v6c) 
        (S_g4j) )

    )
  )
  (:action closure_merge_AT_P7-3___4
    :effect 
      ; merge l//xi
      (when  (and (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) )
         (and (not (v2g)) (not (t2g)) (not (q2g)) (not (l2g)) (not (j2g)) (not (g2g)) (not (b2g)) (not (y1g)) (not (v1g)) (not (t1g)) (not (q1g)) (not (l1g)) (not (j1g)) (not (g1g)) (not (b1g)) (not (yzg)) (not (vzg)) (not (tzg)) (not (qzg)) (not (lzg)) (not (jzg)) (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

  )
  (:action closure_merge_AT_P7-3___5
    :effect 
      ; merge l//xi
      (when  (and (S_h4j) (S_j4j) (S_k4j) (S_l4j) (S_m4j) (S_q4j) (S_r4j) )
         (and (not (v2g)) (not (t2g)) (not (q2g)) (not (l2g)) (not (j2g)) (not (g2g)) (not (b2g)) (not (y1g)) (not (v1g)) (not (t1g)) (not (q1g)) (not (l1g)) (not (j1g)) (not (g1g)) (not (b1g)) (not (yzg)) (not (vzg)) (not (tzg)) (not (qzg)) (not (lzg)) (not (jzg)) (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

  )
  (:action closure_add_sl__AT_P7-3___6
    :effect  (and 
      ; 
      (when (c1g) 
        (S_h4j) )

      ; 
      (when (v7c) 
        (S_h4j) )

      ; 
      (when (h1g) 
        (S_j4j) )

      ; 
      (when (y7c) 
        (S_j4j) )

      ; 
      (when (k1g) 
        (S_k4j) )

      ; 
      (when (b8c) 
        (S_k4j) )

      ; 
      (when (m1g) 
        (S_l4j) )

      ; 
      (when (g8c) 
        (S_l4j) )

      ; 
      (when (r1g) 
        (S_m4j) )

      ; 
      (when (j8c) 
        (S_m4j) )

      ; 
      (when (u1g) 
        (S_q4j) )

      ; 
      (when (l8c) 
        (S_q4j) )

      ; 
      (when (x1g) 
        (S_r4j) )

      ; 
      (when (q8c) 
        (S_r4j) )

    )
  )
  (:action closure_merge_AT_P7-3___7
    :effect 
      ; merge l//xi
      (when  (and (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) )
         (and (not (v2g)) (not (t2g)) (not (q2g)) (not (l2g)) (not (j2g)) (not (g2g)) (not (b2g)) (not (y1g)) (not (v1g)) (not (t1g)) (not (q1g)) (not (l1g)) (not (j1g)) (not (g1g)) (not (b1g)) (not (yzg)) (not (vzg)) (not (tzg)) (not (qzg)) (not (lzg)) (not (jzg)) (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

  )
  (:action closure_merge_AT_P7-3___8
    :effect 
      ; merge l//xi
      (when  (and (S_t4j) (S_u4j) (S_v4j) (S_x4j) (S_y4j) (S_z4j) (S_b5j) )
         (and (not (v2g)) (not (t2g)) (not (q2g)) (not (l2g)) (not (j2g)) (not (g2g)) (not (b2g)) (not (y1g)) (not (v1g)) (not (t1g)) (not (q1g)) (not (l1g)) (not (j1g)) (not (g1g)) (not (b1g)) (not (yzg)) (not (vzg)) (not (tzg)) (not (qzg)) (not (lzg)) (not (jzg)) (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

  )
  (:action closure_add_sl__AT_P7-3___9
    :effect  (and 
      ; 
      (when (z1g) 
        (S_t4j) )

      ; 
      (when (q9c) 
        (S_t4j) )

      ; 
      (when (c2g) 
        (S_u4j) )

      ; 
      (when (t9c) 
        (S_u4j) )

      ; 
      (when (h2g) 
        (S_v4j) )

      ; 
      (when (v9c) 
        (S_v4j) )

      ; 
      (when (k2g) 
        (S_x4j) )

      ; 
      (when (y9c) 
        (S_x4j) )

      ; 
      (when (m2g) 
        (S_y4j) )

      ; 
      (when (b0c) 
        (S_y4j) )

      ; 
      (when (r2g) 
        (S_z4j) )

      ; 
      (when (g0c) 
        (S_z4j) )

      ; 
      (when (u2g) 
        (S_b5j) )

      ; 
      (when (j0c) 
        (S_b5j) )

    )
  )
  (:action closure_merge_AT_P7-4___1
    :effect 
      ; merge l//xi
      (when  (and (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) )
         (and (not (jsg)) (not (gsg)) (not (bsg)) (not (yqg)) (not (vqg)) (not (tqg)) (not (qqg)) (not (lqg)) (not (jqg)) (not (gqg)) (not (bqg)) (not (ypg)) (not (vpg)) (not (tpg)) (not (qpg)) (not (lpg)) (not (jpg)) (not (gpg)) (not (bpg)) (not (yog)) (not (vog)) (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

  )
  (:action closure_merge_AT_P7-4___2
    :effect 
      ; merge l//xi
      (when  (and (S_c5j) (S_g5j) (S_h5j) (S_j5j) (S_k5j) (S_l5j) (S_m5j) )
         (and (not (jsg)) (not (gsg)) (not (bsg)) (not (yqg)) (not (vqg)) (not (tqg)) (not (qqg)) (not (lqg)) (not (jqg)) (not (gqg)) (not (bqg)) (not (ypg)) (not (vpg)) (not (tpg)) (not (qpg)) (not (lpg)) (not (jpg)) (not (gpg)) (not (bpg)) (not (yog)) (not (vog)) (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

  )
  (:action closure_add_sl__AT_P7-4___3
    :effect  (and 
      ; 
      (when (uog) 
        (S_c5j) )

      ; 
      (when (b6c) 
        (S_c5j) )

      ; 
      (when (xog) 
        (S_g5j) )

      ; 
      (when (g6c) 
        (S_g5j) )

      ; 
      (when (zog) 
        (S_h5j) )

      ; 
      (when (j6c) 
        (S_h5j) )

      ; 
      (when (cpg) 
        (S_j5j) )

      ; 
      (when (l6c) 
        (S_j5j) )

      ; 
      (when (hpg) 
        (S_k5j) )

      ; 
      (when (q6c) 
        (S_k5j) )

      ; 
      (when (kpg) 
        (S_l5j) )

      ; 
      (when (t6c) 
        (S_l5j) )

      ; 
      (when (mpg) 
        (S_m5j) )

      ; 
      (when (v6c) 
        (S_m5j) )

    )
  )
  (:action closure_merge_AT_P7-4___4
    :effect 
      ; merge l//xi
      (when  (and (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) )
         (and (not (jsg)) (not (gsg)) (not (bsg)) (not (yqg)) (not (vqg)) (not (tqg)) (not (qqg)) (not (lqg)) (not (jqg)) (not (gqg)) (not (bqg)) (not (ypg)) (not (vpg)) (not (tpg)) (not (qpg)) (not (lpg)) (not (jpg)) (not (gpg)) (not (bpg)) (not (yog)) (not (vog)) (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

  )
  (:action closure_merge_AT_P7-4___5
    :effect 
      ; merge l//xi
      (when  (and (S_q5j) (S_r5j) (S_t5j) (S_u5j) (S_v5j) (S_x5j) (S_y5j) )
         (and (not (jsg)) (not (gsg)) (not (bsg)) (not (yqg)) (not (vqg)) (not (tqg)) (not (qqg)) (not (lqg)) (not (jqg)) (not (gqg)) (not (bqg)) (not (ypg)) (not (vpg)) (not (tpg)) (not (qpg)) (not (lpg)) (not (jpg)) (not (gpg)) (not (bpg)) (not (yog)) (not (vog)) (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

  )
  (:action closure_add_sl__AT_P7-4___6
    :effect  (and 
      ; 
      (when (rpg) 
        (S_q5j) )

      ; 
      (when (v7c) 
        (S_q5j) )

      ; 
      (when (upg) 
        (S_r5j) )

      ; 
      (when (y7c) 
        (S_r5j) )

      ; 
      (when (xpg) 
        (S_t5j) )

      ; 
      (when (b8c) 
        (S_t5j) )

      ; 
      (when (zpg) 
        (S_u5j) )

      ; 
      (when (g8c) 
        (S_u5j) )

      ; 
      (when (cqg) 
        (S_v5j) )

      ; 
      (when (j8c) 
        (S_v5j) )

      ; 
      (when (hqg) 
        (S_x5j) )

      ; 
      (when (l8c) 
        (S_x5j) )

      ; 
      (when (kqg) 
        (S_y5j) )

      ; 
      (when (q8c) 
        (S_y5j) )

    )
  )
  (:action closure_merge_AT_P7-4___7
    :effect 
      ; merge l//xi
      (when  (and (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) )
         (and (not (jsg)) (not (gsg)) (not (bsg)) (not (yqg)) (not (vqg)) (not (tqg)) (not (qqg)) (not (lqg)) (not (jqg)) (not (gqg)) (not (bqg)) (not (ypg)) (not (vpg)) (not (tpg)) (not (qpg)) (not (lpg)) (not (jpg)) (not (gpg)) (not (bpg)) (not (yog)) (not (vog)) (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

  )
  (:action closure_merge_AT_P7-4___8
    :effect 
      ; merge l//xi
      (when  (and (S_z5j) (S_b6j) (S_c6j) (S_g6j) (S_h6j) (S_j6j) (S_k6j) )
         (and (not (jsg)) (not (gsg)) (not (bsg)) (not (yqg)) (not (vqg)) (not (tqg)) (not (qqg)) (not (lqg)) (not (jqg)) (not (gqg)) (not (bqg)) (not (ypg)) (not (vpg)) (not (tpg)) (not (qpg)) (not (lpg)) (not (jpg)) (not (gpg)) (not (bpg)) (not (yog)) (not (vog)) (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

  )
  (:action closure_add_sl__AT_P7-4___9
    :effect  (and 
      ; 
      (when (mqg) 
        (S_z5j) )

      ; 
      (when (q9c) 
        (S_z5j) )

      ; 
      (when (rqg) 
        (S_b6j) )

      ; 
      (when (t9c) 
        (S_b6j) )

      ; 
      (when (uqg) 
        (S_c6j) )

      ; 
      (when (v9c) 
        (S_c6j) )

      ; 
      (when (xqg) 
        (S_g6j) )

      ; 
      (when (y9c) 
        (S_g6j) )

      ; 
      (when (zqg) 
        (S_h6j) )

      ; 
      (when (b0c) 
        (S_h6j) )

      ; 
      (when (csg) 
        (S_j6j) )

      ; 
      (when (g0c) 
        (S_j6j) )

      ; 
      (when (hsg) 
        (S_k6j) )

      ; 
      (when (j0c) 
        (S_k6j) )

    )
  )
  (:action closure_merge_AT_P7-5___1
    :effect 
      ; merge l//xi
      (when  (and (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) )
         (and (not (ytg)) (not (vtg)) (not (ttg)) (not (qtg)) (not (ltg)) (not (jtg)) (not (gtg)) (not (btg)) (not (yrg)) (not (vrg)) (not (trg)) (not (qrg)) (not (lrg)) (not (jrg)) (not (grg)) (not (brg)) (not (ysg)) (not (vsg)) (not (tsg)) (not (qsg)) (not (lsg)) (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

  )
  (:action closure_merge_AT_P7-5___2
    :effect 
      ; merge l//xi
      (when  (and (S_l6j) (S_m6j) (S_q6j) (S_r6j) (S_t6j) (S_u6j) (S_v6j) )
         (and (not (ytg)) (not (vtg)) (not (ttg)) (not (qtg)) (not (ltg)) (not (jtg)) (not (gtg)) (not (btg)) (not (yrg)) (not (vrg)) (not (trg)) (not (qrg)) (not (lrg)) (not (jrg)) (not (grg)) (not (brg)) (not (ysg)) (not (vsg)) (not (tsg)) (not (qsg)) (not (lsg)) (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

  )
  (:action closure_add_sl__AT_P7-5___3
    :effect  (and 
      ; 
      (when (ksg) 
        (S_l6j) )

      ; 
      (when (b6c) 
        (S_l6j) )

      ; 
      (when (msg) 
        (S_m6j) )

      ; 
      (when (g6c) 
        (S_m6j) )

      ; 
      (when (rsg) 
        (S_q6j) )

      ; 
      (when (j6c) 
        (S_q6j) )

      ; 
      (when (usg) 
        (S_r6j) )

      ; 
      (when (l6c) 
        (S_r6j) )

      ; 
      (when (xsg) 
        (S_t6j) )

      ; 
      (when (q6c) 
        (S_t6j) )

      ; 
      (when (zsg) 
        (S_u6j) )

      ; 
      (when (t6c) 
        (S_u6j) )

      ; 
      (when (crg) 
        (S_v6j) )

      ; 
      (when (v6c) 
        (S_v6j) )

    )
  )
  (:action closure_merge_AT_P7-5___4
    :effect 
      ; merge l//xi
      (when  (and (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) )
         (and (not (ytg)) (not (vtg)) (not (ttg)) (not (qtg)) (not (ltg)) (not (jtg)) (not (gtg)) (not (btg)) (not (yrg)) (not (vrg)) (not (trg)) (not (qrg)) (not (lrg)) (not (jrg)) (not (grg)) (not (brg)) (not (ysg)) (not (vsg)) (not (tsg)) (not (qsg)) (not (lsg)) (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

  )
  (:action closure_merge_AT_P7-5___5
    :effect 
      ; merge l//xi
      (when  (and (S_x6j) (S_y6j) (S_z6j) (S_b7j) (S_c7j) (S_g7j) (S_h7j) )
         (and (not (ytg)) (not (vtg)) (not (ttg)) (not (qtg)) (not (ltg)) (not (jtg)) (not (gtg)) (not (btg)) (not (yrg)) (not (vrg)) (not (trg)) (not (qrg)) (not (lrg)) (not (jrg)) (not (grg)) (not (brg)) (not (ysg)) (not (vsg)) (not (tsg)) (not (qsg)) (not (lsg)) (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

  )
  (:action closure_add_sl__AT_P7-5___6
    :effect  (and 
      ; 
      (when (hrg) 
        (S_x6j) )

      ; 
      (when (v7c) 
        (S_x6j) )

      ; 
      (when (krg) 
        (S_y6j) )

      ; 
      (when (y7c) 
        (S_y6j) )

      ; 
      (when (mrg) 
        (S_z6j) )

      ; 
      (when (b8c) 
        (S_z6j) )

      ; 
      (when (rrg) 
        (S_b7j) )

      ; 
      (when (g8c) 
        (S_b7j) )

      ; 
      (when (urg) 
        (S_c7j) )

      ; 
      (when (j8c) 
        (S_c7j) )

      ; 
      (when (xrg) 
        (S_g7j) )

      ; 
      (when (l8c) 
        (S_g7j) )

      ; 
      (when (zrg) 
        (S_h7j) )

      ; 
      (when (q8c) 
        (S_h7j) )

    )
  )
  (:action closure_merge_AT_P7-5___7
    :effect 
      ; merge l//xi
      (when  (and (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) )
         (and (not (ytg)) (not (vtg)) (not (ttg)) (not (qtg)) (not (ltg)) (not (jtg)) (not (gtg)) (not (btg)) (not (yrg)) (not (vrg)) (not (trg)) (not (qrg)) (not (lrg)) (not (jrg)) (not (grg)) (not (brg)) (not (ysg)) (not (vsg)) (not (tsg)) (not (qsg)) (not (lsg)) (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

  )
  (:action closure_merge_AT_P7-5___8
    :effect 
      ; merge l//xi
      (when  (and (S_j7j) (S_k7j) (S_l7j) (S_m7j) (S_q7j) (S_r7j) (S_t7j) )
         (and (not (ytg)) (not (vtg)) (not (ttg)) (not (qtg)) (not (ltg)) (not (jtg)) (not (gtg)) (not (btg)) (not (yrg)) (not (vrg)) (not (trg)) (not (qrg)) (not (lrg)) (not (jrg)) (not (grg)) (not (brg)) (not (ysg)) (not (vsg)) (not (tsg)) (not (qsg)) (not (lsg)) (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

  )
  (:action closure_add_sl__AT_P7-5___9
    :effect  (and 
      ; 
      (when (ctg) 
        (S_j7j) )

      ; 
      (when (q9c) 
        (S_j7j) )

      ; 
      (when (htg) 
        (S_k7j) )

      ; 
      (when (t9c) 
        (S_k7j) )

      ; 
      (when (ktg) 
        (S_l7j) )

      ; 
      (when (v9c) 
        (S_l7j) )

      ; 
      (when (mtg) 
        (S_m7j) )

      ; 
      (when (y9c) 
        (S_m7j) )

      ; 
      (when (rtg) 
        (S_q7j) )

      ; 
      (when (b0c) 
        (S_q7j) )

      ; 
      (when (utg) 
        (S_r7j) )

      ; 
      (when (g0c) 
        (S_r7j) )

      ; 
      (when (xtg) 
        (S_t7j) )

      ; 
      (when (j0c) 
        (S_t7j) )

    )
  )
  (:action closure_merge_AT_P7-6___1
    :effect 
      ; merge l//xi
      (when  (and (ztg) (cug) (hug) (kug) (mug) (rug) (uug) )
         (and (not (qwg)) (not (lwg)) (not (jwg)) (not (gwg)) (not (bwg)) (not (yvg)) (not (vvg)) (not (tvg)) (not (qvg)) (not (lvg)) (not (jvg)) (not (gvg)) (not (bvg)) (not (yug)) (not (vug)) (not (tug)) (not (qug)) (not (lug)) (not (jug)) (not (gug)) (not (bug)) (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

  )
  (:action closure_merge_AT_P7-6___2
    :effect 
      ; merge l//xi
      (when  (and (S_u7j) (S_v7j) (S_x7j) (S_y7j) (S_z7j) (S_b8j) (S_c8j) )
         (and (not (qwg)) (not (lwg)) (not (jwg)) (not (gwg)) (not (bwg)) (not (yvg)) (not (vvg)) (not (tvg)) (not (qvg)) (not (lvg)) (not (jvg)) (not (gvg)) (not (bvg)) (not (yug)) (not (vug)) (not (tug)) (not (qug)) (not (lug)) (not (jug)) (not (gug)) (not (bug)) (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

  )
  (:action closure_add_sl__AT_P7-6___3
    :effect  (and 
      ; 
      (when (ztg) 
        (S_u7j) )

      ; 
      (when (b6c) 
        (S_u7j) )

      ; 
      (when (cug) 
        (S_v7j) )

      ; 
      (when (g6c) 
        (S_v7j) )

      ; 
      (when (hug) 
        (S_x7j) )

      ; 
      (when (j6c) 
        (S_x7j) )

      ; 
      (when (kug) 
        (S_y7j) )

      ; 
      (when (l6c) 
        (S_y7j) )

      ; 
      (when (mug) 
        (S_z7j) )

      ; 
      (when (q6c) 
        (S_z7j) )

      ; 
      (when (rug) 
        (S_b8j) )

      ; 
      (when (t6c) 
        (S_b8j) )

      ; 
      (when (uug) 
        (S_c8j) )

      ; 
      (when (v6c) 
        (S_c8j) )

    )
  )
  (:action closure_merge_AT_P7-6___4
    :effect 
      ; merge l//xi
      (when  (and (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) )
         (and (not (qwg)) (not (lwg)) (not (jwg)) (not (gwg)) (not (bwg)) (not (yvg)) (not (vvg)) (not (tvg)) (not (qvg)) (not (lvg)) (not (jvg)) (not (gvg)) (not (bvg)) (not (yug)) (not (vug)) (not (tug)) (not (qug)) (not (lug)) (not (jug)) (not (gug)) (not (bug)) (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

  )
  (:action closure_merge_AT_P7-6___5
    :effect 
      ; merge l//xi
      (when  (and (S_g8j) (S_h8j) (S_j8j) (S_k8j) (S_l8j) (S_m8j) (S_q8j) )
         (and (not (qwg)) (not (lwg)) (not (jwg)) (not (gwg)) (not (bwg)) (not (yvg)) (not (vvg)) (not (tvg)) (not (qvg)) (not (lvg)) (not (jvg)) (not (gvg)) (not (bvg)) (not (yug)) (not (vug)) (not (tug)) (not (qug)) (not (lug)) (not (jug)) (not (gug)) (not (bug)) (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

  )
  (:action closure_add_sl__AT_P7-6___6
    :effect  (and 
      ; 
      (when (xug) 
        (S_g8j) )

      ; 
      (when (v7c) 
        (S_g8j) )

      ; 
      (when (zug) 
        (S_h8j) )

      ; 
      (when (y7c) 
        (S_h8j) )

      ; 
      (when (cvg) 
        (S_j8j) )

      ; 
      (when (b8c) 
        (S_j8j) )

      ; 
      (when (hvg) 
        (S_k8j) )

      ; 
      (when (g8c) 
        (S_k8j) )

      ; 
      (when (kvg) 
        (S_l8j) )

      ; 
      (when (j8c) 
        (S_l8j) )

      ; 
      (when (mvg) 
        (S_m8j) )

      ; 
      (when (l8c) 
        (S_m8j) )

      ; 
      (when (rvg) 
        (S_q8j) )

      ; 
      (when (q8c) 
        (S_q8j) )

    )
  )
  (:action closure_merge_AT_P7-6___7
    :effect 
      ; merge l//xi
      (when  (and (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) )
         (and (not (qwg)) (not (lwg)) (not (jwg)) (not (gwg)) (not (bwg)) (not (yvg)) (not (vvg)) (not (tvg)) (not (qvg)) (not (lvg)) (not (jvg)) (not (gvg)) (not (bvg)) (not (yug)) (not (vug)) (not (tug)) (not (qug)) (not (lug)) (not (jug)) (not (gug)) (not (bug)) (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

  )
  (:action closure_merge_AT_P7-6___8
    :effect 
      ; merge l//xi
      (when  (and (S_r8j) (S_t8j) (S_u8j) (S_v8j) (S_x8j) (S_y8j) (S_z8j) )
         (and (not (qwg)) (not (lwg)) (not (jwg)) (not (gwg)) (not (bwg)) (not (yvg)) (not (vvg)) (not (tvg)) (not (qvg)) (not (lvg)) (not (jvg)) (not (gvg)) (not (bvg)) (not (yug)) (not (vug)) (not (tug)) (not (qug)) (not (lug)) (not (jug)) (not (gug)) (not (bug)) (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

  )
  (:action closure_add_sl__AT_P7-6___9
    :effect  (and 
      ; 
      (when (uvg) 
        (S_r8j) )

      ; 
      (when (q9c) 
        (S_r8j) )

      ; 
      (when (xvg) 
        (S_t8j) )

      ; 
      (when (t9c) 
        (S_t8j) )

      ; 
      (when (zvg) 
        (S_u8j) )

      ; 
      (when (v9c) 
        (S_u8j) )

      ; 
      (when (cwg) 
        (S_v8j) )

      ; 
      (when (y9c) 
        (S_v8j) )

      ; 
      (when (hwg) 
        (S_x8j) )

      ; 
      (when (b0c) 
        (S_x8j) )

      ; 
      (when (kwg) 
        (S_y8j) )

      ; 
      (when (g0c) 
        (S_y8j) )

      ; 
      (when (mwg) 
        (S_z8j) )

      ; 
      (when (j0c) 
        (S_z8j) )

    )
  )
  (:action closure_merge_AT_P7-7___1
    :effect 
      ; merge l//xi
      (when  (and (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) )
         (and (not (gzg)) (not (bzg)) (not (yyg)) (not (vyg)) (not (tyg)) (not (qyg)) (not (lyg)) (not (jyg)) (not (gyg)) (not (byg)) (not (yxg)) (not (vxg)) (not (txg)) (not (qxg)) (not (lxg)) (not (jxg)) (not (gxg)) (not (bxg)) (not (ywg)) (not (vwg)) (not (twg)) (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

  )
  (:action closure_merge_AT_P7-7___2
    :effect 
      ; merge l//xi
      (when  (and (S_b9j) (S_c9j) (S_g9j) (S_h9j) (S_j9j) (S_k9j) (S_l9j) )
         (and (not (gzg)) (not (bzg)) (not (yyg)) (not (vyg)) (not (tyg)) (not (qyg)) (not (lyg)) (not (jyg)) (not (gyg)) (not (byg)) (not (yxg)) (not (vxg)) (not (txg)) (not (qxg)) (not (lxg)) (not (jxg)) (not (gxg)) (not (bxg)) (not (ywg)) (not (vwg)) (not (twg)) (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

  )
  (:action closure_add_sl__AT_P7-7___3
    :effect  (and 
      ; 
      (when (rwg) 
        (S_b9j) )

      ; 
      (when (b6c) 
        (S_b9j) )

      ; 
      (when (uwg) 
        (S_c9j) )

      ; 
      (when (g6c) 
        (S_c9j) )

      ; 
      (when (xwg) 
        (S_g9j) )

      ; 
      (when (j6c) 
        (S_g9j) )

      ; 
      (when (zwg) 
        (S_h9j) )

      ; 
      (when (l6c) 
        (S_h9j) )

      ; 
      (when (cxg) 
        (S_j9j) )

      ; 
      (when (q6c) 
        (S_j9j) )

      ; 
      (when (hxg) 
        (S_k9j) )

      ; 
      (when (t6c) 
        (S_k9j) )

      ; 
      (when (kxg) 
        (S_l9j) )

      ; 
      (when (v6c) 
        (S_l9j) )

    )
  )
  (:action closure_merge_AT_P7-7___4
    :effect 
      ; merge l//xi
      (when  (and (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) )
         (and (not (gzg)) (not (bzg)) (not (yyg)) (not (vyg)) (not (tyg)) (not (qyg)) (not (lyg)) (not (jyg)) (not (gyg)) (not (byg)) (not (yxg)) (not (vxg)) (not (txg)) (not (qxg)) (not (lxg)) (not (jxg)) (not (gxg)) (not (bxg)) (not (ywg)) (not (vwg)) (not (twg)) (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

  )
  (:action closure_merge_AT_P7-7___5
    :effect 
      ; merge l//xi
      (when  (and (S_m9j) (S_q9j) (S_r9j) (S_t9j) (S_u9j) (S_v9j) (S_x9j) )
         (and (not (gzg)) (not (bzg)) (not (yyg)) (not (vyg)) (not (tyg)) (not (qyg)) (not (lyg)) (not (jyg)) (not (gyg)) (not (byg)) (not (yxg)) (not (vxg)) (not (txg)) (not (qxg)) (not (lxg)) (not (jxg)) (not (gxg)) (not (bxg)) (not (ywg)) (not (vwg)) (not (twg)) (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

  )
  (:action closure_add_sl__AT_P7-7___6
    :effect  (and 
      ; 
      (when (mxg) 
        (S_m9j) )

      ; 
      (when (v7c) 
        (S_m9j) )

      ; 
      (when (rxg) 
        (S_q9j) )

      ; 
      (when (y7c) 
        (S_q9j) )

      ; 
      (when (uxg) 
        (S_r9j) )

      ; 
      (when (b8c) 
        (S_r9j) )

      ; 
      (when (xxg) 
        (S_t9j) )

      ; 
      (when (g8c) 
        (S_t9j) )

      ; 
      (when (zxg) 
        (S_u9j) )

      ; 
      (when (j8c) 
        (S_u9j) )

      ; 
      (when (cyg) 
        (S_v9j) )

      ; 
      (when (l8c) 
        (S_v9j) )

      ; 
      (when (hyg) 
        (S_x9j) )

      ; 
      (when (q8c) 
        (S_x9j) )

    )
  )
  (:action closure_merge_AT_P7-7___7
    :effect 
      ; merge l//xi
      (when  (and (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) )
         (and (not (gzg)) (not (bzg)) (not (yyg)) (not (vyg)) (not (tyg)) (not (qyg)) (not (lyg)) (not (jyg)) (not (gyg)) (not (byg)) (not (yxg)) (not (vxg)) (not (txg)) (not (qxg)) (not (lxg)) (not (jxg)) (not (gxg)) (not (bxg)) (not (ywg)) (not (vwg)) (not (twg)) (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

  )
  (:action closure_merge_AT_P7-7___8
    :effect 
      ; merge l//xi
      (when  (and (S_y9j) (S_z9j) (S_b0j) (S_c0j) (S_g0j) (S_h0j) (S_j0j) )
         (and (not (gzg)) (not (bzg)) (not (yyg)) (not (vyg)) (not (tyg)) (not (qyg)) (not (lyg)) (not (jyg)) (not (gyg)) (not (byg)) (not (yxg)) (not (vxg)) (not (txg)) (not (qxg)) (not (lxg)) (not (jxg)) (not (gxg)) (not (bxg)) (not (ywg)) (not (vwg)) (not (twg)) (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

  )
  (:action closure_add_sl__AT_P7-7___9
    :effect  (and 
      ; 
      (when (kyg) 
        (S_y9j) )

      ; 
      (when (q9c) 
        (S_y9j) )

      ; 
      (when (myg) 
        (S_z9j) )

      ; 
      (when (t9c) 
        (S_z9j) )

      ; 
      (when (ryg) 
        (S_b0j) )

      ; 
      (when (v9c) 
        (S_b0j) )

      ; 
      (when (uyg) 
        (S_c0j) )

      ; 
      (when (y9c) 
        (S_c0j) )

      ; 
      (when (xyg) 
        (S_g0j) )

      ; 
      (when (b0c) 
        (S_g0j) )

      ; 
      (when (zyg) 
        (S_h0j) )

      ; 
      (when (g0c) 
        (S_h0j) )

      ; 
      (when (czg) 
        (S_j0j) )

      ; 
      (when (j0c) 
        (S_j0j) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P6-7
    :precondition 
      (twg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P6-6
    :precondition 
      (vwg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P6-5
    :precondition 
      (ywg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P6-4
    :precondition 
      (bxg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P6-3
    :precondition 
      (gxg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P6-2
    :precondition 
      (jxg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P6-1
    :precondition 
      (lxg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P4-7
    :precondition 
      (qxg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P4-6
    :precondition 
      (txg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P4-5
    :precondition 
      (vxg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P4-4
    :precondition 
      (yxg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P4-3
    :precondition 
      (byg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P4-2
    :precondition 
      (gyg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P4-1
    :precondition 
      (jyg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P2-7
    :precondition 
      (lyg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (qyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P2-6
    :precondition 
      (qyg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (tyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P2-5
    :precondition 
      (tyg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (vyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P2-4
    :precondition 
      (vyg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (yyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P2-3
    :precondition 
      (yyg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (bzg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P2-2
    :precondition 
      (bzg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (gzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-7__OPENED_P2-1
    :precondition 
      (gzg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (l4c)) (k4c) (j2d) (twg) (vwg) (ywg) (bxg) (gxg) (jxg) (lxg) (qxg) (txg) (vxg) (yxg) (byg) (gyg) (jyg) (lyg) (qyg) (tyg) (vyg) (yyg) (bzg) ))

      ; merge k0-l
      (when  (and (k2d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (k4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P6-7
    :precondition 
      (bug)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P6-6
    :precondition 
      (gug)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P6-5
    :precondition 
      (jug)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P6-4
    :precondition 
      (lug)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P6-3
    :precondition 
      (qug)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P6-2
    :precondition 
      (tug)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P6-1
    :precondition 
      (vug)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P4-7
    :precondition 
      (yug)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P4-6
    :precondition 
      (bvg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P4-5
    :precondition 
      (gvg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P4-4
    :precondition 
      (jvg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P4-3
    :precondition 
      (lvg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P4-2
    :precondition 
      (qvg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P4-1
    :precondition 
      (tvg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P2-7
    :precondition 
      (vvg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (yvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P2-6
    :precondition 
      (yvg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (bwg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P2-5
    :precondition 
      (bwg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (gwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P2-4
    :precondition 
      (gwg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (jwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P2-3
    :precondition 
      (jwg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (lwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P2-2
    :precondition 
      (lwg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (qwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-6__OPENED_P2-1
    :precondition 
      (qwg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (j4c)) (h4c) (g2d) (bug) (gug) (jug) (lug) (qug) (tug) (vug) (yug) (bvg) (gvg) (jvg) (lvg) (qvg) (tvg) (vvg) (yvg) (bwg) (gwg) (jwg) (lwg) ))

      ; merge k0-l
      (when  (and (h2d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (h4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P6-7
    :precondition 
      (lsg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P6-6
    :precondition 
      (qsg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P6-5
    :precondition 
      (tsg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P6-4
    :precondition 
      (vsg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P6-3
    :precondition 
      (ysg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P6-2
    :precondition 
      (brg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P6-1
    :precondition 
      (grg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P4-7
    :precondition 
      (jrg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P4-6
    :precondition 
      (lrg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P4-5
    :precondition 
      (qrg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P4-4
    :precondition 
      (trg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P4-3
    :precondition 
      (vrg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P4-2
    :precondition 
      (yrg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P4-1
    :precondition 
      (btg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P2-7
    :precondition 
      (gtg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (jtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P2-6
    :precondition 
      (jtg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (ltg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P2-5
    :precondition 
      (ltg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (qtg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P2-4
    :precondition 
      (qtg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (ttg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P2-3
    :precondition 
      (ttg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (vtg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P2-2
    :precondition 
      (vtg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (ytg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-5__OPENED_P2-1
    :precondition 
      (ytg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (g4c)) (c4c) (b2d) (lsg) (qsg) (tsg) (vsg) (ysg) (brg) (grg) (jrg) (lrg) (qrg) (trg) (vrg) (yrg) (btg) (gtg) (jtg) (ltg) (qtg) (ttg) (vtg) ))

      ; merge k0-l
      (when  (and (c2d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (c4c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P6-7
    :precondition 
      (vog)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P6-6
    :precondition 
      (yog)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P6-5
    :precondition 
      (bpg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P6-4
    :precondition 
      (gpg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P6-3
    :precondition 
      (jpg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P6-2
    :precondition 
      (lpg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P6-1
    :precondition 
      (qpg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P4-7
    :precondition 
      (tpg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P4-6
    :precondition 
      (vpg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P4-5
    :precondition 
      (ypg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P4-4
    :precondition 
      (bqg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P4-3
    :precondition 
      (gqg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P4-2
    :precondition 
      (jqg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P4-1
    :precondition 
      (lqg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P2-7
    :precondition 
      (qqg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (tqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P2-6
    :precondition 
      (tqg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (vqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P2-5
    :precondition 
      (vqg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (yqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P2-4
    :precondition 
      (yqg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (bsg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P2-3
    :precondition 
      (bsg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (gsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P2-2
    :precondition 
      (gsg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (jsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-4__OPENED_P2-1
    :precondition 
      (jsg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (b4c)) (z3c) (y1d) (vog) (yog) (bpg) (gpg) (jpg) (lpg) (qpg) (tpg) (vpg) (ypg) (bqg) (gqg) (jqg) (lqg) (qqg) (tqg) (vqg) (yqg) (bsg) (gsg) ))

      ; merge k0-l
      (when  (and (z1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (z3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P6-7
    :precondition 
      (jzg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P6-6
    :precondition 
      (lzg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P6-5
    :precondition 
      (qzg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P6-4
    :precondition 
      (tzg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P6-3
    :precondition 
      (vzg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P6-2
    :precondition 
      (yzg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P6-1
    :precondition 
      (b1g)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P4-7
    :precondition 
      (g1g)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P4-6
    :precondition 
      (j1g)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P4-5
    :precondition 
      (l1g)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P4-4
    :precondition 
      (q1g)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P4-3
    :precondition 
      (t1g)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P4-2
    :precondition 
      (v1g)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P4-1
    :precondition 
      (y1g)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P2-7
    :precondition 
      (b2g)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (g2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P2-6
    :precondition 
      (g2g)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (j2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P2-5
    :precondition 
      (j2g)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (l2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P2-4
    :precondition 
      (l2g)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (q2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P2-3
    :precondition 
      (q2g)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (t2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P2-2
    :precondition 
      (t2g)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (v2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-3__OPENED_P2-1
    :precondition 
      (v2g)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (y3c)) (x3c) (v1d) (jzg) (lzg) (qzg) (tzg) (vzg) (yzg) (b1g) (g1g) (j1g) (l1g) (q1g) (t1g) (v1g) (y1g) (b2g) (g2g) (j2g) (l2g) (q2g) (t2g) ))

      ; merge k0-l
      (when  (and (x1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (x3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P6-7
    :precondition 
      (jkh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P6-6
    :precondition 
      (lkh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P6-5
    :precondition 
      (qkh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P6-4
    :precondition 
      (tkh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P6-3
    :precondition 
      (vkh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P6-2
    :precondition 
      (ykh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P6-1
    :precondition 
      (blh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P4-7
    :precondition 
      (glh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P4-6
    :precondition 
      (jlh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P4-5
    :precondition 
      (llh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P4-4
    :precondition 
      (qlh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P4-3
    :precondition 
      (tlh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P4-2
    :precondition 
      (vlh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P4-1
    :precondition 
      (ylh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P2-7
    :precondition 
      (bmh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (gmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P2-6
    :precondition 
      (gmh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (jmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P2-5
    :precondition 
      (jmh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (lmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P2-4
    :precondition 
      (lmh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (qmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P2-3
    :precondition 
      (qmh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (tmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P2-2
    :precondition 
      (tmh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (vmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-2__OPENED_P2-1
    :precondition 
      (vmh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (v3c)) (u3c) (t1d) (jkh) (lkh) (qkh) (tkh) (vkh) (ykh) (blh) (glh) (jlh) (llh) (qlh) (tlh) (vlh) (ylh) (bmh) (gmh) (jmh) (lmh) (qmh) (tmh) ))

      ; merge k0-l
      (when  (and (u1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (u3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P6-7
    :precondition 
      (j6h)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P6-6
    :precondition 
      (l6h)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P6-5
    :precondition 
      (q6h)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P6-4
    :precondition 
      (t6h)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P6-3
    :precondition 
      (v6h)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P6-2
    :precondition 
      (y6h)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P6-1
    :precondition 
      (b7h)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P4-7
    :precondition 
      (g7h)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P4-6
    :precondition 
      (j7h)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P4-5
    :precondition 
      (l7h)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P4-4
    :precondition 
      (q7h)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P4-3
    :precondition 
      (t7h)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P4-2
    :precondition 
      (v7h)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P4-1
    :precondition 
      (y7h)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P2-7
    :precondition 
      (b8h)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (g8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P2-6
    :precondition 
      (g8h)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (j8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P2-5
    :precondition 
      (j8h)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (l8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P2-4
    :precondition 
      (l8h)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (q8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P2-3
    :precondition 
      (q8h)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (t8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P2-2
    :precondition 
      (t8h)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (v8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P7-1__OPENED_P2-1
    :precondition 
      (v8h)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (t3c)) (r3c) (q1d) (j6h) (l6h) (q6h) (t6h) (v6h) (y6h) (b7h) (g7h) (j7h) (l7h) (q7h) (t7h) (v7h) (y7h) (b8h) (g8h) (j8h) (l8h) (q8h) (t8h) ))

      ; merge k0-l
      (when  (and (r1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (r3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P6-7
    :precondition 
      (tig)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P6-6
    :precondition 
      (vig)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P6-5
    :precondition 
      (yig)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P6-4
    :precondition 
      (bjg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P6-3
    :precondition 
      (gjg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P6-2
    :precondition 
      (jjg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P6-1
    :precondition 
      (ljg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P4-7
    :precondition 
      (qjg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P4-6
    :precondition 
      (tjg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P4-5
    :precondition 
      (vjg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P4-4
    :precondition 
      (yjg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P4-3
    :precondition 
      (bkg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P4-2
    :precondition 
      (gkg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P4-1
    :precondition 
      (jkg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P2-7
    :precondition 
      (lkg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (qkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P2-6
    :precondition 
      (qkg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (tkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P2-5
    :precondition 
      (tkg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (vkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P2-4
    :precondition 
      (vkg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (ykg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P2-3
    :precondition 
      (ykg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (blg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P2-2
    :precondition 
      (blg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (glg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-7__OPENED_P2-1
    :precondition 
      (glg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (q3c)) (m3c) (l1d) (tig) (vig) (yig) (bjg) (gjg) (jjg) (ljg) (qjg) (tjg) (vjg) (yjg) (bkg) (gkg) (jkg) (lkg) (qkg) (tkg) (vkg) (ykg) (blg) ))

      ; merge k0-l
      (when  (and (m1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (m3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P6-7
    :precondition 
      (gfg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P6-6
    :precondition 
      (jfg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P6-5
    :precondition 
      (lfg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P6-4
    :precondition 
      (qfg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P6-3
    :precondition 
      (tfg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P6-2
    :precondition 
      (vfg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P6-1
    :precondition 
      (yfg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P4-7
    :precondition 
      (bgg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P4-6
    :precondition 
      (ggg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P4-5
    :precondition 
      (jgg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P4-4
    :precondition 
      (lgg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P4-3
    :precondition 
      (qgg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P4-2
    :precondition 
      (tgg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P4-1
    :precondition 
      (vgg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P2-7
    :precondition 
      (ygg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (bhg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P2-6
    :precondition 
      (bhg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (ghg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P2-5
    :precondition 
      (ghg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (jhg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P2-4
    :precondition 
      (jhg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (lhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P2-3
    :precondition 
      (lhg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (qhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P2-2
    :precondition 
      (qhg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (thg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-6__OPENED_P2-1
    :precondition 
      (thg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (l3c)) (k3c) (j1d) (gfg) (jfg) (lfg) (qfg) (tfg) (vfg) (yfg) (bgg) (ggg) (jgg) (lgg) (qgg) (tgg) (vgg) (ygg) (bhg) (ghg) (jhg) (lhg) (qhg) ))

      ; merge k0-l
      (when  (and (k1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (k3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P6-7
    :precondition 
      (tbg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P6-6
    :precondition 
      (vbg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P6-5
    :precondition 
      (ybg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P6-4
    :precondition 
      (bcg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P6-3
    :precondition 
      (gcg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P6-2
    :precondition 
      (jcg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P6-1
    :precondition 
      (lcg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P4-7
    :precondition 
      (qcg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P4-6
    :precondition 
      (tcg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P4-5
    :precondition 
      (vcg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P4-4
    :precondition 
      (ycg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P4-3
    :precondition 
      (bdg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P4-2
    :precondition 
      (gdg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P4-1
    :precondition 
      (jdg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P2-7
    :precondition 
      (ldg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (qdg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P2-6
    :precondition 
      (qdg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (tdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P2-5
    :precondition 
      (tdg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (vdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P2-4
    :precondition 
      (vdg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (ydg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P2-3
    :precondition 
      (ydg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (beg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P2-2
    :precondition 
      (beg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (geg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-5__OPENED_P2-1
    :precondition 
      (geg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (j3c)) (h3c) (g1d) (tbg) (vbg) (ybg) (bcg) (gcg) (jcg) (lcg) (qcg) (tcg) (vcg) (ycg) (bdg) (gdg) (jdg) (ldg) (qdg) (tdg) (vdg) (ydg) (beg) ))

      ; merge k0-l
      (when  (and (h1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (h3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P6-7
    :precondition 
      (g9f)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P6-6
    :precondition 
      (j9f)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P6-5
    :precondition 
      (l9f)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P6-4
    :precondition 
      (q9f)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P6-3
    :precondition 
      (t9f)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P6-2
    :precondition 
      (v9f)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P6-1
    :precondition 
      (y9f)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P4-7
    :precondition 
      (b0f)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P4-6
    :precondition 
      (g0f)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P4-5
    :precondition 
      (j0f)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P4-4
    :precondition 
      (l0f)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P4-3
    :precondition 
      (q0f)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P4-2
    :precondition 
      (t0f)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P4-1
    :precondition 
      (v0f)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (y0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P2-7
    :precondition 
      (y0f)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (bag) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P2-6
    :precondition 
      (bag)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (gag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P2-5
    :precondition 
      (gag)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (jag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P2-4
    :precondition 
      (jag)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (lag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P2-3
    :precondition 
      (lag)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (qag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P2-2
    :precondition 
      (qag)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (tag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-4__OPENED_P2-1
    :precondition 
      (tag)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (g3c)) (c3c) (b1d) (g9f) (j9f) (l9f) (q9f) (t9f) (v9f) (y9f) (b0f) (g0f) (j0f) (l0f) (q0f) (t0f) (v0f) (y0f) (bag) (gag) (jag) (lag) (qag) ))

      ; merge k0-l
      (when  (and (c1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (c3c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P6-7
    :precondition 
      (gmg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P6-6
    :precondition 
      (jmg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P6-5
    :precondition 
      (lmg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P6-4
    :precondition 
      (qmg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P6-3
    :precondition 
      (tmg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P6-2
    :precondition 
      (vmg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P6-1
    :precondition 
      (ymg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P4-7
    :precondition 
      (bng)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P4-6
    :precondition 
      (gng)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P4-5
    :precondition 
      (jng)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P4-4
    :precondition 
      (lng)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P4-3
    :precondition 
      (qng)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P4-2
    :precondition 
      (tng)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (vng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P4-1
    :precondition 
      (vng)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (yng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P2-7
    :precondition 
      (yng)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (bog) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P2-6
    :precondition 
      (bog)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (gog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P2-5
    :precondition 
      (gog)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (jog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P2-4
    :precondition 
      (jog)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (log) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P2-3
    :precondition 
      (log)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (qog) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P2-2
    :precondition 
      (qog)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (tog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-3__OPENED_P2-1
    :precondition 
      (tog)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (b3c)) (z2c) (yzd) (gmg) (jmg) (lmg) (qmg) (tmg) (vmg) (ymg) (bng) (gng) (jng) (lng) (qng) (tng) (vng) (yng) (bog) (gog) (jog) (log) (qog) ))

      ; merge k0-l
      (when  (and (zzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (z2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P6-7
    :precondition 
      (thh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P6-6
    :precondition 
      (vhh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P6-5
    :precondition 
      (yhh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P6-4
    :precondition 
      (bih)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P6-3
    :precondition 
      (gih)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P6-2
    :precondition 
      (jih)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P6-1
    :precondition 
      (lih)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P4-7
    :precondition 
      (qih)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P4-6
    :precondition 
      (tih)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P4-5
    :precondition 
      (vih)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P4-4
    :precondition 
      (yih)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P4-3
    :precondition 
      (bjh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P4-2
    :precondition 
      (gjh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P4-1
    :precondition 
      (jjh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P2-7
    :precondition 
      (ljh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (qjh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P2-6
    :precondition 
      (qjh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (tjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P2-5
    :precondition 
      (tjh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (vjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P2-4
    :precondition 
      (vjh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (yjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P2-3
    :precondition 
      (yjh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (bkh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P2-2
    :precondition 
      (bkh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (gkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-2__OPENED_P2-1
    :precondition 
      (gkh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (y2c)) (x2c) (vzd) (thh) (vhh) (yhh) (bih) (gih) (jih) (lih) (qih) (tih) (vih) (yih) (bjh) (gjh) (jjh) (ljh) (qjh) (tjh) (vjh) (yjh) (bkh) ))

      ; merge k0-l
      (when  (and (xzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (x2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P6-7
    :precondition 
      (t3h)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P6-6
    :precondition 
      (v3h)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P6-5
    :precondition 
      (y3h)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P6-4
    :precondition 
      (b4h)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P6-3
    :precondition 
      (g4h)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P6-2
    :precondition 
      (j4h)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P6-1
    :precondition 
      (l4h)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P4-7
    :precondition 
      (q4h)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P4-6
    :precondition 
      (t4h)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P4-5
    :precondition 
      (v4h)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P4-4
    :precondition 
      (y4h)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P4-3
    :precondition 
      (b5h)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P4-2
    :precondition 
      (g5h)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P4-1
    :precondition 
      (j5h)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P2-7
    :precondition 
      (l5h)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (q5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P2-6
    :precondition 
      (q5h)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (t5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P2-5
    :precondition 
      (t5h)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (v5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P2-4
    :precondition 
      (v5h)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (y5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P2-3
    :precondition 
      (y5h)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (b6h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P2-2
    :precondition 
      (b6h)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (g6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P6-1__OPENED_P2-1
    :precondition 
      (g6h)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (v2c)) (u2c) (tzd) (t3h) (v3h) (y3h) (b4h) (g4h) (j4h) (l4h) (q4h) (t4h) (v4h) (y4h) (b5h) (g5h) (j5h) (l5h) (q5h) (t5h) (v5h) (y5h) (b6h) ))

      ; merge k0-l
      (when  (and (uzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (u2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P6-7
    :precondition 
      (b3f)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P6-6
    :precondition 
      (g3f)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P6-5
    :precondition 
      (j3f)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P6-4
    :precondition 
      (l3f)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P6-3
    :precondition 
      (q3f)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P6-2
    :precondition 
      (t3f)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P6-1
    :precondition 
      (v3f)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P4-7
    :precondition 
      (y3f)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P4-6
    :precondition 
      (b4f)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P4-5
    :precondition 
      (g4f)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P4-4
    :precondition 
      (j4f)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P4-3
    :precondition 
      (l4f)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P4-2
    :precondition 
      (q4f)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P4-1
    :precondition 
      (t4f)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P2-7
    :precondition 
      (v4f)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (y4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P2-6
    :precondition 
      (y4f)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (b5f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P2-5
    :precondition 
      (b5f)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (g5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P2-4
    :precondition 
      (g5f)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (j5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P2-3
    :precondition 
      (j5f)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (l5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P2-2
    :precondition 
      (l5f)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (q5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-7__OPENED_P2-1
    :precondition 
      (q5f)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (t2c)) (r2c) (qzd) (b3f) (g3f) (j3f) (l3f) (q3f) (t3f) (v3f) (y3f) (b4f) (g4f) (j4f) (l4f) (q4f) (t4f) (v4f) (y4f) (b5f) (g5f) (j5f) (l5f) ))

      ; merge k0-l
      (when  (and (rzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (r2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P6-7
    :precondition 
      (lzf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P6-6
    :precondition 
      (qzf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P6-5
    :precondition 
      (tzf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P6-4
    :precondition 
      (vzf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P6-3
    :precondition 
      (yzf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P6-2
    :precondition 
      (b1f)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P6-1
    :precondition 
      (g1f)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P4-7
    :precondition 
      (j1f)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P4-6
    :precondition 
      (l1f)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P4-5
    :precondition 
      (q1f)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P4-4
    :precondition 
      (t1f)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P4-3
    :precondition 
      (v1f)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P4-2
    :precondition 
      (y1f)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P4-1
    :precondition 
      (b2f)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P2-7
    :precondition 
      (g2f)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (j2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P2-6
    :precondition 
      (j2f)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (l2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P2-5
    :precondition 
      (l2f)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (q2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P2-4
    :precondition 
      (q2f)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (t2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P2-3
    :precondition 
      (t2f)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (v2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P2-2
    :precondition 
      (v2f)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (y2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-6__OPENED_P2-1
    :precondition 
      (y2f)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (q2c)) (m2c) (lzd) (lzf) (qzf) (tzf) (vzf) (yzf) (b1f) (g1f) (j1f) (l1f) (q1f) (t1f) (v1f) (y1f) (b2f) (g2f) (j2f) (l2f) (q2f) (t2f) (v2f) ))

      ; merge k0-l
      (when  (and (mzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (m2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P6-7
    :precondition 
      (vwf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P6-6
    :precondition 
      (ywf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P6-5
    :precondition 
      (bxf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P6-4
    :precondition 
      (gxf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P6-3
    :precondition 
      (jxf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P6-2
    :precondition 
      (lxf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P6-1
    :precondition 
      (qxf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P4-7
    :precondition 
      (txf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P4-6
    :precondition 
      (vxf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P4-5
    :precondition 
      (yxf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P4-4
    :precondition 
      (byf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P4-3
    :precondition 
      (gyf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P4-2
    :precondition 
      (jyf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P4-1
    :precondition 
      (lyf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P2-7
    :precondition 
      (qyf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (tyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P2-6
    :precondition 
      (tyf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (vyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P2-5
    :precondition 
      (vyf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (yyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P2-4
    :precondition 
      (yyf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (bzf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P2-3
    :precondition 
      (bzf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (gzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P2-2
    :precondition 
      (gzf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (jzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-5__OPENED_P2-1
    :precondition 
      (jzf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (l2c)) (k2c) (jzd) (vwf) (ywf) (bxf) (gxf) (jxf) (lxf) (qxf) (txf) (vxf) (yxf) (byf) (gyf) (jyf) (lyf) (qyf) (tyf) (vyf) (yyf) (bzf) (gzf) ))

      ; merge k0-l
      (when  (and (kzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (k2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P6-7
    :precondition 
      (guf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P6-6
    :precondition 
      (juf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P6-5
    :precondition 
      (luf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P6-4
    :precondition 
      (quf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P6-3
    :precondition 
      (tuf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P6-2
    :precondition 
      (vuf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P6-1
    :precondition 
      (yuf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P4-7
    :precondition 
      (bvf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P4-6
    :precondition 
      (gvf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P4-5
    :precondition 
      (jvf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P4-4
    :precondition 
      (lvf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P4-3
    :precondition 
      (qvf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P4-2
    :precondition 
      (tvf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P4-1
    :precondition 
      (vvf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P2-7
    :precondition 
      (yvf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (bwf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P2-6
    :precondition 
      (bwf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (gwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P2-5
    :precondition 
      (gwf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (jwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P2-4
    :precondition 
      (jwf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (lwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P2-3
    :precondition 
      (lwf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (qwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P2-2
    :precondition 
      (qwf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (twf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-4__OPENED_P2-1
    :precondition 
      (twf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (j2c)) (h2c) (gzd) (guf) (juf) (luf) (quf) (tuf) (vuf) (yuf) (bvf) (gvf) (jvf) (lvf) (qvf) (tvf) (vvf) (yvf) (bwf) (gwf) (jwf) (lwf) (qwf) ))

      ; merge k0-l
      (when  (and (hzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (h2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P6-7
    :precondition 
      (t5f)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P6-6
    :precondition 
      (v5f)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P6-5
    :precondition 
      (y5f)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P6-4
    :precondition 
      (b6f)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P6-3
    :precondition 
      (g6f)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P6-2
    :precondition 
      (j6f)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P6-1
    :precondition 
      (l6f)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P4-7
    :precondition 
      (q6f)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P4-6
    :precondition 
      (t6f)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P4-5
    :precondition 
      (v6f)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P4-4
    :precondition 
      (y6f)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P4-3
    :precondition 
      (b7f)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P4-2
    :precondition 
      (g7f)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P4-1
    :precondition 
      (j7f)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P2-7
    :precondition 
      (l7f)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (q7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P2-6
    :precondition 
      (q7f)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (t7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P2-5
    :precondition 
      (t7f)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (v7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P2-4
    :precondition 
      (v7f)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (y7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P2-3
    :precondition 
      (y7f)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (b8f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P2-2
    :precondition 
      (b8f)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (g8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-3__OPENED_P2-1
    :precondition 
      (g8f)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (g2c)) (c2c) (bzd) (t5f) (v5f) (y5f) (b6f) (g6f) (j6f) (l6f) (q6f) (t6f) (v6f) (y6f) (b7f) (g7f) (j7f) (l7f) (q7f) (t7f) (v7f) (y7f) (b8f) ))

      ; merge k0-l
      (when  (and (czd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (c2c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P6-7
    :precondition 
      (geh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P6-6
    :precondition 
      (jeh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P6-5
    :precondition 
      (leh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P6-4
    :precondition 
      (qeh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P6-3
    :precondition 
      (teh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P6-2
    :precondition 
      (veh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P6-1
    :precondition 
      (yeh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P4-7
    :precondition 
      (bfh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P4-6
    :precondition 
      (gfh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P4-5
    :precondition 
      (jfh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P4-4
    :precondition 
      (lfh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P4-3
    :precondition 
      (qfh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P4-2
    :precondition 
      (tfh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P4-1
    :precondition 
      (vfh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P2-7
    :precondition 
      (yfh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (bgh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P2-6
    :precondition 
      (bgh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (ggh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P2-5
    :precondition 
      (ggh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (jgh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P2-4
    :precondition 
      (jgh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (lgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P2-3
    :precondition 
      (lgh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (qgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P2-2
    :precondition 
      (qgh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (tgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-2__OPENED_P2-1
    :precondition 
      (tgh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (b2c)) (z1c) (yyd) (geh) (jeh) (leh) (qeh) (teh) (veh) (yeh) (bfh) (gfh) (jfh) (lfh) (qfh) (tfh) (vfh) (yfh) (bgh) (ggh) (jgh) (lgh) (qgh) ))

      ; merge k0-l
      (when  (and (zyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (z1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P6-7
    :precondition 
      (gzh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P6-6
    :precondition 
      (jzh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P6-5
    :precondition 
      (lzh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P6-4
    :precondition 
      (qzh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P6-3
    :precondition 
      (tzh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P6-2
    :precondition 
      (vzh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P6-1
    :precondition 
      (yzh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P4-7
    :precondition 
      (b1h)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P4-6
    :precondition 
      (g1h)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P4-5
    :precondition 
      (j1h)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P4-4
    :precondition 
      (l1h)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P4-3
    :precondition 
      (q1h)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P4-2
    :precondition 
      (t1h)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P4-1
    :precondition 
      (v1h)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P2-7
    :precondition 
      (y1h)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (b2h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P2-6
    :precondition 
      (b2h)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (g2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P2-5
    :precondition 
      (g2h)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (j2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P2-4
    :precondition 
      (j2h)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (l2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P2-3
    :precondition 
      (l2h)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (q2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P2-2
    :precondition 
      (q2h)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (t2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P5-1__OPENED_P2-1
    :precondition 
      (t2h)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (y1c)) (x1c) (vyd) (gzh) (jzh) (lzh) (qzh) (tzh) (vzh) (yzh) (b1h) (g1h) (j1h) (l1h) (q1h) (t1h) (v1h) (y1h) (b2h) (g2h) (j2h) (l2h) (q2h) ))

      ; merge k0-l
      (when  (and (xyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (x1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P6-7
    :precondition 
      (bof)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P6-6
    :precondition 
      (gof)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P6-5
    :precondition 
      (jof)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P6-4
    :precondition 
      (lof)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P6-3
    :precondition 
      (qof)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P6-2
    :precondition 
      (tof)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P6-1
    :precondition 
      (vof)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P4-7
    :precondition 
      (yof)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P4-6
    :precondition 
      (bpf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P4-5
    :precondition 
      (gpf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P4-4
    :precondition 
      (jpf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P4-3
    :precondition 
      (lpf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P4-2
    :precondition 
      (qpf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P4-1
    :precondition 
      (tpf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P2-7
    :precondition 
      (vpf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (ypf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P2-6
    :precondition 
      (ypf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (bqf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P2-5
    :precondition 
      (bqf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (gqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P2-4
    :precondition 
      (gqf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (jqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P2-3
    :precondition 
      (jqf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (lqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P2-2
    :precondition 
      (lqf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (qqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-7__OPENED_P2-1
    :precondition 
      (qqf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (v1c)) (u1c) (tyd) (bof) (gof) (jof) (lof) (qof) (tof) (vof) (yof) (bpf) (gpf) (jpf) (lpf) (qpf) (tpf) (vpf) (ypf) (bqf) (gqf) (jqf) (lqf) ))

      ; merge k0-l
      (when  (and (uyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (u1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P6-7
    :precondition 
      (qkf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P6-6
    :precondition 
      (tkf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P6-5
    :precondition 
      (vkf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P6-4
    :precondition 
      (ykf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P6-3
    :precondition 
      (blf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P6-2
    :precondition 
      (glf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P6-1
    :precondition 
      (jlf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P4-7
    :precondition 
      (llf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P4-6
    :precondition 
      (qlf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P4-5
    :precondition 
      (tlf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P4-4
    :precondition 
      (vlf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P4-3
    :precondition 
      (ylf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P4-2
    :precondition 
      (bmf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P4-1
    :precondition 
      (gmf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P2-7
    :precondition 
      (jmf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (lmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P2-6
    :precondition 
      (lmf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (qmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P2-5
    :precondition 
      (qmf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (tmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P2-4
    :precondition 
      (tmf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (vmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P2-3
    :precondition 
      (vmf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (ymf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P2-2
    :precondition 
      (ymf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (bnf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-6__OPENED_P2-1
    :precondition 
      (bnf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (t1c)) (r1c) (qyd) (qkf) (tkf) (vkf) (ykf) (blf) (glf) (jlf) (llf) (qlf) (tlf) (vlf) (ylf) (bmf) (gmf) (jmf) (lmf) (qmf) (tmf) (vmf) (ymf) ))

      ; merge k0-l
      (when  (and (ryd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (r1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P6-7
    :precondition 
      (bhf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P6-6
    :precondition 
      (ghf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P6-5
    :precondition 
      (jhf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P6-4
    :precondition 
      (lhf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P6-3
    :precondition 
      (qhf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P6-2
    :precondition 
      (thf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P6-1
    :precondition 
      (vhf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P4-7
    :precondition 
      (yhf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P4-6
    :precondition 
      (bif)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P4-5
    :precondition 
      (gif)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P4-4
    :precondition 
      (jif)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P4-3
    :precondition 
      (lif)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P4-2
    :precondition 
      (qif)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P4-1
    :precondition 
      (tif)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P2-7
    :precondition 
      (vif)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (yif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P2-6
    :precondition 
      (yif)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (bjf) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P2-5
    :precondition 
      (bjf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (gjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P2-4
    :precondition 
      (gjf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (jjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P2-3
    :precondition 
      (jjf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (ljf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P2-2
    :precondition 
      (ljf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (qjf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-5__OPENED_P2-1
    :precondition 
      (qjf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (q1c)) (m1c) (lyd) (bhf) (ghf) (jhf) (lhf) (qhf) (thf) (vhf) (yhf) (bif) (gif) (jif) (lif) (qif) (tif) (vif) (yif) (bjf) (gjf) (jjf) (ljf) ))

      ; merge k0-l
      (when  (and (myd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (m1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P6-7
    :precondition 
      (qdf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P6-6
    :precondition 
      (tdf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P6-5
    :precondition 
      (vdf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P6-4
    :precondition 
      (ydf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P6-3
    :precondition 
      (bef)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P6-2
    :precondition 
      (gef)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P6-1
    :precondition 
      (jef)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P4-7
    :precondition 
      (lef)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P4-6
    :precondition 
      (qef)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P4-5
    :precondition 
      (tef)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P4-4
    :precondition 
      (vef)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P4-3
    :precondition 
      (yef)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P4-2
    :precondition 
      (bff)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (gff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P4-1
    :precondition 
      (gff)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (jff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P2-7
    :precondition 
      (jff)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (lff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P2-6
    :precondition 
      (lff)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (qff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P2-5
    :precondition 
      (qff)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (tff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P2-4
    :precondition 
      (tff)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (vff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P2-3
    :precondition 
      (vff)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (yff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P2-2
    :precondition 
      (yff)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (bgf) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-4__OPENED_P2-1
    :precondition 
      (bgf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (l1c)) (k1c) (jyd) (qdf) (tdf) (vdf) (ydf) (bef) (gef) (jef) (lef) (qef) (tef) (vef) (yef) (bff) (gff) (jff) (lff) (qff) (tff) (vff) (yff) ))

      ; merge k0-l
      (when  (and (kyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (k1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P6-7
    :precondition 
      (qsf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P6-6
    :precondition 
      (tsf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P6-5
    :precondition 
      (vsf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P6-4
    :precondition 
      (ysf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P6-3
    :precondition 
      (brf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P6-2
    :precondition 
      (grf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P6-1
    :precondition 
      (jrf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P4-7
    :precondition 
      (lrf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P4-6
    :precondition 
      (qrf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P4-5
    :precondition 
      (trf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P4-4
    :precondition 
      (vrf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P4-3
    :precondition 
      (yrf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P4-2
    :precondition 
      (btf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P4-1
    :precondition 
      (gtf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P2-7
    :precondition 
      (jtf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (ltf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P2-6
    :precondition 
      (ltf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (qtf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P2-5
    :precondition 
      (qtf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (ttf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P2-4
    :precondition 
      (ttf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (vtf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P2-3
    :precondition 
      (vtf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (ytf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P2-2
    :precondition 
      (ytf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (buf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-3__OPENED_P2-1
    :precondition 
      (buf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (j1c)) (h1c) (gyd) (qsf) (tsf) (vsf) (ysf) (brf) (grf) (jrf) (lrf) (qrf) (trf) (vrf) (yrf) (btf) (gtf) (jtf) (ltf) (qtf) (ttf) (vtf) (ytf) ))

      ; merge k0-l
      (when  (and (hyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (h1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P6-7
    :precondition 
      (qbh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P6-6
    :precondition 
      (tbh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P6-5
    :precondition 
      (vbh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P6-4
    :precondition 
      (ybh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P6-3
    :precondition 
      (bch)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P6-2
    :precondition 
      (gch)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P6-1
    :precondition 
      (jch)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P4-7
    :precondition 
      (lch)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P4-6
    :precondition 
      (qch)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P4-5
    :precondition 
      (tch)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P4-4
    :precondition 
      (vch)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P4-3
    :precondition 
      (ych)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P4-2
    :precondition 
      (bdh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P4-1
    :precondition 
      (gdh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P2-7
    :precondition 
      (jdh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (ldh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P2-6
    :precondition 
      (ldh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (qdh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P2-5
    :precondition 
      (qdh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (tdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P2-4
    :precondition 
      (tdh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (vdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P2-3
    :precondition 
      (vdh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (ydh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P2-2
    :precondition 
      (ydh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (beh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-2__OPENED_P2-1
    :precondition 
      (beh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (g1c)) (c1c) (byd) (qbh) (tbh) (vbh) (ybh) (bch) (gch) (jch) (lch) (qch) (tch) (vch) (ych) (bdh) (gdh) (jdh) (ldh) (qdh) (tdh) (vdh) (ydh) ))

      ; merge k0-l
      (when  (and (cyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (c1c) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P6-7
    :precondition 
      (qwh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P6-6
    :precondition 
      (twh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P6-5
    :precondition 
      (vwh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P6-4
    :precondition 
      (ywh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P6-3
    :precondition 
      (bxh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P6-2
    :precondition 
      (gxh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P6-1
    :precondition 
      (jxh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P4-7
    :precondition 
      (lxh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P4-6
    :precondition 
      (qxh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P4-5
    :precondition 
      (txh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P4-4
    :precondition 
      (vxh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P4-3
    :precondition 
      (yxh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P4-2
    :precondition 
      (byh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P4-1
    :precondition 
      (gyh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P2-7
    :precondition 
      (jyh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (lyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P2-6
    :precondition 
      (lyh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (qyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P2-5
    :precondition 
      (qyh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (tyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P2-4
    :precondition 
      (tyh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (vyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P2-3
    :precondition 
      (vyh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (yyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P2-2
    :precondition 
      (yyh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (bzh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P4-1__OPENED_P2-1
    :precondition 
      (bzh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (b1c)) (zzc) (yxd) (qwh) (twh) (vwh) (ywh) (bxh) (gxh) (jxh) (lxh) (qxh) (txh) (vxh) (yxh) (byh) (gyh) (jyh) (lyh) (qyh) (tyh) (vyh) (yyh) ))

      ; merge k0-l
      (when  (and (zxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (zzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P6-7
    :precondition 
      (l8e)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P6-6
    :precondition 
      (q8e)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P6-5
    :precondition 
      (t8e)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P6-4
    :precondition 
      (v8e)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P6-3
    :precondition 
      (y8e)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P6-2
    :precondition 
      (b9e)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P6-1
    :precondition 
      (g9e)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P4-7
    :precondition 
      (j9e)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P4-6
    :precondition 
      (l9e)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P4-5
    :precondition 
      (q9e)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P4-4
    :precondition 
      (t9e)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P4-3
    :precondition 
      (v9e)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P4-2
    :precondition 
      (y9e)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P4-1
    :precondition 
      (b0e)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P2-7
    :precondition 
      (g0e)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (j0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P2-6
    :precondition 
      (j0e)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (l0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P2-5
    :precondition 
      (l0e)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (q0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P2-4
    :precondition 
      (q0e)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (t0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P2-3
    :precondition 
      (t0e)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (v0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P2-2
    :precondition 
      (v0e)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (y0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-7__OPENED_P2-1
    :precondition 
      (y0e)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (yzc)) (xzc) (vxd) (l8e) (q8e) (t8e) (v8e) (y8e) (b9e) (g9e) (j9e) (l9e) (q9e) (t9e) (v9e) (y9e) (b0e) (g0e) (j0e) (l0e) (q0e) (t0e) (v0e) ))

      ; merge k0-l
      (when  (and (xxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (xzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P6-7
    :precondition 
      (v5e)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P6-6
    :precondition 
      (y5e)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P6-5
    :precondition 
      (b6e)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P6-4
    :precondition 
      (g6e)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P6-3
    :precondition 
      (j6e)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P6-2
    :precondition 
      (l6e)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P6-1
    :precondition 
      (q6e)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P4-7
    :precondition 
      (t6e)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P4-6
    :precondition 
      (v6e)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P4-5
    :precondition 
      (y6e)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P4-4
    :precondition 
      (b7e)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P4-3
    :precondition 
      (g7e)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P4-2
    :precondition 
      (j7e)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P4-1
    :precondition 
      (l7e)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P2-7
    :precondition 
      (q7e)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (t7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P2-6
    :precondition 
      (t7e)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (v7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P2-5
    :precondition 
      (v7e)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (y7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P2-4
    :precondition 
      (y7e)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (b8e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P2-3
    :precondition 
      (b8e)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (g8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P2-2
    :precondition 
      (g8e)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (j8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-6__OPENED_P2-1
    :precondition 
      (j8e)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (vzc)) (uzc) (txd) (v5e) (y5e) (b6e) (g6e) (j6e) (l6e) (q6e) (t6e) (v6e) (y6e) (b7e) (g7e) (j7e) (l7e) (q7e) (t7e) (v7e) (y7e) (b8e) (g8e) ))

      ; merge k0-l
      (when  (and (uxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (uzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P6-7
    :precondition 
      (g3e)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P6-6
    :precondition 
      (j3e)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P6-5
    :precondition 
      (l3e)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P6-4
    :precondition 
      (q3e)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P6-3
    :precondition 
      (t3e)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P6-2
    :precondition 
      (v3e)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P6-1
    :precondition 
      (y3e)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P4-7
    :precondition 
      (b4e)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P4-6
    :precondition 
      (g4e)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P4-5
    :precondition 
      (j4e)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P4-4
    :precondition 
      (l4e)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P4-3
    :precondition 
      (q4e)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P4-2
    :precondition 
      (t4e)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P4-1
    :precondition 
      (v4e)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P2-7
    :precondition 
      (y4e)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (b5e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P2-6
    :precondition 
      (b5e)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (g5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P2-5
    :precondition 
      (g5e)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (j5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P2-4
    :precondition 
      (j5e)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (l5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P2-3
    :precondition 
      (l5e)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (q5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P2-2
    :precondition 
      (q5e)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (t5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-5__OPENED_P2-1
    :precondition 
      (t5e)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (tzc)) (rzc) (qxd) (g3e) (j3e) (l3e) (q3e) (t3e) (v3e) (y3e) (b4e) (g4e) (j4e) (l4e) (q4e) (t4e) (v4e) (y4e) (b5e) (g5e) (j5e) (l5e) (q5e) ))

      ; merge k0-l
      (when  (and (rxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (rzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P6-7
    :precondition 
      (qze)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P6-6
    :precondition 
      (tze)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P6-5
    :precondition 
      (vze)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P6-4
    :precondition 
      (yze)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P6-3
    :precondition 
      (b1e)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P6-2
    :precondition 
      (g1e)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P6-1
    :precondition 
      (j1e)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P4-7
    :precondition 
      (l1e)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P4-6
    :precondition 
      (q1e)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P4-5
    :precondition 
      (t1e)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P4-4
    :precondition 
      (v1e)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P4-3
    :precondition 
      (y1e)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P4-2
    :precondition 
      (b2e)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P4-1
    :precondition 
      (g2e)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P2-7
    :precondition 
      (j2e)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (l2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P2-6
    :precondition 
      (l2e)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (q2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P2-5
    :precondition 
      (q2e)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (t2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P2-4
    :precondition 
      (t2e)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (v2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P2-3
    :precondition 
      (v2e)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (y2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P2-2
    :precondition 
      (y2e)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (b3e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-4__OPENED_P2-1
    :precondition 
      (b3e)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (qzc)) (mzc) (lxd) (qze) (tze) (vze) (yze) (b1e) (g1e) (j1e) (l1e) (q1e) (t1e) (v1e) (y1e) (b2e) (g2e) (j2e) (l2e) (q2e) (t2e) (v2e) (y2e) ))

      ; merge k0-l
      (when  (and (mxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (mzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P6-7
    :precondition 
      (baf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P6-6
    :precondition 
      (gaf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P6-5
    :precondition 
      (jaf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P6-4
    :precondition 
      (laf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P6-3
    :precondition 
      (qaf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P6-2
    :precondition 
      (taf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P6-1
    :precondition 
      (vaf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P4-7
    :precondition 
      (yaf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P4-6
    :precondition 
      (bbf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P4-5
    :precondition 
      (gbf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P4-4
    :precondition 
      (jbf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P4-3
    :precondition 
      (lbf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P4-2
    :precondition 
      (qbf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P4-1
    :precondition 
      (tbf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P2-7
    :precondition 
      (vbf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (ybf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P2-6
    :precondition 
      (ybf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (bcf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P2-5
    :precondition 
      (bcf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (gcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P2-4
    :precondition 
      (gcf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (jcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P2-3
    :precondition 
      (jcf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (lcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P2-2
    :precondition 
      (lcf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (qcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-3__OPENED_P2-1
    :precondition 
      (qcf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (lzc)) (kzc) (jxd) (baf) (gaf) (jaf) (laf) (qaf) (taf) (vaf) (yaf) (bbf) (gbf) (jbf) (lbf) (qbf) (tbf) (vbf) (ybf) (bcf) (gcf) (jcf) (lcf) ))

      ; merge k0-l
      (when  (and (kxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (kzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P6-7
    :precondition 
      (b9g)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P6-6
    :precondition 
      (g9g)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P6-5
    :precondition 
      (j9g)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P6-4
    :precondition 
      (l9g)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P6-3
    :precondition 
      (q9g)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P6-2
    :precondition 
      (t9g)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P6-1
    :precondition 
      (v9g)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P4-7
    :precondition 
      (y9g)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P4-6
    :precondition 
      (b0g)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P4-5
    :precondition 
      (g0g)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P4-4
    :precondition 
      (j0g)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P4-3
    :precondition 
      (l0g)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P4-2
    :precondition 
      (q0g)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P4-1
    :precondition 
      (t0g)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (v0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P2-7
    :precondition 
      (v0g)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (y0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P2-6
    :precondition 
      (y0g)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (bah) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P2-5
    :precondition 
      (bah)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (gah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P2-4
    :precondition 
      (gah)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (jah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P2-3
    :precondition 
      (jah)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (lah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P2-2
    :precondition 
      (lah)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (qah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-2__OPENED_P2-1
    :precondition 
      (qah)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (jzc)) (hzc) (gxd) (b9g) (g9g) (j9g) (l9g) (q9g) (t9g) (v9g) (y9g) (b0g) (g0g) (j0g) (l0g) (q0g) (t0g) (v0g) (y0g) (bah) (gah) (jah) (lah) ))

      ; merge k0-l
      (when  (and (hxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (hzc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P6-7
    :precondition 
      (bth)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P6-6
    :precondition 
      (gth)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P6-5
    :precondition 
      (jth)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P6-4
    :precondition 
      (lth)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P6-3
    :precondition 
      (qth)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P6-2
    :precondition 
      (tth)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P6-1
    :precondition 
      (vth)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P4-7
    :precondition 
      (yth)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P4-6
    :precondition 
      (buh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P4-5
    :precondition 
      (guh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P4-4
    :precondition 
      (juh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P4-3
    :precondition 
      (luh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P4-2
    :precondition 
      (quh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P4-1
    :precondition 
      (tuh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P2-7
    :precondition 
      (vuh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (yuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P2-6
    :precondition 
      (yuh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (bvh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P2-5
    :precondition 
      (bvh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (gvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P2-4
    :precondition 
      (gvh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (jvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P2-3
    :precondition 
      (jvh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (lvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P2-2
    :precondition 
      (lvh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (qvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P3-1__OPENED_P2-1
    :precondition 
      (qvh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (gzc)) (czc) (bxd) (bth) (gth) (jth) (lth) (qth) (tth) (vth) (yth) (buh) (guh) (juh) (luh) (quh) (tuh) (vuh) (yuh) (bvh) (gvh) (jvh) (lvh) ))

      ; merge k0-l
      (when  (and (cxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (czc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P6-7
    :precondition 
      (lte)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P6-6
    :precondition 
      (qte)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P6-5
    :precondition 
      (tte)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P6-4
    :precondition 
      (vte)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P6-3
    :precondition 
      (yte)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P6-2
    :precondition 
      (bue)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P6-1
    :precondition 
      (gue)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P4-7
    :precondition 
      (jue)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P4-6
    :precondition 
      (lue)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P4-5
    :precondition 
      (que)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P4-4
    :precondition 
      (tue)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P4-3
    :precondition 
      (vue)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P4-2
    :precondition 
      (yue)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P4-1
    :precondition 
      (bve)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (gve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P2-7
    :precondition 
      (gve)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (jve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P2-6
    :precondition 
      (jve)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (lve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P2-5
    :precondition 
      (lve)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (qve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P2-4
    :precondition 
      (qve)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (tve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P2-3
    :precondition 
      (tve)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (vve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P2-2
    :precondition 
      (vve)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (yve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-7__OPENED_P2-1
    :precondition 
      (yve)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (bzc)) (zyc) (ywd) (lte) (qte) (tte) (vte) (yte) (bue) (gue) (jue) (lue) (que) (tue) (vue) (yue) (bve) (gve) (jve) (lve) (qve) (tve) (vve) ))

      ; merge k0-l
      (when  (and (zwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (zyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P6-7
    :precondition 
      (ype)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P6-6
    :precondition 
      (bqe)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P6-5
    :precondition 
      (gqe)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P6-4
    :precondition 
      (jqe)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P6-3
    :precondition 
      (lqe)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P6-2
    :precondition 
      (qqe)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P6-1
    :precondition 
      (tqe)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P4-7
    :precondition 
      (vqe)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P4-6
    :precondition 
      (yqe)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P4-5
    :precondition 
      (bse)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P4-4
    :precondition 
      (gse)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P4-3
    :precondition 
      (jse)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P4-2
    :precondition 
      (lse)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P4-1
    :precondition 
      (qse)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (tse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P2-7
    :precondition 
      (tse)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (vse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P2-6
    :precondition 
      (vse)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (yse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P2-5
    :precondition 
      (yse)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (bre) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P2-4
    :precondition 
      (bre)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (gre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P2-3
    :precondition 
      (gre)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (jre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P2-2
    :precondition 
      (jre)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (lre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-6__OPENED_P2-1
    :precondition 
      (lre)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (yyc)) (xyc) (vwd) (ype) (bqe) (gqe) (jqe) (lqe) (qqe) (tqe) (vqe) (yqe) (bse) (gse) (jse) (lse) (qse) (tse) (vse) (yse) (bre) (gre) (jre) ))

      ; merge k0-l
      (when  (and (xwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (xyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P6-7
    :precondition 
      (vje)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P6-6
    :precondition 
      (yje)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P6-5
    :precondition 
      (bke)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P6-4
    :precondition 
      (gke)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P6-3
    :precondition 
      (jke)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P6-2
    :precondition 
      (lke)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P6-1
    :precondition 
      (qke)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P4-7
    :precondition 
      (tke)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P4-6
    :precondition 
      (vke)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P4-5
    :precondition 
      (yke)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P4-4
    :precondition 
      (ble)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P4-3
    :precondition 
      (gle)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P4-2
    :precondition 
      (jle)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P4-1
    :precondition 
      (lle)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (qle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P2-7
    :precondition 
      (qle)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (tle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P2-6
    :precondition 
      (tle)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (vle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P2-5
    :precondition 
      (vle)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (yle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P2-4
    :precondition 
      (yle)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (bme) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P2-3
    :precondition 
      (bme)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (gme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P2-2
    :precondition 
      (gme)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (jme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-5__OPENED_P2-1
    :precondition 
      (jme)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (vyc)) (uyc) (twd) (vje) (yje) (bke) (gke) (jke) (lke) (qke) (tke) (vke) (yke) (ble) (gle) (jle) (lle) (qle) (tle) (vle) (yle) (bme) (gme) ))

      ; merge k0-l
      (when  (and (uwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (uyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P6-7
    :precondition 
      (tde)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P6-6
    :precondition 
      (vde)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P6-5
    :precondition 
      (yde)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P6-4
    :precondition 
      (bee)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P6-3
    :precondition 
      (gee)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P6-2
    :precondition 
      (jee)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P6-1
    :precondition 
      (lee)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P4-7
    :precondition 
      (qee)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P4-6
    :precondition 
      (tee)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P4-5
    :precondition 
      (vee)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P4-4
    :precondition 
      (yee)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P4-3
    :precondition 
      (bfe)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P4-2
    :precondition 
      (gfe)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P4-1
    :precondition 
      (jfe)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P2-7
    :precondition 
      (lfe)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (qfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P2-6
    :precondition 
      (qfe)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (tfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P2-5
    :precondition 
      (tfe)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (vfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P2-4
    :precondition 
      (vfe)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (yfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P2-3
    :precondition 
      (yfe)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (bge) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P2-2
    :precondition 
      (bge)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (gge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-4__OPENED_P2-1
    :precondition 
      (gge)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (tyc)) (ryc) (qwd) (tde) (vde) (yde) (bee) (gee) (jee) (lee) (qee) (tee) (vee) (yee) (bfe) (gfe) (jfe) (lfe) (qfe) (tfe) (vfe) (yfe) (bge) ))

      ; merge k0-l
      (when  (and (rwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (ryc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P6-7
    :precondition 
      (ywe)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P6-6
    :precondition 
      (bxe)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P6-5
    :precondition 
      (gxe)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P6-4
    :precondition 
      (jxe)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P6-3
    :precondition 
      (lxe)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P6-2
    :precondition 
      (qxe)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P6-1
    :precondition 
      (txe)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P4-7
    :precondition 
      (vxe)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P4-6
    :precondition 
      (yxe)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P4-5
    :precondition 
      (bye)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P4-4
    :precondition 
      (gye)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P4-3
    :precondition 
      (jye)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P4-2
    :precondition 
      (lye)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P4-1
    :precondition 
      (qye)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (tye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P2-7
    :precondition 
      (tye)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (vye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P2-6
    :precondition 
      (vye)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (yye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P2-5
    :precondition 
      (yye)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (bze) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P2-4
    :precondition 
      (bze)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (gze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P2-3
    :precondition 
      (gze)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (jze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P2-2
    :precondition 
      (jze)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (lze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-3__OPENED_P2-1
    :precondition 
      (lze)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (qyc)) (myc) (lwd) (ywe) (bxe) (gxe) (jxe) (lxe) (qxe) (txe) (vxe) (yxe) (bye) (gye) (jye) (lye) (qye) (tye) (vye) (yye) (bze) (gze) (jze) ))

      ; merge k0-l
      (when  (and (mwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (myc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P6-7
    :precondition 
      (l6g)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P6-6
    :precondition 
      (q6g)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P6-5
    :precondition 
      (t6g)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P6-4
    :precondition 
      (v6g)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P6-3
    :precondition 
      (y6g)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P6-2
    :precondition 
      (b7g)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P6-1
    :precondition 
      (g7g)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P4-7
    :precondition 
      (j7g)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P4-6
    :precondition 
      (l7g)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P4-5
    :precondition 
      (q7g)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P4-4
    :precondition 
      (t7g)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P4-3
    :precondition 
      (v7g)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P4-2
    :precondition 
      (y7g)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P4-1
    :precondition 
      (b8g)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P2-7
    :precondition 
      (g8g)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (j8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P2-6
    :precondition 
      (j8g)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (l8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P2-5
    :precondition 
      (l8g)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (q8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P2-4
    :precondition 
      (q8g)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (t8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P2-3
    :precondition 
      (t8g)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (v8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P2-2
    :precondition 
      (v8g)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (y8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-2__OPENED_P2-1
    :precondition 
      (y8g)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (lyc)) (kyc) (jwd) (l6g) (q6g) (t6g) (v6g) (y6g) (b7g) (g7g) (j7g) (l7g) (q7g) (t7g) (v7g) (y7g) (b8g) (g8g) (j8g) (l8g) (q8g) (t8g) (v8g) ))

      ; merge k0-l
      (when  (and (kwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (kyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P6-7
    :precondition 
      (lqh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P6-6
    :precondition 
      (qqh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P6-5
    :precondition 
      (tqh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P6-4
    :precondition 
      (vqh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P6-3
    :precondition 
      (yqh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P6-2
    :precondition 
      (bsh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P6-1
    :precondition 
      (gsh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P4-7
    :precondition 
      (jsh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P4-6
    :precondition 
      (lsh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P4-5
    :precondition 
      (qsh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P4-4
    :precondition 
      (tsh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P4-3
    :precondition 
      (vsh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P4-2
    :precondition 
      (ysh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P4-1
    :precondition 
      (brh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P2-7
    :precondition 
      (grh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (jrh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P2-6
    :precondition 
      (jrh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (lrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P2-5
    :precondition 
      (lrh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (qrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P2-4
    :precondition 
      (qrh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (trh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P2-3
    :precondition 
      (trh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (vrh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P2-2
    :precondition 
      (vrh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (yrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P2-1__OPENED_P2-1
    :precondition 
      (yrh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (jyc)) (hyc) (gwd) (lqh) (qqh) (tqh) (vqh) (yqh) (bsh) (gsh) (jsh) (lsh) (qsh) (tsh) (vsh) (ysh) (brh) (grh) (jrh) (lrh) (qrh) (trh) (vrh) ))

      ; merge k0-l
      (when  (and (hwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (hyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P6-7
    :precondition 
      (lme)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P6-6
    :precondition 
      (qme)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P6-5
    :precondition 
      (tme)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P6-4
    :precondition 
      (vme)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P6-3
    :precondition 
      (yme)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P6-2
    :precondition 
      (bne)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P6-1
    :precondition 
      (gne)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P4-7
    :precondition 
      (jne)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P4-6
    :precondition 
      (lne)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P4-5
    :precondition 
      (qne)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P4-4
    :precondition 
      (tne)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P4-3
    :precondition 
      (vne)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P4-2
    :precondition 
      (yne)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P4-1
    :precondition 
      (boe)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (goe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P2-7
    :precondition 
      (goe)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (joe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P2-6
    :precondition 
      (joe)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (loe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P2-5
    :precondition 
      (loe)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (qoe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P2-4
    :precondition 
      (qoe)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (toe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P2-3
    :precondition 
      (toe)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (voe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P2-2
    :precondition 
      (voe)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (yoe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-7__OPENED_P2-1
    :precondition 
      (yoe)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (gyc)) (cyc) (bwd) (lme) (qme) (tme) (vme) (yme) (bne) (gne) (jne) (lne) (qne) (tne) (vne) (yne) (boe) (goe) (joe) (loe) (qoe) (toe) (voe) ))

      ; merge k0-l
      (when  (and (cwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (cyc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P6-7
    :precondition 
      (jge)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P6-6
    :precondition 
      (lge)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P6-5
    :precondition 
      (qge)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P6-4
    :precondition 
      (tge)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P6-3
    :precondition 
      (vge)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P6-2
    :precondition 
      (yge)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P6-1
    :precondition 
      (bhe)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P4-7
    :precondition 
      (ghe)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P4-6
    :precondition 
      (jhe)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P4-5
    :precondition 
      (lhe)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P4-4
    :precondition 
      (qhe)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P4-3
    :precondition 
      (the)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P4-2
    :precondition 
      (vhe)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P4-1
    :precondition 
      (yhe)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (bie) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P2-7
    :precondition 
      (bie)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (gie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P2-6
    :precondition 
      (gie)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (jie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P2-5
    :precondition 
      (jie)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (lie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P2-4
    :precondition 
      (lie)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (qie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P2-3
    :precondition 
      (qie)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (tie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P2-2
    :precondition 
      (tie)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (vie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-6__OPENED_P2-1
    :precondition 
      (vie)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (byc)) (zxc) (yvd) (jge) (lge) (qge) (tge) (vge) (yge) (bhe) (ghe) (jhe) (lhe) (qhe) (the) (vhe) (yhe) (bie) (gie) (jie) (lie) (qie) (tie) ))

      ; merge k0-l
      (when  (and (zvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (zxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P6-7
    :precondition 
      (gae)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P6-6
    :precondition 
      (jae)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P6-5
    :precondition 
      (lae)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P6-4
    :precondition 
      (qae)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P6-3
    :precondition 
      (tae)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P6-2
    :precondition 
      (vae)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P6-1
    :precondition 
      (yae)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P4-7
    :precondition 
      (bbe)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P4-6
    :precondition 
      (gbe)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P4-5
    :precondition 
      (jbe)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P4-4
    :precondition 
      (lbe)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P4-3
    :precondition 
      (qbe)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P4-2
    :precondition 
      (tbe)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P4-1
    :precondition 
      (vbe)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (ybe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P2-7
    :precondition 
      (ybe)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (bce) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P2-6
    :precondition 
      (bce)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (gce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P2-5
    :precondition 
      (gce)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (jce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P2-4
    :precondition 
      (jce)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (lce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P2-3
    :precondition 
      (lce)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (qce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P2-2
    :precondition 
      (qce)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (tce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-5__OPENED_P2-1
    :precondition 
      (tce)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (yxc)) (xxc) (vvd) (gae) (jae) (lae) (qae) (tae) (vae) (yae) (bbe) (gbe) (jbe) (lbe) (qbe) (tbe) (vbe) (ybe) (bce) (gce) (jce) (lce) (qce) ))

      ; merge k0-l
      (when  (and (xvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (xxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P6-7
    :precondition 
      (q8d)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P6-6
    :precondition 
      (t8d)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P6-5
    :precondition 
      (v8d)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P6-4
    :precondition 
      (y8d)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P6-3
    :precondition 
      (b9d)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P6-2
    :precondition 
      (g9d)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P6-1
    :precondition 
      (j9d)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P4-7
    :precondition 
      (l9d)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P4-6
    :precondition 
      (q9d)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P4-5
    :precondition 
      (t9d)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P4-4
    :precondition 
      (v9d)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P4-3
    :precondition 
      (y9d)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P4-2
    :precondition 
      (b0d)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P4-1
    :precondition 
      (g0d)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P2-7
    :precondition 
      (j0d)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (l0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P2-6
    :precondition 
      (l0d)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (q0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P2-5
    :precondition 
      (q0d)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (t0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P2-4
    :precondition 
      (t0d)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (v0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P2-3
    :precondition 
      (v0d)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (y0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P2-2
    :precondition 
      (y0d)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (bae) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-3__OPENED_P2-1
    :precondition 
      (bae)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (vxc)) (uxc) (tvd) (q8d) (t8d) (v8d) (y8d) (b9d) (g9d) (j9d) (l9d) (q9d) (t9d) (v9d) (y9d) (b0d) (g0d) (j0d) (l0d) (q0d) (t0d) (v0d) (y0d) ))

      ; merge k0-l
      (when  (and (uvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (uxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P6-7
    :precondition 
      (y2g)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P6-6
    :precondition 
      (b3g)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P6-5
    :precondition 
      (g3g)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P6-4
    :precondition 
      (j3g)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P6-3
    :precondition 
      (l3g)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P6-2
    :precondition 
      (q3g)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P6-1
    :precondition 
      (t3g)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P4-7
    :precondition 
      (v3g)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P4-6
    :precondition 
      (y3g)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P4-5
    :precondition 
      (b4g)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P4-4
    :precondition 
      (g4g)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P4-3
    :precondition 
      (j4g)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P4-2
    :precondition 
      (l4g)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P4-1
    :precondition 
      (q4g)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P2-7
    :precondition 
      (t4g)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (v4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P2-6
    :precondition 
      (v4g)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (y4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P2-5
    :precondition 
      (y4g)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (b5g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P2-4
    :precondition 
      (b5g)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (g5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P2-3
    :precondition 
      (g5g)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (j5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P2-2
    :precondition 
      (j5g)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (l5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-2__OPENED_P2-1
    :precondition 
      (l5g)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (txc)) (rxc) (qvd) (y2g) (b3g) (g3g) (j3g) (l3g) (q3g) (t3g) (v3g) (y3g) (b4g) (g4g) (j4g) (l4g) (q4g) (t4g) (v4g) (y4g) (b5g) (g5g) (j5g) ))

      ; merge k0-l
      (when  (and (rvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (rxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P6-7
    :precondition 
      (ymh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P6-6
    :precondition 
      (bnh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P6-5
    :precondition 
      (gnh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P6-4
    :precondition 
      (jnh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P6-3
    :precondition 
      (lnh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P6-2
    :precondition 
      (qnh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P6-1
    :precondition 
      (tnh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P4-7
    :precondition 
      (vnh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P4-6
    :precondition 
      (ynh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P4-5
    :precondition 
      (boh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P4-4
    :precondition 
      (goh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P4-3
    :precondition 
      (joh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P4-2
    :precondition 
      (loh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P4-1
    :precondition 
      (qoh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (toh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P2-7
    :precondition 
      (toh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (voh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P2-6
    :precondition 
      (voh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (yoh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P2-5
    :precondition 
      (yoh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (bph) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P2-4
    :precondition 
      (bph)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (gph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P2-3
    :precondition 
      (gph)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (jph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P2-2
    :precondition 
      (jph)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (lph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-1__OPENED_P2-1
    :precondition 
      (lph)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (qxc)) (mxc) (lvd) (ymh) (bnh) (gnh) (jnh) (lnh) (qnh) (tnh) (vnh) (ynh) (boh) (goh) (joh) (loh) (qoh) (toh) (voh) (yoh) (bph) (gph) (jph) ))

      ; merge k0-l
      (when  (and (mvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (mxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P6-7
    :precondition 
      (y5d)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P6-6
    :precondition 
      (b6d)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P6-5
    :precondition 
      (g6d)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P6-4
    :precondition 
      (j6d)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P6-3
    :precondition 
      (l6d)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P6-2
    :precondition 
      (q6d)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P6-1
    :precondition 
      (t6d)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P4-7
    :precondition 
      (v6d)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P4-6
    :precondition 
      (y6d)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P4-5
    :precondition 
      (b7d)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P4-4
    :precondition 
      (g7d)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P4-3
    :precondition 
      (j7d)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P4-2
    :precondition 
      (l7d)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P4-1
    :precondition 
      (q7d)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P2-7
    :precondition 
      (t7d)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (v7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P2-6
    :precondition 
      (v7d)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (y7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P2-5
    :precondition 
      (y7d)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (b8d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P2-4
    :precondition 
      (b8d)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (g8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P2-3
    :precondition 
      (g8d)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (j8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P2-2
    :precondition 
      (j8d)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (l8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-AT_P1-4__OPENED_P2-1
    :precondition 
      (l8d)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (lxc)) (kxc) (jvd) (y5d) (b6d) (g6d) (j6d) (l6d) (q6d) (t6d) (v6d) (y6d) (b7d) (g7d) (j7d) (l7d) (q7d) (t7d) (v7d) (y7d) (b8d) (g8d) (j8d) ))

      ; merge k0-l
      (when  (and (kvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (kxc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-1__OPENED_P2-7
    :precondition 
      (yph)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (lbc)) (kbc) (j0c) (zph) (bqh) (cqh) (gqh) (hqh) (jqh) ))

      ; merge k0-l
      (when  (and (k0c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (kbc) )

      ; merge k0-l
      (when (k5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-1__OPENED_P2-6
    :precondition 
      (zph)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (lbc)) (kbc) (j0c) (yph) (bqh) (cqh) (gqh) (hqh) (jqh) ))

      ; merge k0-l
      (when  (and (k0c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (kbc) )

      ; merge k0-l
      (when (k5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-1__OPENED_P2-5
    :precondition 
      (bqh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (lbc)) (kbc) (j0c) (yph) (zph) (cqh) (gqh) (hqh) (jqh) ))

      ; merge k0-l
      (when  (and (k0c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (kbc) )

      ; merge k0-l
      (when (k5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-1__OPENED_P2-4
    :precondition 
      (cqh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (lbc)) (kbc) (j0c) (yph) (zph) (bqh) (gqh) (hqh) (jqh) ))

      ; merge k0-l
      (when  (and (k0c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (kbc) )

      ; merge k0-l
      (when (k5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-1__OPENED_P2-3
    :precondition 
      (gqh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (lbc)) (kbc) (j0c) (yph) (zph) (bqh) (cqh) (hqh) (jqh) ))

      ; merge k0-l
      (when  (and (k0c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (kbc) )

      ; merge k0-l
      (when (k5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-1__OPENED_P2-2
    :precondition 
      (hqh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (lbc)) (kbc) (j0c) (yph) (zph) (bqh) (cqh) (gqh) (jqh) ))

      ; merge k0-l
      (when  (and (k0c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (kbc) )

      ; merge k0-l
      (when (k5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-1__OPENED_P2-1
    :precondition 
      (jqh)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (k0c) (m2d) )
         (and (not (lbc)) (kbc) (j0c) (yph) (zph) (bqh) (cqh) (gqh) (hqh) ))

      ; merge ktag
      (when (lbc) 
        (kbc) )

      ; merge k0-l
      (when (k5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-2__OPENED_P2-7
    :precondition 
      (y5g)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (jbc)) (hbc) (g0c) (z5g) (b6g) (c6g) (g6g) (h6g) (j6g) ))

      ; merge k0-l
      (when  (and (h0c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (hbc) )

      ; merge k0-l
      (when (j5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-2__OPENED_P2-6
    :precondition 
      (z5g)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (jbc)) (hbc) (g0c) (y5g) (b6g) (c6g) (g6g) (h6g) (j6g) ))

      ; merge k0-l
      (when  (and (h0c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (hbc) )

      ; merge k0-l
      (when (j5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-2__OPENED_P2-5
    :precondition 
      (b6g)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (jbc)) (hbc) (g0c) (y5g) (z5g) (c6g) (g6g) (h6g) (j6g) ))

      ; merge k0-l
      (when  (and (h0c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (hbc) )

      ; merge k0-l
      (when (j5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-2__OPENED_P2-4
    :precondition 
      (c6g)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (jbc)) (hbc) (g0c) (y5g) (z5g) (b6g) (g6g) (h6g) (j6g) ))

      ; merge k0-l
      (when  (and (h0c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (hbc) )

      ; merge k0-l
      (when (j5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-2__OPENED_P2-3
    :precondition 
      (g6g)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (jbc)) (hbc) (g0c) (y5g) (z5g) (b6g) (c6g) (h6g) (j6g) ))

      ; merge k0-l
      (when  (and (h0c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (hbc) )

      ; merge k0-l
      (when (j5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-2__OPENED_P2-2
    :precondition 
      (h6g)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (h0c) (m2d) )
         (and (not (jbc)) (hbc) (g0c) (y5g) (z5g) (b6g) (c6g) (g6g) (j6g) ))

      ; merge ktag
      (when (jbc) 
        (hbc) )

      ; merge k0-l
      (when (j5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-2__OPENED_P2-1
    :precondition 
      (j6g)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (jbc)) (hbc) (g0c) (y5g) (z5g) (b6g) (c6g) (g6g) (h6g) ))

      ; merge k0-l
      (when  (and (h0c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (hbc) )

      ; merge k0-l
      (when (j5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-3__OPENED_P2-7
    :precondition 
      (lwe)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (gbc)) (cbc) (b0c) (mwe) (qwe) (rwe) (twe) (uwe) (vwe) ))

      ; merge k0-l
      (when  (and (c0c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (cbc) )

      ; merge k0-l
      (when (h5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-3__OPENED_P2-6
    :precondition 
      (mwe)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (gbc)) (cbc) (b0c) (lwe) (qwe) (rwe) (twe) (uwe) (vwe) ))

      ; merge k0-l
      (when  (and (c0c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (cbc) )

      ; merge k0-l
      (when (h5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-3__OPENED_P2-5
    :precondition 
      (qwe)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (gbc)) (cbc) (b0c) (lwe) (mwe) (rwe) (twe) (uwe) (vwe) ))

      ; merge k0-l
      (when  (and (c0c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (cbc) )

      ; merge k0-l
      (when (h5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-3__OPENED_P2-4
    :precondition 
      (rwe)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (gbc)) (cbc) (b0c) (lwe) (mwe) (qwe) (twe) (uwe) (vwe) ))

      ; merge k0-l
      (when  (and (c0c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (cbc) )

      ; merge k0-l
      (when (h5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-3__OPENED_P2-3
    :precondition 
      (twe)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (c0c) (m2d) )
         (and (not (gbc)) (cbc) (b0c) (lwe) (mwe) (qwe) (rwe) (uwe) (vwe) ))

      ; merge ktag
      (when (gbc) 
        (cbc) )

      ; merge k0-l
      (when (h5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-3__OPENED_P2-2
    :precondition 
      (uwe)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (gbc)) (cbc) (b0c) (lwe) (mwe) (qwe) (rwe) (twe) (vwe) ))

      ; merge k0-l
      (when  (and (c0c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (cbc) )

      ; merge k0-l
      (when (h5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-3__OPENED_P2-1
    :precondition 
      (vwe)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (gbc)) (cbc) (b0c) (lwe) (mwe) (qwe) (rwe) (twe) (uwe) ))

      ; merge k0-l
      (when  (and (c0c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (cbc) )

      ; merge k0-l
      (when (h5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-4__OPENED_P2-7
    :precondition 
      (gde)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (bbc)) (zac) (y9c) (hde) (jde) (kde) (lde) (mde) (qde) ))

      ; merge k0-l
      (when  (and (z9c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (zac) )

      ; merge k0-l
      (when (g5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-4__OPENED_P2-6
    :precondition 
      (hde)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (bbc)) (zac) (y9c) (gde) (jde) (kde) (lde) (mde) (qde) ))

      ; merge k0-l
      (when  (and (z9c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (zac) )

      ; merge k0-l
      (when (g5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-4__OPENED_P2-5
    :precondition 
      (jde)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (bbc)) (zac) (y9c) (gde) (hde) (kde) (lde) (mde) (qde) ))

      ; merge k0-l
      (when  (and (z9c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (zac) )

      ; merge k0-l
      (when (g5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-4__OPENED_P2-4
    :precondition 
      (kde)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (z9c) (m2d) )
         (and (not (bbc)) (zac) (y9c) (gde) (hde) (jde) (lde) (mde) (qde) ))

      ; merge ktag
      (when (bbc) 
        (zac) )

      ; merge k0-l
      (when (g5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-4__OPENED_P2-3
    :precondition 
      (lde)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (bbc)) (zac) (y9c) (gde) (hde) (jde) (kde) (mde) (qde) ))

      ; merge k0-l
      (when  (and (z9c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (zac) )

      ; merge k0-l
      (when (g5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-4__OPENED_P2-2
    :precondition 
      (mde)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (bbc)) (zac) (y9c) (gde) (hde) (jde) (kde) (lde) (qde) ))

      ; merge k0-l
      (when  (and (z9c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (zac) )

      ; merge k0-l
      (when (g5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-4__OPENED_P2-1
    :precondition 
      (qde)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (bbc)) (zac) (y9c) (gde) (hde) (jde) (kde) (lde) (mde) ))

      ; merge k0-l
      (when  (and (z9c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (zac) )

      ; merge k0-l
      (when (g5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-5__OPENED_P2-7
    :precondition 
      (jje)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (yac)) (xac) (v9c) (kje) (lje) (mje) (qje) (rje) (tje) ))

      ; merge k0-l
      (when  (and (x9c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (xac) )

      ; merge k0-l
      (when (c5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-5__OPENED_P2-6
    :precondition 
      (kje)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (yac)) (xac) (v9c) (jje) (lje) (mje) (qje) (rje) (tje) ))

      ; merge k0-l
      (when  (and (x9c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (xac) )

      ; merge k0-l
      (when (c5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-5__OPENED_P2-5
    :precondition 
      (lje)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (x9c) (m2d) )
         (and (not (yac)) (xac) (v9c) (jje) (kje) (mje) (qje) (rje) (tje) ))

      ; merge ktag
      (when (yac) 
        (xac) )

      ; merge k0-l
      (when (c5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-5__OPENED_P2-4
    :precondition 
      (mje)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (yac)) (xac) (v9c) (jje) (kje) (lje) (qje) (rje) (tje) ))

      ; merge k0-l
      (when  (and (x9c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (xac) )

      ; merge k0-l
      (when (c5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-5__OPENED_P2-3
    :precondition 
      (qje)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (yac)) (xac) (v9c) (jje) (kje) (lje) (mje) (rje) (tje) ))

      ; merge k0-l
      (when  (and (x9c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (xac) )

      ; merge k0-l
      (when (c5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-5__OPENED_P2-2
    :precondition 
      (rje)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (yac)) (xac) (v9c) (jje) (kje) (lje) (mje) (qje) (tje) ))

      ; merge k0-l
      (when  (and (x9c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (xac) )

      ; merge k0-l
      (when (c5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-5__OPENED_P2-1
    :precondition 
      (tje)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (yac)) (xac) (v9c) (jje) (kje) (lje) (mje) (qje) (rje) ))

      ; merge k0-l
      (when  (and (x9c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (xac) )

      ; merge k0-l
      (when (c5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-6__OPENED_P2-7
    :precondition 
      (lpe)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (vac)) (uac) (t9c) (mpe) (qpe) (rpe) (tpe) (upe) (vpe) ))

      ; merge k0-l
      (when  (and (u9c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (uac) )

      ; merge k0-l
      (when (b5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-6__OPENED_P2-6
    :precondition 
      (mpe)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (u9c) (m2d) )
         (and (not (vac)) (uac) (t9c) (lpe) (qpe) (rpe) (tpe) (upe) (vpe) ))

      ; merge ktag
      (when (vac) 
        (uac) )

      ; merge k0-l
      (when (b5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-6__OPENED_P2-5
    :precondition 
      (qpe)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (vac)) (uac) (t9c) (lpe) (mpe) (rpe) (tpe) (upe) (vpe) ))

      ; merge k0-l
      (when  (and (u9c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (uac) )

      ; merge k0-l
      (when (b5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-6__OPENED_P2-4
    :precondition 
      (rpe)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (vac)) (uac) (t9c) (lpe) (mpe) (qpe) (tpe) (upe) (vpe) ))

      ; merge k0-l
      (when  (and (u9c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (uac) )

      ; merge k0-l
      (when (b5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-6__OPENED_P2-3
    :precondition 
      (tpe)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (vac)) (uac) (t9c) (lpe) (mpe) (qpe) (rpe) (upe) (vpe) ))

      ; merge k0-l
      (when  (and (u9c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (uac) )

      ; merge k0-l
      (when (b5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-6__OPENED_P2-2
    :precondition 
      (upe)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (vac)) (uac) (t9c) (lpe) (mpe) (qpe) (rpe) (tpe) (vpe) ))

      ; merge k0-l
      (when  (and (u9c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (uac) )

      ; merge k0-l
      (when (b5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-6__OPENED_P2-1
    :precondition 
      (vpe)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (vac)) (uac) (t9c) (lpe) (mpe) (qpe) (rpe) (tpe) (upe) ))

      ; merge k0-l
      (when  (and (u9c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (uac) )

      ; merge k0-l
      (when (b5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-7__OPENED_P2-7
    :precondition 
      (yre)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (r9c) (m2d) )
         (and (not (tac)) (rac) (q9c) (zre) (bte) (cte) (gte) (hte) (jte) ))

      ; merge ktag
      (when (tac) 
        (rac) )

      ; merge k0-l
      (when (z4d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-7__OPENED_P2-6
    :precondition 
      (zre)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (tac)) (rac) (q9c) (yre) (bte) (cte) (gte) (hte) (jte) ))

      ; merge k0-l
      (when  (and (r9c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (rac) )

      ; merge k0-l
      (when (z4d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-7__OPENED_P2-5
    :precondition 
      (bte)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (tac)) (rac) (q9c) (yre) (zre) (cte) (gte) (hte) (jte) ))

      ; merge k0-l
      (when  (and (r9c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (rac) )

      ; merge k0-l
      (when (z4d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-7__OPENED_P2-4
    :precondition 
      (cte)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (tac)) (rac) (q9c) (yre) (zre) (bte) (gte) (hte) (jte) ))

      ; merge k0-l
      (when  (and (r9c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (rac) )

      ; merge k0-l
      (when (z4d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-7__OPENED_P2-3
    :precondition 
      (gte)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (tac)) (rac) (q9c) (yre) (zre) (bte) (cte) (hte) (jte) ))

      ; merge k0-l
      (when  (and (r9c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (rac) )

      ; merge k0-l
      (when (z4d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-7__OPENED_P2-2
    :precondition 
      (hte)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (tac)) (rac) (q9c) (yre) (zre) (bte) (cte) (gte) (jte) ))

      ; merge k0-l
      (when  (and (r9c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (rac) )

      ; merge k0-l
      (when (z4d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P2-7__OPENED_P2-1
    :precondition 
      (jte)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (tac)) (rac) (q9c) (yre) (zre) (bte) (cte) (gte) (hte) ))

      ; merge k0-l
      (when  (and (r9c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (rac) )

      ; merge k0-l
      (when (z4d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-1__OPENED_P4-7
    :precondition 
      (bwh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (t0b)) (r0b) (q8c) (cwh) (gwh) (hwh) (jwh) (kwh) (lwh) ))

      ; merge k0-l
      (when  (and (r8c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (r0b) )

      ; merge k0-l
      (when (m4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-1__OPENED_P4-6
    :precondition 
      (cwh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (t0b)) (r0b) (q8c) (bwh) (gwh) (hwh) (jwh) (kwh) (lwh) ))

      ; merge k0-l
      (when  (and (r8c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (r0b) )

      ; merge k0-l
      (when (m4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-1__OPENED_P4-5
    :precondition 
      (gwh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (t0b)) (r0b) (q8c) (bwh) (cwh) (hwh) (jwh) (kwh) (lwh) ))

      ; merge k0-l
      (when  (and (r8c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (r0b) )

      ; merge k0-l
      (when (m4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-1__OPENED_P4-4
    :precondition 
      (hwh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (t0b)) (r0b) (q8c) (bwh) (cwh) (gwh) (jwh) (kwh) (lwh) ))

      ; merge k0-l
      (when  (and (r8c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (r0b) )

      ; merge k0-l
      (when (m4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-1__OPENED_P4-3
    :precondition 
      (jwh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (t0b)) (r0b) (q8c) (bwh) (cwh) (gwh) (hwh) (kwh) (lwh) ))

      ; merge k0-l
      (when  (and (r8c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (r0b) )

      ; merge k0-l
      (when (m4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-1__OPENED_P4-2
    :precondition 
      (kwh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (t0b)) (r0b) (q8c) (bwh) (cwh) (gwh) (hwh) (jwh) (lwh) ))

      ; merge k0-l
      (when  (and (r8c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (r0b) )

      ; merge k0-l
      (when (m4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-1__OPENED_P4-1
    :precondition 
      (lwh)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (r8c) (m2d) )
         (and (not (t0b)) (r0b) (q8c) (bwh) (cwh) (gwh) (hwh) (jwh) (kwh) ))

      ; merge ktag
      (when (t0b) 
        (r0b) )

      ; merge k0-l
      (when (m4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-2__OPENED_P4-7
    :precondition 
      (bbh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (q0b)) (m0b) (l8c) (cbh) (gbh) (hbh) (jbh) (kbh) (lbh) ))

      ; merge k0-l
      (when  (and (m8c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (m0b) )

      ; merge k0-l
      (when (l4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-2__OPENED_P4-6
    :precondition 
      (cbh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (q0b)) (m0b) (l8c) (bbh) (gbh) (hbh) (jbh) (kbh) (lbh) ))

      ; merge k0-l
      (when  (and (m8c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (m0b) )

      ; merge k0-l
      (when (l4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-2__OPENED_P4-5
    :precondition 
      (gbh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (q0b)) (m0b) (l8c) (bbh) (cbh) (hbh) (jbh) (kbh) (lbh) ))

      ; merge k0-l
      (when  (and (m8c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (m0b) )

      ; merge k0-l
      (when (l4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-2__OPENED_P4-4
    :precondition 
      (hbh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (q0b)) (m0b) (l8c) (bbh) (cbh) (gbh) (jbh) (kbh) (lbh) ))

      ; merge k0-l
      (when  (and (m8c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (m0b) )

      ; merge k0-l
      (when (l4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-2__OPENED_P4-3
    :precondition 
      (jbh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (q0b)) (m0b) (l8c) (bbh) (cbh) (gbh) (hbh) (kbh) (lbh) ))

      ; merge k0-l
      (when  (and (m8c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (m0b) )

      ; merge k0-l
      (when (l4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-2__OPENED_P4-2
    :precondition 
      (kbh)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (m8c) (m2d) )
         (and (not (q0b)) (m0b) (l8c) (bbh) (cbh) (gbh) (hbh) (jbh) (lbh) ))

      ; merge ktag
      (when (q0b) 
        (m0b) )

      ; merge k0-l
      (when (l4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-2__OPENED_P4-1
    :precondition 
      (lbh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (q0b)) (m0b) (l8c) (bbh) (cbh) (gbh) (hbh) (jbh) (kbh) ))

      ; merge k0-l
      (when  (and (m8c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (m0b) )

      ; merge k0-l
      (when (l4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-3__OPENED_P4-7
    :precondition 
      (bsf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (l0b)) (k0b) (j8c) (csf) (gsf) (hsf) (jsf) (ksf) (lsf) ))

      ; merge k0-l
      (when  (and (k8c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (k0b) )

      ; merge k0-l
      (when (k4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-3__OPENED_P4-6
    :precondition 
      (csf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (l0b)) (k0b) (j8c) (bsf) (gsf) (hsf) (jsf) (ksf) (lsf) ))

      ; merge k0-l
      (when  (and (k8c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (k0b) )

      ; merge k0-l
      (when (k4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-3__OPENED_P4-5
    :precondition 
      (gsf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (l0b)) (k0b) (j8c) (bsf) (csf) (hsf) (jsf) (ksf) (lsf) ))

      ; merge k0-l
      (when  (and (k8c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (k0b) )

      ; merge k0-l
      (when (k4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-3__OPENED_P4-4
    :precondition 
      (hsf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (l0b)) (k0b) (j8c) (bsf) (csf) (gsf) (jsf) (ksf) (lsf) ))

      ; merge k0-l
      (when  (and (k8c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (k0b) )

      ; merge k0-l
      (when (k4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-3__OPENED_P4-3
    :precondition 
      (jsf)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (k8c) (m2d) )
         (and (not (l0b)) (k0b) (j8c) (bsf) (csf) (gsf) (hsf) (ksf) (lsf) ))

      ; merge ktag
      (when (l0b) 
        (k0b) )

      ; merge k0-l
      (when (k4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-3__OPENED_P4-2
    :precondition 
      (ksf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (l0b)) (k0b) (j8c) (bsf) (csf) (gsf) (hsf) (jsf) (lsf) ))

      ; merge k0-l
      (when  (and (k8c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (k0b) )

      ; merge k0-l
      (when (k4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-3__OPENED_P4-1
    :precondition 
      (lsf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (l0b)) (k0b) (j8c) (bsf) (csf) (gsf) (hsf) (jsf) (ksf) ))

      ; merge k0-l
      (when  (and (k8c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (k0b) )

      ; merge k0-l
      (when (k4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-4__OPENED_P4-7
    :precondition 
      (bdf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (j0b)) (h0b) (g8c) (cdf) (gdf) (hdf) (jdf) (kdf) (ldf) ))

      ; merge k0-l
      (when  (and (h8c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (h0b) )

      ; merge k0-l
      (when (j4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-4__OPENED_P4-6
    :precondition 
      (cdf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (j0b)) (h0b) (g8c) (bdf) (gdf) (hdf) (jdf) (kdf) (ldf) ))

      ; merge k0-l
      (when  (and (h8c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (h0b) )

      ; merge k0-l
      (when (j4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-4__OPENED_P4-5
    :precondition 
      (gdf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (j0b)) (h0b) (g8c) (bdf) (cdf) (hdf) (jdf) (kdf) (ldf) ))

      ; merge k0-l
      (when  (and (h8c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (h0b) )

      ; merge k0-l
      (when (j4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-4__OPENED_P4-4
    :precondition 
      (hdf)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (h8c) (m2d) )
         (and (not (j0b)) (h0b) (g8c) (bdf) (cdf) (gdf) (jdf) (kdf) (ldf) ))

      ; merge ktag
      (when (j0b) 
        (h0b) )

      ; merge k0-l
      (when (j4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-4__OPENED_P4-3
    :precondition 
      (jdf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (j0b)) (h0b) (g8c) (bdf) (cdf) (gdf) (hdf) (kdf) (ldf) ))

      ; merge k0-l
      (when  (and (h8c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (h0b) )

      ; merge k0-l
      (when (j4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-4__OPENED_P4-2
    :precondition 
      (kdf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (j0b)) (h0b) (g8c) (bdf) (cdf) (gdf) (hdf) (jdf) (ldf) ))

      ; merge k0-l
      (when  (and (h8c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (h0b) )

      ; merge k0-l
      (when (j4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-4__OPENED_P4-1
    :precondition 
      (ldf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (j0b)) (h0b) (g8c) (bdf) (cdf) (gdf) (hdf) (jdf) (kdf) ))

      ; merge k0-l
      (when  (and (h8c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (h0b) )

      ; merge k0-l
      (when (j4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-5__OPENED_P4-7
    :precondition 
      (qgf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (g0b)) (c0b) (b8c) (rgf) (tgf) (ugf) (vgf) (xgf) (ygf) ))

      ; merge k0-l
      (when  (and (c8c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (c0b) )

      ; merge k0-l
      (when (h4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-5__OPENED_P4-6
    :precondition 
      (rgf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (g0b)) (c0b) (b8c) (qgf) (tgf) (ugf) (vgf) (xgf) (ygf) ))

      ; merge k0-l
      (when  (and (c8c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (c0b) )

      ; merge k0-l
      (when (h4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-5__OPENED_P4-5
    :precondition 
      (tgf)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (c8c) (m2d) )
         (and (not (g0b)) (c0b) (b8c) (qgf) (rgf) (ugf) (vgf) (xgf) (ygf) ))

      ; merge ktag
      (when (g0b) 
        (c0b) )

      ; merge k0-l
      (when (h4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-5__OPENED_P4-4
    :precondition 
      (ugf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (g0b)) (c0b) (b8c) (qgf) (rgf) (tgf) (vgf) (xgf) (ygf) ))

      ; merge k0-l
      (when  (and (c8c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (c0b) )

      ; merge k0-l
      (when (h4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-5__OPENED_P4-3
    :precondition 
      (vgf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (g0b)) (c0b) (b8c) (qgf) (rgf) (tgf) (ugf) (xgf) (ygf) ))

      ; merge k0-l
      (when  (and (c8c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (c0b) )

      ; merge k0-l
      (when (h4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-5__OPENED_P4-2
    :precondition 
      (xgf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (g0b)) (c0b) (b8c) (qgf) (rgf) (tgf) (ugf) (vgf) (ygf) ))

      ; merge k0-l
      (when  (and (c8c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (c0b) )

      ; merge k0-l
      (when (h4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-5__OPENED_P4-1
    :precondition 
      (ygf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (g0b)) (c0b) (b8c) (qgf) (rgf) (tgf) (ugf) (vgf) (xgf) ))

      ; merge k0-l
      (when  (and (c8c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (c0b) )

      ; merge k0-l
      (when (h4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-6__OPENED_P4-7
    :precondition 
      (bkf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (b0b)) (z9b) (y7c) (ckf) (gkf) (hkf) (jkf) (kkf) (lkf) ))

      ; merge k0-l
      (when  (and (z7c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (z9b) )

      ; merge k0-l
      (when (g4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-6__OPENED_P4-6
    :precondition 
      (ckf)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (z7c) (m2d) )
         (and (not (b0b)) (z9b) (y7c) (bkf) (gkf) (hkf) (jkf) (kkf) (lkf) ))

      ; merge ktag
      (when (b0b) 
        (z9b) )

      ; merge k0-l
      (when (g4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-6__OPENED_P4-5
    :precondition 
      (gkf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (b0b)) (z9b) (y7c) (bkf) (ckf) (hkf) (jkf) (kkf) (lkf) ))

      ; merge k0-l
      (when  (and (z7c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (z9b) )

      ; merge k0-l
      (when (g4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-6__OPENED_P4-4
    :precondition 
      (hkf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (b0b)) (z9b) (y7c) (bkf) (ckf) (gkf) (jkf) (kkf) (lkf) ))

      ; merge k0-l
      (when  (and (z7c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (z9b) )

      ; merge k0-l
      (when (g4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-6__OPENED_P4-3
    :precondition 
      (jkf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (b0b)) (z9b) (y7c) (bkf) (ckf) (gkf) (hkf) (kkf) (lkf) ))

      ; merge k0-l
      (when  (and (z7c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (z9b) )

      ; merge k0-l
      (when (g4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-6__OPENED_P4-2
    :precondition 
      (kkf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (b0b)) (z9b) (y7c) (bkf) (ckf) (gkf) (hkf) (jkf) (lkf) ))

      ; merge k0-l
      (when  (and (z7c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (z9b) )

      ; merge k0-l
      (when (g4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-6__OPENED_P4-1
    :precondition 
      (lkf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (b0b)) (z9b) (y7c) (bkf) (ckf) (gkf) (hkf) (jkf) (kkf) ))

      ; merge k0-l
      (when  (and (z7c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (z9b) )

      ; merge k0-l
      (when (g4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-7__OPENED_P4-7
    :precondition 
      (qnf)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (x7c) (m2d) )
         (and (not (y9b)) (x9b) (v7c) (rnf) (tnf) (unf) (vnf) (xnf) (ynf) ))

      ; merge ktag
      (when (y9b) 
        (x9b) )

      ; merge k0-l
      (when (c4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-7__OPENED_P4-6
    :precondition 
      (rnf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (y9b)) (x9b) (v7c) (qnf) (tnf) (unf) (vnf) (xnf) (ynf) ))

      ; merge k0-l
      (when  (and (x7c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (x9b) )

      ; merge k0-l
      (when (c4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-7__OPENED_P4-5
    :precondition 
      (tnf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (y9b)) (x9b) (v7c) (qnf) (rnf) (unf) (vnf) (xnf) (ynf) ))

      ; merge k0-l
      (when  (and (x7c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (x9b) )

      ; merge k0-l
      (when (c4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-7__OPENED_P4-4
    :precondition 
      (unf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (y9b)) (x9b) (v7c) (qnf) (rnf) (tnf) (vnf) (xnf) (ynf) ))

      ; merge k0-l
      (when  (and (x7c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (x9b) )

      ; merge k0-l
      (when (c4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-7__OPENED_P4-3
    :precondition 
      (vnf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (y9b)) (x9b) (v7c) (qnf) (rnf) (tnf) (unf) (xnf) (ynf) ))

      ; merge k0-l
      (when  (and (x7c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (x9b) )

      ; merge k0-l
      (when (c4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-7__OPENED_P4-2
    :precondition 
      (xnf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (y9b)) (x9b) (v7c) (qnf) (rnf) (tnf) (unf) (vnf) (ynf) ))

      ; merge k0-l
      (when  (and (x7c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (x9b) )

      ; merge k0-l
      (when (c4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P4-7__OPENED_P4-1
    :precondition 
      (ynf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (y9b)) (x9b) (v7c) (qnf) (rnf) (tnf) (unf) (vnf) (xnf) ))

      ; merge k0-l
      (when  (and (x7c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (x9b) )

      ; merge k0-l
      (when (c4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-1__OPENED_P6-7
    :precondition 
      (g3h)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (y8b)) (x8b) (v6c) (h3h) (j3h) (k3h) (l3h) (m3h) (q3h) ))

      ; merge k0-l
      (when  (and (x6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (x8b) )

      ; merge k0-l
      (when (r3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-1__OPENED_P6-6
    :precondition 
      (h3h)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (y8b)) (x8b) (v6c) (g3h) (j3h) (k3h) (l3h) (m3h) (q3h) ))

      ; merge k0-l
      (when  (and (x6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (x8b) )

      ; merge k0-l
      (when (r3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-1__OPENED_P6-5
    :precondition 
      (j3h)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (y8b)) (x8b) (v6c) (g3h) (h3h) (k3h) (l3h) (m3h) (q3h) ))

      ; merge k0-l
      (when  (and (x6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (x8b) )

      ; merge k0-l
      (when (r3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-1__OPENED_P6-4
    :precondition 
      (k3h)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (y8b)) (x8b) (v6c) (g3h) (h3h) (j3h) (l3h) (m3h) (q3h) ))

      ; merge k0-l
      (when  (and (x6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (x8b) )

      ; merge k0-l
      (when (r3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-1__OPENED_P6-3
    :precondition 
      (l3h)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (y8b)) (x8b) (v6c) (g3h) (h3h) (j3h) (k3h) (m3h) (q3h) ))

      ; merge k0-l
      (when  (and (x6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (x8b) )

      ; merge k0-l
      (when (r3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-1__OPENED_P6-2
    :precondition 
      (m3h)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (y8b)) (x8b) (v6c) (g3h) (h3h) (j3h) (k3h) (l3h) (q3h) ))

      ; merge k0-l
      (when  (and (x6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (x8b) )

      ; merge k0-l
      (when (r3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-1__OPENED_P6-1
    :precondition 
      (q3h)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (x6c) (m2d) )
         (and (not (y8b)) (x8b) (v6c) (g3h) (h3h) (j3h) (k3h) (l3h) (m3h) ))

      ; merge ktag
      (when (y8b) 
        (x8b) )

      ; merge k0-l
      (when (r3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-2__OPENED_P6-7
    :precondition 
      (ghh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (v8b)) (u8b) (t6c) (hhh) (jhh) (khh) (lhh) (mhh) (qhh) ))

      ; merge k0-l
      (when  (and (u6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (u8b) )

      ; merge k0-l
      (when (q3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-2__OPENED_P6-6
    :precondition 
      (hhh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (v8b)) (u8b) (t6c) (ghh) (jhh) (khh) (lhh) (mhh) (qhh) ))

      ; merge k0-l
      (when  (and (u6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (u8b) )

      ; merge k0-l
      (when (q3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-2__OPENED_P6-5
    :precondition 
      (jhh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (v8b)) (u8b) (t6c) (ghh) (hhh) (khh) (lhh) (mhh) (qhh) ))

      ; merge k0-l
      (when  (and (u6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (u8b) )

      ; merge k0-l
      (when (q3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-2__OPENED_P6-4
    :precondition 
      (khh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (v8b)) (u8b) (t6c) (ghh) (hhh) (jhh) (lhh) (mhh) (qhh) ))

      ; merge k0-l
      (when  (and (u6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (u8b) )

      ; merge k0-l
      (when (q3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-2__OPENED_P6-3
    :precondition 
      (lhh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (v8b)) (u8b) (t6c) (ghh) (hhh) (jhh) (khh) (mhh) (qhh) ))

      ; merge k0-l
      (when  (and (u6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (u8b) )

      ; merge k0-l
      (when (q3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-2__OPENED_P6-2
    :precondition 
      (mhh)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (u6c) (m2d) )
         (and (not (v8b)) (u8b) (t6c) (ghh) (hhh) (jhh) (khh) (lhh) (qhh) ))

      ; merge ktag
      (when (v8b) 
        (u8b) )

      ; merge k0-l
      (when (q3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-2__OPENED_P6-1
    :precondition 
      (qhh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (v8b)) (u8b) (t6c) (ghh) (hhh) (jhh) (khh) (lhh) (mhh) ))

      ; merge k0-l
      (when  (and (u6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (u8b) )

      ; merge k0-l
      (when (q3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-3__OPENED_P6-7
    :precondition 
      (tlg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (t8b)) (r8b) (q6c) (ulg) (vlg) (xlg) (ylg) (zlg) (bmg) ))

      ; merge k0-l
      (when  (and (r6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (r8b) )

      ; merge k0-l
      (when (m3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-3__OPENED_P6-6
    :precondition 
      (ulg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (t8b)) (r8b) (q6c) (tlg) (vlg) (xlg) (ylg) (zlg) (bmg) ))

      ; merge k0-l
      (when  (and (r6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (r8b) )

      ; merge k0-l
      (when (m3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-3__OPENED_P6-5
    :precondition 
      (vlg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (t8b)) (r8b) (q6c) (tlg) (ulg) (xlg) (ylg) (zlg) (bmg) ))

      ; merge k0-l
      (when  (and (r6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (r8b) )

      ; merge k0-l
      (when (m3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-3__OPENED_P6-4
    :precondition 
      (xlg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (t8b)) (r8b) (q6c) (tlg) (ulg) (vlg) (ylg) (zlg) (bmg) ))

      ; merge k0-l
      (when  (and (r6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (r8b) )

      ; merge k0-l
      (when (m3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-3__OPENED_P6-3
    :precondition 
      (ylg)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (r6c) (m2d) )
         (and (not (t8b)) (r8b) (q6c) (tlg) (ulg) (vlg) (xlg) (zlg) (bmg) ))

      ; merge ktag
      (when (t8b) 
        (r8b) )

      ; merge k0-l
      (when (m3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-3__OPENED_P6-2
    :precondition 
      (zlg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (t8b)) (r8b) (q6c) (tlg) (ulg) (vlg) (xlg) (ylg) (bmg) ))

      ; merge k0-l
      (when  (and (r6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (r8b) )

      ; merge k0-l
      (when (m3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-3__OPENED_P6-1
    :precondition 
      (bmg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (t8b)) (r8b) (q6c) (tlg) (ulg) (vlg) (xlg) (ylg) (zlg) ))

      ; merge k0-l
      (when  (and (r6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (r8b) )

      ; merge k0-l
      (when (m3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-4__OPENED_P6-7
    :precondition 
      (t8f)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (q8b)) (m8b) (l6c) (u8f) (v8f) (x8f) (y8f) (z8f) (b9f) ))

      ; merge k0-l
      (when  (and (m6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (m8b) )

      ; merge k0-l
      (when (l3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-4__OPENED_P6-6
    :precondition 
      (u8f)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (q8b)) (m8b) (l6c) (t8f) (v8f) (x8f) (y8f) (z8f) (b9f) ))

      ; merge k0-l
      (when  (and (m6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (m8b) )

      ; merge k0-l
      (when (l3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-4__OPENED_P6-5
    :precondition 
      (v8f)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (q8b)) (m8b) (l6c) (t8f) (u8f) (x8f) (y8f) (z8f) (b9f) ))

      ; merge k0-l
      (when  (and (m6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (m8b) )

      ; merge k0-l
      (when (l3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-4__OPENED_P6-4
    :precondition 
      (x8f)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (m6c) (m2d) )
         (and (not (q8b)) (m8b) (l6c) (t8f) (u8f) (v8f) (y8f) (z8f) (b9f) ))

      ; merge ktag
      (when (q8b) 
        (m8b) )

      ; merge k0-l
      (when (l3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-4__OPENED_P6-3
    :precondition 
      (y8f)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (q8b)) (m8b) (l6c) (t8f) (u8f) (v8f) (x8f) (z8f) (b9f) ))

      ; merge k0-l
      (when  (and (m6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (m8b) )

      ; merge k0-l
      (when (l3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-4__OPENED_P6-2
    :precondition 
      (z8f)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (q8b)) (m8b) (l6c) (t8f) (u8f) (v8f) (x8f) (y8f) (b9f) ))

      ; merge k0-l
      (when  (and (m6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (m8b) )

      ; merge k0-l
      (when (l3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-4__OPENED_P6-1
    :precondition 
      (b9f)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (q8b)) (m8b) (l6c) (t8f) (u8f) (v8f) (x8f) (y8f) (z8f) ))

      ; merge k0-l
      (when  (and (m6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (m8b) )

      ; merge k0-l
      (when (l3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-5__OPENED_P6-7
    :precondition 
      (gbg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (l8b)) (k8b) (j6c) (hbg) (jbg) (kbg) (lbg) (mbg) (qbg) ))

      ; merge k0-l
      (when  (and (k6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (k8b) )

      ; merge k0-l
      (when (k3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-5__OPENED_P6-6
    :precondition 
      (hbg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (l8b)) (k8b) (j6c) (gbg) (jbg) (kbg) (lbg) (mbg) (qbg) ))

      ; merge k0-l
      (when  (and (k6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (k8b) )

      ; merge k0-l
      (when (k3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-5__OPENED_P6-5
    :precondition 
      (jbg)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (k6c) (m2d) )
         (and (not (l8b)) (k8b) (j6c) (gbg) (hbg) (kbg) (lbg) (mbg) (qbg) ))

      ; merge ktag
      (when (l8b) 
        (k8b) )

      ; merge k0-l
      (when (k3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-5__OPENED_P6-4
    :precondition 
      (kbg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (l8b)) (k8b) (j6c) (gbg) (hbg) (jbg) (lbg) (mbg) (qbg) ))

      ; merge k0-l
      (when  (and (k6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (k8b) )

      ; merge k0-l
      (when (k3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-5__OPENED_P6-3
    :precondition 
      (lbg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (l8b)) (k8b) (j6c) (gbg) (hbg) (jbg) (kbg) (mbg) (qbg) ))

      ; merge k0-l
      (when  (and (k6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (k8b) )

      ; merge k0-l
      (when (k3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-5__OPENED_P6-2
    :precondition 
      (mbg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (l8b)) (k8b) (j6c) (gbg) (hbg) (jbg) (kbg) (lbg) (qbg) ))

      ; merge k0-l
      (when  (and (k6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (k8b) )

      ; merge k0-l
      (when (k3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-5__OPENED_P6-1
    :precondition 
      (qbg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (l8b)) (k8b) (j6c) (gbg) (hbg) (jbg) (kbg) (lbg) (mbg) ))

      ; merge k0-l
      (when  (and (k6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (k8b) )

      ; merge k0-l
      (when (k3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-6__OPENED_P6-7
    :precondition 
      (teg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (j8b)) (h8b) (g6c) (ueg) (veg) (xeg) (yeg) (zeg) (bfg) ))

      ; merge k0-l
      (when  (and (h6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (h8b) )

      ; merge k0-l
      (when (j3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-6__OPENED_P6-6
    :precondition 
      (ueg)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (h6c) (m2d) )
         (and (not (j8b)) (h8b) (g6c) (teg) (veg) (xeg) (yeg) (zeg) (bfg) ))

      ; merge ktag
      (when (j8b) 
        (h8b) )

      ; merge k0-l
      (when (j3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-6__OPENED_P6-5
    :precondition 
      (veg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (j8b)) (h8b) (g6c) (teg) (ueg) (xeg) (yeg) (zeg) (bfg) ))

      ; merge k0-l
      (when  (and (h6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (h8b) )

      ; merge k0-l
      (when (j3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-6__OPENED_P6-4
    :precondition 
      (xeg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (j8b)) (h8b) (g6c) (teg) (ueg) (veg) (yeg) (zeg) (bfg) ))

      ; merge k0-l
      (when  (and (h6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (h8b) )

      ; merge k0-l
      (when (j3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-6__OPENED_P6-3
    :precondition 
      (yeg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (j8b)) (h8b) (g6c) (teg) (ueg) (veg) (xeg) (zeg) (bfg) ))

      ; merge k0-l
      (when  (and (h6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (h8b) )

      ; merge k0-l
      (when (j3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-6__OPENED_P6-2
    :precondition 
      (zeg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (j8b)) (h8b) (g6c) (teg) (ueg) (veg) (xeg) (yeg) (bfg) ))

      ; merge k0-l
      (when  (and (h6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (h8b) )

      ; merge k0-l
      (when (j3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-6__OPENED_P6-1
    :precondition 
      (bfg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (j8b)) (h8b) (g6c) (teg) (ueg) (veg) (xeg) (yeg) (zeg) ))

      ; merge k0-l
      (when  (and (h6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (h8b) )

      ; merge k0-l
      (when (j3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-7__OPENED_P6-7
    :precondition 
      (gig)
    :effect  (and 
      ; merge ktag. merge k0-l
      (when  (and (c6c) (m2d) )
         (and (not (g8b)) (c8b) (b6c) (hig) (jig) (kig) (lig) (mig) (qig) ))

      ; merge ktag
      (when (g8b) 
        (c8b) )

      ; merge k0-l
      (when (h3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-7__OPENED_P6-6
    :precondition 
      (hig)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (g8b)) (c8b) (b6c) (gig) (jig) (kig) (lig) (mig) (qig) ))

      ; merge k0-l
      (when  (and (c6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (c8b) )

      ; merge k0-l
      (when (h3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-7__OPENED_P6-5
    :precondition 
      (jig)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (g8b)) (c8b) (b6c) (gig) (hig) (kig) (lig) (mig) (qig) ))

      ; merge k0-l
      (when  (and (c6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (c8b) )

      ; merge k0-l
      (when (h3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-7__OPENED_P6-4
    :precondition 
      (kig)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (g8b)) (c8b) (b6c) (gig) (hig) (jig) (lig) (mig) (qig) ))

      ; merge k0-l
      (when  (and (c6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (c8b) )

      ; merge k0-l
      (when (h3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-7__OPENED_P6-3
    :precondition 
      (lig)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (g8b)) (c8b) (b6c) (gig) (hig) (jig) (kig) (mig) (qig) ))

      ; merge k0-l
      (when  (and (c6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (c8b) )

      ; merge k0-l
      (when (h3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-7__OPENED_P6-2
    :precondition 
      (mig)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (g8b)) (c8b) (b6c) (gig) (hig) (jig) (kig) (lig) (qig) ))

      ; merge k0-l
      (when  (and (c6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (c8b) )

      ; merge k0-l
      (when (h3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_-OPENED_P6-7__OPENED_P6-1
    :precondition 
      (qig)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (g8b)) (c8b) (b6c) (gig) (hig) (jig) (kig) (lig) (mig) ))

      ; merge k0-l
      (when  (and (c6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (c8b) )

      ; merge k0-l
      (when (h3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-7__OPENED_P6-7
    :precondition 
      (uhg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (c8b)) (g8b) (c6c) (vhg) (xhg) (yhg) (zhg) (big) (cig) ))

      ; merge k0-l
      (when  (and (b6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (g8b) )

      ; merge k0-l
      (when (h3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-7__OPENED_P6-6
    :precondition 
      (vhg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (c8b)) (g8b) (c6c) (uhg) (xhg) (yhg) (zhg) (big) (cig) ))

      ; merge k0-l
      (when  (and (b6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (g8b) )

      ; merge k0-l
      (when (h3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-7__OPENED_P6-5
    :precondition 
      (xhg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (c8b)) (g8b) (c6c) (uhg) (vhg) (yhg) (zhg) (big) (cig) ))

      ; merge k0-l
      (when  (and (b6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (g8b) )

      ; merge k0-l
      (when (h3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-7__OPENED_P6-4
    :precondition 
      (yhg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (c8b)) (g8b) (c6c) (uhg) (vhg) (xhg) (zhg) (big) (cig) ))

      ; merge k0-l
      (when  (and (b6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (g8b) )

      ; merge k0-l
      (when (h3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-7__OPENED_P6-3
    :precondition 
      (zhg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (c8b)) (g8b) (c6c) (uhg) (vhg) (xhg) (yhg) (big) (cig) ))

      ; merge k0-l
      (when  (and (b6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (g8b) )

      ; merge k0-l
      (when (h3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-7__OPENED_P6-2
    :precondition 
      (big)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (c8b)) (g8b) (c6c) (uhg) (vhg) (xhg) (yhg) (zhg) (cig) ))

      ; merge k0-l
      (when  (and (b6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (g8b) )

      ; merge k0-l
      (when (h3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-7__OPENED_P6-1
    :precondition 
      (cig)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (c8b)) (g8b) (c6c) (uhg) (vhg) (xhg) (yhg) (zhg) (big) ))

      ; merge k0-l
      (when  (and (b6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (g8b) )

      ; merge k0-l
      (when (h3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-6__OPENED_P6-7
    :precondition 
      (heg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (h8b)) (j8b) (h6c) (jeg) (keg) (leg) (meg) (qeg) (reg) ))

      ; merge k0-l
      (when  (and (g6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (j8b) )

      ; merge k0-l
      (when (j3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-6__OPENED_P6-6
    :precondition 
      (jeg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (h8b)) (j8b) (h6c) (heg) (keg) (leg) (meg) (qeg) (reg) ))

      ; merge k0-l
      (when  (and (g6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (j8b) )

      ; merge k0-l
      (when (j3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-6__OPENED_P6-5
    :precondition 
      (keg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (h8b)) (j8b) (h6c) (heg) (jeg) (leg) (meg) (qeg) (reg) ))

      ; merge k0-l
      (when  (and (g6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (j8b) )

      ; merge k0-l
      (when (j3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-6__OPENED_P6-4
    :precondition 
      (leg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (h8b)) (j8b) (h6c) (heg) (jeg) (keg) (meg) (qeg) (reg) ))

      ; merge k0-l
      (when  (and (g6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (j8b) )

      ; merge k0-l
      (when (j3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-6__OPENED_P6-3
    :precondition 
      (meg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (h8b)) (j8b) (h6c) (heg) (jeg) (keg) (leg) (qeg) (reg) ))

      ; merge k0-l
      (when  (and (g6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (j8b) )

      ; merge k0-l
      (when (j3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-6__OPENED_P6-2
    :precondition 
      (qeg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (h8b)) (j8b) (h6c) (heg) (jeg) (keg) (leg) (meg) (reg) ))

      ; merge k0-l
      (when  (and (g6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (j8b) )

      ; merge k0-l
      (when (j3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-6__OPENED_P6-1
    :precondition 
      (reg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (h8b)) (j8b) (h6c) (heg) (jeg) (keg) (leg) (meg) (qeg) ))

      ; merge k0-l
      (when  (and (g6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (j8b) )

      ; merge k0-l
      (when (j3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-5__OPENED_P6-7
    :precondition 
      (uag)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (k8b)) (l8b) (k6c) (vag) (xag) (yag) (zag) (bbg) (cbg) ))

      ; merge k0-l
      (when  (and (j6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (l8b) )

      ; merge k0-l
      (when (k3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-5__OPENED_P6-6
    :precondition 
      (vag)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (k8b)) (l8b) (k6c) (uag) (xag) (yag) (zag) (bbg) (cbg) ))

      ; merge k0-l
      (when  (and (j6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (l8b) )

      ; merge k0-l
      (when (k3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-5__OPENED_P6-5
    :precondition 
      (xag)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (k8b)) (l8b) (k6c) (uag) (vag) (yag) (zag) (bbg) (cbg) ))

      ; merge k0-l
      (when  (and (j6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (l8b) )

      ; merge k0-l
      (when (k3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-5__OPENED_P6-4
    :precondition 
      (yag)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (k8b)) (l8b) (k6c) (uag) (vag) (xag) (zag) (bbg) (cbg) ))

      ; merge k0-l
      (when  (and (j6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (l8b) )

      ; merge k0-l
      (when (k3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-5__OPENED_P6-3
    :precondition 
      (zag)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (k8b)) (l8b) (k6c) (uag) (vag) (xag) (yag) (bbg) (cbg) ))

      ; merge k0-l
      (when  (and (j6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (l8b) )

      ; merge k0-l
      (when (k3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-5__OPENED_P6-2
    :precondition 
      (bbg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (k8b)) (l8b) (k6c) (uag) (vag) (xag) (yag) (zag) (cbg) ))

      ; merge k0-l
      (when  (and (j6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (l8b) )

      ; merge k0-l
      (when (k3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-5__OPENED_P6-1
    :precondition 
      (cbg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (k8b)) (l8b) (k6c) (uag) (vag) (xag) (yag) (zag) (bbg) ))

      ; merge k0-l
      (when  (and (j6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (l8b) )

      ; merge k0-l
      (when (k3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-4__OPENED_P6-7
    :precondition 
      (h8f)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (m8b)) (q8b) (m6c) (j8f) (k8f) (l8f) (m8f) (q8f) (r8f) ))

      ; merge k0-l
      (when  (and (l6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (q8b) )

      ; merge k0-l
      (when (l3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-4__OPENED_P6-6
    :precondition 
      (j8f)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (m8b)) (q8b) (m6c) (h8f) (k8f) (l8f) (m8f) (q8f) (r8f) ))

      ; merge k0-l
      (when  (and (l6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (q8b) )

      ; merge k0-l
      (when (l3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-4__OPENED_P6-5
    :precondition 
      (k8f)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (m8b)) (q8b) (m6c) (h8f) (j8f) (l8f) (m8f) (q8f) (r8f) ))

      ; merge k0-l
      (when  (and (l6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (q8b) )

      ; merge k0-l
      (when (l3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-4__OPENED_P6-4
    :precondition 
      (l8f)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (m8b)) (q8b) (m6c) (h8f) (j8f) (k8f) (m8f) (q8f) (r8f) ))

      ; merge k0-l
      (when  (and (l6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (q8b) )

      ; merge k0-l
      (when (l3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-4__OPENED_P6-3
    :precondition 
      (m8f)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (m8b)) (q8b) (m6c) (h8f) (j8f) (k8f) (l8f) (q8f) (r8f) ))

      ; merge k0-l
      (when  (and (l6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (q8b) )

      ; merge k0-l
      (when (l3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-4__OPENED_P6-2
    :precondition 
      (q8f)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (m8b)) (q8b) (m6c) (h8f) (j8f) (k8f) (l8f) (m8f) (r8f) ))

      ; merge k0-l
      (when  (and (l6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (q8b) )

      ; merge k0-l
      (when (l3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-4__OPENED_P6-1
    :precondition 
      (r8f)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (m8b)) (q8b) (m6c) (h8f) (j8f) (k8f) (l8f) (m8f) (q8f) ))

      ; merge k0-l
      (when  (and (l6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (q8b) )

      ; merge k0-l
      (when (l3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-3__OPENED_P6-7
    :precondition 
      (hlg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (r8b)) (t8b) (r6c) (jlg) (klg) (llg) (mlg) (qlg) (rlg) ))

      ; merge k0-l
      (when  (and (q6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (t8b) )

      ; merge k0-l
      (when (m3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-3__OPENED_P6-6
    :precondition 
      (jlg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (r8b)) (t8b) (r6c) (hlg) (klg) (llg) (mlg) (qlg) (rlg) ))

      ; merge k0-l
      (when  (and (q6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (t8b) )

      ; merge k0-l
      (when (m3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-3__OPENED_P6-5
    :precondition 
      (klg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (r8b)) (t8b) (r6c) (hlg) (jlg) (llg) (mlg) (qlg) (rlg) ))

      ; merge k0-l
      (when  (and (q6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (t8b) )

      ; merge k0-l
      (when (m3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-3__OPENED_P6-4
    :precondition 
      (llg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (r8b)) (t8b) (r6c) (hlg) (jlg) (klg) (mlg) (qlg) (rlg) ))

      ; merge k0-l
      (when  (and (q6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (t8b) )

      ; merge k0-l
      (when (m3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-3__OPENED_P6-3
    :precondition 
      (mlg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (r8b)) (t8b) (r6c) (hlg) (jlg) (klg) (llg) (qlg) (rlg) ))

      ; merge k0-l
      (when  (and (q6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (t8b) )

      ; merge k0-l
      (when (m3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-3__OPENED_P6-2
    :precondition 
      (qlg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (r8b)) (t8b) (r6c) (hlg) (jlg) (klg) (llg) (mlg) (rlg) ))

      ; merge k0-l
      (when  (and (q6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (t8b) )

      ; merge k0-l
      (when (m3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-3__OPENED_P6-1
    :precondition 
      (rlg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (r8b)) (t8b) (r6c) (hlg) (jlg) (klg) (llg) (mlg) (qlg) ))

      ; merge k0-l
      (when  (and (q6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (t8b) )

      ; merge k0-l
      (when (m3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-2__OPENED_P6-7
    :precondition 
      (ugh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (u8b)) (v8b) (u6c) (vgh) (xgh) (ygh) (zgh) (bhh) (chh) ))

      ; merge k0-l
      (when  (and (t6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (v8b) )

      ; merge k0-l
      (when (q3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-2__OPENED_P6-6
    :precondition 
      (vgh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (u8b)) (v8b) (u6c) (ugh) (xgh) (ygh) (zgh) (bhh) (chh) ))

      ; merge k0-l
      (when  (and (t6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (v8b) )

      ; merge k0-l
      (when (q3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-2__OPENED_P6-5
    :precondition 
      (xgh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (u8b)) (v8b) (u6c) (ugh) (vgh) (ygh) (zgh) (bhh) (chh) ))

      ; merge k0-l
      (when  (and (t6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (v8b) )

      ; merge k0-l
      (when (q3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-2__OPENED_P6-4
    :precondition 
      (ygh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (u8b)) (v8b) (u6c) (ugh) (vgh) (xgh) (zgh) (bhh) (chh) ))

      ; merge k0-l
      (when  (and (t6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (v8b) )

      ; merge k0-l
      (when (q3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-2__OPENED_P6-3
    :precondition 
      (zgh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (u8b)) (v8b) (u6c) (ugh) (vgh) (xgh) (ygh) (bhh) (chh) ))

      ; merge k0-l
      (when  (and (t6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (v8b) )

      ; merge k0-l
      (when (q3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-2__OPENED_P6-2
    :precondition 
      (bhh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (u8b)) (v8b) (u6c) (ugh) (vgh) (xgh) (ygh) (zgh) (chh) ))

      ; merge k0-l
      (when  (and (t6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (v8b) )

      ; merge k0-l
      (when (q3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-2__OPENED_P6-1
    :precondition 
      (chh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (u8b)) (v8b) (u6c) (ugh) (vgh) (xgh) (ygh) (zgh) (bhh) ))

      ; merge k0-l
      (when  (and (t6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (v8b) )

      ; merge k0-l
      (when (q3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-1__OPENED_P6-7
    :precondition 
      (u2h)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (x8b)) (y8b) (x6c) (v2h) (x2h) (y2h) (z2h) (b3h) (c3h) ))

      ; merge k0-l
      (when  (and (v6c) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (y8b) )

      ; merge k0-l
      (when (r3d) 
        (c8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-1__OPENED_P6-6
    :precondition 
      (v2h)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (x8b)) (y8b) (x6c) (u2h) (x2h) (y2h) (z2h) (b3h) (c3h) ))

      ; merge k0-l
      (when  (and (v6c) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (y8b) )

      ; merge k0-l
      (when (r3d) 
        (h8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-1__OPENED_P6-5
    :precondition 
      (x2h)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (x8b)) (y8b) (x6c) (u2h) (v2h) (y2h) (z2h) (b3h) (c3h) ))

      ; merge k0-l
      (when  (and (v6c) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (y8b) )

      ; merge k0-l
      (when (r3d) 
        (k8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-1__OPENED_P6-4
    :precondition 
      (y2h)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (x8b)) (y8b) (x6c) (u2h) (v2h) (x2h) (z2h) (b3h) (c3h) ))

      ; merge k0-l
      (when  (and (v6c) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (y8b) )

      ; merge k0-l
      (when (r3d) 
        (m8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-1__OPENED_P6-3
    :precondition 
      (z2h)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (x8b)) (y8b) (x6c) (u2h) (v2h) (x2h) (y2h) (b3h) (c3h) ))

      ; merge k0-l
      (when  (and (v6c) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (y8b) )

      ; merge k0-l
      (when (r3d) 
        (r8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-1__OPENED_P6-2
    :precondition 
      (b3h)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (x8b)) (y8b) (x6c) (u2h) (v2h) (x2h) (y2h) (z2h) (c3h) ))

      ; merge k0-l
      (when  (and (v6c) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (y8b) )

      ; merge k0-l
      (when (r3d) 
        (u8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P6-1__OPENED_P6-1
    :precondition 
      (c3h)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (x8b)) (y8b) (x6c) (u2h) (v2h) (x2h) (y2h) (z2h) (b3h) ))

      ; merge k0-l
      (when  (and (v6c) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (y8b) )

      ; merge k0-l
      (when (r3d) 
        (x8b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-7__OPENED_P4-7
    :precondition 
      (cnf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (x9b)) (y9b) (x7c) (gnf) (hnf) (jnf) (knf) (lnf) (mnf) ))

      ; merge k0-l
      (when  (and (v7c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (y9b) )

      ; merge k0-l
      (when (c4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-7__OPENED_P4-6
    :precondition 
      (gnf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (x9b)) (y9b) (x7c) (cnf) (hnf) (jnf) (knf) (lnf) (mnf) ))

      ; merge k0-l
      (when  (and (v7c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (y9b) )

      ; merge k0-l
      (when (c4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-7__OPENED_P4-5
    :precondition 
      (hnf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (x9b)) (y9b) (x7c) (cnf) (gnf) (jnf) (knf) (lnf) (mnf) ))

      ; merge k0-l
      (when  (and (v7c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (y9b) )

      ; merge k0-l
      (when (c4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-7__OPENED_P4-4
    :precondition 
      (jnf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (x9b)) (y9b) (x7c) (cnf) (gnf) (hnf) (knf) (lnf) (mnf) ))

      ; merge k0-l
      (when  (and (v7c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (y9b) )

      ; merge k0-l
      (when (c4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-7__OPENED_P4-3
    :precondition 
      (knf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (x9b)) (y9b) (x7c) (cnf) (gnf) (hnf) (jnf) (lnf) (mnf) ))

      ; merge k0-l
      (when  (and (v7c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (y9b) )

      ; merge k0-l
      (when (c4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-7__OPENED_P4-2
    :precondition 
      (lnf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (x9b)) (y9b) (x7c) (cnf) (gnf) (hnf) (jnf) (knf) (mnf) ))

      ; merge k0-l
      (when  (and (v7c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (y9b) )

      ; merge k0-l
      (when (c4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-7__OPENED_P4-1
    :precondition 
      (mnf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (x9b)) (y9b) (x7c) (cnf) (gnf) (hnf) (jnf) (knf) (lnf) ))

      ; merge k0-l
      (when  (and (v7c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (y9b) )

      ; merge k0-l
      (when (c4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-6__OPENED_P4-7
    :precondition 
      (rjf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (z9b)) (b0b) (z7c) (tjf) (ujf) (vjf) (xjf) (yjf) (zjf) ))

      ; merge k0-l
      (when  (and (y7c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (b0b) )

      ; merge k0-l
      (when (g4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-6__OPENED_P4-6
    :precondition 
      (tjf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (z9b)) (b0b) (z7c) (rjf) (ujf) (vjf) (xjf) (yjf) (zjf) ))

      ; merge k0-l
      (when  (and (y7c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (b0b) )

      ; merge k0-l
      (when (g4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-6__OPENED_P4-5
    :precondition 
      (ujf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (z9b)) (b0b) (z7c) (rjf) (tjf) (vjf) (xjf) (yjf) (zjf) ))

      ; merge k0-l
      (when  (and (y7c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (b0b) )

      ; merge k0-l
      (when (g4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-6__OPENED_P4-4
    :precondition 
      (vjf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (z9b)) (b0b) (z7c) (rjf) (tjf) (ujf) (xjf) (yjf) (zjf) ))

      ; merge k0-l
      (when  (and (y7c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (b0b) )

      ; merge k0-l
      (when (g4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-6__OPENED_P4-3
    :precondition 
      (xjf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (z9b)) (b0b) (z7c) (rjf) (tjf) (ujf) (vjf) (yjf) (zjf) ))

      ; merge k0-l
      (when  (and (y7c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (b0b) )

      ; merge k0-l
      (when (g4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-6__OPENED_P4-2
    :precondition 
      (yjf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (z9b)) (b0b) (z7c) (rjf) (tjf) (ujf) (vjf) (xjf) (zjf) ))

      ; merge k0-l
      (when  (and (y7c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (b0b) )

      ; merge k0-l
      (when (g4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-6__OPENED_P4-1
    :precondition 
      (zjf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (z9b)) (b0b) (z7c) (rjf) (tjf) (ujf) (vjf) (xjf) (yjf) ))

      ; merge k0-l
      (when  (and (y7c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (b0b) )

      ; merge k0-l
      (when (g4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-5__OPENED_P4-7
    :precondition 
      (cgf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (c0b)) (g0b) (c8c) (ggf) (hgf) (jgf) (kgf) (lgf) (mgf) ))

      ; merge k0-l
      (when  (and (b8c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (g0b) )

      ; merge k0-l
      (when (h4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-5__OPENED_P4-6
    :precondition 
      (ggf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (c0b)) (g0b) (c8c) (cgf) (hgf) (jgf) (kgf) (lgf) (mgf) ))

      ; merge k0-l
      (when  (and (b8c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (g0b) )

      ; merge k0-l
      (when (h4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-5__OPENED_P4-5
    :precondition 
      (hgf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (c0b)) (g0b) (c8c) (cgf) (ggf) (jgf) (kgf) (lgf) (mgf) ))

      ; merge k0-l
      (when  (and (b8c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (g0b) )

      ; merge k0-l
      (when (h4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-5__OPENED_P4-4
    :precondition 
      (jgf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (c0b)) (g0b) (c8c) (cgf) (ggf) (hgf) (kgf) (lgf) (mgf) ))

      ; merge k0-l
      (when  (and (b8c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (g0b) )

      ; merge k0-l
      (when (h4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-5__OPENED_P4-3
    :precondition 
      (kgf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (c0b)) (g0b) (c8c) (cgf) (ggf) (hgf) (jgf) (lgf) (mgf) ))

      ; merge k0-l
      (when  (and (b8c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (g0b) )

      ; merge k0-l
      (when (h4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-5__OPENED_P4-2
    :precondition 
      (lgf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (c0b)) (g0b) (c8c) (cgf) (ggf) (hgf) (jgf) (kgf) (mgf) ))

      ; merge k0-l
      (when  (and (b8c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (g0b) )

      ; merge k0-l
      (when (h4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-5__OPENED_P4-1
    :precondition 
      (mgf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (c0b)) (g0b) (c8c) (cgf) (ggf) (hgf) (jgf) (kgf) (lgf) ))

      ; merge k0-l
      (when  (and (b8c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (g0b) )

      ; merge k0-l
      (when (h4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-4__OPENED_P4-7
    :precondition 
      (rcf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (h0b)) (j0b) (h8c) (tcf) (ucf) (vcf) (xcf) (ycf) (zcf) ))

      ; merge k0-l
      (when  (and (g8c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (j0b) )

      ; merge k0-l
      (when (j4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-4__OPENED_P4-6
    :precondition 
      (tcf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (h0b)) (j0b) (h8c) (rcf) (ucf) (vcf) (xcf) (ycf) (zcf) ))

      ; merge k0-l
      (when  (and (g8c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (j0b) )

      ; merge k0-l
      (when (j4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-4__OPENED_P4-5
    :precondition 
      (ucf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (h0b)) (j0b) (h8c) (rcf) (tcf) (vcf) (xcf) (ycf) (zcf) ))

      ; merge k0-l
      (when  (and (g8c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (j0b) )

      ; merge k0-l
      (when (j4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-4__OPENED_P4-4
    :precondition 
      (vcf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (h0b)) (j0b) (h8c) (rcf) (tcf) (ucf) (xcf) (ycf) (zcf) ))

      ; merge k0-l
      (when  (and (g8c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (j0b) )

      ; merge k0-l
      (when (j4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-4__OPENED_P4-3
    :precondition 
      (xcf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (h0b)) (j0b) (h8c) (rcf) (tcf) (ucf) (vcf) (ycf) (zcf) ))

      ; merge k0-l
      (when  (and (g8c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (j0b) )

      ; merge k0-l
      (when (j4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-4__OPENED_P4-2
    :precondition 
      (ycf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (h0b)) (j0b) (h8c) (rcf) (tcf) (ucf) (vcf) (xcf) (zcf) ))

      ; merge k0-l
      (when  (and (g8c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (j0b) )

      ; merge k0-l
      (when (j4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-4__OPENED_P4-1
    :precondition 
      (zcf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (h0b)) (j0b) (h8c) (rcf) (tcf) (ucf) (vcf) (xcf) (ycf) ))

      ; merge k0-l
      (when  (and (g8c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (j0b) )

      ; merge k0-l
      (when (j4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-3__OPENED_P4-7
    :precondition 
      (rqf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (k0b)) (l0b) (k8c) (tqf) (uqf) (vqf) (xqf) (yqf) (zqf) ))

      ; merge k0-l
      (when  (and (j8c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (l0b) )

      ; merge k0-l
      (when (k4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-3__OPENED_P4-6
    :precondition 
      (tqf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (k0b)) (l0b) (k8c) (rqf) (uqf) (vqf) (xqf) (yqf) (zqf) ))

      ; merge k0-l
      (when  (and (j8c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (l0b) )

      ; merge k0-l
      (when (k4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-3__OPENED_P4-5
    :precondition 
      (uqf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (k0b)) (l0b) (k8c) (rqf) (tqf) (vqf) (xqf) (yqf) (zqf) ))

      ; merge k0-l
      (when  (and (j8c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (l0b) )

      ; merge k0-l
      (when (k4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-3__OPENED_P4-4
    :precondition 
      (vqf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (k0b)) (l0b) (k8c) (rqf) (tqf) (uqf) (xqf) (yqf) (zqf) ))

      ; merge k0-l
      (when  (and (j8c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (l0b) )

      ; merge k0-l
      (when (k4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-3__OPENED_P4-3
    :precondition 
      (xqf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (k0b)) (l0b) (k8c) (rqf) (tqf) (uqf) (vqf) (yqf) (zqf) ))

      ; merge k0-l
      (when  (and (j8c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (l0b) )

      ; merge k0-l
      (when (k4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-3__OPENED_P4-2
    :precondition 
      (yqf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (k0b)) (l0b) (k8c) (rqf) (tqf) (uqf) (vqf) (xqf) (zqf) ))

      ; merge k0-l
      (when  (and (j8c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (l0b) )

      ; merge k0-l
      (when (k4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-3__OPENED_P4-1
    :precondition 
      (zqf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (k0b)) (l0b) (k8c) (rqf) (tqf) (uqf) (vqf) (xqf) (yqf) ))

      ; merge k0-l
      (when  (and (j8c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (l0b) )

      ; merge k0-l
      (when (k4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-2__OPENED_P4-7
    :precondition 
      (rah)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (m0b)) (q0b) (m8c) (tah) (uah) (vah) (xah) (yah) (zah) ))

      ; merge k0-l
      (when  (and (l8c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (q0b) )

      ; merge k0-l
      (when (l4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-2__OPENED_P4-6
    :precondition 
      (tah)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (m0b)) (q0b) (m8c) (rah) (uah) (vah) (xah) (yah) (zah) ))

      ; merge k0-l
      (when  (and (l8c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (q0b) )

      ; merge k0-l
      (when (l4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-2__OPENED_P4-5
    :precondition 
      (uah)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (m0b)) (q0b) (m8c) (rah) (tah) (vah) (xah) (yah) (zah) ))

      ; merge k0-l
      (when  (and (l8c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (q0b) )

      ; merge k0-l
      (when (l4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-2__OPENED_P4-4
    :precondition 
      (vah)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (m0b)) (q0b) (m8c) (rah) (tah) (uah) (xah) (yah) (zah) ))

      ; merge k0-l
      (when  (and (l8c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (q0b) )

      ; merge k0-l
      (when (l4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-2__OPENED_P4-3
    :precondition 
      (xah)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (m0b)) (q0b) (m8c) (rah) (tah) (uah) (vah) (yah) (zah) ))

      ; merge k0-l
      (when  (and (l8c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (q0b) )

      ; merge k0-l
      (when (l4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-2__OPENED_P4-2
    :precondition 
      (yah)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (m0b)) (q0b) (m8c) (rah) (tah) (uah) (vah) (xah) (zah) ))

      ; merge k0-l
      (when  (and (l8c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (q0b) )

      ; merge k0-l
      (when (l4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-2__OPENED_P4-1
    :precondition 
      (zah)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (m0b)) (q0b) (m8c) (rah) (tah) (uah) (vah) (xah) (yah) ))

      ; merge k0-l
      (when  (and (l8c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (q0b) )

      ; merge k0-l
      (when (l4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-1__OPENED_P4-7
    :precondition 
      (rvh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (r0b)) (t0b) (r8c) (tvh) (uvh) (vvh) (xvh) (yvh) (zvh) ))

      ; merge k0-l
      (when  (and (q8c) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (t0b) )

      ; merge k0-l
      (when (m4d) 
        (x9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-1__OPENED_P4-6
    :precondition 
      (tvh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (r0b)) (t0b) (r8c) (rvh) (uvh) (vvh) (xvh) (yvh) (zvh) ))

      ; merge k0-l
      (when  (and (q8c) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (t0b) )

      ; merge k0-l
      (when (m4d) 
        (z9b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-1__OPENED_P4-5
    :precondition 
      (uvh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (r0b)) (t0b) (r8c) (rvh) (tvh) (vvh) (xvh) (yvh) (zvh) ))

      ; merge k0-l
      (when  (and (q8c) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (t0b) )

      ; merge k0-l
      (when (m4d) 
        (c0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-1__OPENED_P4-4
    :precondition 
      (vvh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (r0b)) (t0b) (r8c) (rvh) (tvh) (uvh) (xvh) (yvh) (zvh) ))

      ; merge k0-l
      (when  (and (q8c) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (t0b) )

      ; merge k0-l
      (when (m4d) 
        (h0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-1__OPENED_P4-3
    :precondition 
      (xvh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (r0b)) (t0b) (r8c) (rvh) (tvh) (uvh) (vvh) (yvh) (zvh) ))

      ; merge k0-l
      (when  (and (q8c) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (t0b) )

      ; merge k0-l
      (when (m4d) 
        (k0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-1__OPENED_P4-2
    :precondition 
      (yvh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (r0b)) (t0b) (r8c) (rvh) (tvh) (uvh) (vvh) (xvh) (zvh) ))

      ; merge k0-l
      (when  (and (q8c) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (t0b) )

      ; merge k0-l
      (when (m4d) 
        (m0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P4-1__OPENED_P4-1
    :precondition 
      (zvh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (r0b)) (t0b) (r8c) (rvh) (tvh) (uvh) (vvh) (xvh) (yvh) ))

      ; merge k0-l
      (when  (and (q8c) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (t0b) )

      ; merge k0-l
      (when (m4d) 
        (r0b) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-7__OPENED_P2-7
    :precondition 
      (mre)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (rac)) (tac) (r9c) (qre) (rre) (tre) (ure) (vre) (xre) ))

      ; merge k0-l
      (when  (and (q9c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (tac) )

      ; merge k0-l
      (when (z4d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-7__OPENED_P2-6
    :precondition 
      (qre)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (rac)) (tac) (r9c) (mre) (rre) (tre) (ure) (vre) (xre) ))

      ; merge k0-l
      (when  (and (q9c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (tac) )

      ; merge k0-l
      (when (z4d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-7__OPENED_P2-5
    :precondition 
      (rre)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (rac)) (tac) (r9c) (mre) (qre) (tre) (ure) (vre) (xre) ))

      ; merge k0-l
      (when  (and (q9c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (tac) )

      ; merge k0-l
      (when (z4d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-7__OPENED_P2-4
    :precondition 
      (tre)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (rac)) (tac) (r9c) (mre) (qre) (rre) (ure) (vre) (xre) ))

      ; merge k0-l
      (when  (and (q9c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (tac) )

      ; merge k0-l
      (when (z4d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-7__OPENED_P2-3
    :precondition 
      (ure)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (rac)) (tac) (r9c) (mre) (qre) (rre) (tre) (vre) (xre) ))

      ; merge k0-l
      (when  (and (q9c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (tac) )

      ; merge k0-l
      (when (z4d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-7__OPENED_P2-2
    :precondition 
      (vre)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (rac)) (tac) (r9c) (mre) (qre) (rre) (tre) (ure) (xre) ))

      ; merge k0-l
      (when  (and (q9c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (tac) )

      ; merge k0-l
      (when (z4d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-7__OPENED_P2-1
    :precondition 
      (xre)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (rac)) (tac) (r9c) (mre) (qre) (rre) (tre) (ure) (vre) ))

      ; merge k0-l
      (when  (and (q9c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (tac) )

      ; merge k0-l
      (when (z4d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-6__OPENED_P2-7
    :precondition 
      (zoe)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (uac)) (vac) (u9c) (bpe) (cpe) (gpe) (hpe) (jpe) (kpe) ))

      ; merge k0-l
      (when  (and (t9c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (vac) )

      ; merge k0-l
      (when (b5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-6__OPENED_P2-6
    :precondition 
      (bpe)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (uac)) (vac) (u9c) (zoe) (cpe) (gpe) (hpe) (jpe) (kpe) ))

      ; merge k0-l
      (when  (and (t9c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (vac) )

      ; merge k0-l
      (when (b5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-6__OPENED_P2-5
    :precondition 
      (cpe)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (uac)) (vac) (u9c) (zoe) (bpe) (gpe) (hpe) (jpe) (kpe) ))

      ; merge k0-l
      (when  (and (t9c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (vac) )

      ; merge k0-l
      (when (b5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-6__OPENED_P2-4
    :precondition 
      (gpe)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (uac)) (vac) (u9c) (zoe) (bpe) (cpe) (hpe) (jpe) (kpe) ))

      ; merge k0-l
      (when  (and (t9c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (vac) )

      ; merge k0-l
      (when (b5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-6__OPENED_P2-3
    :precondition 
      (hpe)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (uac)) (vac) (u9c) (zoe) (bpe) (cpe) (gpe) (jpe) (kpe) ))

      ; merge k0-l
      (when  (and (t9c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (vac) )

      ; merge k0-l
      (when (b5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-6__OPENED_P2-2
    :precondition 
      (jpe)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (uac)) (vac) (u9c) (zoe) (bpe) (cpe) (gpe) (hpe) (kpe) ))

      ; merge k0-l
      (when  (and (t9c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (vac) )

      ; merge k0-l
      (when (b5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-6__OPENED_P2-1
    :precondition 
      (kpe)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (uac)) (vac) (u9c) (zoe) (bpe) (cpe) (gpe) (hpe) (jpe) ))

      ; merge k0-l
      (when  (and (t9c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (vac) )

      ; merge k0-l
      (when (b5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-5__OPENED_P2-7
    :precondition 
      (xie)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (xac)) (yac) (x9c) (yie) (zie) (bje) (cje) (gje) (hje) ))

      ; merge k0-l
      (when  (and (v9c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (yac) )

      ; merge k0-l
      (when (c5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-5__OPENED_P2-6
    :precondition 
      (yie)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (xac)) (yac) (x9c) (xie) (zie) (bje) (cje) (gje) (hje) ))

      ; merge k0-l
      (when  (and (v9c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (yac) )

      ; merge k0-l
      (when (c5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-5__OPENED_P2-5
    :precondition 
      (zie)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (xac)) (yac) (x9c) (xie) (yie) (bje) (cje) (gje) (hje) ))

      ; merge k0-l
      (when  (and (v9c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (yac) )

      ; merge k0-l
      (when (c5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-5__OPENED_P2-4
    :precondition 
      (bje)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (xac)) (yac) (x9c) (xie) (yie) (zie) (cje) (gje) (hje) ))

      ; merge k0-l
      (when  (and (v9c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (yac) )

      ; merge k0-l
      (when (c5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-5__OPENED_P2-3
    :precondition 
      (cje)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (xac)) (yac) (x9c) (xie) (yie) (zie) (bje) (gje) (hje) ))

      ; merge k0-l
      (when  (and (v9c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (yac) )

      ; merge k0-l
      (when (c5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-5__OPENED_P2-2
    :precondition 
      (gje)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (xac)) (yac) (x9c) (xie) (yie) (zie) (bje) (cje) (hje) ))

      ; merge k0-l
      (when  (and (v9c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (yac) )

      ; merge k0-l
      (when (c5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-5__OPENED_P2-1
    :precondition 
      (hje)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (xac)) (yac) (x9c) (xie) (yie) (zie) (bje) (cje) (gje) ))

      ; merge k0-l
      (when  (and (v9c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (yac) )

      ; merge k0-l
      (when (c5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-4__OPENED_P2-7
    :precondition 
      (uce)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (zac)) (bbc) (z9c) (vce) (xce) (yce) (zce) (bde) (cde) ))

      ; merge k0-l
      (when  (and (y9c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (bbc) )

      ; merge k0-l
      (when (g5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-4__OPENED_P2-6
    :precondition 
      (vce)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (zac)) (bbc) (z9c) (uce) (xce) (yce) (zce) (bde) (cde) ))

      ; merge k0-l
      (when  (and (y9c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (bbc) )

      ; merge k0-l
      (when (g5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-4__OPENED_P2-5
    :precondition 
      (xce)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (zac)) (bbc) (z9c) (uce) (vce) (yce) (zce) (bde) (cde) ))

      ; merge k0-l
      (when  (and (y9c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (bbc) )

      ; merge k0-l
      (when (g5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-4__OPENED_P2-4
    :precondition 
      (yce)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (zac)) (bbc) (z9c) (uce) (vce) (xce) (zce) (bde) (cde) ))

      ; merge k0-l
      (when  (and (y9c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (bbc) )

      ; merge k0-l
      (when (g5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-4__OPENED_P2-3
    :precondition 
      (zce)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (zac)) (bbc) (z9c) (uce) (vce) (xce) (yce) (bde) (cde) ))

      ; merge k0-l
      (when  (and (y9c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (bbc) )

      ; merge k0-l
      (when (g5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-4__OPENED_P2-2
    :precondition 
      (bde)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (zac)) (bbc) (z9c) (uce) (vce) (xce) (yce) (zce) (cde) ))

      ; merge k0-l
      (when  (and (y9c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (bbc) )

      ; merge k0-l
      (when (g5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-4__OPENED_P2-1
    :precondition 
      (cde)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (zac)) (bbc) (z9c) (uce) (vce) (xce) (yce) (zce) (bde) ))

      ; merge k0-l
      (when  (and (y9c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (bbc) )

      ; merge k0-l
      (when (g5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-3__OPENED_P2-7
    :precondition 
      (zve)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (cbc)) (gbc) (c0c) (bwe) (cwe) (gwe) (hwe) (jwe) (kwe) ))

      ; merge k0-l
      (when  (and (b0c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (gbc) )

      ; merge k0-l
      (when (h5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-3__OPENED_P2-6
    :precondition 
      (bwe)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (cbc)) (gbc) (c0c) (zve) (cwe) (gwe) (hwe) (jwe) (kwe) ))

      ; merge k0-l
      (when  (and (b0c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (gbc) )

      ; merge k0-l
      (when (h5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-3__OPENED_P2-5
    :precondition 
      (cwe)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (cbc)) (gbc) (c0c) (zve) (bwe) (gwe) (hwe) (jwe) (kwe) ))

      ; merge k0-l
      (when  (and (b0c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (gbc) )

      ; merge k0-l
      (when (h5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-3__OPENED_P2-4
    :precondition 
      (gwe)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (cbc)) (gbc) (c0c) (zve) (bwe) (cwe) (hwe) (jwe) (kwe) ))

      ; merge k0-l
      (when  (and (b0c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (gbc) )

      ; merge k0-l
      (when (h5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-3__OPENED_P2-3
    :precondition 
      (hwe)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (cbc)) (gbc) (c0c) (zve) (bwe) (cwe) (gwe) (jwe) (kwe) ))

      ; merge k0-l
      (when  (and (b0c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (gbc) )

      ; merge k0-l
      (when (h5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-3__OPENED_P2-2
    :precondition 
      (jwe)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (cbc)) (gbc) (c0c) (zve) (bwe) (cwe) (gwe) (hwe) (kwe) ))

      ; merge k0-l
      (when  (and (b0c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (gbc) )

      ; merge k0-l
      (when (h5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-3__OPENED_P2-1
    :precondition 
      (kwe)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (cbc)) (gbc) (c0c) (zve) (bwe) (cwe) (gwe) (hwe) (jwe) ))

      ; merge k0-l
      (when  (and (b0c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (gbc) )

      ; merge k0-l
      (when (h5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-2__OPENED_P2-7
    :precondition 
      (m5g)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (hbc)) (jbc) (h0c) (q5g) (r5g) (t5g) (u5g) (v5g) (x5g) ))

      ; merge k0-l
      (when  (and (g0c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (jbc) )

      ; merge k0-l
      (when (j5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-2__OPENED_P2-6
    :precondition 
      (q5g)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (hbc)) (jbc) (h0c) (m5g) (r5g) (t5g) (u5g) (v5g) (x5g) ))

      ; merge k0-l
      (when  (and (g0c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (jbc) )

      ; merge k0-l
      (when (j5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-2__OPENED_P2-5
    :precondition 
      (r5g)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (hbc)) (jbc) (h0c) (m5g) (q5g) (t5g) (u5g) (v5g) (x5g) ))

      ; merge k0-l
      (when  (and (g0c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (jbc) )

      ; merge k0-l
      (when (j5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-2__OPENED_P2-4
    :precondition 
      (t5g)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (hbc)) (jbc) (h0c) (m5g) (q5g) (r5g) (u5g) (v5g) (x5g) ))

      ; merge k0-l
      (when  (and (g0c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (jbc) )

      ; merge k0-l
      (when (j5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-2__OPENED_P2-3
    :precondition 
      (u5g)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (hbc)) (jbc) (h0c) (m5g) (q5g) (r5g) (t5g) (v5g) (x5g) ))

      ; merge k0-l
      (when  (and (g0c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (jbc) )

      ; merge k0-l
      (when (j5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-2__OPENED_P2-2
    :precondition 
      (v5g)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (hbc)) (jbc) (h0c) (m5g) (q5g) (r5g) (t5g) (u5g) (x5g) ))

      ; merge k0-l
      (when  (and (g0c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (jbc) )

      ; merge k0-l
      (when (j5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-2__OPENED_P2-1
    :precondition 
      (x5g)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (hbc)) (jbc) (h0c) (m5g) (q5g) (r5g) (t5g) (u5g) (v5g) ))

      ; merge k0-l
      (when  (and (g0c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (jbc) )

      ; merge k0-l
      (when (j5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-1__OPENED_P2-7
    :precondition 
      (mph)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (kbc)) (lbc) (k0c) (qph) (rph) (tph) (uph) (vph) (xph) ))

      ; merge k0-l
      (when  (and (j0c) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (lbc) )

      ; merge k0-l
      (when (k5d) 
        (rac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-1__OPENED_P2-6
    :precondition 
      (qph)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (kbc)) (lbc) (k0c) (mph) (rph) (tph) (uph) (vph) (xph) ))

      ; merge k0-l
      (when  (and (j0c) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (lbc) )

      ; merge k0-l
      (when (k5d) 
        (uac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-1__OPENED_P2-5
    :precondition 
      (rph)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (kbc)) (lbc) (k0c) (mph) (qph) (tph) (uph) (vph) (xph) ))

      ; merge k0-l
      (when  (and (j0c) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (lbc) )

      ; merge k0-l
      (when (k5d) 
        (xac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-1__OPENED_P2-4
    :precondition 
      (tph)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (kbc)) (lbc) (k0c) (mph) (qph) (rph) (uph) (vph) (xph) ))

      ; merge k0-l
      (when  (and (j0c) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (lbc) )

      ; merge k0-l
      (when (k5d) 
        (zac) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-1__OPENED_P2-3
    :precondition 
      (uph)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (kbc)) (lbc) (k0c) (mph) (qph) (rph) (tph) (vph) (xph) ))

      ; merge k0-l
      (when  (and (j0c) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (lbc) )

      ; merge k0-l
      (when (k5d) 
        (cbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-1__OPENED_P2-2
    :precondition 
      (vph)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (kbc)) (lbc) (k0c) (mph) (qph) (rph) (tph) (uph) (xph) ))

      ; merge k0-l
      (when  (and (j0c) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (lbc) )

      ; merge k0-l
      (when (k5d) 
        (hbc) )

    )
  )
  (:action closure_merge_imply_OPENED_P2-1__OPENED_P2-1
    :precondition 
      (xph)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (kbc)) (lbc) (k0c) (mph) (qph) (rph) (tph) (uph) (vph) ))

      ; merge k0-l
      (when  (and (j0c) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (lbc) )

      ; merge k0-l
      (when (k5d) 
        (kbc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P6-7
    :precondition 
      (x5d)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P6-6
    :precondition 
      (z5d)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P6-5
    :precondition 
      (c6d)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P6-4
    :precondition 
      (h6d)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P6-3
    :precondition 
      (k6d)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P6-2
    :precondition 
      (m6d)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P6-1
    :precondition 
      (r6d)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P4-7
    :precondition 
      (u6d)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P4-6
    :precondition 
      (x6d)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P4-5
    :precondition 
      (z6d)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P4-4
    :precondition 
      (c7d)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P4-3
    :precondition 
      (h7d)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P4-2
    :precondition 
      (k7d)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P4-1
    :precondition 
      (m7d)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P2-7
    :precondition 
      (r7d)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (u7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P2-6
    :precondition 
      (u7d)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (x7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P2-5
    :precondition 
      (x7d)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (z7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P2-4
    :precondition 
      (z7d)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (c8d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P2-3
    :precondition 
      (c8d)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (h8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P2-2
    :precondition 
      (h8d)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (k8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-4__OPENED_P2-1
    :precondition 
      (k8d)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (kxc)) (lxc) (kvd) (x5d) (z5d) (c6d) (h6d) (k6d) (m6d) (r6d) (u6d) (x6d) (z6d) (c7d) (h7d) (k7d) (m7d) (r7d) (u7d) (x7d) (z7d) (c8d) (h8d) ))

      ; merge k0-l
      (when  (and (jvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (lxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P6-7
    :precondition 
      (xmh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P6-6
    :precondition 
      (zmh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P6-5
    :precondition 
      (cnh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P6-4
    :precondition 
      (hnh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P6-3
    :precondition 
      (knh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P6-2
    :precondition 
      (mnh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P6-1
    :precondition 
      (rnh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P4-7
    :precondition 
      (unh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P4-6
    :precondition 
      (xnh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P4-5
    :precondition 
      (znh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P4-4
    :precondition 
      (coh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P4-3
    :precondition 
      (hoh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P4-2
    :precondition 
      (koh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P4-1
    :precondition 
      (moh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (roh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P2-7
    :precondition 
      (roh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (uoh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P2-6
    :precondition 
      (uoh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (xoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P2-5
    :precondition 
      (xoh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (zoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P2-4
    :precondition 
      (zoh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (cph) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P2-3
    :precondition 
      (cph)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (hph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P2-2
    :precondition 
      (hph)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (kph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-1__OPENED_P2-1
    :precondition 
      (kph)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (mxc)) (qxc) (mvd) (xmh) (zmh) (cnh) (hnh) (knh) (mnh) (rnh) (unh) (xnh) (znh) (coh) (hoh) (koh) (moh) (roh) (uoh) (xoh) (zoh) (cph) (hph) ))

      ; merge k0-l
      (when  (and (lvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (qxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P6-7
    :precondition 
      (x2g)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P6-6
    :precondition 
      (z2g)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P6-5
    :precondition 
      (c3g)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P6-4
    :precondition 
      (h3g)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P6-3
    :precondition 
      (k3g)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P6-2
    :precondition 
      (m3g)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P6-1
    :precondition 
      (r3g)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P4-7
    :precondition 
      (u3g)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P4-6
    :precondition 
      (x3g)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P4-5
    :precondition 
      (z3g)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P4-4
    :precondition 
      (c4g)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P4-3
    :precondition 
      (h4g)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P4-2
    :precondition 
      (k4g)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P4-1
    :precondition 
      (m4g)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P2-7
    :precondition 
      (r4g)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (u4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P2-6
    :precondition 
      (u4g)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (x4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P2-5
    :precondition 
      (x4g)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (z4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P2-4
    :precondition 
      (z4g)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (c5g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P2-3
    :precondition 
      (c5g)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (h5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P2-2
    :precondition 
      (h5g)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (k5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-2__OPENED_P2-1
    :precondition 
      (k5g)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (rxc)) (txc) (rvd) (x2g) (z2g) (c3g) (h3g) (k3g) (m3g) (r3g) (u3g) (x3g) (z3g) (c4g) (h4g) (k4g) (m4g) (r4g) (u4g) (x4g) (z4g) (c5g) (h5g) ))

      ; merge k0-l
      (when  (and (qvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (txc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P6-7
    :precondition 
      (m8d)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P6-6
    :precondition 
      (r8d)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P6-5
    :precondition 
      (u8d)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P6-4
    :precondition 
      (x8d)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P6-3
    :precondition 
      (z8d)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P6-2
    :precondition 
      (c9d)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P6-1
    :precondition 
      (h9d)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P4-7
    :precondition 
      (k9d)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P4-6
    :precondition 
      (m9d)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P4-5
    :precondition 
      (r9d)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P4-4
    :precondition 
      (u9d)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P4-3
    :precondition 
      (x9d)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P4-2
    :precondition 
      (z9d)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P4-1
    :precondition 
      (c0d)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P2-7
    :precondition 
      (h0d)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (k0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P2-6
    :precondition 
      (k0d)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (m0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P2-5
    :precondition 
      (m0d)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (r0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P2-4
    :precondition 
      (r0d)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (u0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P2-3
    :precondition 
      (u0d)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (x0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P2-2
    :precondition 
      (x0d)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (z0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-3__OPENED_P2-1
    :precondition 
      (z0d)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (uxc)) (vxc) (uvd) (m8d) (r8d) (u8d) (x8d) (z8d) (c9d) (h9d) (k9d) (m9d) (r9d) (u9d) (x9d) (z9d) (c0d) (h0d) (k0d) (m0d) (r0d) (u0d) (x0d) ))

      ; merge k0-l
      (when  (and (tvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (vxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P6-7
    :precondition 
      (cae)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P6-6
    :precondition 
      (hae)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P6-5
    :precondition 
      (kae)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P6-4
    :precondition 
      (mae)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P6-3
    :precondition 
      (rae)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P6-2
    :precondition 
      (uae)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P6-1
    :precondition 
      (xae)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P4-7
    :precondition 
      (zae)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P4-6
    :precondition 
      (cbe)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P4-5
    :precondition 
      (hbe)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P4-4
    :precondition 
      (kbe)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P4-3
    :precondition 
      (mbe)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P4-2
    :precondition 
      (rbe)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P4-1
    :precondition 
      (ube)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (xbe) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P2-7
    :precondition 
      (xbe)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (zbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P2-6
    :precondition 
      (zbe)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (cce) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P2-5
    :precondition 
      (cce)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (hce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P2-4
    :precondition 
      (hce)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (kce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P2-3
    :precondition 
      (kce)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (mce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P2-2
    :precondition 
      (mce)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (rce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-5__OPENED_P2-1
    :precondition 
      (rce)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (xxc)) (yxc) (xvd) (cae) (hae) (kae) (mae) (rae) (uae) (xae) (zae) (cbe) (hbe) (kbe) (mbe) (rbe) (ube) (xbe) (zbe) (cce) (hce) (kce) (mce) ))

      ; merge k0-l
      (when  (and (vvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (yxc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P6-7
    :precondition 
      (hge)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P6-6
    :precondition 
      (kge)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P6-5
    :precondition 
      (mge)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P6-4
    :precondition 
      (rge)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P6-3
    :precondition 
      (uge)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P6-2
    :precondition 
      (xge)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P6-1
    :precondition 
      (zge)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P4-7
    :precondition 
      (che)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P4-6
    :precondition 
      (hhe)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P4-5
    :precondition 
      (khe)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P4-4
    :precondition 
      (mhe)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P4-3
    :precondition 
      (rhe)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P4-2
    :precondition 
      (uhe)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P4-1
    :precondition 
      (xhe)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (zhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P2-7
    :precondition 
      (zhe)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (cie) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P2-6
    :precondition 
      (cie)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (hie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P2-5
    :precondition 
      (hie)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (kie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P2-4
    :precondition 
      (kie)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (mie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P2-3
    :precondition 
      (mie)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (rie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P2-2
    :precondition 
      (rie)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (uie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-6__OPENED_P2-1
    :precondition 
      (uie)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (zxc)) (byc) (zvd) (hge) (kge) (mge) (rge) (uge) (xge) (zge) (che) (hhe) (khe) (mhe) (rhe) (uhe) (xhe) (zhe) (cie) (hie) (kie) (mie) (rie) ))

      ; merge k0-l
      (when  (and (yvd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (byc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P6-7
    :precondition 
      (kme)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P6-6
    :precondition 
      (mme)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P6-5
    :precondition 
      (rme)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P6-4
    :precondition 
      (ume)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P6-3
    :precondition 
      (xme)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P6-2
    :precondition 
      (zme)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P6-1
    :precondition 
      (cne)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P4-7
    :precondition 
      (hne)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P4-6
    :precondition 
      (kne)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P4-5
    :precondition 
      (mne)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P4-4
    :precondition 
      (rne)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P4-3
    :precondition 
      (une)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P4-2
    :precondition 
      (xne)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P4-1
    :precondition 
      (zne)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (coe) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P2-7
    :precondition 
      (coe)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (hoe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P2-6
    :precondition 
      (hoe)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (koe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P2-5
    :precondition 
      (koe)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (moe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P2-4
    :precondition 
      (moe)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (roe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P2-3
    :precondition 
      (roe)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (uoe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P2-2
    :precondition 
      (uoe)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (xoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P1-7__OPENED_P2-1
    :precondition 
      (xoe)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (cyc)) (gyc) (cwd) (kme) (mme) (rme) (ume) (xme) (zme) (cne) (hne) (kne) (mne) (rne) (une) (xne) (zne) (coe) (hoe) (koe) (moe) (roe) (uoe) ))

      ; merge k0-l
      (when  (and (bwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (gyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P6-7
    :precondition 
      (kqh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P6-6
    :precondition 
      (mqh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P6-5
    :precondition 
      (rqh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P6-4
    :precondition 
      (uqh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P6-3
    :precondition 
      (xqh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P6-2
    :precondition 
      (zqh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P6-1
    :precondition 
      (csh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P4-7
    :precondition 
      (hsh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P4-6
    :precondition 
      (ksh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P4-5
    :precondition 
      (msh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P4-4
    :precondition 
      (rsh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P4-3
    :precondition 
      (ush)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P4-2
    :precondition 
      (xsh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P4-1
    :precondition 
      (zsh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P2-7
    :precondition 
      (crh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (hrh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P2-6
    :precondition 
      (hrh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (krh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P2-5
    :precondition 
      (krh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (mrh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P2-4
    :precondition 
      (mrh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (rrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P2-3
    :precondition 
      (rrh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (urh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P2-2
    :precondition 
      (urh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (xrh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-1__OPENED_P2-1
    :precondition 
      (xrh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (hyc)) (jyc) (hwd) (kqh) (mqh) (rqh) (uqh) (xqh) (zqh) (csh) (hsh) (ksh) (msh) (rsh) (ush) (xsh) (zsh) (crh) (hrh) (krh) (mrh) (rrh) (urh) ))

      ; merge k0-l
      (when  (and (gwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (jyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P6-7
    :precondition 
      (k6g)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P6-6
    :precondition 
      (m6g)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P6-5
    :precondition 
      (r6g)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P6-4
    :precondition 
      (u6g)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P6-3
    :precondition 
      (x6g)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P6-2
    :precondition 
      (z6g)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P6-1
    :precondition 
      (c7g)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P4-7
    :precondition 
      (h7g)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P4-6
    :precondition 
      (k7g)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P4-5
    :precondition 
      (m7g)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P4-4
    :precondition 
      (r7g)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P4-3
    :precondition 
      (u7g)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P4-2
    :precondition 
      (x7g)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P4-1
    :precondition 
      (z7g)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P2-7
    :precondition 
      (c8g)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (h8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P2-6
    :precondition 
      (h8g)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (k8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P2-5
    :precondition 
      (k8g)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (m8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P2-4
    :precondition 
      (m8g)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (r8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P2-3
    :precondition 
      (r8g)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (u8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P2-2
    :precondition 
      (u8g)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (x8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-2__OPENED_P2-1
    :precondition 
      (x8g)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (kyc)) (lyc) (kwd) (k6g) (m6g) (r6g) (u6g) (x6g) (z6g) (c7g) (h7g) (k7g) (m7g) (r7g) (u7g) (x7g) (z7g) (c8g) (h8g) (k8g) (m8g) (r8g) (u8g) ))

      ; merge k0-l
      (when  (and (jwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (lyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P6-7
    :precondition 
      (xwe)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P6-6
    :precondition 
      (zwe)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P6-5
    :precondition 
      (cxe)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P6-4
    :precondition 
      (hxe)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P6-3
    :precondition 
      (kxe)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P6-2
    :precondition 
      (mxe)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P6-1
    :precondition 
      (rxe)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P4-7
    :precondition 
      (uxe)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P4-6
    :precondition 
      (xxe)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P4-5
    :precondition 
      (zxe)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P4-4
    :precondition 
      (cye)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P4-3
    :precondition 
      (hye)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P4-2
    :precondition 
      (kye)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P4-1
    :precondition 
      (mye)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (rye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P2-7
    :precondition 
      (rye)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (uye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P2-6
    :precondition 
      (uye)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (xye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P2-5
    :precondition 
      (xye)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (zye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P2-4
    :precondition 
      (zye)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (cze) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P2-3
    :precondition 
      (cze)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (hze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P2-2
    :precondition 
      (hze)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (kze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-3__OPENED_P2-1
    :precondition 
      (kze)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (myc)) (qyc) (mwd) (xwe) (zwe) (cxe) (hxe) (kxe) (mxe) (rxe) (uxe) (xxe) (zxe) (cye) (hye) (kye) (mye) (rye) (uye) (xye) (zye) (cze) (hze) ))

      ; merge k0-l
      (when  (and (lwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (qyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P6-7
    :precondition 
      (rde)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P6-6
    :precondition 
      (ude)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P6-5
    :precondition 
      (xde)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P6-4
    :precondition 
      (zde)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P6-3
    :precondition 
      (cee)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P6-2
    :precondition 
      (hee)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P6-1
    :precondition 
      (kee)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P4-7
    :precondition 
      (mee)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P4-6
    :precondition 
      (ree)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P4-5
    :precondition 
      (uee)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P4-4
    :precondition 
      (xee)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P4-3
    :precondition 
      (zee)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P4-2
    :precondition 
      (cfe)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P4-1
    :precondition 
      (hfe)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P2-7
    :precondition 
      (kfe)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (mfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P2-6
    :precondition 
      (mfe)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (rfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P2-5
    :precondition 
      (rfe)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (ufe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P2-4
    :precondition 
      (ufe)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (xfe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P2-3
    :precondition 
      (xfe)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (zfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P2-2
    :precondition 
      (zfe)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (cge) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-4__OPENED_P2-1
    :precondition 
      (cge)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (ryc)) (tyc) (rwd) (rde) (ude) (xde) (zde) (cee) (hee) (kee) (mee) (ree) (uee) (xee) (zee) (cfe) (hfe) (kfe) (mfe) (rfe) (ufe) (xfe) (zfe) ))

      ; merge k0-l
      (when  (and (qwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (tyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P6-7
    :precondition 
      (uje)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P6-6
    :precondition 
      (xje)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P6-5
    :precondition 
      (zje)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P6-4
    :precondition 
      (cke)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P6-3
    :precondition 
      (hke)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P6-2
    :precondition 
      (kke)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P6-1
    :precondition 
      (mke)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P4-7
    :precondition 
      (rke)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P4-6
    :precondition 
      (uke)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P4-5
    :precondition 
      (xke)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P4-4
    :precondition 
      (zke)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P4-3
    :precondition 
      (cle)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P4-2
    :precondition 
      (hle)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P4-1
    :precondition 
      (kle)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (mle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P2-7
    :precondition 
      (mle)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (rle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P2-6
    :precondition 
      (rle)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (ule) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P2-5
    :precondition 
      (ule)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (xle) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P2-4
    :precondition 
      (xle)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (zle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P2-3
    :precondition 
      (zle)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (cme) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P2-2
    :precondition 
      (cme)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (hme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-5__OPENED_P2-1
    :precondition 
      (hme)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (uyc)) (vyc) (uwd) (uje) (xje) (zje) (cke) (hke) (kke) (mke) (rke) (uke) (xke) (zke) (cle) (hle) (kle) (mle) (rle) (ule) (xle) (zle) (cme) ))

      ; merge k0-l
      (when  (and (twd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (vyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P6-7
    :precondition 
      (xpe)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P6-6
    :precondition 
      (zpe)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P6-5
    :precondition 
      (cqe)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P6-4
    :precondition 
      (hqe)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P6-3
    :precondition 
      (kqe)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P6-2
    :precondition 
      (mqe)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P6-1
    :precondition 
      (rqe)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P4-7
    :precondition 
      (uqe)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P4-6
    :precondition 
      (xqe)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P4-5
    :precondition 
      (zqe)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P4-4
    :precondition 
      (cse)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P4-3
    :precondition 
      (hse)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P4-2
    :precondition 
      (kse)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (mse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P4-1
    :precondition 
      (mse)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (rse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P2-7
    :precondition 
      (rse)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (use) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P2-6
    :precondition 
      (use)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (xse) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P2-5
    :precondition 
      (xse)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (zse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P2-4
    :precondition 
      (zse)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (cre) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P2-3
    :precondition 
      (cre)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (hre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P2-2
    :precondition 
      (hre)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (kre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-6__OPENED_P2-1
    :precondition 
      (kre)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (xyc)) (yyc) (xwd) (xpe) (zpe) (cqe) (hqe) (kqe) (mqe) (rqe) (uqe) (xqe) (zqe) (cse) (hse) (kse) (mse) (rse) (use) (xse) (zse) (cre) (hre) ))

      ; merge k0-l
      (when  (and (vwd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (yyc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P6-7
    :precondition 
      (kte)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P6-6
    :precondition 
      (mte)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P6-5
    :precondition 
      (rte)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P6-4
    :precondition 
      (ute)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P6-3
    :precondition 
      (xte)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P6-2
    :precondition 
      (zte)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P6-1
    :precondition 
      (cue)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P4-7
    :precondition 
      (hue)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P4-6
    :precondition 
      (kue)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P4-5
    :precondition 
      (mue)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P4-4
    :precondition 
      (rue)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P4-3
    :precondition 
      (uue)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P4-2
    :precondition 
      (xue)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P4-1
    :precondition 
      (zue)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (cve) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P2-7
    :precondition 
      (cve)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (hve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P2-6
    :precondition 
      (hve)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (kve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P2-5
    :precondition 
      (kve)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (mve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P2-4
    :precondition 
      (mve)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (rve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P2-3
    :precondition 
      (rve)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (uve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P2-2
    :precondition 
      (uve)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (xve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P2-7__OPENED_P2-1
    :precondition 
      (xve)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (zyc)) (bzc) (zwd) (kte) (mte) (rte) (ute) (xte) (zte) (cue) (hue) (kue) (mue) (rue) (uue) (xue) (zue) (cve) (hve) (kve) (mve) (rve) (uve) ))

      ; merge k0-l
      (when  (and (ywd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (bzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P6-7
    :precondition 
      (zrh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P6-6
    :precondition 
      (cth)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P6-5
    :precondition 
      (hth)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P6-4
    :precondition 
      (kth)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P6-3
    :precondition 
      (mth)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P6-2
    :precondition 
      (rth)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P6-1
    :precondition 
      (uth)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P4-7
    :precondition 
      (xth)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P4-6
    :precondition 
      (zth)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P4-5
    :precondition 
      (cuh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P4-4
    :precondition 
      (huh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P4-3
    :precondition 
      (kuh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P4-2
    :precondition 
      (muh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P4-1
    :precondition 
      (ruh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P2-7
    :precondition 
      (uuh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (xuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P2-6
    :precondition 
      (xuh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (zuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P2-5
    :precondition 
      (zuh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (cvh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P2-4
    :precondition 
      (cvh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (hvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P2-3
    :precondition 
      (hvh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (kvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P2-2
    :precondition 
      (kvh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (mvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-1__OPENED_P2-1
    :precondition 
      (mvh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (czc)) (gzc) (cxd) (zrh) (cth) (hth) (kth) (mth) (rth) (uth) (xth) (zth) (cuh) (huh) (kuh) (muh) (ruh) (uuh) (xuh) (zuh) (cvh) (hvh) (kvh) ))

      ; merge k0-l
      (when  (and (bxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (gzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P6-7
    :precondition 
      (z8g)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P6-6
    :precondition 
      (c9g)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P6-5
    :precondition 
      (h9g)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P6-4
    :precondition 
      (k9g)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P6-3
    :precondition 
      (m9g)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P6-2
    :precondition 
      (r9g)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P6-1
    :precondition 
      (u9g)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P4-7
    :precondition 
      (x9g)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P4-6
    :precondition 
      (z9g)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P4-5
    :precondition 
      (c0g)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P4-4
    :precondition 
      (h0g)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P4-3
    :precondition 
      (k0g)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P4-2
    :precondition 
      (m0g)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P4-1
    :precondition 
      (r0g)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P2-7
    :precondition 
      (u0g)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (x0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P2-6
    :precondition 
      (x0g)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (z0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P2-5
    :precondition 
      (z0g)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (cah) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P2-4
    :precondition 
      (cah)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (hah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P2-3
    :precondition 
      (hah)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (kah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P2-2
    :precondition 
      (kah)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (mah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-2__OPENED_P2-1
    :precondition 
      (mah)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (hzc)) (jzc) (hxd) (z8g) (c9g) (h9g) (k9g) (m9g) (r9g) (u9g) (x9g) (z9g) (c0g) (h0g) (k0g) (m0g) (r0g) (u0g) (x0g) (z0g) (cah) (hah) (kah) ))

      ; merge k0-l
      (when  (and (gxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (jzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P6-7
    :precondition 
      (z0e)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P6-6
    :precondition 
      (caf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P6-5
    :precondition 
      (haf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P6-4
    :precondition 
      (kaf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P6-3
    :precondition 
      (maf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P6-2
    :precondition 
      (raf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P6-1
    :precondition 
      (uaf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P4-7
    :precondition 
      (xaf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P4-6
    :precondition 
      (zaf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P4-5
    :precondition 
      (cbf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P4-4
    :precondition 
      (hbf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P4-3
    :precondition 
      (kbf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P4-2
    :precondition 
      (mbf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P4-1
    :precondition 
      (rbf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P2-7
    :precondition 
      (ubf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (xbf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P2-6
    :precondition 
      (xbf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (zbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P2-5
    :precondition 
      (zbf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (ccf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P2-4
    :precondition 
      (ccf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (hcf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P2-3
    :precondition 
      (hcf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (kcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P2-2
    :precondition 
      (kcf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (mcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-3__OPENED_P2-1
    :precondition 
      (mcf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (kzc)) (lzc) (kxd) (z0e) (caf) (haf) (kaf) (maf) (raf) (uaf) (xaf) (zaf) (cbf) (hbf) (kbf) (mbf) (rbf) (ubf) (xbf) (zbf) (ccf) (hcf) (kcf) ))

      ; merge k0-l
      (when  (and (jxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (lzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P6-7
    :precondition 
      (mze)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P6-6
    :precondition 
      (rze)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P6-5
    :precondition 
      (uze)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P6-4
    :precondition 
      (xze)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P6-3
    :precondition 
      (zze)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P6-2
    :precondition 
      (c1e)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P6-1
    :precondition 
      (h1e)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P4-7
    :precondition 
      (k1e)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P4-6
    :precondition 
      (m1e)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P4-5
    :precondition 
      (r1e)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P4-4
    :precondition 
      (u1e)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P4-3
    :precondition 
      (x1e)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P4-2
    :precondition 
      (z1e)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P4-1
    :precondition 
      (c2e)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P2-7
    :precondition 
      (h2e)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (k2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P2-6
    :precondition 
      (k2e)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (m2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P2-5
    :precondition 
      (m2e)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (r2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P2-4
    :precondition 
      (r2e)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (u2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P2-3
    :precondition 
      (u2e)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (x2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P2-2
    :precondition 
      (x2e)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (z2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-4__OPENED_P2-1
    :precondition 
      (z2e)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (mzc)) (qzc) (mxd) (mze) (rze) (uze) (xze) (zze) (c1e) (h1e) (k1e) (m1e) (r1e) (u1e) (x1e) (z1e) (c2e) (h2e) (k2e) (m2e) (r2e) (u2e) (x2e) ))

      ; merge k0-l
      (when  (and (lxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (qzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P6-7
    :precondition 
      (c3e)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P6-6
    :precondition 
      (h3e)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P6-5
    :precondition 
      (k3e)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P6-4
    :precondition 
      (m3e)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P6-3
    :precondition 
      (r3e)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P6-2
    :precondition 
      (u3e)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P6-1
    :precondition 
      (x3e)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P4-7
    :precondition 
      (z3e)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P4-6
    :precondition 
      (c4e)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P4-5
    :precondition 
      (h4e)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P4-4
    :precondition 
      (k4e)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P4-3
    :precondition 
      (m4e)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P4-2
    :precondition 
      (r4e)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P4-1
    :precondition 
      (u4e)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P2-7
    :precondition 
      (x4e)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (z4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P2-6
    :precondition 
      (z4e)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (c5e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P2-5
    :precondition 
      (c5e)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (h5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P2-4
    :precondition 
      (h5e)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (k5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P2-3
    :precondition 
      (k5e)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (m5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P2-2
    :precondition 
      (m5e)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (r5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-5__OPENED_P2-1
    :precondition 
      (r5e)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (rzc)) (tzc) (rxd) (c3e) (h3e) (k3e) (m3e) (r3e) (u3e) (x3e) (z3e) (c4e) (h4e) (k4e) (m4e) (r4e) (u4e) (x4e) (z4e) (c5e) (h5e) (k5e) (m5e) ))

      ; merge k0-l
      (when  (and (qxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (tzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P6-7
    :precondition 
      (u5e)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P6-6
    :precondition 
      (x5e)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P6-5
    :precondition 
      (z5e)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P6-4
    :precondition 
      (c6e)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P6-3
    :precondition 
      (h6e)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P6-2
    :precondition 
      (k6e)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P6-1
    :precondition 
      (m6e)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P4-7
    :precondition 
      (r6e)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P4-6
    :precondition 
      (u6e)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P4-5
    :precondition 
      (x6e)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P4-4
    :precondition 
      (z6e)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P4-3
    :precondition 
      (c7e)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P4-2
    :precondition 
      (h7e)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P4-1
    :precondition 
      (k7e)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P2-7
    :precondition 
      (m7e)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (r7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P2-6
    :precondition 
      (r7e)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (u7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P2-5
    :precondition 
      (u7e)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (x7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P2-4
    :precondition 
      (x7e)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (z7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P2-3
    :precondition 
      (z7e)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (c8e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P2-2
    :precondition 
      (c8e)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (h8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-6__OPENED_P2-1
    :precondition 
      (h8e)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (uzc)) (vzc) (uxd) (u5e) (x5e) (z5e) (c6e) (h6e) (k6e) (m6e) (r6e) (u6e) (x6e) (z6e) (c7e) (h7e) (k7e) (m7e) (r7e) (u7e) (x7e) (z7e) (c8e) ))

      ; merge k0-l
      (when  (and (txd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (vzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P6-7
    :precondition 
      (k8e)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P6-6
    :precondition 
      (m8e)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P6-5
    :precondition 
      (r8e)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P6-4
    :precondition 
      (u8e)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P6-3
    :precondition 
      (x8e)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P6-2
    :precondition 
      (z8e)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P6-1
    :precondition 
      (c9e)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P4-7
    :precondition 
      (h9e)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P4-6
    :precondition 
      (k9e)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P4-5
    :precondition 
      (m9e)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P4-4
    :precondition 
      (r9e)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P4-3
    :precondition 
      (u9e)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P4-2
    :precondition 
      (x9e)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P4-1
    :precondition 
      (z9e)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P2-7
    :precondition 
      (c0e)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (h0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P2-6
    :precondition 
      (h0e)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (k0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P2-5
    :precondition 
      (k0e)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (m0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P2-4
    :precondition 
      (m0e)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (r0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P2-3
    :precondition 
      (r0e)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (u0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P2-2
    :precondition 
      (u0e)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (x0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P3-7__OPENED_P2-1
    :precondition 
      (x0e)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (xzc)) (yzc) (xxd) (k8e) (m8e) (r8e) (u8e) (x8e) (z8e) (c9e) (h9e) (k9e) (m9e) (r9e) (u9e) (x9e) (z9e) (c0e) (h0e) (k0e) (m0e) (r0e) (u0e) ))

      ; merge k0-l
      (when  (and (vxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (yzc) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P6-7
    :precondition 
      (mwh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P6-6
    :precondition 
      (rwh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P6-5
    :precondition 
      (uwh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P6-4
    :precondition 
      (xwh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P6-3
    :precondition 
      (zwh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P6-2
    :precondition 
      (cxh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P6-1
    :precondition 
      (hxh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P4-7
    :precondition 
      (kxh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P4-6
    :precondition 
      (mxh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P4-5
    :precondition 
      (rxh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P4-4
    :precondition 
      (uxh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P4-3
    :precondition 
      (xxh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P4-2
    :precondition 
      (zxh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P4-1
    :precondition 
      (cyh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P2-7
    :precondition 
      (hyh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (kyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P2-6
    :precondition 
      (kyh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (myh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P2-5
    :precondition 
      (myh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (ryh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P2-4
    :precondition 
      (ryh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (uyh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P2-3
    :precondition 
      (uyh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (xyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P2-2
    :precondition 
      (xyh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (zyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-1__OPENED_P2-1
    :precondition 
      (zyh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (zzc)) (b1c) (zxd) (mwh) (rwh) (uwh) (xwh) (zwh) (cxh) (hxh) (kxh) (mxh) (rxh) (uxh) (xxh) (zxh) (cyh) (hyh) (kyh) (myh) (ryh) (uyh) (xyh) ))

      ; merge k0-l
      (when  (and (yxd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (b1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P6-7
    :precondition 
      (mbh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P6-6
    :precondition 
      (rbh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P6-5
    :precondition 
      (ubh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P6-4
    :precondition 
      (xbh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P6-3
    :precondition 
      (zbh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P6-2
    :precondition 
      (cch)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P6-1
    :precondition 
      (hch)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P4-7
    :precondition 
      (kch)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P4-6
    :precondition 
      (mch)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P4-5
    :precondition 
      (rch)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P4-4
    :precondition 
      (uch)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P4-3
    :precondition 
      (xch)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P4-2
    :precondition 
      (zch)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P4-1
    :precondition 
      (cdh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P2-7
    :precondition 
      (hdh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (kdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P2-6
    :precondition 
      (kdh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (mdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P2-5
    :precondition 
      (mdh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (rdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P2-4
    :precondition 
      (rdh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (udh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P2-3
    :precondition 
      (udh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (xdh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P2-2
    :precondition 
      (xdh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (zdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-2__OPENED_P2-1
    :precondition 
      (zdh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (c1c)) (g1c) (cyd) (mbh) (rbh) (ubh) (xbh) (zbh) (cch) (hch) (kch) (mch) (rch) (uch) (xch) (zch) (cdh) (hdh) (kdh) (mdh) (rdh) (udh) (xdh) ))

      ; merge k0-l
      (when  (and (byd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (g1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P6-7
    :precondition 
      (msf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P6-6
    :precondition 
      (rsf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P6-5
    :precondition 
      (usf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P6-4
    :precondition 
      (xsf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P6-3
    :precondition 
      (zsf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P6-2
    :precondition 
      (crf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P6-1
    :precondition 
      (hrf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P4-7
    :precondition 
      (krf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P4-6
    :precondition 
      (mrf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P4-5
    :precondition 
      (rrf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P4-4
    :precondition 
      (urf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P4-3
    :precondition 
      (xrf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P4-2
    :precondition 
      (zrf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P4-1
    :precondition 
      (ctf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P2-7
    :precondition 
      (htf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (ktf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P2-6
    :precondition 
      (ktf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (mtf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P2-5
    :precondition 
      (mtf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (rtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P2-4
    :precondition 
      (rtf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (utf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P2-3
    :precondition 
      (utf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (xtf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P2-2
    :precondition 
      (xtf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (ztf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-3__OPENED_P2-1
    :precondition 
      (ztf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (h1c)) (j1c) (hyd) (msf) (rsf) (usf) (xsf) (zsf) (crf) (hrf) (krf) (mrf) (rrf) (urf) (xrf) (zrf) (ctf) (htf) (ktf) (mtf) (rtf) (utf) (xtf) ))

      ; merge k0-l
      (when  (and (gyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (j1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P6-7
    :precondition 
      (mdf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P6-6
    :precondition 
      (rdf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P6-5
    :precondition 
      (udf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P6-4
    :precondition 
      (xdf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P6-3
    :precondition 
      (zdf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P6-2
    :precondition 
      (cef)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P6-1
    :precondition 
      (hef)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P4-7
    :precondition 
      (kef)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P4-6
    :precondition 
      (mef)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P4-5
    :precondition 
      (ref)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P4-4
    :precondition 
      (uef)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P4-3
    :precondition 
      (xef)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P4-2
    :precondition 
      (zef)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P4-1
    :precondition 
      (cff)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (hff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P2-7
    :precondition 
      (hff)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (kff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P2-6
    :precondition 
      (kff)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (mff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P2-5
    :precondition 
      (mff)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (rff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P2-4
    :precondition 
      (rff)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (uff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P2-3
    :precondition 
      (uff)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (xff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P2-2
    :precondition 
      (xff)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (zff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-4__OPENED_P2-1
    :precondition 
      (zff)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (k1c)) (l1c) (kyd) (mdf) (rdf) (udf) (xdf) (zdf) (cef) (hef) (kef) (mef) (ref) (uef) (xef) (zef) (cff) (hff) (kff) (mff) (rff) (uff) (xff) ))

      ; merge k0-l
      (when  (and (jyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (l1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P6-7
    :precondition 
      (zgf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P6-6
    :precondition 
      (chf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P6-5
    :precondition 
      (hhf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P6-4
    :precondition 
      (khf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P6-3
    :precondition 
      (mhf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P6-2
    :precondition 
      (rhf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P6-1
    :precondition 
      (uhf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P4-7
    :precondition 
      (xhf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P4-6
    :precondition 
      (zhf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P4-5
    :precondition 
      (cif)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P4-4
    :precondition 
      (hif)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P4-3
    :precondition 
      (kif)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P4-2
    :precondition 
      (mif)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P4-1
    :precondition 
      (rif)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (uif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P2-7
    :precondition 
      (uif)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (xif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P2-6
    :precondition 
      (xif)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (zif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P2-5
    :precondition 
      (zif)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (cjf) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P2-4
    :precondition 
      (cjf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (hjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P2-3
    :precondition 
      (hjf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (kjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P2-2
    :precondition 
      (kjf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (mjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-5__OPENED_P2-1
    :precondition 
      (mjf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (m1c)) (q1c) (myd) (zgf) (chf) (hhf) (khf) (mhf) (rhf) (uhf) (xhf) (zhf) (cif) (hif) (kif) (mif) (rif) (uif) (xif) (zif) (cjf) (hjf) (kjf) ))

      ; merge k0-l
      (when  (and (lyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (q1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P6-7
    :precondition 
      (mkf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P6-6
    :precondition 
      (rkf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P6-5
    :precondition 
      (ukf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P6-4
    :precondition 
      (xkf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P6-3
    :precondition 
      (zkf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P6-2
    :precondition 
      (clf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P6-1
    :precondition 
      (hlf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P4-7
    :precondition 
      (klf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P4-6
    :precondition 
      (mlf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P4-5
    :precondition 
      (rlf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P4-4
    :precondition 
      (ulf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P4-3
    :precondition 
      (xlf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P4-2
    :precondition 
      (zlf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P4-1
    :precondition 
      (cmf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P2-7
    :precondition 
      (hmf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (kmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P2-6
    :precondition 
      (kmf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (mmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P2-5
    :precondition 
      (mmf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (rmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P2-4
    :precondition 
      (rmf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (umf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P2-3
    :precondition 
      (umf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (xmf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P2-2
    :precondition 
      (xmf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (zmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-6__OPENED_P2-1
    :precondition 
      (zmf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (r1c)) (t1c) (ryd) (mkf) (rkf) (ukf) (xkf) (zkf) (clf) (hlf) (klf) (mlf) (rlf) (ulf) (xlf) (zlf) (cmf) (hmf) (kmf) (mmf) (rmf) (umf) (xmf) ))

      ; merge k0-l
      (when  (and (qyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (t1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P6-7
    :precondition 
      (znf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P6-6
    :precondition 
      (cof)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P6-5
    :precondition 
      (hof)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P6-4
    :precondition 
      (kof)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P6-3
    :precondition 
      (mof)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P6-2
    :precondition 
      (rof)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P6-1
    :precondition 
      (uof)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P4-7
    :precondition 
      (xof)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P4-6
    :precondition 
      (zof)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P4-5
    :precondition 
      (cpf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P4-4
    :precondition 
      (hpf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P4-3
    :precondition 
      (kpf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P4-2
    :precondition 
      (mpf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P4-1
    :precondition 
      (rpf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P2-7
    :precondition 
      (upf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (xpf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P2-6
    :precondition 
      (xpf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (zpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P2-5
    :precondition 
      (zpf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (cqf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P2-4
    :precondition 
      (cqf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (hqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P2-3
    :precondition 
      (hqf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (kqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P2-2
    :precondition 
      (kqf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (mqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P4-7__OPENED_P2-1
    :precondition 
      (mqf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (u1c)) (v1c) (uyd) (znf) (cof) (hof) (kof) (mof) (rof) (uof) (xof) (zof) (cpf) (hpf) (kpf) (mpf) (rpf) (upf) (xpf) (zpf) (cqf) (hqf) (kqf) ))

      ; merge k0-l
      (when  (and (tyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (v1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P6-7
    :precondition 
      (czh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P6-6
    :precondition 
      (hzh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P6-5
    :precondition 
      (kzh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P6-4
    :precondition 
      (mzh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P6-3
    :precondition 
      (rzh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P6-2
    :precondition 
      (uzh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P6-1
    :precondition 
      (xzh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P4-7
    :precondition 
      (zzh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P4-6
    :precondition 
      (c1h)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P4-5
    :precondition 
      (h1h)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P4-4
    :precondition 
      (k1h)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P4-3
    :precondition 
      (m1h)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P4-2
    :precondition 
      (r1h)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P4-1
    :precondition 
      (u1h)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P2-7
    :precondition 
      (x1h)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (z1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P2-6
    :precondition 
      (z1h)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (c2h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P2-5
    :precondition 
      (c2h)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (h2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P2-4
    :precondition 
      (h2h)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (k2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P2-3
    :precondition 
      (k2h)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (m2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P2-2
    :precondition 
      (m2h)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (r2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-1__OPENED_P2-1
    :precondition 
      (r2h)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (x1c)) (y1c) (xyd) (czh) (hzh) (kzh) (mzh) (rzh) (uzh) (xzh) (zzh) (c1h) (h1h) (k1h) (m1h) (r1h) (u1h) (x1h) (z1h) (c2h) (h2h) (k2h) (m2h) ))

      ; merge k0-l
      (when  (and (vyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (y1c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P6-7
    :precondition 
      (ceh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P6-6
    :precondition 
      (heh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P6-5
    :precondition 
      (keh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P6-4
    :precondition 
      (meh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P6-3
    :precondition 
      (reh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P6-2
    :precondition 
      (ueh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P6-1
    :precondition 
      (xeh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P4-7
    :precondition 
      (zeh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P4-6
    :precondition 
      (cfh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P4-5
    :precondition 
      (hfh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P4-4
    :precondition 
      (kfh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P4-3
    :precondition 
      (mfh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P4-2
    :precondition 
      (rfh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P4-1
    :precondition 
      (ufh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P2-7
    :precondition 
      (xfh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (zfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P2-6
    :precondition 
      (zfh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (cgh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P2-5
    :precondition 
      (cgh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (hgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P2-4
    :precondition 
      (hgh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (kgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P2-3
    :precondition 
      (kgh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (mgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P2-2
    :precondition 
      (mgh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (rgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-2__OPENED_P2-1
    :precondition 
      (rgh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (z1c)) (b2c) (zyd) (ceh) (heh) (keh) (meh) (reh) (ueh) (xeh) (zeh) (cfh) (hfh) (kfh) (mfh) (rfh) (ufh) (xfh) (zfh) (cgh) (hgh) (kgh) (mgh) ))

      ; merge k0-l
      (when  (and (yyd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (b2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P6-7
    :precondition 
      (r5f)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P6-6
    :precondition 
      (u5f)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P6-5
    :precondition 
      (x5f)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P6-4
    :precondition 
      (z5f)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P6-3
    :precondition 
      (c6f)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P6-2
    :precondition 
      (h6f)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P6-1
    :precondition 
      (k6f)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P4-7
    :precondition 
      (m6f)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P4-6
    :precondition 
      (r6f)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P4-5
    :precondition 
      (u6f)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P4-4
    :precondition 
      (x6f)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P4-3
    :precondition 
      (z6f)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P4-2
    :precondition 
      (c7f)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P4-1
    :precondition 
      (h7f)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P2-7
    :precondition 
      (k7f)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (m7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P2-6
    :precondition 
      (m7f)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (r7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P2-5
    :precondition 
      (r7f)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (u7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P2-4
    :precondition 
      (u7f)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (x7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P2-3
    :precondition 
      (x7f)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (z7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P2-2
    :precondition 
      (z7f)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (c8f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-3__OPENED_P2-1
    :precondition 
      (c8f)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (c2c)) (g2c) (czd) (r5f) (u5f) (x5f) (z5f) (c6f) (h6f) (k6f) (m6f) (r6f) (u6f) (x6f) (z6f) (c7f) (h7f) (k7f) (m7f) (r7f) (u7f) (x7f) (z7f) ))

      ; merge k0-l
      (when  (and (bzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (g2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P6-7
    :precondition 
      (cuf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P6-6
    :precondition 
      (huf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P6-5
    :precondition 
      (kuf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P6-4
    :precondition 
      (muf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P6-3
    :precondition 
      (ruf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P6-2
    :precondition 
      (uuf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P6-1
    :precondition 
      (xuf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P4-7
    :precondition 
      (zuf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P4-6
    :precondition 
      (cvf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P4-5
    :precondition 
      (hvf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P4-4
    :precondition 
      (kvf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P4-3
    :precondition 
      (mvf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P4-2
    :precondition 
      (rvf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P4-1
    :precondition 
      (uvf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P2-7
    :precondition 
      (xvf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (zvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P2-6
    :precondition 
      (zvf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (cwf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P2-5
    :precondition 
      (cwf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (hwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P2-4
    :precondition 
      (hwf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (kwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P2-3
    :precondition 
      (kwf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (mwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P2-2
    :precondition 
      (mwf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (rwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-4__OPENED_P2-1
    :precondition 
      (rwf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (h2c)) (j2c) (hzd) (cuf) (huf) (kuf) (muf) (ruf) (uuf) (xuf) (zuf) (cvf) (hvf) (kvf) (mvf) (rvf) (uvf) (xvf) (zvf) (cwf) (hwf) (kwf) (mwf) ))

      ; merge k0-l
      (when  (and (gzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (j2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P6-7
    :precondition 
      (uwf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P6-6
    :precondition 
      (xwf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P6-5
    :precondition 
      (zwf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P6-4
    :precondition 
      (cxf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P6-3
    :precondition 
      (hxf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P6-2
    :precondition 
      (kxf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P6-1
    :precondition 
      (mxf)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P4-7
    :precondition 
      (rxf)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P4-6
    :precondition 
      (uxf)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P4-5
    :precondition 
      (xxf)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P4-4
    :precondition 
      (zxf)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P4-3
    :precondition 
      (cyf)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P4-2
    :precondition 
      (hyf)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P4-1
    :precondition 
      (kyf)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P2-7
    :precondition 
      (myf)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (ryf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P2-6
    :precondition 
      (ryf)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (uyf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P2-5
    :precondition 
      (uyf)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (xyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P2-4
    :precondition 
      (xyf)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (zyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P2-3
    :precondition 
      (zyf)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (czf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P2-2
    :precondition 
      (czf)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (hzf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-5__OPENED_P2-1
    :precondition 
      (hzf)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (k2c)) (l2c) (kzd) (uwf) (xwf) (zwf) (cxf) (hxf) (kxf) (mxf) (rxf) (uxf) (xxf) (zxf) (cyf) (hyf) (kyf) (myf) (ryf) (uyf) (xyf) (zyf) (czf) ))

      ; merge k0-l
      (when  (and (jzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (l2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P6-7
    :precondition 
      (kzf)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P6-6
    :precondition 
      (mzf)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P6-5
    :precondition 
      (rzf)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P6-4
    :precondition 
      (uzf)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P6-3
    :precondition 
      (xzf)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P6-2
    :precondition 
      (zzf)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P6-1
    :precondition 
      (c1f)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P4-7
    :precondition 
      (h1f)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P4-6
    :precondition 
      (k1f)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P4-5
    :precondition 
      (m1f)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P4-4
    :precondition 
      (r1f)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P4-3
    :precondition 
      (u1f)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P4-2
    :precondition 
      (x1f)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P4-1
    :precondition 
      (z1f)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P2-7
    :precondition 
      (c2f)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (h2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P2-6
    :precondition 
      (h2f)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (k2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P2-5
    :precondition 
      (k2f)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (m2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P2-4
    :precondition 
      (m2f)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (r2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P2-3
    :precondition 
      (r2f)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (u2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P2-2
    :precondition 
      (u2f)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (x2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-6__OPENED_P2-1
    :precondition 
      (x2f)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (m2c)) (q2c) (mzd) (kzf) (mzf) (rzf) (uzf) (xzf) (zzf) (c1f) (h1f) (k1f) (m1f) (r1f) (u1f) (x1f) (z1f) (c2f) (h2f) (k2f) (m2f) (r2f) (u2f) ))

      ; merge k0-l
      (when  (and (lzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (q2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P6-7
    :precondition 
      (z2f)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P6-6
    :precondition 
      (c3f)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P6-5
    :precondition 
      (h3f)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P6-4
    :precondition 
      (k3f)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P6-3
    :precondition 
      (m3f)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P6-2
    :precondition 
      (r3f)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P6-1
    :precondition 
      (u3f)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P4-7
    :precondition 
      (x3f)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P4-6
    :precondition 
      (z3f)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P4-5
    :precondition 
      (c4f)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P4-4
    :precondition 
      (h4f)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P4-3
    :precondition 
      (k4f)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P4-2
    :precondition 
      (m4f)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P4-1
    :precondition 
      (r4f)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P2-7
    :precondition 
      (u4f)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (x4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P2-6
    :precondition 
      (x4f)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (z4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P2-5
    :precondition 
      (z4f)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (c5f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P2-4
    :precondition 
      (c5f)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (h5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P2-3
    :precondition 
      (h5f)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (k5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P2-2
    :precondition 
      (k5f)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (m5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P5-7__OPENED_P2-1
    :precondition 
      (m5f)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (r2c)) (t2c) (rzd) (z2f) (c3f) (h3f) (k3f) (m3f) (r3f) (u3f) (x3f) (z3f) (c4f) (h4f) (k4f) (m4f) (r4f) (u4f) (x4f) (z4f) (c5f) (h5f) (k5f) ))

      ; merge k0-l
      (when  (and (qzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (t2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P6-7
    :precondition 
      (r3h)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P6-6
    :precondition 
      (u3h)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P6-5
    :precondition 
      (x3h)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P6-4
    :precondition 
      (z3h)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P6-3
    :precondition 
      (c4h)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P6-2
    :precondition 
      (h4h)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P6-1
    :precondition 
      (k4h)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P4-7
    :precondition 
      (m4h)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P4-6
    :precondition 
      (r4h)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P4-5
    :precondition 
      (u4h)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P4-4
    :precondition 
      (x4h)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P4-3
    :precondition 
      (z4h)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P4-2
    :precondition 
      (c5h)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P4-1
    :precondition 
      (h5h)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P2-7
    :precondition 
      (k5h)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (m5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P2-6
    :precondition 
      (m5h)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (r5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P2-5
    :precondition 
      (r5h)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (u5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P2-4
    :precondition 
      (u5h)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (x5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P2-3
    :precondition 
      (x5h)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (z5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P2-2
    :precondition 
      (z5h)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (c6h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-1__OPENED_P2-1
    :precondition 
      (c6h)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (u2c)) (v2c) (uzd) (r3h) (u3h) (x3h) (z3h) (c4h) (h4h) (k4h) (m4h) (r4h) (u4h) (x4h) (z4h) (c5h) (h5h) (k5h) (m5h) (r5h) (u5h) (x5h) (z5h) ))

      ; merge k0-l
      (when  (and (tzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (v2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P6-7
    :precondition 
      (rhh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P6-6
    :precondition 
      (uhh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P6-5
    :precondition 
      (xhh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P6-4
    :precondition 
      (zhh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P6-3
    :precondition 
      (cih)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P6-2
    :precondition 
      (hih)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P6-1
    :precondition 
      (kih)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P4-7
    :precondition 
      (mih)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P4-6
    :precondition 
      (rih)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P4-5
    :precondition 
      (uih)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P4-4
    :precondition 
      (xih)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P4-3
    :precondition 
      (zih)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P4-2
    :precondition 
      (cjh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P4-1
    :precondition 
      (hjh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P2-7
    :precondition 
      (kjh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (mjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P2-6
    :precondition 
      (mjh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (rjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P2-5
    :precondition 
      (rjh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (ujh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P2-4
    :precondition 
      (ujh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (xjh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P2-3
    :precondition 
      (xjh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (zjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P2-2
    :precondition 
      (zjh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (ckh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-2__OPENED_P2-1
    :precondition 
      (ckh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (x2c)) (y2c) (xzd) (rhh) (uhh) (xhh) (zhh) (cih) (hih) (kih) (mih) (rih) (uih) (xih) (zih) (cjh) (hjh) (kjh) (mjh) (rjh) (ujh) (xjh) (zjh) ))

      ; merge k0-l
      (when  (and (vzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (y2c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P6-7
    :precondition 
      (cmg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P6-6
    :precondition 
      (hmg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P6-5
    :precondition 
      (kmg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P6-4
    :precondition 
      (mmg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P6-3
    :precondition 
      (rmg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P6-2
    :precondition 
      (umg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P6-1
    :precondition 
      (xmg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P4-7
    :precondition 
      (zmg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P4-6
    :precondition 
      (cng)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P4-5
    :precondition 
      (hng)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P4-4
    :precondition 
      (kng)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P4-3
    :precondition 
      (mng)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P4-2
    :precondition 
      (rng)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P4-1
    :precondition 
      (ung)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (xng) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P2-7
    :precondition 
      (xng)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (zng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P2-6
    :precondition 
      (zng)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (cog) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P2-5
    :precondition 
      (cog)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (hog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P2-4
    :precondition 
      (hog)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (kog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P2-3
    :precondition 
      (kog)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (mog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P2-2
    :precondition 
      (mog)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (rog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-3__OPENED_P2-1
    :precondition 
      (rog)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (z2c)) (b3c) (zzd) (cmg) (hmg) (kmg) (mmg) (rmg) (umg) (xmg) (zmg) (cng) (hng) (kng) (mng) (rng) (ung) (xng) (zng) (cog) (hog) (kog) (mog) ))

      ; merge k0-l
      (when  (and (yzd) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (b3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P6-7
    :precondition 
      (c9f)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P6-6
    :precondition 
      (h9f)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P6-5
    :precondition 
      (k9f)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P6-4
    :precondition 
      (m9f)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P6-3
    :precondition 
      (r9f)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P6-2
    :precondition 
      (u9f)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P6-1
    :precondition 
      (x9f)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P4-7
    :precondition 
      (z9f)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P4-6
    :precondition 
      (c0f)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P4-5
    :precondition 
      (h0f)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P4-4
    :precondition 
      (k0f)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P4-3
    :precondition 
      (m0f)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P4-2
    :precondition 
      (r0f)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P4-1
    :precondition 
      (u0f)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (x0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P2-7
    :precondition 
      (x0f)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (z0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P2-6
    :precondition 
      (z0f)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (cag) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P2-5
    :precondition 
      (cag)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (hag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P2-4
    :precondition 
      (hag)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (kag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P2-3
    :precondition 
      (kag)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (mag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P2-2
    :precondition 
      (mag)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (rag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-4__OPENED_P2-1
    :precondition 
      (rag)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (c3c)) (g3c) (c1d) (c9f) (h9f) (k9f) (m9f) (r9f) (u9f) (x9f) (z9f) (c0f) (h0f) (k0f) (m0f) (r0f) (u0f) (x0f) (z0f) (cag) (hag) (kag) (mag) ))

      ; merge k0-l
      (when  (and (b1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (g3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P6-7
    :precondition 
      (rbg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P6-6
    :precondition 
      (ubg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P6-5
    :precondition 
      (xbg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P6-4
    :precondition 
      (zbg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P6-3
    :precondition 
      (ccg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P6-2
    :precondition 
      (hcg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P6-1
    :precondition 
      (kcg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P4-7
    :precondition 
      (mcg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P4-6
    :precondition 
      (rcg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P4-5
    :precondition 
      (ucg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P4-4
    :precondition 
      (xcg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P4-3
    :precondition 
      (zcg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P4-2
    :precondition 
      (cdg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P4-1
    :precondition 
      (hdg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P2-7
    :precondition 
      (kdg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (mdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P2-6
    :precondition 
      (mdg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (rdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P2-5
    :precondition 
      (rdg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (udg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P2-4
    :precondition 
      (udg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (xdg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P2-3
    :precondition 
      (xdg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (zdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P2-2
    :precondition 
      (zdg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (ceg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-5__OPENED_P2-1
    :precondition 
      (ceg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (h3c)) (j3c) (h1d) (rbg) (ubg) (xbg) (zbg) (ccg) (hcg) (kcg) (mcg) (rcg) (ucg) (xcg) (zcg) (cdg) (hdg) (kdg) (mdg) (rdg) (udg) (xdg) (zdg) ))

      ; merge k0-l
      (when  (and (g1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (j3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P6-7
    :precondition 
      (cfg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P6-6
    :precondition 
      (hfg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P6-5
    :precondition 
      (kfg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P6-4
    :precondition 
      (mfg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P6-3
    :precondition 
      (rfg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P6-2
    :precondition 
      (ufg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P6-1
    :precondition 
      (xfg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P4-7
    :precondition 
      (zfg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P4-6
    :precondition 
      (cgg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P4-5
    :precondition 
      (hgg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P4-4
    :precondition 
      (kgg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P4-3
    :precondition 
      (mgg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P4-2
    :precondition 
      (rgg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P4-1
    :precondition 
      (ugg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P2-7
    :precondition 
      (xgg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (zgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P2-6
    :precondition 
      (zgg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (chg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P2-5
    :precondition 
      (chg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (hhg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P2-4
    :precondition 
      (hhg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (khg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P2-3
    :precondition 
      (khg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (mhg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P2-2
    :precondition 
      (mhg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (rhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-6__OPENED_P2-1
    :precondition 
      (rhg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (k3c)) (l3c) (k1d) (cfg) (hfg) (kfg) (mfg) (rfg) (ufg) (xfg) (zfg) (cgg) (hgg) (kgg) (mgg) (rgg) (ugg) (xgg) (zgg) (chg) (hhg) (khg) (mhg) ))

      ; merge k0-l
      (when  (and (j1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (l3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P6-7
    :precondition 
      (rig)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P6-6
    :precondition 
      (uig)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P6-5
    :precondition 
      (xig)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P6-4
    :precondition 
      (zig)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P6-3
    :precondition 
      (cjg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P6-2
    :precondition 
      (hjg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P6-1
    :precondition 
      (kjg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P4-7
    :precondition 
      (mjg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P4-6
    :precondition 
      (rjg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P4-5
    :precondition 
      (ujg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P4-4
    :precondition 
      (xjg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P4-3
    :precondition 
      (zjg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P4-2
    :precondition 
      (ckg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P4-1
    :precondition 
      (hkg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P2-7
    :precondition 
      (kkg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (mkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P2-6
    :precondition 
      (mkg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (rkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P2-5
    :precondition 
      (rkg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (ukg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P2-4
    :precondition 
      (ukg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (xkg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P2-3
    :precondition 
      (xkg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (zkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P2-2
    :precondition 
      (zkg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (clg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P6-7__OPENED_P2-1
    :precondition 
      (clg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (m3c)) (q3c) (m1d) (rig) (uig) (xig) (zig) (cjg) (hjg) (kjg) (mjg) (rjg) (ujg) (xjg) (zjg) (ckg) (hkg) (kkg) (mkg) (rkg) (ukg) (xkg) (zkg) ))

      ; merge k0-l
      (when  (and (l1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (q3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P6-7
    :precondition 
      (h6h)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P6-6
    :precondition 
      (k6h)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P6-5
    :precondition 
      (m6h)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P6-4
    :precondition 
      (r6h)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P6-3
    :precondition 
      (u6h)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P6-2
    :precondition 
      (x6h)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P6-1
    :precondition 
      (z6h)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P4-7
    :precondition 
      (c7h)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P4-6
    :precondition 
      (h7h)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P4-5
    :precondition 
      (k7h)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P4-4
    :precondition 
      (m7h)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P4-3
    :precondition 
      (r7h)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P4-2
    :precondition 
      (u7h)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P4-1
    :precondition 
      (x7h)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P2-7
    :precondition 
      (z7h)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (c8h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P2-6
    :precondition 
      (c8h)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (h8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P2-5
    :precondition 
      (h8h)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (k8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P2-4
    :precondition 
      (k8h)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (m8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P2-3
    :precondition 
      (m8h)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (r8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P2-2
    :precondition 
      (r8h)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (u8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-1__OPENED_P2-1
    :precondition 
      (u8h)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (r3c)) (t3c) (r1d) (h6h) (k6h) (m6h) (r6h) (u6h) (x6h) (z6h) (c7h) (h7h) (k7h) (m7h) (r7h) (u7h) (x7h) (z7h) (c8h) (h8h) (k8h) (m8h) (r8h) ))

      ; merge k0-l
      (when  (and (q1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (t3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P6-7
    :precondition 
      (hkh)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P6-6
    :precondition 
      (kkh)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P6-5
    :precondition 
      (mkh)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P6-4
    :precondition 
      (rkh)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P6-3
    :precondition 
      (ukh)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P6-2
    :precondition 
      (xkh)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P6-1
    :precondition 
      (zkh)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P4-7
    :precondition 
      (clh)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P4-6
    :precondition 
      (hlh)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P4-5
    :precondition 
      (klh)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P4-4
    :precondition 
      (mlh)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P4-3
    :precondition 
      (rlh)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P4-2
    :precondition 
      (ulh)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P4-1
    :precondition 
      (xlh)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P2-7
    :precondition 
      (zlh)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (cmh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P2-6
    :precondition 
      (cmh)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (hmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P2-5
    :precondition 
      (hmh)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (kmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P2-4
    :precondition 
      (kmh)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (mmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P2-3
    :precondition 
      (mmh)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (rmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P2-2
    :precondition 
      (rmh)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (umh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-2__OPENED_P2-1
    :precondition 
      (umh)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (u3c)) (v3c) (u1d) (hkh) (kkh) (mkh) (rkh) (ukh) (xkh) (zkh) (clh) (hlh) (klh) (mlh) (rlh) (ulh) (xlh) (zlh) (cmh) (hmh) (kmh) (mmh) (rmh) ))

      ; merge k0-l
      (when  (and (t1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (v3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P6-7
    :precondition 
      (hzg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P6-6
    :precondition 
      (kzg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P6-5
    :precondition 
      (mzg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P6-4
    :precondition 
      (rzg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P6-3
    :precondition 
      (uzg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P6-2
    :precondition 
      (xzg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P6-1
    :precondition 
      (zzg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P4-7
    :precondition 
      (c1g)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P4-6
    :precondition 
      (h1g)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P4-5
    :precondition 
      (k1g)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P4-4
    :precondition 
      (m1g)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P4-3
    :precondition 
      (r1g)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P4-2
    :precondition 
      (u1g)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P4-1
    :precondition 
      (x1g)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P2-7
    :precondition 
      (z1g)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (c2g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P2-6
    :precondition 
      (c2g)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (h2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P2-5
    :precondition 
      (h2g)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (k2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P2-4
    :precondition 
      (k2g)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (m2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P2-3
    :precondition 
      (m2g)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (r2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P2-2
    :precondition 
      (r2g)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (u2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-3__OPENED_P2-1
    :precondition 
      (u2g)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (x3c)) (y3c) (x1d) (hzg) (kzg) (mzg) (rzg) (uzg) (xzg) (zzg) (c1g) (h1g) (k1g) (m1g) (r1g) (u1g) (x1g) (z1g) (c2g) (h2g) (k2g) (m2g) (r2g) ))

      ; merge k0-l
      (when  (and (v1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (y3c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P6-7
    :precondition 
      (uog)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P6-6
    :precondition 
      (xog)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P6-5
    :precondition 
      (zog)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P6-4
    :precondition 
      (cpg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P6-3
    :precondition 
      (hpg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P6-2
    :precondition 
      (kpg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P6-1
    :precondition 
      (mpg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P4-7
    :precondition 
      (rpg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P4-6
    :precondition 
      (upg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P4-5
    :precondition 
      (xpg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P4-4
    :precondition 
      (zpg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P4-3
    :precondition 
      (cqg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P4-2
    :precondition 
      (hqg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P4-1
    :precondition 
      (kqg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P2-7
    :precondition 
      (mqg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (rqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P2-6
    :precondition 
      (rqg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (uqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P2-5
    :precondition 
      (uqg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (xqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P2-4
    :precondition 
      (xqg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (zqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P2-3
    :precondition 
      (zqg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (csg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P2-2
    :precondition 
      (csg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (hsg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-4__OPENED_P2-1
    :precondition 
      (hsg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (z3c)) (b4c) (z1d) (uog) (xog) (zog) (cpg) (hpg) (kpg) (mpg) (rpg) (upg) (xpg) (zpg) (cqg) (hqg) (kqg) (mqg) (rqg) (uqg) (xqg) (zqg) (csg) ))

      ; merge k0-l
      (when  (and (y1d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (b4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P6-7
    :precondition 
      (ksg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P6-6
    :precondition 
      (msg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P6-5
    :precondition 
      (rsg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P6-4
    :precondition 
      (usg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P6-3
    :precondition 
      (xsg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P6-2
    :precondition 
      (zsg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P6-1
    :precondition 
      (crg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P4-7
    :precondition 
      (hrg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P4-6
    :precondition 
      (krg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P4-5
    :precondition 
      (mrg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P4-4
    :precondition 
      (rrg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P4-3
    :precondition 
      (urg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P4-2
    :precondition 
      (xrg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P4-1
    :precondition 
      (zrg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P2-7
    :precondition 
      (ctg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (htg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P2-6
    :precondition 
      (htg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (ktg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P2-5
    :precondition 
      (ktg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (mtg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P2-4
    :precondition 
      (mtg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (rtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P2-3
    :precondition 
      (rtg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (utg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P2-2
    :precondition 
      (utg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (xtg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-5__OPENED_P2-1
    :precondition 
      (xtg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (c4c)) (g4c) (c2d) (ksg) (msg) (rsg) (usg) (xsg) (zsg) (crg) (hrg) (krg) (mrg) (rrg) (urg) (xrg) (zrg) (ctg) (htg) (ktg) (mtg) (rtg) (utg) ))

      ; merge k0-l
      (when  (and (b2d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (g4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P6-7
    :precondition 
      (ztg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P6-6
    :precondition 
      (cug)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P6-5
    :precondition 
      (hug)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P6-4
    :precondition 
      (kug)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P6-3
    :precondition 
      (mug)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P6-2
    :precondition 
      (rug)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P6-1
    :precondition 
      (uug)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P4-7
    :precondition 
      (xug)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P4-6
    :precondition 
      (zug)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P4-5
    :precondition 
      (cvg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P4-4
    :precondition 
      (hvg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P4-3
    :precondition 
      (kvg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P4-2
    :precondition 
      (mvg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P4-1
    :precondition 
      (rvg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P2-7
    :precondition 
      (uvg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (xvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P2-6
    :precondition 
      (xvg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (zvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P2-5
    :precondition 
      (zvg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (cwg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P2-4
    :precondition 
      (cwg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (hwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P2-3
    :precondition 
      (hwg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (kwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P2-2
    :precondition 
      (kwg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (mwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-6__OPENED_P2-1
    :precondition 
      (mwg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (h4c)) (j4c) (h2d) (ztg) (cug) (hug) (kug) (mug) (rug) (uug) (xug) (zug) (cvg) (hvg) (kvg) (mvg) (rvg) (uvg) (xvg) (zvg) (cwg) (hwg) (kwg) ))

      ; merge k0-l
      (when  (and (g2d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (j4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P6-7
    :precondition 
      (rwg)
    :effect  (and 
      ; merge ktag
      (when  (and (c6c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (b6c) )

      ; merge ktag
      (when (g8b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P6-6
    :precondition 
      (uwg)
    :effect  (and 
      ; merge ktag
      (when  (and (h6c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (g6c) )

      ; merge ktag
      (when (j8b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P6-5
    :precondition 
      (xwg)
    :effect  (and 
      ; merge ktag
      (when  (and (k6c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (j6c) )

      ; merge ktag
      (when (l8b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P6-4
    :precondition 
      (zwg)
    :effect  (and 
      ; merge ktag
      (when  (and (m6c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (l6c) )

      ; merge ktag
      (when (q8b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P6-3
    :precondition 
      (cxg)
    :effect  (and 
      ; merge ktag
      (when  (and (r6c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (q6c) )

      ; merge ktag
      (when (t8b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P6-2
    :precondition 
      (hxg)
    :effect  (and 
      ; merge ktag
      (when  (and (u6c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (t6c) )

      ; merge ktag
      (when (v8b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P6-1
    :precondition 
      (kxg)
    :effect  (and 
      ; merge ktag
      (when  (and (x6c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (v6c) )

      ; merge ktag
      (when (y8b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P4-7
    :precondition 
      (mxg)
    :effect  (and 
      ; merge ktag
      (when  (and (x7c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (v7c) )

      ; merge ktag
      (when (y9b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P4-6
    :precondition 
      (rxg)
    :effect  (and 
      ; merge ktag
      (when  (and (z7c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (y7c) )

      ; merge ktag
      (when (b0b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P4-5
    :precondition 
      (uxg)
    :effect  (and 
      ; merge ktag
      (when  (and (c8c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (b8c) )

      ; merge ktag
      (when (g0b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P4-4
    :precondition 
      (xxg)
    :effect  (and 
      ; merge ktag
      (when  (and (h8c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (g8c) )

      ; merge ktag
      (when (j0b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P4-3
    :precondition 
      (zxg)
    :effect  (and 
      ; merge ktag
      (when  (and (k8c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (j8c) )

      ; merge ktag
      (when (l0b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P4-2
    :precondition 
      (cyg)
    :effect  (and 
      ; merge ktag
      (when  (and (m8c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (l8c) )

      ; merge ktag
      (when (q0b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P4-1
    :precondition 
      (hyg)
    :effect  (and 
      ; merge ktag
      (when  (and (r8c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (q8c) )

      ; merge ktag
      (when (t0b) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P2-7
    :precondition 
      (kyg)
    :effect  (and 
      ; merge ktag
      (when  (and (r9c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (myg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (q9c) )

      ; merge ktag
      (when (tac) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P2-6
    :precondition 
      (myg)
    :effect  (and 
      ; merge ktag
      (when  (and (u9c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (ryg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (t9c) )

      ; merge ktag
      (when (vac) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P2-5
    :precondition 
      (ryg)
    :effect  (and 
      ; merge ktag
      (when  (and (x9c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (uyg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (v9c) )

      ; merge ktag
      (when (yac) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P2-4
    :precondition 
      (uyg)
    :effect  (and 
      ; merge ktag
      (when  (and (z9c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (xyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (y9c) )

      ; merge ktag
      (when (bbc) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P2-3
    :precondition 
      (xyg)
    :effect  (and 
      ; merge ktag
      (when  (and (c0c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (zyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (b0c) )

      ; merge ktag
      (when (gbc) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P2-2
    :precondition 
      (zyg)
    :effect  (and 
      ; merge ktag
      (when  (and (h0c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (czg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (g0c) )

      ; merge ktag
      (when (jbc) 
        (l4c) )

    )
  )
  (:action closure_merge_imply_AT_P7-7__OPENED_P2-1
    :precondition 
      (czg)
    :effect  (and 
      ; merge ktag
      (when  (and (k0c) (m2d) )
         (and (not (k4c)) (l4c) (k2d) (rwg) (uwg) (xwg) (zwg) (cxg) (hxg) (kxg) (mxg) (rxg) (uxg) (xxg) (zxg) (cyg) (hyg) (kyg) (myg) (ryg) (uyg) (xyg) (zyg) ))

      ; merge k0-l
      (when  (and (j2d) (m2d) )
        (j0c) )

      ; merge ktag
      (when (lbc) 
        (l4c) )

    )
  )
  (:action closure_check_contradiction_0_k0
    :effect  (and 
      ; 
      (when  (and (y4c) (z4c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (b5c) (c5c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (g5c) (h5c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (j5c) (k5c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (l5c) (m5c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (q5c) (r5c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (t5c) (u5c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (v5c) (x5c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (y5c) (z5c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (b6c) (c6c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (g6c) (h6c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (j6c) (k6c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (l6c) (m6c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (q6c) (r6c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (t6c) (u6c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (v6c) (x6c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (y6c) (z6c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (b7c) (c7c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (g7c) (h7c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (j7c) (k7c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (l7c) (m7c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (q7c) (r7c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (t7c) (u7c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (v7c) (x7c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (y7c) (z7c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (b8c) (c8c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (g8c) (h8c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (j8c) (k8c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (l8c) (m8c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (q8c) (r8c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (t8c) (u8c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (v8c) (x8c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (y8c) (z8c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (b9c) (c9c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (g9c) (h9c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (j9c) (k9c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (l9c) (m9c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (q9c) (r9c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (t9c) (u9c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (v9c) (x9c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (y9c) (z9c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (b0c) (c0c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (g0c) (h0c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (j0c) (k0c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (l0c) (m0c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (q0c) (r0c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (t0c) (u0c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (v0c) (x0c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (y0c) (z0c) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bad) (cad) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gad) (had) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jad) (kad) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lad) (mad) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qad) (rad) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tad) (uad) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vad) (xad) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yad) (zad) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bbd) (cbd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gbd) (hbd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jbd) (kbd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lbd) (mbd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qbd) (rbd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tbd) (ubd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vbd) (xbd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ybd) (zbd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bcd) (ccd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gcd) (hcd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jcd) (kcd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lcd) (mcd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qcd) (rcd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tcd) (ucd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vcd) (xcd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ycd) (zcd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bdd) (cdd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gdd) (hdd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jdd) (kdd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ldd) (mdd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qdd) (rdd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tdd) (udd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vdd) (xdd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ydd) (zdd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bed) (ced) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ged) (hed) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jed) (ked) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (led) (med) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qed) (red) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ted) (ued) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ved) (xed) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yed) (zed) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bfd) (cfd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gfd) (hfd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jfd) (kfd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lfd) (mfd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qfd) (rfd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tfd) (ufd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vfd) (xfd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yfd) (zfd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bgd) (cgd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ggd) (hgd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jgd) (kgd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lgd) (mgd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qgd) (rgd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tgd) (ugd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vgd) (xgd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ygd) (zgd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bhd) (chd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ghd) (hhd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jhd) (khd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lhd) (mhd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qhd) (rhd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (thd) (uhd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vhd) (xhd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yhd) (zhd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bid) (cid) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gid) (hid) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jid) (kid) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lid) (mid) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qid) (rid) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tid) (uid) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vid) (xid) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yid) (zid) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bjd) (cjd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gjd) (hjd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jjd) (kjd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ljd) (mjd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qjd) (rjd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tjd) (ujd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vjd) (xjd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yjd) (zjd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bkd) (ckd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gkd) (hkd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jkd) (kkd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lkd) (mkd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qkd) (rkd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tkd) (ukd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vkd) (xkd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ykd) (zkd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bld) (cld) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gld) (hld) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jld) (kld) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lld) (mld) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qld) (rld) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tld) (uld) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vld) (xld) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yld) (zld) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bmd) (cmd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gmd) (hmd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jmd) (kmd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lmd) (mmd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qmd) (rmd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tmd) (umd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vmd) (xmd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ymd) (zmd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bnd) (cnd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gnd) (hnd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jnd) (knd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lnd) (mnd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qnd) (rnd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tnd) (und) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vnd) (xnd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ynd) (znd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bod) (cod) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (god) (hod) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jod) (kod) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lod) (mod) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qod) (rod) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tod) (uod) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vod) (xod) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yod) (zod) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bpd) (cpd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gpd) (hpd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jpd) (kpd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lpd) (mpd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qpd) (rpd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tpd) (upd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vpd) (xpd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ypd) (zpd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bqd) (cqd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gqd) (hqd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jqd) (kqd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lqd) (mqd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qqd) (rqd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tqd) (uqd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vqd) (xqd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yqd) (zqd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bsd) (csd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gsd) (hsd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jsd) (ksd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lsd) (msd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qsd) (rsd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tsd) (usd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vsd) (xsd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ysd) (zsd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (brd) (crd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (grd) (hrd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jrd) (krd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lrd) (mrd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qrd) (rrd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (trd) (urd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vrd) (xrd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yrd) (zrd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (btd) (ctd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gtd) (htd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jtd) (ktd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ltd) (mtd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qtd) (rtd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ttd) (utd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vtd) (xtd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (ytd) (ztd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bud) (cud) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gud) (hud) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (jud) (kud) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (lud) (mud) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (qud) (rud) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (tud) (uud) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (vud) (xud) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (yud) (zud) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (bvd) (cvd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (gvd) (hvd) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (m2) (q2) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (r2) (t2) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (u2) (v2) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (x2) (y2) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (z2) (b3) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (c3) (g3) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (h3) (j3) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (k3) (l3) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (m3) (q3) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (r3) (t3) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (u3) (v3) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (x3) (y3) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (z3) (b4) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (c4) (g4) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (h4) (j4) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (k4) (l4) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (m4) (q4) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (r4) (t4) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (u4) (v4) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (x4) (y4) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (z4) (b5) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (c5) (g5) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (h5) (j5) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (k5) (l5) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (m5) (q5) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (r5) (t5) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (u5) (v5) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (x5) (y5) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (z5) (b6) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (c6) (g6) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (h6) (j6) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (k6) (l6) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (m6) (q6) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (r6) (t6) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (u6) (v6) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (x6) (y6) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (z6) (b7) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (c7) (g7) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (h7) (j7) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (k7) (l7) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (m7) (q7) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (r7) (t7) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (u7) (v7) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (x7) (y7) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (z7) (b8) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (c8) (g8) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (h8) (j8) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (k8) (l8) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (m8) (q8) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (l2d) (m2d) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (q2d) (r2d) )
        (T0_FAIL_k0) )

      ; 
      (when  (and (t2d) (u2d) )
        (T0_FAIL_k0) )

    )
  )
  (:action closure_mergep__0_k
    :precondition 
      (m2d)
    :effect  (and 
      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (h0c) 
         (and (not (lbc)) (not (gbc)) (not (bbc)) (not (yac)) (not (vac)) (not (tac)) (rac) (uac) (xac) (zac) (cbc) (kbc) (q9c) (t9c) (v9c) (y9c) (b0c) (j0c) (gde) (hde) (jde) (kde) (lde) (mde) (qde) (jje) (kje) (lje) (mje) (qje) (rje) (tje) (lpe) (mpe) (qpe) (rpe) (tpe) (upe) (vpe) (yre) (zre) (bte) (cte) (gte) (hte) (jte) (lwe) (mwe) (qwe) (rwe) (twe) (uwe) (vwe) (yph) (zph) (bqh) (cqh) (gqh) (hqh) (jqh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (k0c) 
         (and (not (jbc)) (not (gbc)) (not (bbc)) (not (yac)) (not (vac)) (not (tac)) (rac) (uac) (xac) (zac) (cbc) (hbc) (q9c) (t9c) (v9c) (y9c) (b0c) (g0c) (gde) (hde) (jde) (kde) (lde) (mde) (qde) (jje) (kje) (lje) (mje) (qje) (rje) (tje) (lpe) (mpe) (qpe) (rpe) (tpe) (upe) (vpe) (yre) (zre) (bte) (cte) (gte) (hte) (jte) (lwe) (mwe) (qwe) (rwe) (twe) (uwe) (vwe) (y5g) (z5g) (b6g) (c6g) (g6g) (h6g) (j6g) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (c0c) 
         (and (not (lbc)) (not (jbc)) (not (bbc)) (not (yac)) (not (vac)) (not (tac)) (rac) (uac) (xac) (zac) (hbc) (kbc) (q9c) (t9c) (v9c) (y9c) (g0c) (j0c) (gde) (hde) (jde) (kde) (lde) (mde) (qde) (jje) (kje) (lje) (mje) (qje) (rje) (tje) (lpe) (mpe) (qpe) (rpe) (tpe) (upe) (vpe) (yre) (zre) (bte) (cte) (gte) (hte) (jte) (y5g) (z5g) (b6g) (c6g) (g6g) (h6g) (j6g) (yph) (zph) (bqh) (cqh) (gqh) (hqh) (jqh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (z9c) 
         (and (not (lbc)) (not (jbc)) (not (gbc)) (not (yac)) (not (vac)) (not (tac)) (rac) (uac) (xac) (cbc) (hbc) (kbc) (q9c) (t9c) (v9c) (b0c) (g0c) (j0c) (jje) (kje) (lje) (mje) (qje) (rje) (tje) (lpe) (mpe) (qpe) (rpe) (tpe) (upe) (vpe) (yre) (zre) (bte) (cte) (gte) (hte) (jte) (lwe) (mwe) (qwe) (rwe) (twe) (uwe) (vwe) (y5g) (z5g) (b6g) (c6g) (g6g) (h6g) (j6g) (yph) (zph) (bqh) (cqh) (gqh) (hqh) (jqh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (x9c) 
         (and (not (lbc)) (not (jbc)) (not (gbc)) (not (bbc)) (not (vac)) (not (tac)) (rac) (uac) (zac) (cbc) (hbc) (kbc) (q9c) (t9c) (y9c) (b0c) (g0c) (j0c) (gde) (hde) (jde) (kde) (lde) (mde) (qde) (lpe) (mpe) (qpe) (rpe) (tpe) (upe) (vpe) (yre) (zre) (bte) (cte) (gte) (hte) (jte) (lwe) (mwe) (qwe) (rwe) (twe) (uwe) (vwe) (y5g) (z5g) (b6g) (c6g) (g6g) (h6g) (j6g) (yph) (zph) (bqh) (cqh) (gqh) (hqh) (jqh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (u9c) 
         (and (not (lbc)) (not (jbc)) (not (gbc)) (not (bbc)) (not (yac)) (not (tac)) (rac) (xac) (zac) (cbc) (hbc) (kbc) (q9c) (v9c) (y9c) (b0c) (g0c) (j0c) (gde) (hde) (jde) (kde) (lde) (mde) (qde) (jje) (kje) (lje) (mje) (qje) (rje) (tje) (yre) (zre) (bte) (cte) (gte) (hte) (jte) (lwe) (mwe) (qwe) (rwe) (twe) (uwe) (vwe) (y5g) (z5g) (b6g) (c6g) (g6g) (h6g) (j6g) (yph) (zph) (bqh) (cqh) (gqh) (hqh) (jqh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (r9c) 
         (and (not (lbc)) (not (jbc)) (not (gbc)) (not (bbc)) (not (yac)) (not (vac)) (uac) (xac) (zac) (cbc) (hbc) (kbc) (t9c) (v9c) (y9c) (b0c) (g0c) (j0c) (gde) (hde) (jde) (kde) (lde) (mde) (qde) (jje) (kje) (lje) (mje) (qje) (rje) (tje) (lpe) (mpe) (qpe) (rpe) (tpe) (upe) (vpe) (lwe) (mwe) (qwe) (rwe) (twe) (uwe) (vwe) (y5g) (z5g) (b6g) (c6g) (g6g) (h6g) (j6g) (yph) (zph) (bqh) (cqh) (gqh) (hqh) (jqh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (m8c) 
         (and (not (t0b)) (not (l0b)) (not (j0b)) (not (g0b)) (not (b0b)) (not (y9b)) (x9b) (z9b) (c0b) (h0b) (k0b) (r0b) (v7c) (y7c) (b8c) (g8c) (j8c) (q8c) (bdf) (cdf) (gdf) (hdf) (jdf) (kdf) (ldf) (qgf) (rgf) (tgf) (ugf) (vgf) (xgf) (ygf) (bkf) (ckf) (gkf) (hkf) (jkf) (kkf) (lkf) (qnf) (rnf) (tnf) (unf) (vnf) (xnf) (ynf) (bsf) (csf) (gsf) (hsf) (jsf) (ksf) (lsf) (bwh) (cwh) (gwh) (hwh) (jwh) (kwh) (lwh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (r8c) 
         (and (not (q0b)) (not (l0b)) (not (j0b)) (not (g0b)) (not (b0b)) (not (y9b)) (x9b) (z9b) (c0b) (h0b) (k0b) (m0b) (v7c) (y7c) (b8c) (g8c) (j8c) (l8c) (bdf) (cdf) (gdf) (hdf) (jdf) (kdf) (ldf) (qgf) (rgf) (tgf) (ugf) (vgf) (xgf) (ygf) (bkf) (ckf) (gkf) (hkf) (jkf) (kkf) (lkf) (qnf) (rnf) (tnf) (unf) (vnf) (xnf) (ynf) (bsf) (csf) (gsf) (hsf) (jsf) (ksf) (lsf) (bbh) (cbh) (gbh) (hbh) (jbh) (kbh) (lbh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (k8c) 
         (and (not (t0b)) (not (q0b)) (not (j0b)) (not (g0b)) (not (b0b)) (not (y9b)) (x9b) (z9b) (c0b) (h0b) (m0b) (r0b) (v7c) (y7c) (b8c) (g8c) (l8c) (q8c) (bdf) (cdf) (gdf) (hdf) (jdf) (kdf) (ldf) (qgf) (rgf) (tgf) (ugf) (vgf) (xgf) (ygf) (bkf) (ckf) (gkf) (hkf) (jkf) (kkf) (lkf) (qnf) (rnf) (tnf) (unf) (vnf) (xnf) (ynf) (bbh) (cbh) (gbh) (hbh) (jbh) (kbh) (lbh) (bwh) (cwh) (gwh) (hwh) (jwh) (kwh) (lwh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (h8c) 
         (and (not (t0b)) (not (q0b)) (not (l0b)) (not (g0b)) (not (b0b)) (not (y9b)) (x9b) (z9b) (c0b) (k0b) (m0b) (r0b) (v7c) (y7c) (b8c) (j8c) (l8c) (q8c) (qgf) (rgf) (tgf) (ugf) (vgf) (xgf) (ygf) (bkf) (ckf) (gkf) (hkf) (jkf) (kkf) (lkf) (qnf) (rnf) (tnf) (unf) (vnf) (xnf) (ynf) (bsf) (csf) (gsf) (hsf) (jsf) (ksf) (lsf) (bbh) (cbh) (gbh) (hbh) (jbh) (kbh) (lbh) (bwh) (cwh) (gwh) (hwh) (jwh) (kwh) (lwh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (c8c) 
         (and (not (t0b)) (not (q0b)) (not (l0b)) (not (j0b)) (not (b0b)) (not (y9b)) (x9b) (z9b) (h0b) (k0b) (m0b) (r0b) (v7c) (y7c) (g8c) (j8c) (l8c) (q8c) (bdf) (cdf) (gdf) (hdf) (jdf) (kdf) (ldf) (bkf) (ckf) (gkf) (hkf) (jkf) (kkf) (lkf) (qnf) (rnf) (tnf) (unf) (vnf) (xnf) (ynf) (bsf) (csf) (gsf) (hsf) (jsf) (ksf) (lsf) (bbh) (cbh) (gbh) (hbh) (jbh) (kbh) (lbh) (bwh) (cwh) (gwh) (hwh) (jwh) (kwh) (lwh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (z7c) 
         (and (not (t0b)) (not (q0b)) (not (l0b)) (not (j0b)) (not (g0b)) (not (y9b)) (x9b) (c0b) (h0b) (k0b) (m0b) (r0b) (v7c) (b8c) (g8c) (j8c) (l8c) (q8c) (bdf) (cdf) (gdf) (hdf) (jdf) (kdf) (ldf) (qgf) (rgf) (tgf) (ugf) (vgf) (xgf) (ygf) (qnf) (rnf) (tnf) (unf) (vnf) (xnf) (ynf) (bsf) (csf) (gsf) (hsf) (jsf) (ksf) (lsf) (bbh) (cbh) (gbh) (hbh) (jbh) (kbh) (lbh) (bwh) (cwh) (gwh) (hwh) (jwh) (kwh) (lwh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (x7c) 
         (and (not (t0b)) (not (q0b)) (not (l0b)) (not (j0b)) (not (g0b)) (not (b0b)) (z9b) (c0b) (h0b) (k0b) (m0b) (r0b) (y7c) (b8c) (g8c) (j8c) (l8c) (q8c) (bdf) (cdf) (gdf) (hdf) (jdf) (kdf) (ldf) (qgf) (rgf) (tgf) (ugf) (vgf) (xgf) (ygf) (bkf) (ckf) (gkf) (hkf) (jkf) (kkf) (lkf) (bsf) (csf) (gsf) (hsf) (jsf) (ksf) (lsf) (bbh) (cbh) (gbh) (hbh) (jbh) (kbh) (lbh) (bwh) (cwh) (gwh) (hwh) (jwh) (kwh) (lwh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (u6c) 
         (and (not (y8b)) (not (t8b)) (not (q8b)) (not (l8b)) (not (j8b)) (not (g8b)) (c8b) (h8b) (k8b) (m8b) (r8b) (x8b) (b6c) (g6c) (j6c) (l6c) (q6c) (v6c) (t8f) (u8f) (v8f) (x8f) (y8f) (z8f) (b9f) (gbg) (hbg) (jbg) (kbg) (lbg) (mbg) (qbg) (teg) (ueg) (veg) (xeg) (yeg) (zeg) (bfg) (gig) (hig) (jig) (kig) (lig) (mig) (qig) (tlg) (ulg) (vlg) (xlg) (ylg) (zlg) (bmg) (g3h) (h3h) (j3h) (k3h) (l3h) (m3h) (q3h) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (x6c) 
         (and (not (v8b)) (not (t8b)) (not (q8b)) (not (l8b)) (not (j8b)) (not (g8b)) (c8b) (h8b) (k8b) (m8b) (r8b) (u8b) (b6c) (g6c) (j6c) (l6c) (q6c) (t6c) (t8f) (u8f) (v8f) (x8f) (y8f) (z8f) (b9f) (gbg) (hbg) (jbg) (kbg) (lbg) (mbg) (qbg) (teg) (ueg) (veg) (xeg) (yeg) (zeg) (bfg) (gig) (hig) (jig) (kig) (lig) (mig) (qig) (tlg) (ulg) (vlg) (xlg) (ylg) (zlg) (bmg) (ghh) (hhh) (jhh) (khh) (lhh) (mhh) (qhh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (r6c) 
         (and (not (y8b)) (not (v8b)) (not (q8b)) (not (l8b)) (not (j8b)) (not (g8b)) (c8b) (h8b) (k8b) (m8b) (u8b) (x8b) (b6c) (g6c) (j6c) (l6c) (t6c) (v6c) (t8f) (u8f) (v8f) (x8f) (y8f) (z8f) (b9f) (gbg) (hbg) (jbg) (kbg) (lbg) (mbg) (qbg) (teg) (ueg) (veg) (xeg) (yeg) (zeg) (bfg) (gig) (hig) (jig) (kig) (lig) (mig) (qig) (ghh) (hhh) (jhh) (khh) (lhh) (mhh) (qhh) (g3h) (h3h) (j3h) (k3h) (l3h) (m3h) (q3h) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (m6c) 
         (and (not (y8b)) (not (v8b)) (not (t8b)) (not (l8b)) (not (j8b)) (not (g8b)) (c8b) (h8b) (k8b) (r8b) (u8b) (x8b) (b6c) (g6c) (j6c) (q6c) (t6c) (v6c) (gbg) (hbg) (jbg) (kbg) (lbg) (mbg) (qbg) (teg) (ueg) (veg) (xeg) (yeg) (zeg) (bfg) (gig) (hig) (jig) (kig) (lig) (mig) (qig) (tlg) (ulg) (vlg) (xlg) (ylg) (zlg) (bmg) (ghh) (hhh) (jhh) (khh) (lhh) (mhh) (qhh) (g3h) (h3h) (j3h) (k3h) (l3h) (m3h) (q3h) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (k6c) 
         (and (not (y8b)) (not (v8b)) (not (t8b)) (not (q8b)) (not (j8b)) (not (g8b)) (c8b) (h8b) (m8b) (r8b) (u8b) (x8b) (b6c) (g6c) (l6c) (q6c) (t6c) (v6c) (t8f) (u8f) (v8f) (x8f) (y8f) (z8f) (b9f) (teg) (ueg) (veg) (xeg) (yeg) (zeg) (bfg) (gig) (hig) (jig) (kig) (lig) (mig) (qig) (tlg) (ulg) (vlg) (xlg) (ylg) (zlg) (bmg) (ghh) (hhh) (jhh) (khh) (lhh) (mhh) (qhh) (g3h) (h3h) (j3h) (k3h) (l3h) (m3h) (q3h) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (h6c) 
         (and (not (y8b)) (not (v8b)) (not (t8b)) (not (q8b)) (not (l8b)) (not (g8b)) (c8b) (k8b) (m8b) (r8b) (u8b) (x8b) (b6c) (j6c) (l6c) (q6c) (t6c) (v6c) (t8f) (u8f) (v8f) (x8f) (y8f) (z8f) (b9f) (gbg) (hbg) (jbg) (kbg) (lbg) (mbg) (qbg) (gig) (hig) (jig) (kig) (lig) (mig) (qig) (tlg) (ulg) (vlg) (xlg) (ylg) (zlg) (bmg) (ghh) (hhh) (jhh) (khh) (lhh) (mhh) (qhh) (g3h) (h3h) (j3h) (k3h) (l3h) (m3h) (q3h) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (c6c) 
         (and (not (y8b)) (not (v8b)) (not (t8b)) (not (q8b)) (not (l8b)) (not (j8b)) (h8b) (k8b) (m8b) (r8b) (u8b) (x8b) (g6c) (j6c) (l6c) (q6c) (t6c) (v6c) (t8f) (u8f) (v8f) (x8f) (y8f) (z8f) (b9f) (gbg) (hbg) (jbg) (kbg) (lbg) (mbg) (qbg) (teg) (ueg) (veg) (xeg) (yeg) (zeg) (bfg) (tlg) (ulg) (vlg) (xlg) (ylg) (zlg) (bmg) (ghh) (hhh) (jhh) (khh) (lhh) (mhh) (qhh) (g3h) (h3h) (j3h) (k3h) (l3h) (m3h) (q3h) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (g6c) (j6c) (l6c) (q6c) (t6c) (v6c) )
         (and (not (c8b)) (g8b) (c6c) (uhg) (vhg) (xhg) (yhg) (zhg) (big) (cig) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (j6c) (l6c) (q6c) (t6c) (v6c) )
         (and (not (h8b)) (j8b) (h6c) (heg) (jeg) (keg) (leg) (meg) (qeg) (reg) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (g6c) (l6c) (q6c) (t6c) (v6c) )
         (and (not (k8b)) (l8b) (k6c) (uag) (vag) (xag) (yag) (zag) (bbg) (cbg) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (g6c) (j6c) (q6c) (t6c) (v6c) )
         (and (not (m8b)) (q8b) (m6c) (h8f) (j8f) (k8f) (l8f) (m8f) (q8f) (r8f) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (g6c) (j6c) (l6c) (t6c) (v6c) )
         (and (not (r8b)) (t8b) (r6c) (hlg) (jlg) (klg) (llg) (mlg) (qlg) (rlg) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (g6c) (j6c) (l6c) (q6c) (v6c) )
         (and (not (u8b)) (v8b) (u6c) (ugh) (vgh) (xgh) (ygh) (zgh) (bhh) (chh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (g6c) (j6c) (l6c) (q6c) (t6c) )
         (and (not (x8b)) (y8b) (x6c) (u2h) (v2h) (x2h) (y2h) (z2h) (b3h) (c3h) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (y7c) (b8c) (g8c) (j8c) (l8c) (q8c) )
         (and (not (x9b)) (y9b) (x7c) (cnf) (gnf) (hnf) (jnf) (knf) (lnf) (mnf) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (b8c) (g8c) (j8c) (l8c) (q8c) )
         (and (not (z9b)) (b0b) (z7c) (rjf) (tjf) (ujf) (vjf) (xjf) (yjf) (zjf) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (y7c) (g8c) (j8c) (l8c) (q8c) )
         (and (not (c0b)) (g0b) (c8c) (cgf) (ggf) (hgf) (jgf) (kgf) (lgf) (mgf) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (y7c) (b8c) (j8c) (l8c) (q8c) )
         (and (not (h0b)) (j0b) (h8c) (rcf) (tcf) (ucf) (vcf) (xcf) (ycf) (zcf) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (y7c) (b8c) (g8c) (l8c) (q8c) )
         (and (not (k0b)) (l0b) (k8c) (rqf) (tqf) (uqf) (vqf) (xqf) (yqf) (zqf) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (y7c) (b8c) (g8c) (j8c) (q8c) )
         (and (not (m0b)) (q0b) (m8c) (rah) (tah) (uah) (vah) (xah) (yah) (zah) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (y7c) (b8c) (g8c) (j8c) (l8c) )
         (and (not (r0b)) (t0b) (r8c) (rvh) (tvh) (uvh) (vvh) (xvh) (yvh) (zvh) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (t9c) (v9c) (y9c) (b0c) (g0c) (j0c) )
         (and (not (rac)) (tac) (r9c) (mre) (qre) (rre) (tre) (ure) (vre) (xre) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (v9c) (y9c) (b0c) (g0c) (j0c) )
         (and (not (uac)) (vac) (u9c) (zoe) (bpe) (cpe) (gpe) (hpe) (jpe) (kpe) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (t9c) (y9c) (b0c) (g0c) (j0c) )
         (and (not (xac)) (yac) (x9c) (xie) (yie) (zie) (bje) (cje) (gje) (hje) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (t9c) (v9c) (b0c) (g0c) (j0c) )
         (and (not (zac)) (bbc) (z9c) (uce) (vce) (xce) (yce) (zce) (bde) (cde) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (t9c) (v9c) (y9c) (g0c) (j0c) )
         (and (not (cbc)) (gbc) (c0c) (zve) (bwe) (cwe) (gwe) (hwe) (jwe) (kwe) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (t9c) (v9c) (y9c) (b0c) (j0c) )
         (and (not (hbc)) (jbc) (h0c) (m5g) (q5g) (r5g) (t5g) (u5g) (v5g) (x5g) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (t9c) (v9c) (y9c) (b0c) (g0c) )
         (and (not (kbc)) (lbc) (k0c) (mph) (qph) (rph) (tph) (uph) (vph) (xph) ))

    )
  )
  (:action closure_mergep__0_k0
    :precondition 
      (m2d)
    :effect  (and 
      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (h0c) 
         (and (q9c) (t9c) (v9c) (y9c) (b0c) (j0c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (k0c) 
         (and (q9c) (t9c) (v9c) (y9c) (b0c) (g0c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (c0c) 
         (and (q9c) (t9c) (v9c) (y9c) (g0c) (j0c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (z9c) 
         (and (q9c) (t9c) (v9c) (b0c) (g0c) (j0c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (x9c) 
         (and (q9c) (t9c) (y9c) (b0c) (g0c) (j0c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (u9c) 
         (and (q9c) (v9c) (y9c) (b0c) (g0c) (j0c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (r9c) 
         (and (t9c) (v9c) (y9c) (b0c) (g0c) (j0c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (m8c) 
         (and (v7c) (y7c) (b8c) (g8c) (j8c) (q8c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (r8c) 
         (and (v7c) (y7c) (b8c) (g8c) (j8c) (l8c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (k8c) 
         (and (v7c) (y7c) (b8c) (g8c) (l8c) (q8c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (h8c) 
         (and (v7c) (y7c) (b8c) (j8c) (l8c) (q8c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (c8c) 
         (and (v7c) (y7c) (g8c) (j8c) (l8c) (q8c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (z7c) 
         (and (v7c) (b8c) (g8c) (j8c) (l8c) (q8c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (x7c) 
         (and (y7c) (b8c) (g8c) (j8c) (l8c) (q8c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (u6c) 
         (and (b6c) (g6c) (j6c) (l6c) (q6c) (v6c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (x6c) 
         (and (b6c) (g6c) (j6c) (l6c) (q6c) (t6c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (r6c) 
         (and (b6c) (g6c) (j6c) (l6c) (t6c) (v6c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (m6c) 
         (and (b6c) (g6c) (j6c) (q6c) (t6c) (v6c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (k6c) 
         (and (b6c) (g6c) (l6c) (q6c) (t6c) (v6c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (h6c) 
         (and (b6c) (j6c) (l6c) (q6c) (t6c) (v6c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (c6c) 
         (and (g6c) (j6c) (l6c) (q6c) (t6c) (v6c) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (g6c) (j6c) (l6c) (q6c) (t6c) (v6c) )
        (c6c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (j6c) (l6c) (q6c) (t6c) (v6c) )
        (h6c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (g6c) (l6c) (q6c) (t6c) (v6c) )
        (k6c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (g6c) (j6c) (q6c) (t6c) (v6c) )
        (m6c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (g6c) (j6c) (l6c) (t6c) (v6c) )
        (r6c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (g6c) (j6c) (l6c) (q6c) (v6c) )
        (u6c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (b6c) (g6c) (j6c) (l6c) (q6c) (t6c) )
        (x6c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (y7c) (b8c) (g8c) (j8c) (l8c) (q8c) )
        (x7c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (b8c) (g8c) (j8c) (l8c) (q8c) )
        (z7c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (y7c) (g8c) (j8c) (l8c) (q8c) )
        (c8c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (y7c) (b8c) (j8c) (l8c) (q8c) )
        (h8c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (y7c) (b8c) (g8c) (l8c) (q8c) )
        (k8c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (y7c) (b8c) (g8c) (j8c) (q8c) )
        (m8c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (v7c) (y7c) (b8c) (g8c) (j8c) (l8c) )
        (r8c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (t9c) (v9c) (y9c) (b0c) (g0c) (j0c) )
        (r9c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (v9c) (y9c) (b0c) (g0c) (j0c) )
        (u9c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (t9c) (y9c) (b0c) (g0c) (j0c) )
        (x9c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (t9c) (v9c) (b0c) (g0c) (j0c) )
        (z9c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (t9c) (v9c) (y9c) (g0c) (j0c) )
        (c0c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (t9c) (v9c) (y9c) (b0c) (j0c) )
        (h0c) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (q9c) (t9c) (v9c) (y9c) (b0c) (g0c) )
        (k0c) )

    )
  )
  (:action closure_mergep__0_m0
    :effect  (and 
      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (jbc) 
         (and (rac) (uac) (xac) (zac) (cbc) (kbc) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (lbc) 
         (and (rac) (uac) (xac) (zac) (cbc) (hbc) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (gbc) 
         (and (rac) (uac) (xac) (zac) (hbc) (kbc) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (bbc) 
         (and (rac) (uac) (xac) (cbc) (hbc) (kbc) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (yac) 
         (and (rac) (uac) (zac) (cbc) (hbc) (kbc) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (vac) 
         (and (rac) (xac) (zac) (cbc) (hbc) (kbc) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (tac) 
         (and (uac) (xac) (zac) (cbc) (hbc) (kbc) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (q0b) 
         (and (x9b) (z9b) (c0b) (h0b) (k0b) (r0b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (t0b) 
         (and (x9b) (z9b) (c0b) (h0b) (k0b) (m0b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (l0b) 
         (and (x9b) (z9b) (c0b) (h0b) (m0b) (r0b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (j0b) 
         (and (x9b) (z9b) (c0b) (k0b) (m0b) (r0b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (g0b) 
         (and (x9b) (z9b) (h0b) (k0b) (m0b) (r0b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (b0b) 
         (and (x9b) (c0b) (h0b) (k0b) (m0b) (r0b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (y9b) 
         (and (z9b) (c0b) (h0b) (k0b) (m0b) (r0b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (v8b) 
         (and (c8b) (h8b) (k8b) (m8b) (r8b) (x8b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (y8b) 
         (and (c8b) (h8b) (k8b) (m8b) (r8b) (u8b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (t8b) 
         (and (c8b) (h8b) (k8b) (m8b) (u8b) (x8b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (q8b) 
         (and (c8b) (h8b) (k8b) (r8b) (u8b) (x8b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (l8b) 
         (and (c8b) (h8b) (m8b) (r8b) (u8b) (x8b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (j8b) 
         (and (c8b) (k8b) (m8b) (r8b) (u8b) (x8b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K x1 -> K-x2 & .. & K-xn  (merge static oneof)
      (when (g8b) 
         (and (h8b) (k8b) (m8b) (r8b) (u8b) (x8b) ))

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (h8b) (k8b) (m8b) (r8b) (u8b) (x8b) )
        (g8b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (c8b) (k8b) (m8b) (r8b) (u8b) (x8b) )
        (j8b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (c8b) (h8b) (m8b) (r8b) (u8b) (x8b) )
        (l8b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (c8b) (h8b) (k8b) (r8b) (u8b) (x8b) )
        (q8b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (c8b) (h8b) (k8b) (m8b) (u8b) (x8b) )
        (t8b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (c8b) (h8b) (k8b) (m8b) (r8b) (x8b) )
        (v8b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (c8b) (h8b) (k8b) (m8b) (r8b) (u8b) )
        (y8b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (z9b) (c0b) (h0b) (k0b) (m0b) (r0b) )
        (y9b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (x9b) (c0b) (h0b) (k0b) (m0b) (r0b) )
        (b0b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (x9b) (z9b) (h0b) (k0b) (m0b) (r0b) )
        (g0b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (x9b) (z9b) (c0b) (k0b) (m0b) (r0b) )
        (j0b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (x9b) (z9b) (c0b) (h0b) (m0b) (r0b) )
        (l0b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (x9b) (z9b) (c0b) (h0b) (k0b) (r0b) )
        (q0b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (x9b) (z9b) (c0b) (h0b) (k0b) (m0b) )
        (t0b) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (uac) (xac) (zac) (cbc) (hbc) (kbc) )
        (tac) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (rac) (xac) (zac) (cbc) (hbc) (kbc) )
        (vac) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (rac) (uac) (zac) (cbc) (hbc) (kbc) )
        (yac) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (rac) (uac) (xac) (cbc) (hbc) (kbc) )
        (bbc) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (rac) (uac) (xac) (zac) (hbc) (kbc) )
        (gbc) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (rac) (uac) (xac) (zac) (cbc) (kbc) )
        (jbc) )

      ; K-x1 & .. & K-xn -> K xi & -K-xi  (merge static disjunction). K-x1 & .. & K-xn -> K xi & -K-xi  (merge static oneof)
      (when  (and (rac) (uac) (xac) (zac) (cbc) (hbc) )
        (lbc) )

    )
  )
  (:action HABILCL
    :precondition 
      (r2d)
    :effect  (and 
      (not (T0_FAIL_k0))
      (not (l2d))
      (m2d)
    )
  )
  (:action UNHABIL
    :precondition 
      (m2d)
    :effect  (and 
      (not (m2d))
      (l2d)
    )
  )
  (:action COLLECT_GOAL
    :precondition 
      (z1d)
    :effect 
      (r2d)
  )
  (:observation SENSE-DOOR_P1-4_P1-3
    :precondition 
      (lxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z0c)) (not (y0c)) )
         (and (zbc) (bcc) (t5d) ))

    :branches (or 
      (and 
        (not (zbc))
        (bcc)
        (z0c)
      )
      (and 
        (not (bcc))
        (zbc)
        (y0c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-4_P1-5
    :precondition 
      (lxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u0c)) (not (t0c)) )
         (and (ubc) (vbc) (q5d) ))

    :branches (or 
      (and 
        (not (ubc))
        (vbc)
        (u0c)
      )
      (and 
        (not (vbc))
        (ubc)
        (t0c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-4_P2-4
    :precondition 
      (lxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z9c)) (not (y9c)) )
         (and (zac) (bbc) (g5d) ))

    :branches (or 
      (and 
        (not (zac))
        (bbc)
        (z9c)
        (uce)
        (vce)
        (xce)
        (yce)
        (zce)
        (bde)
        (cde)
      )
      (and 
        (not (bbc))
        (zac)
        (y9c)
        (gde)
        (hde)
        (jde)
        (kde)
        (lde)
        (mde)
        (qde)
      )
    )
  )
  (:observation SENSE-DOOR_P1-3_P1-2
    :precondition 
      (vxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (cad)) (not (bad)) )
         (and (ccc) (gcc) (u5d) ))

    :branches (or 
      (and 
        (not (ccc))
        (gcc)
        (cad)
      )
      (and 
        (not (gcc))
        (ccc)
        (bad)
      )
    )
  )
  (:observation SENSE-DOOR_P1-3_P1-4
    :precondition 
      (vxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x0c)) (not (v0c)) )
         (and (xbc) (ybc) (r5d) ))

    :branches (or 
      (and 
        (not (xbc))
        (ybc)
        (x0c)
      )
      (and 
        (not (ybc))
        (xbc)
        (v0c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-3_P2-3
    :precondition 
      (vxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c0c)) (not (b0c)) )
         (and (cbc) (gbc) (h5d) ))

    :branches (or 
      (and 
        (not (cbc))
        (gbc)
        (c0c)
        (zve)
        (bwe)
        (cwe)
        (gwe)
        (hwe)
        (jwe)
        (kwe)
      )
      (and 
        (not (gbc))
        (cbc)
        (b0c)
        (lwe)
        (mwe)
        (qwe)
        (rwe)
        (twe)
        (uwe)
        (vwe)
      )
    )
  )
  (:observation SENSE-DOOR_P1-5_P1-4
    :precondition 
      (yxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x0c)) (not (v0c)) )
         (and (xbc) (ybc) (r5d) ))

    :branches (or 
      (and 
        (not (xbc))
        (ybc)
        (x0c)
      )
      (and 
        (not (ybc))
        (xbc)
        (v0c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-5_P1-6
    :precondition 
      (yxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r0c)) (not (q0c)) )
         (and (rbc) (tbc) (m5d) ))

    :branches (or 
      (and 
        (not (rbc))
        (tbc)
        (r0c)
      )
      (and 
        (not (tbc))
        (rbc)
        (q0c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-5_P2-5
    :precondition 
      (yxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x9c)) (not (v9c)) )
         (and (xac) (yac) (c5d) ))

    :branches (or 
      (and 
        (not (xac))
        (yac)
        (x9c)
        (xie)
        (yie)
        (zie)
        (bje)
        (cje)
        (gje)
        (hje)
      )
      (and 
        (not (yac))
        (xac)
        (v9c)
        (jje)
        (kje)
        (lje)
        (mje)
        (qje)
        (rje)
        (tje)
      )
    )
  )
  (:observation SENSE-DOOR_P1-6_P1-5
    :precondition 
      (byc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u0c)) (not (t0c)) )
         (and (ubc) (vbc) (q5d) ))

    :branches (or 
      (and 
        (not (ubc))
        (vbc)
        (u0c)
      )
      (and 
        (not (vbc))
        (ubc)
        (t0c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-6_P1-7
    :precondition 
      (byc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m0c)) (not (l0c)) )
         (and (mbc) (qbc) (l5d) ))

    :branches (or 
      (and 
        (not (mbc))
        (qbc)
        (m0c)
      )
      (and 
        (not (qbc))
        (mbc)
        (l0c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-6_P2-6
    :precondition 
      (byc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u9c)) (not (t9c)) )
         (and (uac) (vac) (b5d) ))

    :branches (or 
      (and 
        (not (uac))
        (vac)
        (u9c)
        (zoe)
        (bpe)
        (cpe)
        (gpe)
        (hpe)
        (jpe)
        (kpe)
      )
      (and 
        (not (vac))
        (uac)
        (t9c)
        (lpe)
        (mpe)
        (qpe)
        (rpe)
        (tpe)
        (upe)
        (vpe)
      )
    )
  )
  (:observation SENSE-DOOR_P1-7_P1-6
    :precondition 
      (gyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r0c)) (not (q0c)) )
         (and (rbc) (tbc) (m5d) ))

    :branches (or 
      (and 
        (not (rbc))
        (tbc)
        (r0c)
      )
      (and 
        (not (tbc))
        (rbc)
        (q0c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-7_P2-7
    :precondition 
      (gyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r9c)) (not (q9c)) )
         (and (rac) (tac) (z4d) ))

    :branches (or 
      (and 
        (not (rac))
        (tac)
        (r9c)
        (mre)
        (qre)
        (rre)
        (tre)
        (ure)
        (vre)
        (xre)
      )
      (and 
        (not (tac))
        (rac)
        (q9c)
        (yre)
        (zre)
        (bte)
        (cte)
        (gte)
        (hte)
        (jte)
      )
    )
  )
  (:observation SENSE-DOOR_P2-3_P1-3
    :precondition 
      (qyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z0c)) (not (y0c)) )
         (and (zbc) (bcc) (t5d) ))

    :branches (or 
      (and 
        (not (zbc))
        (bcc)
        (z0c)
      )
      (and 
        (not (bcc))
        (zbc)
        (y0c)
      )
    )
  )
  (:observation SENSE-DOOR_P2-3_P2-2
    :precondition 
      (qyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h0c)) (not (g0c)) )
         (and (hbc) (jbc) (j5d) ))

    :branches (or 
      (and 
        (not (hbc))
        (jbc)
        (h0c)
        (m5g)
        (q5g)
        (r5g)
        (t5g)
        (u5g)
        (v5g)
        (x5g)
      )
      (and 
        (not (jbc))
        (hbc)
        (g0c)
        (y5g)
        (z5g)
        (b6g)
        (c6g)
        (g6g)
        (h6g)
        (j6g)
      )
    )
  )
  (:observation SENSE-DOOR_P2-3_P2-4
    :precondition 
      (qyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z9c)) (not (y9c)) )
         (and (zac) (bbc) (g5d) ))

    :branches (or 
      (and 
        (not (zac))
        (bbc)
        (z9c)
        (uce)
        (vce)
        (xce)
        (yce)
        (zce)
        (bde)
        (cde)
      )
      (and 
        (not (bbc))
        (zac)
        (y9c)
        (gde)
        (hde)
        (jde)
        (kde)
        (lde)
        (mde)
        (qde)
      )
    )
  )
  (:observation SENSE-DOOR_P2-3_P3-3
    :precondition 
      (qyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h9c)) (not (g9c)) )
         (and (hac) (jac) (v4d) ))

    :branches (or 
      (and 
        (not (hac))
        (jac)
        (h9c)
      )
      (and 
        (not (jac))
        (hac)
        (g9c)
      )
    )
  )
  (:observation SENSE-DOOR_P2-4_P1-4
    :precondition 
      (tyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x0c)) (not (v0c)) )
         (and (xbc) (ybc) (r5d) ))

    :branches (or 
      (and 
        (not (xbc))
        (ybc)
        (x0c)
      )
      (and 
        (not (ybc))
        (xbc)
        (v0c)
      )
    )
  )
  (:observation SENSE-DOOR_P2-4_P2-3
    :precondition 
      (tyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c0c)) (not (b0c)) )
         (and (cbc) (gbc) (h5d) ))

    :branches (or 
      (and 
        (not (cbc))
        (gbc)
        (c0c)
        (zve)
        (bwe)
        (cwe)
        (gwe)
        (hwe)
        (jwe)
        (kwe)
      )
      (and 
        (not (gbc))
        (cbc)
        (b0c)
        (lwe)
        (mwe)
        (qwe)
        (rwe)
        (twe)
        (uwe)
        (vwe)
      )
    )
  )
  (:observation SENSE-DOOR_P2-4_P2-5
    :precondition 
      (tyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x9c)) (not (v9c)) )
         (and (xac) (yac) (c5d) ))

    :branches (or 
      (and 
        (not (xac))
        (yac)
        (x9c)
        (xie)
        (yie)
        (zie)
        (bje)
        (cje)
        (gje)
        (hje)
      )
      (and 
        (not (yac))
        (xac)
        (v9c)
        (jje)
        (kje)
        (lje)
        (mje)
        (qje)
        (rje)
        (tje)
      )
    )
  )
  (:observation SENSE-DOOR_P2-4_P3-4
    :precondition 
      (tyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c9c)) (not (b9c)) )
         (and (cac) (gac) (u4d) ))

    :branches (or 
      (and 
        (not (cac))
        (gac)
        (c9c)
      )
      (and 
        (not (gac))
        (cac)
        (b9c)
      )
    )
  )
  (:observation SENSE-DOOR_P2-5_P1-5
    :precondition 
      (vyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u0c)) (not (t0c)) )
         (and (ubc) (vbc) (q5d) ))

    :branches (or 
      (and 
        (not (ubc))
        (vbc)
        (u0c)
      )
      (and 
        (not (vbc))
        (ubc)
        (t0c)
      )
    )
  )
  (:observation SENSE-DOOR_P2-5_P2-4
    :precondition 
      (vyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z9c)) (not (y9c)) )
         (and (zac) (bbc) (g5d) ))

    :branches (or 
      (and 
        (not (zac))
        (bbc)
        (z9c)
        (uce)
        (vce)
        (xce)
        (yce)
        (zce)
        (bde)
        (cde)
      )
      (and 
        (not (bbc))
        (zac)
        (y9c)
        (gde)
        (hde)
        (jde)
        (kde)
        (lde)
        (mde)
        (qde)
      )
    )
  )
  (:observation SENSE-DOOR_P2-5_P2-6
    :precondition 
      (vyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u9c)) (not (t9c)) )
         (and (uac) (vac) (b5d) ))

    :branches (or 
      (and 
        (not (uac))
        (vac)
        (u9c)
        (zoe)
        (bpe)
        (cpe)
        (gpe)
        (hpe)
        (jpe)
        (kpe)
      )
      (and 
        (not (vac))
        (uac)
        (t9c)
        (lpe)
        (mpe)
        (qpe)
        (rpe)
        (tpe)
        (upe)
        (vpe)
      )
    )
  )
  (:observation SENSE-DOOR_P2-5_P3-5
    :precondition 
      (vyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z8c)) (not (y8c)) )
         (and (z0b) (bac) (t4d) ))

    :branches (or 
      (and 
        (not (z0b))
        (bac)
        (z8c)
      )
      (and 
        (not (bac))
        (z0b)
        (y8c)
      )
    )
  )
  (:observation SENSE-DOOR_P2-6_P1-6
    :precondition 
      (yyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r0c)) (not (q0c)) )
         (and (rbc) (tbc) (m5d) ))

    :branches (or 
      (and 
        (not (rbc))
        (tbc)
        (r0c)
      )
      (and 
        (not (tbc))
        (rbc)
        (q0c)
      )
    )
  )
  (:observation SENSE-DOOR_P2-6_P2-5
    :precondition 
      (yyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x9c)) (not (v9c)) )
         (and (xac) (yac) (c5d) ))

    :branches (or 
      (and 
        (not (xac))
        (yac)
        (x9c)
        (xie)
        (yie)
        (zie)
        (bje)
        (cje)
        (gje)
        (hje)
      )
      (and 
        (not (yac))
        (xac)
        (v9c)
        (jje)
        (kje)
        (lje)
        (mje)
        (qje)
        (rje)
        (tje)
      )
    )
  )
  (:observation SENSE-DOOR_P2-6_P2-7
    :precondition 
      (yyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r9c)) (not (q9c)) )
         (and (rac) (tac) (z4d) ))

    :branches (or 
      (and 
        (not (rac))
        (tac)
        (r9c)
        (mre)
        (qre)
        (rre)
        (tre)
        (ure)
        (vre)
        (xre)
      )
      (and 
        (not (tac))
        (rac)
        (q9c)
        (yre)
        (zre)
        (bte)
        (cte)
        (gte)
        (hte)
        (jte)
      )
    )
  )
  (:observation SENSE-DOOR_P2-6_P3-6
    :precondition 
      (yyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x8c)) (not (v8c)) )
         (and (x0b) (y0b) (r4d) ))

    :branches (or 
      (and 
        (not (x0b))
        (y0b)
        (x8c)
      )
      (and 
        (not (y0b))
        (x0b)
        (v8c)
      )
    )
  )
  (:observation SENSE-DOOR_P2-7_P1-7
    :precondition 
      (bzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m0c)) (not (l0c)) )
         (and (mbc) (qbc) (l5d) ))

    :branches (or 
      (and 
        (not (mbc))
        (qbc)
        (m0c)
      )
      (and 
        (not (qbc))
        (mbc)
        (l0c)
      )
    )
  )
  (:observation SENSE-DOOR_P2-7_P2-6
    :precondition 
      (bzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u9c)) (not (t9c)) )
         (and (uac) (vac) (b5d) ))

    :branches (or 
      (and 
        (not (uac))
        (vac)
        (u9c)
        (zoe)
        (bpe)
        (cpe)
        (gpe)
        (hpe)
        (jpe)
        (kpe)
      )
      (and 
        (not (vac))
        (uac)
        (t9c)
        (lpe)
        (mpe)
        (qpe)
        (rpe)
        (tpe)
        (upe)
        (vpe)
      )
    )
  )
  (:observation SENSE-DOOR_P2-7_P3-7
    :precondition 
      (bzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u8c)) (not (t8c)) )
         (and (u0b) (v0b) (q4d) ))

    :branches (or 
      (and 
        (not (u0b))
        (v0b)
        (u8c)
      )
      (and 
        (not (v0b))
        (u0b)
        (t8c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-3_P2-3
    :precondition 
      (lzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c0c)) (not (b0c)) )
         (and (cbc) (gbc) (h5d) ))

    :branches (or 
      (and 
        (not (cbc))
        (gbc)
        (c0c)
        (zve)
        (bwe)
        (cwe)
        (gwe)
        (hwe)
        (jwe)
        (kwe)
      )
      (and 
        (not (gbc))
        (cbc)
        (b0c)
        (lwe)
        (mwe)
        (qwe)
        (rwe)
        (twe)
        (uwe)
        (vwe)
      )
    )
  )
  (:observation SENSE-DOOR_P3-3_P3-2
    :precondition 
      (lzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k9c)) (not (j9c)) )
         (and (kac) (lac) (x4d) ))

    :branches (or 
      (and 
        (not (kac))
        (lac)
        (k9c)
      )
      (and 
        (not (lac))
        (kac)
        (j9c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-3_P3-4
    :precondition 
      (lzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c9c)) (not (b9c)) )
         (and (cac) (gac) (u4d) ))

    :branches (or 
      (and 
        (not (cac))
        (gac)
        (c9c)
      )
      (and 
        (not (gac))
        (cac)
        (b9c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-3_P4-3
    :precondition 
      (lzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k8c)) (not (j8c)) )
         (and (k0b) (l0b) (k4d) ))

    :branches (or 
      (and 
        (not (k0b))
        (l0b)
        (k8c)
        (rqf)
        (tqf)
        (uqf)
        (vqf)
        (xqf)
        (yqf)
        (zqf)
      )
      (and 
        (not (l0b))
        (k0b)
        (j8c)
        (bsf)
        (csf)
        (gsf)
        (hsf)
        (jsf)
        (ksf)
        (lsf)
      )
    )
  )
  (:observation SENSE-DOOR_P3-4_P2-4
    :precondition 
      (qzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z9c)) (not (y9c)) )
         (and (zac) (bbc) (g5d) ))

    :branches (or 
      (and 
        (not (zac))
        (bbc)
        (z9c)
        (uce)
        (vce)
        (xce)
        (yce)
        (zce)
        (bde)
        (cde)
      )
      (and 
        (not (bbc))
        (zac)
        (y9c)
        (gde)
        (hde)
        (jde)
        (kde)
        (lde)
        (mde)
        (qde)
      )
    )
  )
  (:observation SENSE-DOOR_P3-4_P3-3
    :precondition 
      (qzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h9c)) (not (g9c)) )
         (and (hac) (jac) (v4d) ))

    :branches (or 
      (and 
        (not (hac))
        (jac)
        (h9c)
      )
      (and 
        (not (jac))
        (hac)
        (g9c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-4_P3-5
    :precondition 
      (qzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z8c)) (not (y8c)) )
         (and (z0b) (bac) (t4d) ))

    :branches (or 
      (and 
        (not (z0b))
        (bac)
        (z8c)
      )
      (and 
        (not (bac))
        (z0b)
        (y8c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-4_P4-4
    :precondition 
      (qzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h8c)) (not (g8c)) )
         (and (h0b) (j0b) (j4d) ))

    :branches (or 
      (and 
        (not (h0b))
        (j0b)
        (h8c)
        (rcf)
        (tcf)
        (ucf)
        (vcf)
        (xcf)
        (ycf)
        (zcf)
      )
      (and 
        (not (j0b))
        (h0b)
        (g8c)
        (bdf)
        (cdf)
        (gdf)
        (hdf)
        (jdf)
        (kdf)
        (ldf)
      )
    )
  )
  (:observation SENSE-DOOR_P3-5_P2-5
    :precondition 
      (tzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x9c)) (not (v9c)) )
         (and (xac) (yac) (c5d) ))

    :branches (or 
      (and 
        (not (xac))
        (yac)
        (x9c)
        (xie)
        (yie)
        (zie)
        (bje)
        (cje)
        (gje)
        (hje)
      )
      (and 
        (not (yac))
        (xac)
        (v9c)
        (jje)
        (kje)
        (lje)
        (mje)
        (qje)
        (rje)
        (tje)
      )
    )
  )
  (:observation SENSE-DOOR_P3-5_P3-4
    :precondition 
      (tzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c9c)) (not (b9c)) )
         (and (cac) (gac) (u4d) ))

    :branches (or 
      (and 
        (not (cac))
        (gac)
        (c9c)
      )
      (and 
        (not (gac))
        (cac)
        (b9c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-5_P3-6
    :precondition 
      (tzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x8c)) (not (v8c)) )
         (and (x0b) (y0b) (r4d) ))

    :branches (or 
      (and 
        (not (x0b))
        (y0b)
        (x8c)
      )
      (and 
        (not (y0b))
        (x0b)
        (v8c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-5_P4-5
    :precondition 
      (tzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c8c)) (not (b8c)) )
         (and (c0b) (g0b) (h4d) ))

    :branches (or 
      (and 
        (not (c0b))
        (g0b)
        (c8c)
        (cgf)
        (ggf)
        (hgf)
        (jgf)
        (kgf)
        (lgf)
        (mgf)
      )
      (and 
        (not (g0b))
        (c0b)
        (b8c)
        (qgf)
        (rgf)
        (tgf)
        (ugf)
        (vgf)
        (xgf)
        (ygf)
      )
    )
  )
  (:observation SENSE-DOOR_P3-6_P2-6
    :precondition 
      (vzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u9c)) (not (t9c)) )
         (and (uac) (vac) (b5d) ))

    :branches (or 
      (and 
        (not (uac))
        (vac)
        (u9c)
        (zoe)
        (bpe)
        (cpe)
        (gpe)
        (hpe)
        (jpe)
        (kpe)
      )
      (and 
        (not (vac))
        (uac)
        (t9c)
        (lpe)
        (mpe)
        (qpe)
        (rpe)
        (tpe)
        (upe)
        (vpe)
      )
    )
  )
  (:observation SENSE-DOOR_P3-6_P3-5
    :precondition 
      (vzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z8c)) (not (y8c)) )
         (and (z0b) (bac) (t4d) ))

    :branches (or 
      (and 
        (not (z0b))
        (bac)
        (z8c)
      )
      (and 
        (not (bac))
        (z0b)
        (y8c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-6_P3-7
    :precondition 
      (vzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u8c)) (not (t8c)) )
         (and (u0b) (v0b) (q4d) ))

    :branches (or 
      (and 
        (not (u0b))
        (v0b)
        (u8c)
      )
      (and 
        (not (v0b))
        (u0b)
        (t8c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-6_P4-6
    :precondition 
      (vzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z7c)) (not (y7c)) )
         (and (z9b) (b0b) (g4d) ))

    :branches (or 
      (and 
        (not (z9b))
        (b0b)
        (z7c)
        (rjf)
        (tjf)
        (ujf)
        (vjf)
        (xjf)
        (yjf)
        (zjf)
      )
      (and 
        (not (b0b))
        (z9b)
        (y7c)
        (bkf)
        (ckf)
        (gkf)
        (hkf)
        (jkf)
        (kkf)
        (lkf)
      )
    )
  )
  (:observation SENSE-DOOR_P3-7_P2-7
    :precondition 
      (yzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r9c)) (not (q9c)) )
         (and (rac) (tac) (z4d) ))

    :branches (or 
      (and 
        (not (rac))
        (tac)
        (r9c)
        (mre)
        (qre)
        (rre)
        (tre)
        (ure)
        (vre)
        (xre)
      )
      (and 
        (not (tac))
        (rac)
        (q9c)
        (yre)
        (zre)
        (bte)
        (cte)
        (gte)
        (hte)
        (jte)
      )
    )
  )
  (:observation SENSE-DOOR_P3-7_P3-6
    :precondition 
      (yzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x8c)) (not (v8c)) )
         (and (x0b) (y0b) (r4d) ))

    :branches (or 
      (and 
        (not (x0b))
        (y0b)
        (x8c)
      )
      (and 
        (not (y0b))
        (x0b)
        (v8c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-7_P4-7
    :precondition 
      (yzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x7c)) (not (v7c)) )
         (and (x9b) (y9b) (c4d) ))

    :branches (or 
      (and 
        (not (x9b))
        (y9b)
        (x7c)
        (cnf)
        (gnf)
        (hnf)
        (jnf)
        (knf)
        (lnf)
        (mnf)
      )
      (and 
        (not (y9b))
        (x9b)
        (v7c)
        (qnf)
        (rnf)
        (tnf)
        (unf)
        (vnf)
        (xnf)
        (ynf)
      )
    )
  )
  (:observation SENSE-DOOR_P4-3_P3-3
    :precondition 
      (j1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h9c)) (not (g9c)) )
         (and (hac) (jac) (v4d) ))

    :branches (or 
      (and 
        (not (hac))
        (jac)
        (h9c)
      )
      (and 
        (not (jac))
        (hac)
        (g9c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-3_P4-2
    :precondition 
      (j1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m8c)) (not (l8c)) )
         (and (m0b) (q0b) (l4d) ))

    :branches (or 
      (and 
        (not (m0b))
        (q0b)
        (m8c)
        (rah)
        (tah)
        (uah)
        (vah)
        (xah)
        (yah)
        (zah)
      )
      (and 
        (not (q0b))
        (m0b)
        (l8c)
        (bbh)
        (cbh)
        (gbh)
        (hbh)
        (jbh)
        (kbh)
        (lbh)
      )
    )
  )
  (:observation SENSE-DOOR_P4-3_P4-4
    :precondition 
      (j1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h8c)) (not (g8c)) )
         (and (h0b) (j0b) (j4d) ))

    :branches (or 
      (and 
        (not (h0b))
        (j0b)
        (h8c)
        (rcf)
        (tcf)
        (ucf)
        (vcf)
        (xcf)
        (ycf)
        (zcf)
      )
      (and 
        (not (j0b))
        (h0b)
        (g8c)
        (bdf)
        (cdf)
        (gdf)
        (hdf)
        (jdf)
        (kdf)
        (ldf)
      )
    )
  )
  (:observation SENSE-DOOR_P4-3_P5-3
    :precondition 
      (j1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m7c)) (not (l7c)) )
         (and (m9b) (q9b) (y3d) ))

    :branches (or 
      (and 
        (not (m9b))
        (q9b)
        (m7c)
      )
      (and 
        (not (q9b))
        (m9b)
        (l7c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-4_P3-4
    :precondition 
      (l1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c9c)) (not (b9c)) )
         (and (cac) (gac) (u4d) ))

    :branches (or 
      (and 
        (not (cac))
        (gac)
        (c9c)
      )
      (and 
        (not (gac))
        (cac)
        (b9c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-4_P4-3
    :precondition 
      (l1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k8c)) (not (j8c)) )
         (and (k0b) (l0b) (k4d) ))

    :branches (or 
      (and 
        (not (k0b))
        (l0b)
        (k8c)
        (rqf)
        (tqf)
        (uqf)
        (vqf)
        (xqf)
        (yqf)
        (zqf)
      )
      (and 
        (not (l0b))
        (k0b)
        (j8c)
        (bsf)
        (csf)
        (gsf)
        (hsf)
        (jsf)
        (ksf)
        (lsf)
      )
    )
  )
  (:observation SENSE-DOOR_P4-4_P4-5
    :precondition 
      (l1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c8c)) (not (b8c)) )
         (and (c0b) (g0b) (h4d) ))

    :branches (or 
      (and 
        (not (c0b))
        (g0b)
        (c8c)
        (cgf)
        (ggf)
        (hgf)
        (jgf)
        (kgf)
        (lgf)
        (mgf)
      )
      (and 
        (not (g0b))
        (c0b)
        (b8c)
        (qgf)
        (rgf)
        (tgf)
        (ugf)
        (vgf)
        (xgf)
        (ygf)
      )
    )
  )
  (:observation SENSE-DOOR_P4-4_P5-4
    :precondition 
      (l1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k7c)) (not (j7c)) )
         (and (k9b) (l9b) (x3d) ))

    :branches (or 
      (and 
        (not (k9b))
        (l9b)
        (k7c)
      )
      (and 
        (not (l9b))
        (k9b)
        (j7c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-5_P3-5
    :precondition 
      (q1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z8c)) (not (y8c)) )
         (and (z0b) (bac) (t4d) ))

    :branches (or 
      (and 
        (not (z0b))
        (bac)
        (z8c)
      )
      (and 
        (not (bac))
        (z0b)
        (y8c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-5_P4-4
    :precondition 
      (q1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h8c)) (not (g8c)) )
         (and (h0b) (j0b) (j4d) ))

    :branches (or 
      (and 
        (not (h0b))
        (j0b)
        (h8c)
        (rcf)
        (tcf)
        (ucf)
        (vcf)
        (xcf)
        (ycf)
        (zcf)
      )
      (and 
        (not (j0b))
        (h0b)
        (g8c)
        (bdf)
        (cdf)
        (gdf)
        (hdf)
        (jdf)
        (kdf)
        (ldf)
      )
    )
  )
  (:observation SENSE-DOOR_P4-5_P4-6
    :precondition 
      (q1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z7c)) (not (y7c)) )
         (and (z9b) (b0b) (g4d) ))

    :branches (or 
      (and 
        (not (z9b))
        (b0b)
        (z7c)
        (rjf)
        (tjf)
        (ujf)
        (vjf)
        (xjf)
        (yjf)
        (zjf)
      )
      (and 
        (not (b0b))
        (z9b)
        (y7c)
        (bkf)
        (ckf)
        (gkf)
        (hkf)
        (jkf)
        (kkf)
        (lkf)
      )
    )
  )
  (:observation SENSE-DOOR_P4-5_P5-5
    :precondition 
      (q1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h7c)) (not (g7c)) )
         (and (h9b) (j9b) (v3d) ))

    :branches (or 
      (and 
        (not (h9b))
        (j9b)
        (h7c)
      )
      (and 
        (not (j9b))
        (h9b)
        (g7c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-6_P3-6
    :precondition 
      (t1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x8c)) (not (v8c)) )
         (and (x0b) (y0b) (r4d) ))

    :branches (or 
      (and 
        (not (x0b))
        (y0b)
        (x8c)
      )
      (and 
        (not (y0b))
        (x0b)
        (v8c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-6_P4-5
    :precondition 
      (t1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c8c)) (not (b8c)) )
         (and (c0b) (g0b) (h4d) ))

    :branches (or 
      (and 
        (not (c0b))
        (g0b)
        (c8c)
        (cgf)
        (ggf)
        (hgf)
        (jgf)
        (kgf)
        (lgf)
        (mgf)
      )
      (and 
        (not (g0b))
        (c0b)
        (b8c)
        (qgf)
        (rgf)
        (tgf)
        (ugf)
        (vgf)
        (xgf)
        (ygf)
      )
    )
  )
  (:observation SENSE-DOOR_P4-6_P4-7
    :precondition 
      (t1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x7c)) (not (v7c)) )
         (and (x9b) (y9b) (c4d) ))

    :branches (or 
      (and 
        (not (x9b))
        (y9b)
        (x7c)
        (cnf)
        (gnf)
        (hnf)
        (jnf)
        (knf)
        (lnf)
        (mnf)
      )
      (and 
        (not (y9b))
        (x9b)
        (v7c)
        (qnf)
        (rnf)
        (tnf)
        (unf)
        (vnf)
        (xnf)
        (ynf)
      )
    )
  )
  (:observation SENSE-DOOR_P4-6_P5-6
    :precondition 
      (t1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c7c)) (not (b7c)) )
         (and (c9b) (g9b) (u3d) ))

    :branches (or 
      (and 
        (not (c9b))
        (g9b)
        (c7c)
      )
      (and 
        (not (g9b))
        (c9b)
        (b7c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-7_P3-7
    :precondition 
      (v1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u8c)) (not (t8c)) )
         (and (u0b) (v0b) (q4d) ))

    :branches (or 
      (and 
        (not (u0b))
        (v0b)
        (u8c)
      )
      (and 
        (not (v0b))
        (u0b)
        (t8c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-7_P4-6
    :precondition 
      (v1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z7c)) (not (y7c)) )
         (and (z9b) (b0b) (g4d) ))

    :branches (or 
      (and 
        (not (z9b))
        (b0b)
        (z7c)
        (rjf)
        (tjf)
        (ujf)
        (vjf)
        (xjf)
        (yjf)
        (zjf)
      )
      (and 
        (not (b0b))
        (z9b)
        (y7c)
        (bkf)
        (ckf)
        (gkf)
        (hkf)
        (jkf)
        (kkf)
        (lkf)
      )
    )
  )
  (:observation SENSE-DOOR_P4-7_P5-7
    :precondition 
      (v1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z6c)) (not (y6c)) )
         (and (z8b) (b9b) (t3d) ))

    :branches (or 
      (and 
        (not (z8b))
        (b9b)
        (z6c)
      )
      (and 
        (not (b9b))
        (z8b)
        (y6c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-3_P4-3
    :precondition 
      (g2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k8c)) (not (j8c)) )
         (and (k0b) (l0b) (k4d) ))

    :branches (or 
      (and 
        (not (k0b))
        (l0b)
        (k8c)
        (rqf)
        (tqf)
        (uqf)
        (vqf)
        (xqf)
        (yqf)
        (zqf)
      )
      (and 
        (not (l0b))
        (k0b)
        (j8c)
        (bsf)
        (csf)
        (gsf)
        (hsf)
        (jsf)
        (ksf)
        (lsf)
      )
    )
  )
  (:observation SENSE-DOOR_P5-3_P5-2
    :precondition 
      (g2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r7c)) (not (q7c)) )
         (and (r9b) (t9b) (z3d) ))

    :branches (or 
      (and 
        (not (r9b))
        (t9b)
        (r7c)
      )
      (and 
        (not (t9b))
        (r9b)
        (q7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-3_P5-4
    :precondition 
      (g2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k7c)) (not (j7c)) )
         (and (k9b) (l9b) (x3d) ))

    :branches (or 
      (and 
        (not (k9b))
        (l9b)
        (k7c)
      )
      (and 
        (not (l9b))
        (k9b)
        (j7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-3_P6-3
    :precondition 
      (g2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r6c)) (not (q6c)) )
         (and (r8b) (t8b) (m3d) ))

    :branches (or 
      (and 
        (not (r8b))
        (t8b)
        (r6c)
        (hlg)
        (jlg)
        (klg)
        (llg)
        (mlg)
        (qlg)
        (rlg)
      )
      (and 
        (not (t8b))
        (r8b)
        (q6c)
        (tlg)
        (ulg)
        (vlg)
        (xlg)
        (ylg)
        (zlg)
        (bmg)
      )
    )
  )
  (:observation SENSE-DOOR_P5-4_P4-4
    :precondition 
      (j2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h8c)) (not (g8c)) )
         (and (h0b) (j0b) (j4d) ))

    :branches (or 
      (and 
        (not (h0b))
        (j0b)
        (h8c)
        (rcf)
        (tcf)
        (ucf)
        (vcf)
        (xcf)
        (ycf)
        (zcf)
      )
      (and 
        (not (j0b))
        (h0b)
        (g8c)
        (bdf)
        (cdf)
        (gdf)
        (hdf)
        (jdf)
        (kdf)
        (ldf)
      )
    )
  )
  (:observation SENSE-DOOR_P5-4_P5-3
    :precondition 
      (j2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m7c)) (not (l7c)) )
         (and (m9b) (q9b) (y3d) ))

    :branches (or 
      (and 
        (not (m9b))
        (q9b)
        (m7c)
      )
      (and 
        (not (q9b))
        (m9b)
        (l7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-4_P5-5
    :precondition 
      (j2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h7c)) (not (g7c)) )
         (and (h9b) (j9b) (v3d) ))

    :branches (or 
      (and 
        (not (h9b))
        (j9b)
        (h7c)
      )
      (and 
        (not (j9b))
        (h9b)
        (g7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-4_P6-4
    :precondition 
      (j2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m6c)) (not (l6c)) )
         (and (m8b) (q8b) (l3d) ))

    :branches (or 
      (and 
        (not (m8b))
        (q8b)
        (m6c)
        (h8f)
        (j8f)
        (k8f)
        (l8f)
        (m8f)
        (q8f)
        (r8f)
      )
      (and 
        (not (q8b))
        (m8b)
        (l6c)
        (t8f)
        (u8f)
        (v8f)
        (x8f)
        (y8f)
        (z8f)
        (b9f)
      )
    )
  )
  (:observation SENSE-DOOR_P5-5_P4-5
    :precondition 
      (l2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c8c)) (not (b8c)) )
         (and (c0b) (g0b) (h4d) ))

    :branches (or 
      (and 
        (not (c0b))
        (g0b)
        (c8c)
        (cgf)
        (ggf)
        (hgf)
        (jgf)
        (kgf)
        (lgf)
        (mgf)
      )
      (and 
        (not (g0b))
        (c0b)
        (b8c)
        (qgf)
        (rgf)
        (tgf)
        (ugf)
        (vgf)
        (xgf)
        (ygf)
      )
    )
  )
  (:observation SENSE-DOOR_P5-5_P5-4
    :precondition 
      (l2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k7c)) (not (j7c)) )
         (and (k9b) (l9b) (x3d) ))

    :branches (or 
      (and 
        (not (k9b))
        (l9b)
        (k7c)
      )
      (and 
        (not (l9b))
        (k9b)
        (j7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-5_P5-6
    :precondition 
      (l2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c7c)) (not (b7c)) )
         (and (c9b) (g9b) (u3d) ))

    :branches (or 
      (and 
        (not (c9b))
        (g9b)
        (c7c)
      )
      (and 
        (not (g9b))
        (c9b)
        (b7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-5_P6-5
    :precondition 
      (l2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k6c)) (not (j6c)) )
         (and (k8b) (l8b) (k3d) ))

    :branches (or 
      (and 
        (not (k8b))
        (l8b)
        (k6c)
        (uag)
        (vag)
        (xag)
        (yag)
        (zag)
        (bbg)
        (cbg)
      )
      (and 
        (not (l8b))
        (k8b)
        (j6c)
        (gbg)
        (hbg)
        (jbg)
        (kbg)
        (lbg)
        (mbg)
        (qbg)
      )
    )
  )
  (:observation SENSE-DOOR_P5-6_P4-6
    :precondition 
      (q2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z7c)) (not (y7c)) )
         (and (z9b) (b0b) (g4d) ))

    :branches (or 
      (and 
        (not (z9b))
        (b0b)
        (z7c)
        (rjf)
        (tjf)
        (ujf)
        (vjf)
        (xjf)
        (yjf)
        (zjf)
      )
      (and 
        (not (b0b))
        (z9b)
        (y7c)
        (bkf)
        (ckf)
        (gkf)
        (hkf)
        (jkf)
        (kkf)
        (lkf)
      )
    )
  )
  (:observation SENSE-DOOR_P5-6_P5-5
    :precondition 
      (q2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h7c)) (not (g7c)) )
         (and (h9b) (j9b) (v3d) ))

    :branches (or 
      (and 
        (not (h9b))
        (j9b)
        (h7c)
      )
      (and 
        (not (j9b))
        (h9b)
        (g7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-6_P5-7
    :precondition 
      (q2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z6c)) (not (y6c)) )
         (and (z8b) (b9b) (t3d) ))

    :branches (or 
      (and 
        (not (z8b))
        (b9b)
        (z6c)
      )
      (and 
        (not (b9b))
        (z8b)
        (y6c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-6_P6-6
    :precondition 
      (q2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h6c)) (not (g6c)) )
         (and (h8b) (j8b) (j3d) ))

    :branches (or 
      (and 
        (not (h8b))
        (j8b)
        (h6c)
        (heg)
        (jeg)
        (keg)
        (leg)
        (meg)
        (qeg)
        (reg)
      )
      (and 
        (not (j8b))
        (h8b)
        (g6c)
        (teg)
        (ueg)
        (veg)
        (xeg)
        (yeg)
        (zeg)
        (bfg)
      )
    )
  )
  (:observation SENSE-DOOR_P5-7_P4-7
    :precondition 
      (t2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x7c)) (not (v7c)) )
         (and (x9b) (y9b) (c4d) ))

    :branches (or 
      (and 
        (not (x9b))
        (y9b)
        (x7c)
        (cnf)
        (gnf)
        (hnf)
        (jnf)
        (knf)
        (lnf)
        (mnf)
      )
      (and 
        (not (y9b))
        (x9b)
        (v7c)
        (qnf)
        (rnf)
        (tnf)
        (unf)
        (vnf)
        (xnf)
        (ynf)
      )
    )
  )
  (:observation SENSE-DOOR_P5-7_P5-6
    :precondition 
      (t2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c7c)) (not (b7c)) )
         (and (c9b) (g9b) (u3d) ))

    :branches (or 
      (and 
        (not (c9b))
        (g9b)
        (c7c)
      )
      (and 
        (not (g9b))
        (c9b)
        (b7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-7_P6-7
    :precondition 
      (t2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c6c)) (not (b6c)) )
         (and (c8b) (g8b) (h3d) ))

    :branches (or 
      (and 
        (not (c8b))
        (g8b)
        (c6c)
        (uhg)
        (vhg)
        (xhg)
        (yhg)
        (zhg)
        (big)
        (cig)
      )
      (and 
        (not (g8b))
        (c8b)
        (b6c)
        (gig)
        (hig)
        (jig)
        (kig)
        (lig)
        (mig)
        (qig)
      )
    )
  )
  (:observation SENSE-DOOR_P6-3_P5-3
    :precondition 
      (b3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m7c)) (not (l7c)) )
         (and (m9b) (q9b) (y3d) ))

    :branches (or 
      (and 
        (not (m9b))
        (q9b)
        (m7c)
      )
      (and 
        (not (q9b))
        (m9b)
        (l7c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-3_P6-2
    :precondition 
      (b3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u6c)) (not (t6c)) )
         (and (u8b) (v8b) (q3d) ))

    :branches (or 
      (and 
        (not (u8b))
        (v8b)
        (u6c)
        (ugh)
        (vgh)
        (xgh)
        (ygh)
        (zgh)
        (bhh)
        (chh)
      )
      (and 
        (not (v8b))
        (u8b)
        (t6c)
        (ghh)
        (hhh)
        (jhh)
        (khh)
        (lhh)
        (mhh)
        (qhh)
      )
    )
  )
  (:observation SENSE-DOOR_P6-3_P6-4
    :precondition 
      (b3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m6c)) (not (l6c)) )
         (and (m8b) (q8b) (l3d) ))

    :branches (or 
      (and 
        (not (m8b))
        (q8b)
        (m6c)
        (h8f)
        (j8f)
        (k8f)
        (l8f)
        (m8f)
        (q8f)
        (r8f)
      )
      (and 
        (not (q8b))
        (m8b)
        (l6c)
        (t8f)
        (u8f)
        (v8f)
        (x8f)
        (y8f)
        (z8f)
        (b9f)
      )
    )
  )
  (:observation SENSE-DOOR_P6-3_P7-3
    :precondition 
      (b3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u5c)) (not (t5c)) )
         (and (u7b) (v7b) (b3d) ))

    :branches (or 
      (and 
        (not (u7b))
        (v7b)
        (u5c)
      )
      (and 
        (not (v7b))
        (u7b)
        (t5c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-4_P5-4
    :precondition 
      (g3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k7c)) (not (j7c)) )
         (and (k9b) (l9b) (x3d) ))

    :branches (or 
      (and 
        (not (k9b))
        (l9b)
        (k7c)
      )
      (and 
        (not (l9b))
        (k9b)
        (j7c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-4_P6-3
    :precondition 
      (g3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r6c)) (not (q6c)) )
         (and (r8b) (t8b) (m3d) ))

    :branches (or 
      (and 
        (not (r8b))
        (t8b)
        (r6c)
        (hlg)
        (jlg)
        (klg)
        (llg)
        (mlg)
        (qlg)
        (rlg)
      )
      (and 
        (not (t8b))
        (r8b)
        (q6c)
        (tlg)
        (ulg)
        (vlg)
        (xlg)
        (ylg)
        (zlg)
        (bmg)
      )
    )
  )
  (:observation SENSE-DOOR_P6-4_P6-5
    :precondition 
      (g3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k6c)) (not (j6c)) )
         (and (k8b) (l8b) (k3d) ))

    :branches (or 
      (and 
        (not (k8b))
        (l8b)
        (k6c)
        (uag)
        (vag)
        (xag)
        (yag)
        (zag)
        (bbg)
        (cbg)
      )
      (and 
        (not (l8b))
        (k8b)
        (j6c)
        (gbg)
        (hbg)
        (jbg)
        (kbg)
        (lbg)
        (mbg)
        (qbg)
      )
    )
  )
  (:observation SENSE-DOOR_P6-4_P7-4
    :precondition 
      (g3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r5c)) (not (q5c)) )
         (and (r7b) (t7b) (z2d) ))

    :branches (or 
      (and 
        (not (r7b))
        (t7b)
        (r5c)
      )
      (and 
        (not (t7b))
        (r7b)
        (q5c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-5_P5-5
    :precondition 
      (j3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h7c)) (not (g7c)) )
         (and (h9b) (j9b) (v3d) ))

    :branches (or 
      (and 
        (not (h9b))
        (j9b)
        (h7c)
      )
      (and 
        (not (j9b))
        (h9b)
        (g7c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-5_P6-4
    :precondition 
      (j3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m6c)) (not (l6c)) )
         (and (m8b) (q8b) (l3d) ))

    :branches (or 
      (and 
        (not (m8b))
        (q8b)
        (m6c)
        (h8f)
        (j8f)
        (k8f)
        (l8f)
        (m8f)
        (q8f)
        (r8f)
      )
      (and 
        (not (q8b))
        (m8b)
        (l6c)
        (t8f)
        (u8f)
        (v8f)
        (x8f)
        (y8f)
        (z8f)
        (b9f)
      )
    )
  )
  (:observation SENSE-DOOR_P6-5_P6-6
    :precondition 
      (j3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h6c)) (not (g6c)) )
         (and (h8b) (j8b) (j3d) ))

    :branches (or 
      (and 
        (not (h8b))
        (j8b)
        (h6c)
        (heg)
        (jeg)
        (keg)
        (leg)
        (meg)
        (qeg)
        (reg)
      )
      (and 
        (not (j8b))
        (h8b)
        (g6c)
        (teg)
        (ueg)
        (veg)
        (xeg)
        (yeg)
        (zeg)
        (bfg)
      )
    )
  )
  (:observation SENSE-DOOR_P6-5_P7-5
    :precondition 
      (j3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m5c)) (not (l5c)) )
         (and (m7b) (q7b) (y2d) ))

    :branches (or 
      (and 
        (not (m7b))
        (q7b)
        (m5c)
      )
      (and 
        (not (q7b))
        (m7b)
        (l5c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-6_P5-6
    :precondition 
      (l3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c7c)) (not (b7c)) )
         (and (c9b) (g9b) (u3d) ))

    :branches (or 
      (and 
        (not (c9b))
        (g9b)
        (c7c)
      )
      (and 
        (not (g9b))
        (c9b)
        (b7c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-6_P6-5
    :precondition 
      (l3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k6c)) (not (j6c)) )
         (and (k8b) (l8b) (k3d) ))

    :branches (or 
      (and 
        (not (k8b))
        (l8b)
        (k6c)
        (uag)
        (vag)
        (xag)
        (yag)
        (zag)
        (bbg)
        (cbg)
      )
      (and 
        (not (l8b))
        (k8b)
        (j6c)
        (gbg)
        (hbg)
        (jbg)
        (kbg)
        (lbg)
        (mbg)
        (qbg)
      )
    )
  )
  (:observation SENSE-DOOR_P6-6_P6-7
    :precondition 
      (l3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c6c)) (not (b6c)) )
         (and (c8b) (g8b) (h3d) ))

    :branches (or 
      (and 
        (not (c8b))
        (g8b)
        (c6c)
        (uhg)
        (vhg)
        (xhg)
        (yhg)
        (zhg)
        (big)
        (cig)
      )
      (and 
        (not (g8b))
        (c8b)
        (b6c)
        (gig)
        (hig)
        (jig)
        (kig)
        (lig)
        (mig)
        (qig)
      )
    )
  )
  (:observation SENSE-DOOR_P6-6_P7-6
    :precondition 
      (l3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k5c)) (not (j5c)) )
         (and (k7b) (l7b) (x2d) ))

    :branches (or 
      (and 
        (not (k7b))
        (l7b)
        (k5c)
      )
      (and 
        (not (l7b))
        (k7b)
        (j5c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-7_P5-7
    :precondition 
      (q3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z6c)) (not (y6c)) )
         (and (z8b) (b9b) (t3d) ))

    :branches (or 
      (and 
        (not (z8b))
        (b9b)
        (z6c)
      )
      (and 
        (not (b9b))
        (z8b)
        (y6c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-7_P6-6
    :precondition 
      (q3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h6c)) (not (g6c)) )
         (and (h8b) (j8b) (j3d) ))

    :branches (or 
      (and 
        (not (h8b))
        (j8b)
        (h6c)
        (heg)
        (jeg)
        (keg)
        (leg)
        (meg)
        (qeg)
        (reg)
      )
      (and 
        (not (j8b))
        (h8b)
        (g6c)
        (teg)
        (ueg)
        (veg)
        (xeg)
        (yeg)
        (zeg)
        (bfg)
      )
    )
  )
  (:observation SENSE-DOOR_P6-7_P7-7
    :precondition 
      (q3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h5c)) (not (g5c)) )
         (and (h7b) (j7b) (v2d) ))

    :branches (or 
      (and 
        (not (h7b))
        (j7b)
        (h5c)
      )
      (and 
        (not (j7b))
        (h7b)
        (g5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-3_P6-3
    :precondition 
      (y3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r6c)) (not (q6c)) )
         (and (r8b) (t8b) (m3d) ))

    :branches (or 
      (and 
        (not (r8b))
        (t8b)
        (r6c)
        (hlg)
        (jlg)
        (klg)
        (llg)
        (mlg)
        (qlg)
        (rlg)
      )
      (and 
        (not (t8b))
        (r8b)
        (q6c)
        (tlg)
        (ulg)
        (vlg)
        (xlg)
        (ylg)
        (zlg)
        (bmg)
      )
    )
  )
  (:observation SENSE-DOOR_P7-3_P7-2
    :precondition 
      (y3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x5c)) (not (v5c)) )
         (and (x7b) (y7b) (c3d) ))

    :branches (or 
      (and 
        (not (x7b))
        (y7b)
        (x5c)
      )
      (and 
        (not (y7b))
        (x7b)
        (v5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-3_P7-4
    :precondition 
      (y3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r5c)) (not (q5c)) )
         (and (r7b) (t7b) (z2d) ))

    :branches (or 
      (and 
        (not (r7b))
        (t7b)
        (r5c)
      )
      (and 
        (not (t7b))
        (r7b)
        (q5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-4_P6-4
    :precondition 
      (b4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m6c)) (not (l6c)) )
         (and (m8b) (q8b) (l3d) ))

    :branches (or 
      (and 
        (not (m8b))
        (q8b)
        (m6c)
        (h8f)
        (j8f)
        (k8f)
        (l8f)
        (m8f)
        (q8f)
        (r8f)
      )
      (and 
        (not (q8b))
        (m8b)
        (l6c)
        (t8f)
        (u8f)
        (v8f)
        (x8f)
        (y8f)
        (z8f)
        (b9f)
      )
    )
  )
  (:observation SENSE-DOOR_P7-4_P7-3
    :precondition 
      (b4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u5c)) (not (t5c)) )
         (and (u7b) (v7b) (b3d) ))

    :branches (or 
      (and 
        (not (u7b))
        (v7b)
        (u5c)
      )
      (and 
        (not (v7b))
        (u7b)
        (t5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-4_P7-5
    :precondition 
      (b4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m5c)) (not (l5c)) )
         (and (m7b) (q7b) (y2d) ))

    :branches (or 
      (and 
        (not (m7b))
        (q7b)
        (m5c)
      )
      (and 
        (not (q7b))
        (m7b)
        (l5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-5_P6-5
    :precondition 
      (g4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k6c)) (not (j6c)) )
         (and (k8b) (l8b) (k3d) ))

    :branches (or 
      (and 
        (not (k8b))
        (l8b)
        (k6c)
        (uag)
        (vag)
        (xag)
        (yag)
        (zag)
        (bbg)
        (cbg)
      )
      (and 
        (not (l8b))
        (k8b)
        (j6c)
        (gbg)
        (hbg)
        (jbg)
        (kbg)
        (lbg)
        (mbg)
        (qbg)
      )
    )
  )
  (:observation SENSE-DOOR_P7-5_P7-4
    :precondition 
      (g4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r5c)) (not (q5c)) )
         (and (r7b) (t7b) (z2d) ))

    :branches (or 
      (and 
        (not (r7b))
        (t7b)
        (r5c)
      )
      (and 
        (not (t7b))
        (r7b)
        (q5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-5_P7-6
    :precondition 
      (g4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k5c)) (not (j5c)) )
         (and (k7b) (l7b) (x2d) ))

    :branches (or 
      (and 
        (not (k7b))
        (l7b)
        (k5c)
      )
      (and 
        (not (l7b))
        (k7b)
        (j5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-6_P6-6
    :precondition 
      (j4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h6c)) (not (g6c)) )
         (and (h8b) (j8b) (j3d) ))

    :branches (or 
      (and 
        (not (h8b))
        (j8b)
        (h6c)
        (heg)
        (jeg)
        (keg)
        (leg)
        (meg)
        (qeg)
        (reg)
      )
      (and 
        (not (j8b))
        (h8b)
        (g6c)
        (teg)
        (ueg)
        (veg)
        (xeg)
        (yeg)
        (zeg)
        (bfg)
      )
    )
  )
  (:observation SENSE-DOOR_P7-6_P7-5
    :precondition 
      (j4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m5c)) (not (l5c)) )
         (and (m7b) (q7b) (y2d) ))

    :branches (or 
      (and 
        (not (m7b))
        (q7b)
        (m5c)
      )
      (and 
        (not (q7b))
        (m7b)
        (l5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-6_P7-7
    :precondition 
      (j4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h5c)) (not (g5c)) )
         (and (h7b) (j7b) (v2d) ))

    :branches (or 
      (and 
        (not (h7b))
        (j7b)
        (h5c)
      )
      (and 
        (not (j7b))
        (h7b)
        (g5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-7_P6-7
    :precondition 
      (l4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c6c)) (not (b6c)) )
         (and (c8b) (g8b) (h3d) ))

    :branches (or 
      (and 
        (not (c8b))
        (g8b)
        (c6c)
        (uhg)
        (vhg)
        (xhg)
        (yhg)
        (zhg)
        (big)
        (cig)
      )
      (and 
        (not (g8b))
        (c8b)
        (b6c)
        (gig)
        (hig)
        (jig)
        (kig)
        (lig)
        (mig)
        (qig)
      )
    )
  )
  (:observation SENSE-DOOR_P7-7_P7-6
    :precondition 
      (l4c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k5c)) (not (j5c)) )
         (and (k7b) (l7b) (x2d) ))

    :branches (or 
      (and 
        (not (k7b))
        (l7b)
        (k5c)
      )
      (and 
        (not (l7b))
        (k7b)
        (j5c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-2_P1-1
    :precondition 
      (txc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (had)) (not (gad)) )
         (and (hcc) (jcc) (v5d) ))

    :branches (or 
      (and 
        (not (hcc))
        (jcc)
        (had)
      )
      (and 
        (not (jcc))
        (hcc)
        (gad)
      )
    )
  )
  (:observation SENSE-DOOR_P1-2_P1-3
    :precondition 
      (txc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z0c)) (not (y0c)) )
         (and (zbc) (bcc) (t5d) ))

    :branches (or 
      (and 
        (not (zbc))
        (bcc)
        (z0c)
      )
      (and 
        (not (bcc))
        (zbc)
        (y0c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-2_P2-2
    :precondition 
      (txc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h0c)) (not (g0c)) )
         (and (hbc) (jbc) (j5d) ))

    :branches (or 
      (and 
        (not (hbc))
        (jbc)
        (h0c)
        (m5g)
        (q5g)
        (r5g)
        (t5g)
        (u5g)
        (v5g)
        (x5g)
      )
      (and 
        (not (jbc))
        (hbc)
        (g0c)
        (y5g)
        (z5g)
        (b6g)
        (c6g)
        (g6g)
        (h6g)
        (j6g)
      )
    )
  )
  (:observation SENSE-DOOR_P2-2_P1-2
    :precondition 
      (lyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (cad)) (not (bad)) )
         (and (ccc) (gcc) (u5d) ))

    :branches (or 
      (and 
        (not (ccc))
        (gcc)
        (cad)
      )
      (and 
        (not (gcc))
        (ccc)
        (bad)
      )
    )
  )
  (:observation SENSE-DOOR_P2-2_P2-1
    :precondition 
      (lyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k0c)) (not (j0c)) )
         (and (kbc) (lbc) (k5d) ))

    :branches (or 
      (and 
        (not (kbc))
        (lbc)
        (k0c)
        (mph)
        (qph)
        (rph)
        (tph)
        (uph)
        (vph)
        (xph)
      )
      (and 
        (not (lbc))
        (kbc)
        (j0c)
        (yph)
        (zph)
        (bqh)
        (cqh)
        (gqh)
        (hqh)
        (jqh)
      )
    )
  )
  (:observation SENSE-DOOR_P2-2_P2-3
    :precondition 
      (lyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (c0c)) (not (b0c)) )
         (and (cbc) (gbc) (h5d) ))

    :branches (or 
      (and 
        (not (cbc))
        (gbc)
        (c0c)
        (zve)
        (bwe)
        (cwe)
        (gwe)
        (hwe)
        (jwe)
        (kwe)
      )
      (and 
        (not (gbc))
        (cbc)
        (b0c)
        (lwe)
        (mwe)
        (qwe)
        (rwe)
        (twe)
        (uwe)
        (vwe)
      )
    )
  )
  (:observation SENSE-DOOR_P2-2_P3-2
    :precondition 
      (lyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k9c)) (not (j9c)) )
         (and (kac) (lac) (x4d) ))

    :branches (or 
      (and 
        (not (kac))
        (lac)
        (k9c)
      )
      (and 
        (not (lac))
        (kac)
        (j9c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-2_P2-2
    :precondition 
      (jzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h0c)) (not (g0c)) )
         (and (hbc) (jbc) (j5d) ))

    :branches (or 
      (and 
        (not (hbc))
        (jbc)
        (h0c)
        (m5g)
        (q5g)
        (r5g)
        (t5g)
        (u5g)
        (v5g)
        (x5g)
      )
      (and 
        (not (jbc))
        (hbc)
        (g0c)
        (y5g)
        (z5g)
        (b6g)
        (c6g)
        (g6g)
        (h6g)
        (j6g)
      )
    )
  )
  (:observation SENSE-DOOR_P3-2_P3-1
    :precondition 
      (jzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m9c)) (not (l9c)) )
         (and (mac) (qac) (y4d) ))

    :branches (or 
      (and 
        (not (mac))
        (qac)
        (m9c)
      )
      (and 
        (not (qac))
        (mac)
        (l9c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-2_P3-3
    :precondition 
      (jzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h9c)) (not (g9c)) )
         (and (hac) (jac) (v4d) ))

    :branches (or 
      (and 
        (not (hac))
        (jac)
        (h9c)
      )
      (and 
        (not (jac))
        (hac)
        (g9c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-2_P4-2
    :precondition 
      (jzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m8c)) (not (l8c)) )
         (and (m0b) (q0b) (l4d) ))

    :branches (or 
      (and 
        (not (m0b))
        (q0b)
        (m8c)
        (rah)
        (tah)
        (uah)
        (vah)
        (xah)
        (yah)
        (zah)
      )
      (and 
        (not (q0b))
        (m0b)
        (l8c)
        (bbh)
        (cbh)
        (gbh)
        (hbh)
        (jbh)
        (kbh)
        (lbh)
      )
    )
  )
  (:observation SENSE-DOOR_P4-2_P3-2
    :precondition 
      (g1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k9c)) (not (j9c)) )
         (and (kac) (lac) (x4d) ))

    :branches (or 
      (and 
        (not (kac))
        (lac)
        (k9c)
      )
      (and 
        (not (lac))
        (kac)
        (j9c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-2_P4-1
    :precondition 
      (g1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r8c)) (not (q8c)) )
         (and (r0b) (t0b) (m4d) ))

    :branches (or 
      (and 
        (not (r0b))
        (t0b)
        (r8c)
        (rvh)
        (tvh)
        (uvh)
        (vvh)
        (xvh)
        (yvh)
        (zvh)
      )
      (and 
        (not (t0b))
        (r0b)
        (q8c)
        (bwh)
        (cwh)
        (gwh)
        (hwh)
        (jwh)
        (kwh)
        (lwh)
      )
    )
  )
  (:observation SENSE-DOOR_P4-2_P4-3
    :precondition 
      (g1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k8c)) (not (j8c)) )
         (and (k0b) (l0b) (k4d) ))

    :branches (or 
      (and 
        (not (k0b))
        (l0b)
        (k8c)
        (rqf)
        (tqf)
        (uqf)
        (vqf)
        (xqf)
        (yqf)
        (zqf)
      )
      (and 
        (not (l0b))
        (k0b)
        (j8c)
        (bsf)
        (csf)
        (gsf)
        (hsf)
        (jsf)
        (ksf)
        (lsf)
      )
    )
  )
  (:observation SENSE-DOOR_P4-2_P5-2
    :precondition 
      (g1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r7c)) (not (q7c)) )
         (and (r9b) (t9b) (z3d) ))

    :branches (or 
      (and 
        (not (r9b))
        (t9b)
        (r7c)
      )
      (and 
        (not (t9b))
        (r9b)
        (q7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-2_P4-2
    :precondition 
      (b2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m8c)) (not (l8c)) )
         (and (m0b) (q0b) (l4d) ))

    :branches (or 
      (and 
        (not (m0b))
        (q0b)
        (m8c)
        (rah)
        (tah)
        (uah)
        (vah)
        (xah)
        (yah)
        (zah)
      )
      (and 
        (not (q0b))
        (m0b)
        (l8c)
        (bbh)
        (cbh)
        (gbh)
        (hbh)
        (jbh)
        (kbh)
        (lbh)
      )
    )
  )
  (:observation SENSE-DOOR_P5-2_P5-1
    :precondition 
      (b2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u7c)) (not (t7c)) )
         (and (u9b) (v9b) (b4d) ))

    :branches (or 
      (and 
        (not (u9b))
        (v9b)
        (u7c)
      )
      (and 
        (not (v9b))
        (u9b)
        (t7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-2_P5-3
    :precondition 
      (b2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m7c)) (not (l7c)) )
         (and (m9b) (q9b) (y3d) ))

    :branches (or 
      (and 
        (not (m9b))
        (q9b)
        (m7c)
      )
      (and 
        (not (q9b))
        (m9b)
        (l7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-2_P6-2
    :precondition 
      (b2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u6c)) (not (t6c)) )
         (and (u8b) (v8b) (q3d) ))

    :branches (or 
      (and 
        (not (u8b))
        (v8b)
        (u6c)
        (ugh)
        (vgh)
        (xgh)
        (ygh)
        (zgh)
        (bhh)
        (chh)
      )
      (and 
        (not (v8b))
        (u8b)
        (t6c)
        (ghh)
        (hhh)
        (jhh)
        (khh)
        (lhh)
        (mhh)
        (qhh)
      )
    )
  )
  (:observation SENSE-DOOR_P6-2_P5-2
    :precondition 
      (y2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r7c)) (not (q7c)) )
         (and (r9b) (t9b) (z3d) ))

    :branches (or 
      (and 
        (not (r9b))
        (t9b)
        (r7c)
      )
      (and 
        (not (t9b))
        (r9b)
        (q7c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-2_P6-1
    :precondition 
      (y2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x6c)) (not (v6c)) )
         (and (x8b) (y8b) (r3d) ))

    :branches (or 
      (and 
        (not (x8b))
        (y8b)
        (x6c)
        (u2h)
        (v2h)
        (x2h)
        (y2h)
        (z2h)
        (b3h)
        (c3h)
      )
      (and 
        (not (y8b))
        (x8b)
        (v6c)
        (g3h)
        (h3h)
        (j3h)
        (k3h)
        (l3h)
        (m3h)
        (q3h)
      )
    )
  )
  (:observation SENSE-DOOR_P6-2_P6-3
    :precondition 
      (y2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r6c)) (not (q6c)) )
         (and (r8b) (t8b) (m3d) ))

    :branches (or 
      (and 
        (not (r8b))
        (t8b)
        (r6c)
        (hlg)
        (jlg)
        (klg)
        (llg)
        (mlg)
        (qlg)
        (rlg)
      )
      (and 
        (not (t8b))
        (r8b)
        (q6c)
        (tlg)
        (ulg)
        (vlg)
        (xlg)
        (ylg)
        (zlg)
        (bmg)
      )
    )
  )
  (:observation SENSE-DOOR_P6-2_P7-2
    :precondition 
      (y2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x5c)) (not (v5c)) )
         (and (x7b) (y7b) (c3d) ))

    :branches (or 
      (and 
        (not (x7b))
        (y7b)
        (x5c)
      )
      (and 
        (not (y7b))
        (x7b)
        (v5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-2_P6-2
    :precondition 
      (v3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u6c)) (not (t6c)) )
         (and (u8b) (v8b) (q3d) ))

    :branches (or 
      (and 
        (not (u8b))
        (v8b)
        (u6c)
        (ugh)
        (vgh)
        (xgh)
        (ygh)
        (zgh)
        (bhh)
        (chh)
      )
      (and 
        (not (v8b))
        (u8b)
        (t6c)
        (ghh)
        (hhh)
        (jhh)
        (khh)
        (lhh)
        (mhh)
        (qhh)
      )
    )
  )
  (:observation SENSE-DOOR_P7-2_P7-1
    :precondition 
      (v3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z5c)) (not (y5c)) )
         (and (z7b) (b8b) (g3d) ))

    :branches (or 
      (and 
        (not (z7b))
        (b8b)
        (z5c)
      )
      (and 
        (not (b8b))
        (z7b)
        (y5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-2_P7-3
    :precondition 
      (v3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u5c)) (not (t5c)) )
         (and (u7b) (v7b) (b3d) ))

    :branches (or 
      (and 
        (not (u7b))
        (v7b)
        (u5c)
      )
      (and 
        (not (v7b))
        (u7b)
        (t5c)
      )
    )
  )
  (:observation SENSE-DOOR_P1-1_P1-2
    :precondition 
      (qxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (cad)) (not (bad)) )
         (and (ccc) (gcc) (u5d) ))

    :branches (or 
      (and 
        (not (ccc))
        (gcc)
        (cad)
      )
      (and 
        (not (gcc))
        (ccc)
        (bad)
      )
    )
  )
  (:observation SENSE-DOOR_P1-1_P2-1
    :precondition 
      (qxc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k0c)) (not (j0c)) )
         (and (kbc) (lbc) (k5d) ))

    :branches (or 
      (and 
        (not (kbc))
        (lbc)
        (k0c)
        (mph)
        (qph)
        (rph)
        (tph)
        (uph)
        (vph)
        (xph)
      )
      (and 
        (not (lbc))
        (kbc)
        (j0c)
        (yph)
        (zph)
        (bqh)
        (cqh)
        (gqh)
        (hqh)
        (jqh)
      )
    )
  )
  (:observation SENSE-DOOR_P2-1_P1-1
    :precondition 
      (jyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (had)) (not (gad)) )
         (and (hcc) (jcc) (v5d) ))

    :branches (or 
      (and 
        (not (hcc))
        (jcc)
        (had)
      )
      (and 
        (not (jcc))
        (hcc)
        (gad)
      )
    )
  )
  (:observation SENSE-DOOR_P2-1_P2-2
    :precondition 
      (jyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (h0c)) (not (g0c)) )
         (and (hbc) (jbc) (j5d) ))

    :branches (or 
      (and 
        (not (hbc))
        (jbc)
        (h0c)
        (m5g)
        (q5g)
        (r5g)
        (t5g)
        (u5g)
        (v5g)
        (x5g)
      )
      (and 
        (not (jbc))
        (hbc)
        (g0c)
        (y5g)
        (z5g)
        (b6g)
        (c6g)
        (g6g)
        (h6g)
        (j6g)
      )
    )
  )
  (:observation SENSE-DOOR_P2-1_P3-1
    :precondition 
      (jyc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m9c)) (not (l9c)) )
         (and (mac) (qac) (y4d) ))

    :branches (or 
      (and 
        (not (mac))
        (qac)
        (m9c)
      )
      (and 
        (not (qac))
        (mac)
        (l9c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-1_P2-1
    :precondition 
      (gzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k0c)) (not (j0c)) )
         (and (kbc) (lbc) (k5d) ))

    :branches (or 
      (and 
        (not (kbc))
        (lbc)
        (k0c)
        (mph)
        (qph)
        (rph)
        (tph)
        (uph)
        (vph)
        (xph)
      )
      (and 
        (not (lbc))
        (kbc)
        (j0c)
        (yph)
        (zph)
        (bqh)
        (cqh)
        (gqh)
        (hqh)
        (jqh)
      )
    )
  )
  (:observation SENSE-DOOR_P3-1_P3-2
    :precondition 
      (gzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (k9c)) (not (j9c)) )
         (and (kac) (lac) (x4d) ))

    :branches (or 
      (and 
        (not (kac))
        (lac)
        (k9c)
      )
      (and 
        (not (lac))
        (kac)
        (j9c)
      )
    )
  )
  (:observation SENSE-DOOR_P3-1_P4-1
    :precondition 
      (gzc)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r8c)) (not (q8c)) )
         (and (r0b) (t0b) (m4d) ))

    :branches (or 
      (and 
        (not (r0b))
        (t0b)
        (r8c)
        (rvh)
        (tvh)
        (uvh)
        (vvh)
        (xvh)
        (yvh)
        (zvh)
      )
      (and 
        (not (t0b))
        (r0b)
        (q8c)
        (bwh)
        (cwh)
        (gwh)
        (hwh)
        (jwh)
        (kwh)
        (lwh)
      )
    )
  )
  (:observation SENSE-DOOR_P4-1_P3-1
    :precondition 
      (b1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m9c)) (not (l9c)) )
         (and (mac) (qac) (y4d) ))

    :branches (or 
      (and 
        (not (mac))
        (qac)
        (m9c)
      )
      (and 
        (not (qac))
        (mac)
        (l9c)
      )
    )
  )
  (:observation SENSE-DOOR_P4-1_P4-2
    :precondition 
      (b1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (m8c)) (not (l8c)) )
         (and (m0b) (q0b) (l4d) ))

    :branches (or 
      (and 
        (not (m0b))
        (q0b)
        (m8c)
        (rah)
        (tah)
        (uah)
        (vah)
        (xah)
        (yah)
        (zah)
      )
      (and 
        (not (q0b))
        (m0b)
        (l8c)
        (bbh)
        (cbh)
        (gbh)
        (hbh)
        (jbh)
        (kbh)
        (lbh)
      )
    )
  )
  (:observation SENSE-DOOR_P4-1_P5-1
    :precondition 
      (b1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u7c)) (not (t7c)) )
         (and (u9b) (v9b) (b4d) ))

    :branches (or 
      (and 
        (not (u9b))
        (v9b)
        (u7c)
      )
      (and 
        (not (v9b))
        (u9b)
        (t7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-1_P4-1
    :precondition 
      (y1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r8c)) (not (q8c)) )
         (and (r0b) (t0b) (m4d) ))

    :branches (or 
      (and 
        (not (r0b))
        (t0b)
        (r8c)
        (rvh)
        (tvh)
        (uvh)
        (vvh)
        (xvh)
        (yvh)
        (zvh)
      )
      (and 
        (not (t0b))
        (r0b)
        (q8c)
        (bwh)
        (cwh)
        (gwh)
        (hwh)
        (jwh)
        (kwh)
        (lwh)
      )
    )
  )
  (:observation SENSE-DOOR_P5-1_P5-2
    :precondition 
      (y1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (r7c)) (not (q7c)) )
         (and (r9b) (t9b) (z3d) ))

    :branches (or 
      (and 
        (not (r9b))
        (t9b)
        (r7c)
      )
      (and 
        (not (t9b))
        (r9b)
        (q7c)
      )
    )
  )
  (:observation SENSE-DOOR_P5-1_P6-1
    :precondition 
      (y1c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x6c)) (not (v6c)) )
         (and (x8b) (y8b) (r3d) ))

    :branches (or 
      (and 
        (not (x8b))
        (y8b)
        (x6c)
        (u2h)
        (v2h)
        (x2h)
        (y2h)
        (z2h)
        (b3h)
        (c3h)
      )
      (and 
        (not (y8b))
        (x8b)
        (v6c)
        (g3h)
        (h3h)
        (j3h)
        (k3h)
        (l3h)
        (m3h)
        (q3h)
      )
    )
  )
  (:observation SENSE-DOOR_P6-1_P5-1
    :precondition 
      (v2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u7c)) (not (t7c)) )
         (and (u9b) (v9b) (b4d) ))

    :branches (or 
      (and 
        (not (u9b))
        (v9b)
        (u7c)
      )
      (and 
        (not (v9b))
        (u9b)
        (t7c)
      )
    )
  )
  (:observation SENSE-DOOR_P6-1_P6-2
    :precondition 
      (v2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (u6c)) (not (t6c)) )
         (and (u8b) (v8b) (q3d) ))

    :branches (or 
      (and 
        (not (u8b))
        (v8b)
        (u6c)
        (ugh)
        (vgh)
        (xgh)
        (ygh)
        (zgh)
        (bhh)
        (chh)
      )
      (and 
        (not (v8b))
        (u8b)
        (t6c)
        (ghh)
        (hhh)
        (jhh)
        (khh)
        (lhh)
        (mhh)
        (qhh)
      )
    )
  )
  (:observation SENSE-DOOR_P6-1_P7-1
    :precondition 
      (v2c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (z5c)) (not (y5c)) )
         (and (z7b) (b8b) (g3d) ))

    :branches (or 
      (and 
        (not (z7b))
        (b8b)
        (z5c)
      )
      (and 
        (not (b8b))
        (z7b)
        (y5c)
      )
    )
  )
  (:observation SENSE-DOOR_P7-1_P6-1
    :precondition 
      (t3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x6c)) (not (v6c)) )
         (and (x8b) (y8b) (r3d) ))

    :branches (or 
      (and 
        (not (x8b))
        (y8b)
        (x6c)
        (u2h)
        (v2h)
        (x2h)
        (y2h)
        (z2h)
        (b3h)
        (c3h)
      )
      (and 
        (not (y8b))
        (x8b)
        (v6c)
        (g3h)
        (h3h)
        (j3h)
        (k3h)
        (l3h)
        (m3h)
        (q3h)
      )
    )
  )
  (:observation SENSE-DOOR_P7-1_P7-2
    :precondition 
      (t3c)
    :effect 
      ; -K x & -K -x =>  Mx & M-x & Ox
      (when  (and (not (x5c)) (not (v5c)) )
         (and (x7b) (y7b) (c3d) ))

    :branches (or 
      (and 
        (not (x7b))
        (y7b)
        (x5c)
      )
      (and 
        (not (y7b))
        (x7b)
        (v5c)
      )
    )
  )
) ; ==================== END domain PDDL
